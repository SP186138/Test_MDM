/***********************************************************************************************************
SCRIPT:               Consumer Validation.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        REMOVAL OF Failure-BadFile
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;

DELETE FROM $DATABASENAME.CNSMR_AFFLTN_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.DPEND_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.DPEND_TRT_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PET_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PET_TRT_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_EMAIL_ADDR_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_PHONE_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_POSTL_ADDR_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_SOC_NETWK_ACCT_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.PRSNA_TRT_STG ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM ERR_PRSNA_STG_CURR_LOAD ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_EMAIL_DATA_IGNORE
SEL B.EMAIL_ADDR_TXT 
FROM 
(SEL B.EMAIL_ADDR_TXT
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG B
QUALIFY RANK() OVER (PARTITION BY MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL
ORDER BY LOAD_ID DESC,
LOAD_TS DESC,
RECORD_IND DESC
) = 1
) B
GROUP BY 1
HAVING COUNT(*) >= 50
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_PHONE_DATA_IGNORE
SEL B.FULL_PHONE_NUM 
FROM 
(SEL B.FULL_PHONE_NUM
FROM
$ETL_DB.PRSNA_PHONE_STG B
QUALIFY RANK() OVER (PARTITION BY MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL
ORDER BY LOAD_ID DESC,
LOAD_TS DESC,
RECORD_IND DESC
) = 1
) B
GROUP BY 1
HAVING COUNT(*) >= 50
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_POSTL_DATA_IGNORE
SEL B.WIN_KEY
FROM 
REGIS_PRSNA_POSTL_ADDR B
GROUP BY 1
HAVING COUNT(*) >= 100
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS REF_POSTL_DATA_IGNORE
COLUMN WINKEY;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


COLLECT STATS REF_EMAIL_DATA_IGNORE
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS REF_PHONE_DATA_IGNORE
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT; 

/* VALIDATION FOR MISSING LEGAL ENTITY NUMBER */ 


INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
DER.SOURCE_ID,
DER.LOAD_ID,
'Missing Legal Entity Number in Marketing Program Entity' SYS_ERR_CODE
FROM
(
SELECT 
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL,
LOAD.SOURCE_ID,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN $DATABASENAME.MKTNG_PGM MKTNG_PGM_1
ON STG.MKTNG_PGM_NBR = MKTNG_PGM_1.MKTNG_PGM_NBR
WHERE MKTNG_PGM_1.MKTNG_PGM_NBR IS NULL
GROUP BY 1,2,3,4
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* VALIDATION FOR SAME CATEG CODE COMING TWICE */ 


INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
DER.SOURCE_ID,
DER.LOAD_ID,
'Email Address having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND,
SOURCE_ID
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
GROUP BY 1,2,3,4,5,6
HAVING COUNT(*) >1
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
DER1.SOURCE_ID,
DER1.LOAD_ID,
'Phone having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND,
SOURCE_ID
FROM
$ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
GROUP BY 1,2,3,4,5,6
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
DER1.SOURCE_ID,
DER1.LOAD_ID,
'Social having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND,
SOURCE_ID
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
GROUP BY 1,2,3,4,5,6
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* VALIDATION FOR CHECKING CATEG CODE VALUES FROM ATT VALUES TABLE */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
DER2.LOAD_ID,
'Not a Valid Category Code Value for EMAIL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$EMAIL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,
DER3.SOURCE_ID,
DER3.LOAD_ID,
'Not a Valid Category Code Value for PHONE' 
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$PHONE
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
DER4.SOURCE_ID,
der4.LOAD_ID,
'Not a Valid Category Code Value for POSTAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
stg.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$POSTL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
DER4.SOURCE_ID,
der4.LOAD_ID,
'Not a Valid Category Code Value for SOCIAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
stg.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM $DBNAME.ATTRIBUTE_VALUES A
INNER JOIN $DBNAME.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN $DBNAME.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$SOCIAL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* RECORDS HAVING MORE THEN TWO POSTAL/EMAIL/PHONE */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
TEMP.MKTNG_PGM_NBR,
TEMP.REGIS_CNSMR_ID_VAL,
TEMP.SOURCE_ID,
temp.LOAD_ID,
'Too Many Values in Postal' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
     --  ,STG.LOAD_TS
       ,RECORD_IND
       ,LOAD.SOURCE_ID
FROM $ETL_DB.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
GROUP BY 1,2,3,4,5
HAVING COUNT(*) > 2)TEMP;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
TEMP1.SOURCE_ID,
temp1.LOAD_ID,
'Too Many Values in Phone' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
  --     ,STG.LOAD_TS
       ,RECORD_IND
       ,LOAD.SOURCE_ID
FROM $ETL_DB.PRSNA_PHONE_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
GROUP BY 1,2,3,4,5
HAVING COUNT(*) > 3)TEMP1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
TEMP3.MKTNG_PGM_NBR,
TEMP3.REGIS_CNSMR_ID_VAL,
TEMP3.SOURCE_ID,
temp3.LOAD_ID,
'Too Many Values in Email' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
   --    ,STG.LOAD_TS
       ,RECORD_IND
       ,LOAD.SOURCE_ID
FROM $ETL_DB.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
GROUP BY 1,2,3,4,5
HAVING COUNT(*) > 3)TEMP3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* RECORDS WITH INVALID CONTACT INDICATOR */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
TEMP1.SOURCE_ID,
temp1.LOAD_ID,
'CNTCT_OPTN_IND NOT VALID' SYS_ERR_CODE
FROM
(
SELECT	
  PRSNA_STG_1.MKTNG_PGM_NBR
 ,PRSNA_STG_1.REGIS_CNSMR_ID_VAL  
 ,PRSNA_STG_1.LOAD_ID
 ,LOAD.SOURCE_ID
FROM	$ETL_DB.PRSNA_STG PRSNA_STG_1
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON PRSNA_STG_1.LOAD_ID = LOAD.LOAD_ID  
 LEFT OUTER  JOIN $ETL_DB.CNTCT_OPTN_CHCE_STG B    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=B.LOAD_ID
	AND B.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from $DBNAME.ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION=$EMAIL
                                                       OR B.AV_DESCRIPTION=$PHONE
                                                       OR B.AV_DESCRIPTION=$POSTL
                                                       OR B.AV_DESCRIPTION=$SOCIAL)
WHERE B.CNTCT_OPTN_IND IS NULL 
)TEMP1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT; 

/* Failed records for AGE */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.SOURCE_ID,
der5.LOAD_ID,
'Failed because of Age Validation' SYS_ERR_CODE
FROM
(
   SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL, (CURRENT_DATE - CAST(BRTH_DATE AS DATE)) YEAR(4) AS age,
   LOAD.SOURCE_ID,stg.LOAD_ID
FROM $ETL_DB.PRSNA_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
JOIN
$DBNAME.AGE_MIN_MAX M
ON
STG.CNTRY_NAME = M.country
LEFT OUTER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
C.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
C.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND STG.LOAD_ID = C.LOAD_ID
WHERE
(age >= M.MIN_AGE AND age < M.MAX_AGE
AND
(C.GUARDN_CNSNT_IND IN('N',NULL)
OR
C.GUARDN_NAME IS NULL))
OR
(CURRENT_DATE - CAST(BRTH_DATE AS DATE)) <= 0
OR
age < M.MIN_AG)DER5
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.SOURCE_ID,
der5.LOAD_ID,
'No valid contact point' SYS_ERR_CODE
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,LOAD.SOURCE_ID,stg.LOAD_ID
FROM $ETL_DB.PRSNA_STG STG
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
 
 LEFT OUTER  JOIN $ETL_DB.PRSNA_EMAIL_ADDR_STG B1    
	ON	STG.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=B1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=B1.LOAD_ID
	AND     STG.RECORD_IND=B1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_PHONE_STG C1    
	ON	STG.MKTNG_PGM_NBR=C1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=C1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=C1.LOAD_ID
	AND     STG.RECORD_IND=C1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_POSTL_ADDR_STG D1    
	ON	STG.MKTNG_PGM_NBR=D1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=D1.REGIS_CNSMR_ID_VAL		
	AND     STG.LOAD_ID=D1.LOAD_ID
	AND     STG.RECORD_IND=D1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG E1    
	ON	STG.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=E1.REGIS_CNSMR_ID_VAL		
	AND     STG.LOAD_ID=E1.LOAD_ID
	AND     STG.RECORD_IND=E1.RECORD_IND
WHERE B1.MKTNG_PGM_NBR IS NULL
AND C1.MKTNG_PGM_NBR IS NULL
AND D1.MKTNG_PGM_NBR IS NULL
AND E1.MKTNG_PGM_NBR IS NULL
) DER5
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT; 


/* New Validation for Marketing Program - Trait Association && Invalid Trait Values*/
/*
INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
der2.LOAD_ID,
'Not a Valid Trait number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.load_id,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_TRT_STG E
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, E.TRT_NBR) NOT IN
(
SEL MKTNG_PGM_NBR,TRT_NBR 
FROM $DATABASENAME.MKTNG_PGM_TRAIT_MAP 
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
der2.LOAD_ID,
'Not a Valid Trait Text' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_TRT_STG E
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (COALESCE(E.PRSNA_TRT_TXT,TRIM(CAST(E.PRSNA_TRT_INTEGER AS VARCHAR(100)))),e.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_TXT,TRT_NBR 
FROM $DATABASENAME.PREDFND_TRT_VAL 
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;*/
/*
INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
der2.LOAD_ID,
'Not a Valid Trait Integer' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_TRT_STG E
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (TRIM(CAST(E.PRSNA_TRT_INTEGER AS VARCHAR(100))),e.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_TXT,TRT_NBR 
FROM $DATABASENAME.PREDFND_TRT_VAL 
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
*/
/*
INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
der2.LOAD_ID,
'Not a Valid Trait Date' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_TRT_STG E
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.PRSNA_TRT_DATE,e.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_DATE,TRT_NBR 
FROM $DATABASENAME.PREDFND_TRT_VAL 
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
*/
/*

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
DER2.SOURCE_ID,
der2.LOAD_ID,
'Not a Valid Email Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='E'
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM $DATABASENAME.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='E'
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, LOAD_ID,SYS_ERR_CODE)
SELECT
DISTINCT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,
DER3.SOURCE_ID,
der3.LOAD_ID,
'Not a Valid Phone Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_PHONE_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='P'
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM $DATABASENAME.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='P'
))DER3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID,LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
DER4.SOURCE_ID,
der4.LOAD_ID,
'Not a Valid Postal Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_POSTL_ADDR_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='A'
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM $DATABASENAME.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='A'
))DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_TARGET_ID,LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.SOURCE_ID,
der5.LOAD_ID,
'Not a Valid Social Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
e.LOAD_ID,
LOAD.SOURCE_ID
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='S'
INNER JOIN
$DBNAME.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM $DATABASENAME.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='S'
))DER5;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
*/
COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* UPDATE ERR_PRSNA_STG */

INSERT INTO $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
(MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,USER_NAME
,PRSNA_REG_DT 
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME 
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,PRSNA_STTUS_CODE
,RECORD_IND 
,LYLTY_ACCT_NUM
,LYLTY_PGM_NBR
,LOAD_ID 
,LOAD_TS 
,MDM_LOAD_IND
,SYS_TARGET_ID
,SYS_SOURCE
,SYS_NC_TYPE
,SYS_ERROR_TIME
,SYS_ERR_CODE
,SYS_DOCUMENT
,CNTRY_CODE
)
SELECT DISTINCT
ERR1.MKTNG_PGM_NBR,
ERR1.REGIS_CNSMR_ID_VAL,
ERR1.USER_NAME,
CAST(CAST(ERR1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)),
ERR1.NAME_PREFX_TXT,
ERR1.GVN_NAME,
ERR1.MID_NAME,
ERR1.FAMLY_NAME,
ERR1.NAME_SUFFX_TXT,
ERR1.FULL_NAME,
ERR1.GENDR_IND,
ERR1.BRTH_DATE,
ERR1.LANG_CODE,
ERR1.PRSNA_STTUS_CODE,
ERR1.RECORD_IND,
ERR1.LYLTY_ACCT_NUM,
ERR1.LYLTY_PGM_NBR,
ERR1.LOAD_ID,
ERR1.LOAD_TS,
ERR1.MDM_LOAD_IND,
LOAD.SOURCE_ID,
TRIM(CAST(ERR1.LOAD_ID AS INTEGER)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
ERR1.LOAD_TS,
ERR.SYS_ERR_CODE,
ERR.SYS_DOCUMENT,
ERR1.CNTRY_NAME
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
INNER JOIN $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD ERR
ON ERR.MKTNG_PGM_NBR = ERR1.MKTNG_PGM_NBR
AND ERR.REGIS_CNSMR_ID_VAL = ERR1.REGIS_CNSMR_ID_VAL
AND ERR.LOAD_ID = ERR1.LOAD_ID
AND ERR.SYS_TARGET_ID = LOAD.SOURCE_ID
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD WHERE SYS_NC_TYPE IS NULL;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.ERR_PRSNA_STG_CURR_LOAD
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

SEL 1
FROM MDM_LOAD_CONTROL A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM $ETL_DB.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG_CURR_LOAD
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100
;
.IF ACTIVITYCOUNT > 0 THEN .GOTO ERR1

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE) 
SELECT
ERR1.LOAD_ID,
'Validations',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'Failure',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
GROUP BY
ERR1.LOAD_ID
;

.QUIT 1

.LABEL WARN
.QUIT 0

.LABEL ERR1

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE) 
SELECT
A.LOAD_ID,
'Validations-BadFile',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'Failure-BadFile',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))

FROM MDM_LOAD_CONTROL A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM $ETL_DB.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG_CURR_LOAD
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100

GROUP BY
A.LOAD_ID
;

CREATE VOLATILE TABLE VT_RPT_LOAD_NBR
AS 
(
SELECT 
CAST (A.LOAD_ID AS INTEGER) AS LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0) AS MKTNG_PGM_NBR
,COUNT(DISTINCT B.REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM 
(

SELECT A.LOAD_ID 
FROM
(
SELECT LOAD_ID
FROM LOAD_CONTROL  
WHERE LOAD_TYPE = 'ETL'
AND LOADSTATUS = 'SUCCESS'
AND FORMAT_ID = 1
AND MDM_PROCESS_DESC='COMPLETED'
AND TARGETCNT > 0	
) A

INNER JOIN MDM_LOAD_CONTROL LC
ON A.LOAD_ID = LC.LOAD_ID

INNER JOIN LOAD_INFO LI
ON A.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Validations-BadFile'
AND LI.STATUS = 'Failure-BadFile'

GROUP BY 1
)A

LEFT OUTER JOIN PRSNA_STG_CNT B
ON A.LOAD_ID = B.LOAD_ID	
GROUP BY 1,2 
)
WITH DATA
PRIMARY INDEX ( LOAD_ID, MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS
;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
, MKTNG_PGM_NBR
, LEGAL_ENT_NBR
, STAGING_NBR
, ERROR_NBR
, ACTIVE_NBR
, DUPLICATE_NBR
, PHONE_OPT_IN
, PHONE_OPT_OUT
, EMAIL_OPT_IN
, EMAIL_OPT_OUT
, POSTAL_OPT_IN
, POSTAL_OPT_OUT
, SOCIAL_OPT_IN
, SOCIAL_OPT_OUT
)
SELECT 
B.LOAD_ID
,	B.MKTNG_PGM_NBR
,	COALESCE(C.LEGAL_ENT_NBR,0)
,	B.STAGING_NBR
,	COALESCE(N.ERROR_NBR,0)
,	COALESCE(D.ACTIVE_NBR,0)
,	COALESCE(D.DUPLICATE_NBR,0)
,	COALESCE(E.PHONE_OPT_IN,0)
,	COALESCE(E.PHONE_OPT_OUT,0)
,	COALESCE(F.EMAIL_OPT_IN,0)
,	COALESCE(F.EMAIL_OPT_OUT,0)
,	COALESCE(G.POSTAL_OPT_IN,0)
,	COALESCE(G.POSTAL_OPT_OUT,0)
,	COALESCE(H.SOCIAL_OPT_IN,0)
,	COALESCE(H.SOCIAL_OPT_OUT,0)
FROM
VT_RPT_LOAD_NBR B

LEFT OUTER JOIN
MKTNG_PGM C
ON B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'AC' THEN REGIS_PRSNA_ID ELSE NULL END ) ACTIVE_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'DP' THEN REGIS_PRSNA_ID ELSE NULL END ) DUPLICATE_NBR
FROM REGIS_PRSNA R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
GROUP BY 1,2
) D
ON B.LOAD_ID = D.SYS_SOURCE
AND B.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) E
ON B.LOAD_ID = E.SYS_SOURCE
AND B.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON B.LOAD_ID = F.SYS_SOURCE
AND B.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON B.LOAD_ID = G.SYS_SOURCE
AND B.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NET_ACCT R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON B.LOAD_ID = H.SYS_SOURCE
AND B.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT E.LOAD_ID, E.MKTNG_PGM_NBR, COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG_CURR_LOAD E, VT_RPT_LOAD_NBR V
WHERE E.LOAD_ID		= V.LOAD_ID
AND E.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR
;

 INSERT INTO ERR_PRSNA_STG
 (MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 )
SELECT DISTINCT
A.MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,A.LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 FROM
 ERR_PRSNA_STG_CURR_LOAD A
 INNER JOIN VT_RPT_LOAD_NBR B
 ON A.LOAD_ID = B.LOAD_ID
 ;

.QUIT 1