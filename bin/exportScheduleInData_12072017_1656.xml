<?xml version="1.0" encoding="UTF-8"?>
<arrayList domain="1CP">
  <ProcessingTemplateCargo id="10170062" cargo="SELECT 1 FROM ${TRM_TBL}.RT_DMC_CONTACT_PRCSS&#10;WHERE CNTRY_NAME=&apos;${CNTRY_PARAMETER}&apos;;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;.IF ACTIVITYCOUNT &gt; 0 THEN .QUIT 0;&#10;&#10;INSERT INTO ${TRM_TBL}.RT_DMC_CONTACT_PRCSS&#10;(CNTRY_NAME)&#10;SEL &apos;${CNTRY_PARAMETER}&apos;;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;CREATE VOLATILE TABLE MPN AS (&#10;SEL MKTNG_PGM_NBR FROM MDM.TRILLIUM_OUTPUT1_${CNTRY_PARAMETER}_TEMP&#10;)&#10;WITH DATA&#10;PRIMARY INDEX (MKTNG_PGM_NBR)&#10;ON COMMIT PRESERVE ROWS;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;CREATE VOLATILE TABLE NEW_REGIS AS&#10;(&#10;SELECT &#10;        P.REGIS_PRSNA_ID&#10;       ,M.HSHLD_PRSNA_ID&#10;       ,P.MATCHD_CNSMR_PRSNA_ID&#10;       ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EP&apos; THEN 552&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EM&apos; THEN 553&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EB&apos; THEN 554&#10;       END AS ATTRIBUTE_SCHEMA_ID&#10;       ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EP&apos; THEN 895&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EM&apos; THEN 902&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EB&apos; THEN 904&#10;       END AS HH_ATTRIBUTE_SCHEMA_ID&#10;   ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EP&apos; THEN 894&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EM&apos; THEN 903&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;EB&apos; THEN 905&#10;       END AS MC_ATTRIBUTE_SCHEMA_ID&#10;       ,E.TEMPORAL_TIME &#10;       ,P.SYS_SOURCE&#10;&#10;FROM  ${ICRM_VIEW}.REGIS_PRSNA_EMAIL_ADDR  E&#10;JOIN  (&#10;SEL DISTINCT    MKTNG_PGM_NBR &#10;FROM    MPN) T1&#10;ON E.MKTNG_PGM_NBR = T1.MKTNG_PGM_NBR&#10;JOIN  ${ICRM_VIEW}.REGIS_PRSNA             P&#10;ON    E.LEGAL_ENT_NBR             = P.LEGAL_ENT_NBR&#10;AND   E.MKTNG_PGM_NBR             = P.MKTNG_PGM_NBR&#10;AND   E.REGIS_PRSNA_ID            = P.REGIS_PRSNA_ID&#10;&#10;JOIN ${ICRM_VIEW}.MATCHD_CNSMR_PRSNA      M&#10;ON    P.MATCHD_CNSMR_PRSNA_ID     = M.MATCHD_CNSMR_PRSNA_ID&#10;AND   P.LEGAL_ENT_NBR             = M.LEGAL_ENT_NBR&#10;&#10;WHERE P.PRSNA_STATUS_CODE         = &apos;AC&apos;&#10;AND E.VALID_CNTCT_POINT_IND     = &apos;Y&apos;&#10;AND E.PREF_CNTCT_POINT_IND = &apos;Y&apos;&#10;AND E.SUBSCRPTN_OPT_IND    = &apos;I&apos;&#10;AND COALESCE(E.EMAIL_STATUS_CODE,&apos;AC&apos;) = &apos;AC&apos;&#10;AND ATTRIBUTE_SCHEMA_ID IS NOT NULL&#10;AND E.SYS_LAST_MODIFIED_DATE &gt;= (SEL MAX(PROCESS_START_TIME) FROM MDM.LOAD_INFO WHERE CNTRY_NAME=&apos;${CNTRY_PARAMETER}&apos; AND PROCESS_NAME=&apos;WRAPPER&apos; AND STATUS=&apos;SUCCESS&apos;)&#10;QUALIFY ROW_NUMBER() OVER (PARTITION BY P.REGIS_PRSNA_ID,ATTRIBUTE_SCHEMA_ID&#10;ORDER BY E.TEMPORAL_TIME DESC) = 1&#10;)&#10;WITH DATA&#10;PRIMARY INDEX(REGIS_PRSNA_ID)&#10;ON COMMIT PRESERVE ROWS;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;INSERT INTO NEW_REGIS &#10;( REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,ATTRIBUTE_SCHEMA_ID,&#10;HH_ATTRIBUTE_SCHEMA_ID,MC_ATTRIBUTE_SCHEMA_ID,TEMPORAL_TIME,SYS_SOURCE) &#10;&#10;SELECT &#10;        P.REGIS_PRSNA_ID&#10;       ,M.HSHLD_PRSNA_ID&#10;       ,P.MATCHD_CNSMR_PRSNA_ID&#10;       ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;PM&apos; THEN 1587&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;MV&apos; THEN 1590  &#10;       END AS ATTRIBUTE_SCHEMA_ID&#10;       ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;PM&apos; THEN 1586&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;MV&apos; THEN 1591&#10;          END AS HH_ATTRIBUTE_SCHEMA_ID&#10;   ,CASE WHEN E.CNTCT_POINT_CATEG_CODE = &apos;PM&apos; THEN 1588&#10;       WHEN E.CNTCT_POINT_CATEG_CODE = &apos;MV&apos; THEN 1589&#10;     &#10;       END AS MC_ATTRIBUTE_SCHEMA_ID&#10;       ,E.TEMPORAL_TIME &#10;       ,P.SYS_SOURCE&#10;&#10;FROM  ${ICRM_VIEW}.REGIS_PRSNA_PHONE  E&#10;JOIN (&#10;SEL DISTINCT    MKTNG_PGM_NBR &#10;FROM    MPN) T1&#10;ON   E.MKTNG_PGM_NBR  = t1.MKTNG_PGM_NBR&#10;JOIN  ${ICRM_VIEW}.REGIS_PRSNA             P&#10;ON    E.LEGAL_ENT_NBR             = P.LEGAL_ENT_NBR&#10;AND   E.MKTNG_PGM_NBR             = P.MKTNG_PGM_NBR&#10;AND   E.REGIS_PRSNA_ID            = P.REGIS_PRSNA_ID&#10;&#10;JOIN ${ICRM_VIEW}.MATCHD_CNSMR_PRSNA      M&#10;&#10;ON    P.MATCHD_CNSMR_PRSNA_ID     = M.MATCHD_CNSMR_PRSNA_ID&#10;AND   P.LEGAL_ENT_NBR             = M.LEGAL_ENT_NBR&#10;&#10;WHERE P.PRSNA_STATUS_CODE         = &apos;AC&apos;&#10;AND E.VALID_CNTCT_POINT_IND     = &apos;Y&apos;&#10;AND E.PREF_CNTCT_POINT_IND = &apos;Y&apos;&#10;AND E.SUBSCRPTN_OPT_IND    = &apos;I&apos;&#10;AND COALESCE(E.PHONE_STATUS_CODE,&apos;AC&apos;) = &apos;AC&apos;&#10;AND ATTRIBUTE_SCHEMA_ID IS NOT NULL&#10;AND E.SYS_LAST_MODIFIED_DATE &gt;= (SEL MAX(PROCESS_START_TIME) FROM MDM.LOAD_INFO WHERE CNTRY_NAME=&apos;ESP&apos; AND PROCESS_NAME=&apos;WRAPPER&apos; AND STATUS=&apos;SUCCESS&apos;)&#10;QUALIFY ROW_NUMBER() OVER (PARTITION BY P.REGIS_PRSNA_ID,ATTRIBUTE_SCHEMA_ID&#10;ORDER BY E.TEMPORAL_TIME DESC) = 1;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;COLLECT STATS NEW_REGIS&#10;COLUMN REGIS_PRSNA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS NEW_REGIS&#10;COLUMN ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS NEW_REGIS&#10;COLUMN HH_ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS NEW_REGIS&#10;COLUMN MC_ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;CREATE VOLATILE TABLE REGIS_EXISTS AS (&#10;SELECT DISTINCT P.REGIS_PRSNA_ID, P.HSHLD_PRSNA_ID, P.MATCHD_CNSMR_PRSNA_ID, &#10;P.ATTRIBUTE_SCHEMA_ID,CURRENT_TIMESTAMP(0) AS SYS_CREATION_DATE,CURRENT_TIMESTAMP(0) AS SYS_LAST_MODIFIED_DATE,P.SYS_SOURCE,DMC.DMC_CONTACT_ID&#10;FROM NEW_REGIS P&#10;JOIN ${TRM}.RT_DMC_CONTACT DMC&#10;  ON DMC.REGIS_PRSNA_ID = P.REGIS_PRSNA_ID&#10;AND DMC.ATTRIBUTE_SCHEMA_ID = P.ATTRIBUTE_SCHEMA_ID&#10;WHERE DMC.MATCHD_CNSMR_PRSNA_ID&lt;&gt;P.MATCHD_CNSMR_PRSNA_ID&#10;)&#10;WITH DATA&#10;PRIMARY INDEX (DMC_CONTACT_ID)&#10;PARTITION BY ATTRIBUTE_SCHEMA_ID&#10;ON COMMIT PRESERVE ROWS;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS REGIS_EXISTS &#10;COLUMN DMC_CONTACT_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS REGIS_EXISTS &#10;COLUMN ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;CREATE VOLATILE TABLE REGIS_NOTEXISTS AS (&#10;SELECT DISTINCT P.REGIS_PRSNA_ID, P.HSHLD_PRSNA_ID, P.MATCHD_CNSMR_PRSNA_ID, &#10;P.ATTRIBUTE_SCHEMA_ID,CURRENT_TIMESTAMP(0) AS SYS_CREATION_DATE,CURRENT_TIMESTAMP(0) AS SYS_LAST_MODIFIED_DATE,P.SYS_SOURCE&#10;FROM NEW_REGIS P&#10;LEFT JOIN ${TRM}.RT_DMC_CONTACT DMC&#10;  ON DMC.REGIS_PRSNA_ID = P.REGIS_PRSNA_ID&#10;AND DMC.ATTRIBUTE_SCHEMA_ID = P.ATTRIBUTE_SCHEMA_ID&#10;WHERE DMC.REGIS_PRSNA_ID IS NULL&#10;AND DMC.ATTRIBUTE_SCHEMA_ID IS NULL&#10;)&#10;WITH DATA&#10;PRIMARY INDEX (HSHLD_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID)&#10;PARTITION BY ATTRIBUTE_SCHEMA_ID&#10;ON COMMIT PRESERVE ROWS;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS REGIS_NOTEXISTS &#10;COLUMN REGIS_PRSNA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;COLLECT STATS REGIS_NOTEXISTS &#10;COLUMN ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;&#10;INS REGIS_NOTEXISTS &#10;(REGIS_PRSNA_ID, HSHLD_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,&#10; ATTRIBUTE_SCHEMA_ID,SYS_CREATION_DATE,SYS_LAST_MODIFIED_DATE,SYS_SOURCE)&#10;SEL DISTINCT&#10;NULL AS REGIS_PRSNA_ID, P.HSHLD_PRSNA_ID, P.MATCHD_CNSMR_PRSNA_ID,&#10; P.MC_ATTRIBUTE_SCHEMA_ID,CURRENT_TIMESTAMP(0) AS SYS_CREATION_DATE,CURRENT_TIMESTAMP(0) AS SYS_LAST_MODIFIED_DATE,P.SYS_SOURCE&#10;FROM NEW_REGIS P&#10;LEFT JOIN ${TRM}.RT_DMC_CONTACT DMC&#10; ON DMC.REGIS_PRSNA_ID IS NULL&#10;   AND DMC.MATCHD_CNSMR_PRSNA_ID = P.MATCHD_CNSMR_PRSNA_ID&#10;   AND DMC.ATTRIBUTE_SCHEMA_ID = P.MC_ATTRIBUTE_SCHEMA_ID&#10;WHERE DMC.MATCHD_CNSMR_PRSNA_ID IS NULL&#10;AND DMC.ATTRIBUTE_SCHEMA_ID IS NULL&#10;QUALIFY ROW_NUMBER() OVER (PARTITION BY P.MATCHD_CNSMR_PRSNA_ID,MC_ATTRIBUTE_SCHEMA_ID&#10;ORDER BY P.SYS_SOURCE DESC) = 1;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;&#10;INS REGIS_NOTEXISTS &#10;(REGIS_PRSNA_ID, HSHLD_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,&#10; ATTRIBUTE_SCHEMA_ID,SYS_CREATION_DATE,SYS_LAST_MODIFIED_DATE,SYS_SOURCE)&#10;SEL DISTINCT&#10;NULL AS REGIS_PRSNA_ID, P.HSHLD_PRSNA_ID, NULL AS MATCHD_CNSMR_PRSNA_ID, &#10;P.HH_ATTRIBUTE_SCHEMA_ID,CURRENT_TIMESTAMP(0) AS SYS_CREATION_DATE,CURRENT_TIMESTAMP(0) AS SYS_LAST_MODIFIED_DATE,P.SYS_SOURCE&#10;FROM NEW_REGIS P&#10;LEFT JOIN ${TRM}.RT_DMC_CONTACT DMC&#10; ON DMC.REGIS_PRSNA_ID IS NULL&#10;   AND DMC.HSHLD_PRSNA_ID = P.HSHLD_PRSNA_ID&#10;   AND DMC.MATCHD_CNSMR_PRSNA_ID IS NULL&#10;   AND DMC.ATTRIBUTE_SCHEMA_ID = P.HH_ATTRIBUTE_SCHEMA_ID&#10;WHERE DMC.HSHLD_PRSNA_ID IS NULL&#10;AND DMC.ATTRIBUTE_SCHEMA_ID IS NULL&#10;QUALIFY ROW_NUMBER() OVER (PARTITION BY P.HSHLD_PRSNA_ID,P.HH_ATTRIBUTE_SCHEMA_ID&#10;ORDER BY P.SYS_SOURCE DESC) = 1;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;&#10;UPDATE ${TRM_TBL}.RT_DMC_CONTACT&#10;FROM REGIS_EXISTS A&#10;SET MATCHD_CNSMR_PRSNA_ID=A.MATCHD_CNSMR_PRSNA_ID&#10;,HSHLD_PRSNA_ID=A.HSHLD_PRSNA_ID&#10;,SYS_SOURCE=A.SYS_SOURCE&#10;,SYS_LAST_MODIFIED_DATE=CURRENT_TIMESTAMP(0)&#10;WHERE ${TRM_TBL}.RT_DMC_CONTACT.DMC_CONTACT_ID=A.DMC_CONTACT_ID&#10;AND ${TRM_TBL}.RT_DMC_CONTACT.ATTRIBUTE_SCHEMA_ID=A.ATTRIBUTE_SCHEMA_ID;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;INSERT INTO ${TRM_TBL}.RT_DMC_CONTACT&#10;(REGIS_PRSNA_ID, HSHLD_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID, ATTRIBUTE_SCHEMA_ID,SYS_CREATION_DATE,SYS_LAST_MODIFIED_DATE,SYS_SOURCE) &#10;SEL DISTINCT&#10;REGIS_PRSNA_ID, HSHLD_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID, &#10;ATTRIBUTE_SCHEMA_ID,SYS_CREATION_DATE,SYS_LAST_MODIFIED_DATE,SYS_SOURCE&#10;FROM REGIS_NOTEXISTS P;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;.LABEL EXIT&#10;&#10;DELETE FROM ${TRM_TBL}.RT_DMC_CONTACT_PRCSS&#10;WHERE CNTRY_NAME=&apos;${CNTRY_PARAMETER}&apos;;&#10;.IF ERRORLEVEL &gt; 0 THEN .GOTO EXIT;&#10;&#10;.IF ERRORLEVEL &gt; 4 THEN .GOTO ERR ;&#10;.IF ERRORLEVEL &lt;= 4 THEN .GOTO WARN;&#10;&#10;.LABEL ERR&#10;&#10;.QUIT 1&#10;&#10;.LABEL WARN&#10;.QUIT 0" />
  <ProcessingTemplate id="[1CP]1CP_I2_DMC_CONTACT_UPDT" description="i2 Processing: Update DMC contact with new registrations, matched consumers and households" domain="1CP" forceChronology="false" node="[1CP]ETL_SERVER" onHold="false" owner="Ss186037" passBy="false" priority="0" processingType="TASK" successResult="0" tags="1CP,EDW,MDM" taskCargo="10170062" taskCommand="${BIN_DIR}/id_sql_exec.sh ${TDPID} ${USERNAME} &quot;${USERPASSWORD}&quot; &quot;WorkFlow=MDM;Interface=i2;Process=DMCContactUpdate;Step=Step01;&quot; CARGO N $[TmpDir]/cargo/$[Agent].`printf %015d ${id}`.`printf %03d ${timesRestarted}`.CARGO" taskType="SH" turnOffDurationEstimation="false" />
</arrayList>
