/***********************************************************************************************************
SCRIPT:               CNSMR_TSS_WINKEY_STG.BTEQ 
DESCRIPTION:          This script loads the WINKEY TRIGGER table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM WINKEY SCRIPT
INPUT:                TRILLIUM WINKEY FILE
OUTPUT:               WINKEY TRIGGER
ERRORS:
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
/*
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.MKTNG_PGM
COLUMN (MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.MKTNG_PGM
COLUMN (MKTNG_PGM_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,REGIS_DATETM,SYS_CREATION_DATE,SYS_NC_TYPE);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.MATCHD_CNSMR_PRSNA
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.MATCHD_CNSMR_PRSNA
COLUMN PRSNA_STATUS_CODE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.HSHLD_PRSNA
COLUMN PRSNA_STATUS_CODE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA
COLUMN PRSNA_STATUS_CODE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN WIN_KEY;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.DPEND
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON $DATABASENAME.PET
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (GVN_NAME);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT; 
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (FAMLY_NAME);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (BRTH_DATE);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.MATCHD_CNSMR_PRSNA
COLUMN (LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (CITY_NAME);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (CNSMR_CHCE_DATETM);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (TERR_CODE);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (CNTRY_CODE);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (POSTL_AREA_CODE);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN (FULL_PHONE_NUM);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN (CNTCT_POINT_CATEG_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN (FULL_PHONE_NUM,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
COLUMN (CNTCT_POINT_CATEG_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
COLUMN (EMAIL_ADDR_TXT,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_POSTL_ADDR
COLUMN (CNTCT_POINT_CATEG_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_PHONE
COLUMN (REGIS_PRSNA_ID,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.HSHLD_PRSNA
COLUMN (HSHLD_PRSNA_ID,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.MATCHD_CNSMR_POSTL_ADDR
COLUMN (MATCHD_CNSMR_PRSNA_ID,CNTCT_POINT_CATEG_CODE,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_SOC_NET_ACCT
COLUMN (CNTCT_POINT_CATEG_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.REGIS_PRSNA_SOC_NET_ACCT
COLUMN (SOCIAL_NETWK_ACCT_ID_VAL,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PRSNA_TRT
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PRSNA_TRT
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PET
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PET
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PET_TRT
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.PET_TRT
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.DPEND
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.DPEND
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.DPEND_TRT
COLUMN (REGIS_PRSNA_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATISTICS ON $DATABASENAME.DPEND_TRT
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
*/

COLLECT STATS ON WINKEY_TRIGGER
COLUMN WINDOW_KEY_01;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER
COLUMN PHONE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM CNSMR_TSS_MATCH_INPUT1 ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INS CNSMR_TSS_MATCH_INPUT1
(
MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,CNSMR_USER_NAME
,LANG_CODE
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_CODE
,CNTRY_CODE
,EMAIL_ADDR_TXT 
,PHONE_CNTRY_NBR
,PHONE_AREA_NBR 
,PHONE_EXCHG_NBR
,PHONE_LINE_NBR 
,PHONE_EXTSN_NUM
,FULL_PHONE_NUM 
,WIN_KEY
,DPEND_NAME
,PET_NAME
,REGIS_PRSNA_ID 
,LEGAL_ENT_PRSNA_ID
,HSHLD_PRSNA_ID
,LEGAL_ENT_NBR
)
SELECT 
   CNSMR_TSS_MATCH_CRM_1.MKTNG_PGM_NBR      AS MKTNG_PGM_NBR_CRM            
  ,CNSMR_TSS_MATCH_CRM_1.REGIS_CNSMR_ID_VAL AS REGIS_CNSMR_ID_VAL_CRM       
  ,CNSMR_TSS_MATCH_CRM_1.NAME_PREFX_TXT     AS NAME_PREFX_TXT_CRM           
  ,CNSMR_TSS_MATCH_CRM_1.GVN_NAME           AS GVN_NAME_CRM                 
  ,CNSMR_TSS_MATCH_CRM_1.MID_NAME           AS MID_NAME_CRM                 
  ,CNSMR_TSS_MATCH_CRM_1.FAMLY_NAME         AS FAMLY_NAME_CRM               
  ,CNSMR_TSS_MATCH_CRM_1.NAME_SUFFX_TXT     AS NAME_SUFFX_TXT_CRM           
  ,CNSMR_TSS_MATCH_CRM_1.FULL_NAME          AS FULL_NAME_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.GENDR_IND          AS GENDR_IND_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.BRTH_DATE          AS BRTH_DATE_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.CNSMR_USER_NAME    AS USER_NAME_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.LANG_CODE          AS LANG_CODE_CRM    
  ,CNSMR_TSS_MATCH_CRM_1.ADDR_LINE_1_TXT    AS ADDR_LINE_1_TXT_CRM          
  ,CNSMR_TSS_MATCH_CRM_1.ADDR_LINE_2_TXT    AS ADDR_LINE_2_TXT_CRM          
  ,CNSMR_TSS_MATCH_CRM_1.ADDR_LINE_3_TXT    AS ADDR_LINE_3_TXT_CRM          
  ,CNSMR_TSS_MATCH_CRM_1.STRET_NUM          AS STRET_NUM_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.STRET_NAME         AS STRET_NAME_CRM               
  ,CNSMR_TSS_MATCH_CRM_1.APT_NUM            AS APT_NUM_CRM                  
  ,CNSMR_TSS_MATCH_CRM_1.PO_BOX_NUM         AS PO_BOX_NUM_CRM               
  ,CNSMR_TSS_MATCH_CRM_1.CITY_NAME          AS CITY_NAME_CRM                
  ,CNSMR_TSS_MATCH_CRM_1.POSTL_AREA_CODE    AS POSTL_AREA_CODE_CRM                          
  ,CNSMR_TSS_MATCH_CRM_1.TERR_CODE          AS TERR_CODE_CRM
  ,CNSMR_TSS_MATCH_CRM_1.CNTRY_CODE         AS CNTRY_CODE_CRM          
  ,CASE WHEN IGN1.EMAIL_ADDR_TXT IS NOT NULL 
        THEN ''
        ELSE CNSMR_TSS_MATCH_CRM_1.EMAIL_ADDR_TXT_1
    END AS EMAIL_ADDR_TXT_1_CRM              
  ,CNSMR_TSS_MATCH_CRM_1.PHONE_CNTRY_NBR_1  AS PHONE_CNTRY_NBR_1_CRM        
  ,CNSMR_TSS_MATCH_CRM_1.PHONE_AREA_NBR_1   AS PHONE_AREA_NBR_1_CRM         
  ,CNSMR_TSS_MATCH_CRM_1.PHONE_EXCHG_NBR_1  AS PHONE_EXCHG_NBR_1_CRM        
  ,CNSMR_TSS_MATCH_CRM_1.PHONE_LINE_NBR_1   AS PHONE_LINE_NBR_1_CRM         
  ,CNSMR_TSS_MATCH_CRM_1.PHONE_EXTSN_NUM_1  AS PHONE_EXTSN_NUM_1_CRM        
  ,CASE WHEN IGN2.FULL_PHONE_NUM IS NOT NULL
        THEN ''
        ELSE CNSMR_TSS_MATCH_CRM_1.FULL_PHONE_NUM_1
    END AS FULL_PHONE_NUM_1_CRM 
--  ,CNSMR_TSS_MATCH_CRM_1.WIN_KEY      AS WIN_KEY_CRM   

  ,CASE WHEN IGN3.WINKEY IS NOT NULL
        THEN ''
        ELSE CNSMR_TSS_MATCH_CRM_1.WIN_KEY
    END AS WIN_KEY_CRM 

  ,CNSMR_TSS_MATCH_CRM_1.DPEND_NAME         AS DPEND_NAME_CRM
  ,CNSMR_TSS_MATCH_CRM_1.PET_NAME           AS PET_NAME_CRM
  ,CNSMR_TSS_MATCH_CRM_1.REGIS_PRSNA_ID                  
  ,CNSMR_TSS_MATCH_CRM_1.MATCHD_CNSMR_PRSNA_ID AS LEGAL_ENT_PRSNA_ID        
  ,CNSMR_TSS_MATCH_CRM_1.HSHLD_PRSNA_ID     AS HSHLD_PRSNA_ID  
  ,CNSMR_TSS_MATCH_CRM_1.LEGAL_ENT_NBR


    FROM 
    CNSMR_TSS_MATCH_CRM CNSMR_TSS_MATCH_CRM_1
   LEFT OUTER JOIN REF_EMAIL_DATA_IGNORE IGN1
     ON IGN1.EMAIL_ADDR_TXT = CNSMR_TSS_MATCH_CRM_1.EMAIL_ADDR_TXT_1
     
   LEFT OUTER JOIN REF_PHONE_DATA_IGNORE IGN2
     ON IGN2.FULL_PHONE_NUM = CNSMR_TSS_MATCH_CRM_1.FULL_PHONE_NUM_1    
     
   LEFT OUTER JOIN REF_POSTL_DATA_IGNORE IGN3
     ON IGN3.WINKEY = CNSMR_TSS_MATCH_CRM_1.WIN_KEY
     
      WHERE
         CNSMR_TSS_MATCH_CRM_1.WIN_KEY IN 
         (
            SEL WINDOW_KEY_01 
            FROM
            CNSMR_TSS_WINKEY WINKEY
            WHERE 
            WINKEY.WINDOW_KEY_01 NOT IN ('','IN        1','JA         ','       1','CN     ','AU       1','CN','JP')
         )
        OR
          CNSMR_TSS_MATCH_CRM_1.EMAIL_ADDR_TXT_1 IN
         (
            SEL EMAIL_ADDR_TXT
            FROM
            CNSMR_TSS_WINKEY WINKEY
            WHERE 
            WINKEY.EMAIL_ADDR_TXT <> ''
            AND WINKEY.EMAIL_ADDR_TXT IS NOT NULL
         )    
         OR
          (CNSMR_TSS_MATCH_CRM_1.FULL_PHONE_NUM_1,CNSMR_TSS_MATCH_CRM_1.LEGAL_ENT_NBR) IN
         (
            SEL PHONE,LEGAL_ENT_NBR
            FROM
            CNSMR_TSS_WINKEY WINKEY
            WHERE 
            WINKEY.PHONE <> ''
            AND WINKEY.PHONE IS NOT NULL
         )   
  ;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS CNSMR_TSS_MATCH_INPUT1
COLUMN (LEGAL_ENT_NBR ,MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT 1

.LABEL WARN
.QUIT 0
