/***********************************************************************************************************
SCRIPT:               DEDUP_EMAIL_ADDR.BTEQ 
DESCRIPTION:          THIS SCRIPT DEDUPLICATES REGISTRATIONS BY MARKETING PROGRAM, EMAIL ADDRESS,
                      CONTACT POINT CATEG CODE AND SUBSCRIPTION OPT NUMBER.
DEPENDENCY:           
INPUT:                EDW REGISTRATION TABLES
OUTPUT:               EDW REGISTRATION TABLES 
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
5.6                  11/16/2015           TERADATA                        INITIAL VERSION
                                                                          RELEASE 5.6 BR362
***********************************************************************************************************/
.logon 10.36.32.8/MDMMerge,$tdwallet(mdmmerge)


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Country=SGP;Stage=Wrapper;Step=Step31;' FOR SESSION;
DATABASE MDM;

CREATE VOLATILE TABLE CNTRY_CODE AS
 (SEL 'SGP' AS CNTRY_CODE) 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
UPDATE DATA_SRCE_MKTNG_PGM
SET SYS_ENT_STATE='Active'
WHERE COALESCE(TRIM(SYS_ENT_STATE),'')='';
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('DDE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO STANDALONE

CREATE VOLATILE SET TABLE MPN AS (
SEL MKTNG_PGM_NBR
 FROM TSS_PRSNA_IDS_SGP
WHERE MKTNG_PGM_NBR IN (
SELECT
       CAST(TRIM(AV_CODE) AS INTEGER) AS MKTNG_PGM_NBR
  FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='Email Deduplication')
 AND SYS_ENT_STATE='Active')
)
WITH DATA
UNIQUE PRIMARY INDEX (MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS MPN
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*CREATE VOLATILE SET TABLE EMAIL AS
(
SEL EMAIL_ADDR_TXT FROM TSS_PRSNA_IDS_SGP
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MPN)
UNION ALL
SEL EMAIL_ADDR_TXT FROM TSS_PRSNA_IDS_SGP_PREV
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MPN)
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TXT)
ON COMMIT PRESERVE ROWS;*/

CREATE VOLATILE SET TABLE EMAIL AS
(
SEL EMAIL_ADDR_TXT FROM TSS_PRSNA_IDS_SGP
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MPN)
UNION ALL
SEL EMAIL_ADDR_TXT FROM TSS_PRSNA_IDS_SGP_PREV
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MPN)
UNION ALL
SEL EMAIL_ADDR_TXT FROM REGIS_PRSNA_EMAIL_ADDR A
INNER JOIN REGIS_PRSNA B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MKTNG_PGM
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM TSS_PRSNA_IDS_SGP))
WHERE  (B.LEGAL_ENT_NBR,B.MATCHD_CNSMR_PRSNA_ID) IN (SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID FROM TSS_PRSNA_IDS_SGP
UNION
SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID FROM TSS_PRSNA_IDS_SGP_PREV)
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TXT)
ON COMMIT PRESERVE ROWS;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS EMAIL
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE EMAIL_PRSNA AS
(
SEL 
A.MKTNG_PGM_NBR,
A.EMAIL_ADDR_TXT,
A.CNTCT_POINT_CATEG_CODE,
A.SUBSCRPTN_OPT_NBR
FROM REGIS_PRSNA_EMAIL_ADDR A
INNER JOIN MPN C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
WHERE A.EMAIL_ADDR_TXT IN (SEL EMAIL_ADDR_TXT FROM EMAIL)
AND A.SUBSCRPTN_OPT_NBR IS NOT NULL
AND A.EMAIL_STATUS_CODE IN ('AC','DE')
AND A.VALID_CNTCT_POINT_IND = 'Y'
AND A.SUBSCRPTN_OPT_IND = 'I'
GROUP BY A.MKTNG_PGM_NBR,
A.EMAIL_ADDR_TXT,
A.CNTCT_POINT_CATEG_CODE,
A.SUBSCRPTN_OPT_NBR
HAVING COUNT(*) > 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR)
PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS EMAIL_PRSNA
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO PROCESSING

.LABEL STANDALONE

CREATE VOLATILE TABLE MPN AS (
SEL MKTNG_PGM_NBR
 FROM MKTNG_PGM
WHERE MKTNG_PGM_NBR IN (
SELECT
       CAST(TRIM(AV_CODE) AS INTEGER) AS MKTNG_PGM_NBR
  FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='Email Deduplication')
 AND SYS_ENT_STATE='Active')
 AND MKTNG_PGM_NBR IN ($MPN)
)
WITH DATA
UNIQUE PRIMARY INDEX (MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS MPN
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE EMAIL_PRSNA AS
(
SEL 
A.MKTNG_PGM_NBR,
A.EMAIL_ADDR_TXT,
A.CNTCT_POINT_CATEG_CODE,
A.SUBSCRPTN_OPT_NBR
FROM REGIS_PRSNA_EMAIL_ADDR A
INNER JOIN MPN C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
WHERE A.SUBSCRPTN_OPT_NBR IS NOT NULL
AND A.EMAIL_STATUS_CODE IN ('AC','DE')
AND A.VALID_CNTCT_POINT_IND = 'Y'
AND A.SUBSCRPTN_OPT_IND = 'I'
GROUP BY A.MKTNG_PGM_NBR,
A.EMAIL_ADDR_TXT,
A.CNTCT_POINT_CATEG_CODE,
A.SUBSCRPTN_OPT_NBR
HAVING COUNT(*) > 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR)
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS EMAIL_PRSNA
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS EMAIL_PRSNA
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS EMAIL_PRSNA
COLUMN CNTCT_POINT_CATEG_CODE;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS EMAIL_PRSNA
COLUMN SUBSCRPTN_OPT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL PROCESSING

SEL 1 FROM EMAIL_PRSNA
GROUP BY 1;

.IF ACTIVITYCOUNT > 0 THEN .GOTO ACTUAL

.QUIT 0

.LABEL ACTUAL

DROP TABLE MPN;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE MPN AS (
SELECT
       MKTNG_PGM_NBR
  FROM EMAIL_PRSNA
GROUP BY 1  
)
WITH DATA
UNIQUE PRIMARY INDEX (MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS MPN
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE MATCHD_CNSMR AS
( 
SEL 
B.LEGAL_ENT_NBR,
B.MATCHD_CNSMR_PRSNA_ID
FROM REGIS_PRSNA_EMAIL_ADDR A
INNER JOIN MPN C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
WHERE (A.MKTNG_PGM_NBR,A.EMAIL_ADDR_TXT,A.CNTCT_POINT_CATEG_CODE,A.SUBSCRPTN_OPT_NBR)
IN (SEL A.MKTNG_PGM_NBR,A.EMAIL_ADDR_TXT,A.CNTCT_POINT_CATEG_CODE,A.SUBSCRPTN_OPT_NBR
FROM EMAIL_PRSNA A)
AND A.SUBSCRPTN_OPT_NBR IS NOT NULL
AND A.EMAIL_STATUS_CODE IN ('AC','DE')
AND A.VALID_CNTCT_POINT_IND = 'Y'
AND A.SUBSCRPTN_OPT_IND = 'I'
AND B.PRSNA_STATUS_CODE = 'AC'
)
WITH DATA
PRIMARY INDEX (MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR)
PARTITION BY LEGAL_ENT_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS MATCHD_CNSMR
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS MATCHD_CNSMR
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE CNSMR_ACTN_CNT AS
( 
SEL 
B.LEGAL_ENT_NBR,
B.MATCHD_CNSMR_PRSNA_ID,
B.INTEL_VALUE
FROM CNSMR_INTEL_ACTION_VAL B
INNER JOIN MATCHD_CNSMR A
ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MATCHD_CNSMR_PRSNA_ID=B.MATCHD_CNSMR_PRSNA_ID
AND CNSMR_ACTN_TYPE_CODE ='AL' 
AND BRAND_CODE='ALL' 
AND NBR_MNTHS IN (SELECT
       CAST(TRIM(AV_CODE) AS INTEGER) AS NBR_MONTHS
  FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='EmailDedup Consumer Action - NBR_MONTHS')
 AND SYS_ENT_STATE='Active')
AND VALUE_TYPE_CODE='C' 
)
WITH DATA
PRIMARY INDEX (MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR)
PARTITION BY LEGAL_ENT_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS CNSMR_ACTN_CNT
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_ACTN_CNT
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE MP_PRSNA AS
( 
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.SUBSCRPTN_OPT_NBR,
RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,A.EMAIL_ADDR_TXT,A.CNTCT_POINT_CATEG_CODE,A.SUBSCRPTN_OPT_NBR
ORDER BY  C.PREF_SRC_IND DESC,D.INTEL_VALUE DESC,
  A.CNSMR_CHCE_DATETM ASC,
  A.REGIS_PRSNA_ID ASC) AS RNK_EA,
CASE WHEN RNK_EA=1
      THEN 'AC'
      WHEN RNK_EA<>1
      THEN 'DE'
  END AS STATUS_CODE_EA
FROM REGIS_PRSNA_EMAIL_ADDR A
INNER JOIN MPN C1
ON A.MKTNG_PGM_NBR=C1.MKTNG_PGM_NBR
INNER JOIN REGIS_PRSNA B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
LEFT JOIN DATA_SRCE_MKTNG_PGM C
ON B.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND B.SYS_TARGET_ID=C.DATA_SRCE_NBR
AND C.SYS_ENT_STATE='Active'
LEFT JOIN CNSMR_ACTN_CNT D
ON D.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND D.MATCHD_CNSMR_PRSNA_ID=B.MATCHD_CNSMR_PRSNA_ID
WHERE (A.MKTNG_PGM_NBR,A.EMAIL_ADDR_TXT,A.CNTCT_POINT_CATEG_CODE,A.SUBSCRPTN_OPT_NBR)
IN (SEL A.MKTNG_PGM_NBR,A.EMAIL_ADDR_TXT,A.CNTCT_POINT_CATEG_CODE,A.SUBSCRPTN_OPT_NBR
FROM EMAIL_PRSNA A)
AND A.SUBSCRPTN_OPT_NBR IS NOT NULL
AND A.EMAIL_STATUS_CODE IN ('AC','DE')
AND A.VALID_CNTCT_POINT_IND = 'Y'
AND A.SUBSCRPTN_OPT_IND = 'I'
AND B.PRSNA_STATUS_CODE = 'AC'
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS MP_PRSNA
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS MP_PRSNA
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS MP_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS MP_PRSNA 
COLUMN(PARTITION); 
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS MP_PRSNA 
COLUMN(PARTITION,MKTNG_PGM_NBR);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR,CNTCT_POINT_CATEG_CODE,STATUS_CODE_EA
FROM MP_PRSNA
GROUP BY 1,2,3,4,5)B
SET EMAIL_STATUS_CODE = B.STATUS_CODE_EA
,SYS_LAST_MODIFIED_DATE = CURRENT_TIMESTAMP(0)
,SYS_LAST_MODIFIED_BY = 'i2 email dedup'
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNTCT_POINT_CATEG_CODE = B.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP_PRSNA)
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE <> B.STATUS_CODE_EA
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE <> 'NV'
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status'
 AND SYS_ENT_STATE='Active')     
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.EXIT