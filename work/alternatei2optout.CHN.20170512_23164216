/***********************************************************************************************************
SCRIPT:               ALTERNATEI2OPTOUT.BTEQ 
DESCRIPTION:          This script opts out the records present in ERR_PRSNA_STG.
DEPENDENCY:           
INPUT:                MDM Staging
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 09/16/2013           TERADATA                        INITIAL VERSION
5.2                  08/01/2014           TERADATA                        RELEASE 5.2
                                                                              - PRB0041063
INC0022731           01/27/2015           TERADATA                        INC0022731       
                     03/08/2016           TERADATA                        eCR - Fix gap in processing optouts                                                                        
***********************************************************************************************************/

.logon 10.36.32.8/MDMMerge,$tdwallet(mdmmerge) 
 
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
.SET ERRORLEVEL 3803 SEVERITY 0

CREATE VOLATILE TABLE CNTRY_CODE AS
 (SEL 'CHN' AS CNTRY_CODE) 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE NOT LIKE '%Failure%';
.IF ACTIVITYCOUNT > 0 THEN .GOTO OTHERS

CREATE VOLATILE MULTISET TABLE ALTERNATE_OPTOUT AS (
SELECT DISTINCT 
A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR SUBSCRPTN_OPT_NBR, 
A.CNSMR_CHCE_DATETM,
TRIM(A.LOAD_ID) SYS_SOURCE,
A.REGIS_CNSMR_ID_VAL,
B.SOURCE_ID,
CNTCT_OPTN_IND
FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG A
INNER JOIN LOAD_CONTROL B
ON A.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
INNER JOIN REGIS_PRSNA C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
AND B.SOURCE_ID=C.SYS_TARGET_ID
WHERE A.LOAD_ID IN (SEL DISTINCT LOAD_ID FROM LOAD_INFO
WHERE PROCESS_START_TIME >= (SEL MIN(PROCESS_START_TIME)  
PROCESS_START_TIME FROM LOAD_INFO
WHERE LOAD_ID IN (56293401))
AND COALESCE(CNTRY_NAME,'') = CASE 
WHEN 'CHN' ='Validation'
THEN ''
WHEN 'CHN' ='ValidationFailure'
THEN ''
ELSE SUBSTR('CHN',1,3)
END)
--AND A. CNTCT_OPTN_IND IN ('N','O')
QUALIFY RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR
ORDER BY A.CNSMR_CHCE_DATETM DESC,
A.LOAD_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID,
SUBSCRPTN_OPT_NBR,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

.LABEL OTHERS
CREATE VOLATILE MULTISET TABLE ALTERNATE_OPTOUT AS (
SELECT DISTINCT 
A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR SUBSCRPTN_OPT_NBR, 
A.CNSMR_CHCE_DATETM,
TRIM(A.LOAD_ID) SYS_SOURCE,
A.REGIS_CNSMR_ID_VAL,
B.SOURCE_ID,
CNTCT_OPTN_IND
FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG A
INNER JOIN LOAD_CONTROL B
ON A.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
AND A.LOAD_ID IN (SEL DISTINCT LOAD_ID FROM LOAD_INFO
WHERE PROCESS_START_TIME >= (SEL MIN(PROCESS_START_TIME)  
PROCESS_START_TIME FROM LOAD_INFO
WHERE LOAD_ID IN (56293401)))
INNER JOIN REGIS_PRSNA C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
AND B.SOURCE_ID=C.SYS_TARGET_ID
WHERE (A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,B.SOURCE_ID) IN 
(SELECT DISTINCT MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID
FROM ERR_PRSNA_STG WHERE LOAD_ID IN (SEL DISTINCT LOAD_ID FROM LOAD_INFO
WHERE PROCESS_START_TIME >= (SEL MIN(PROCESS_START_TIME)  
PROCESS_START_TIME FROM LOAD_INFO
WHERE LOAD_ID IN (56293401))
AND COALESCE(CNTRY_NAME,'') = CASE 
WHEN 'CHN' ='Validation'
THEN ''
WHEN 'CHN' ='ValidationFailure'
THEN ''
ELSE SUBSTR('CHN',1,3)
END))
--AND CNTCT_OPTN_IND IN ('N','O')
QUALIFY RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR
ORDER BY A.CNSMR_CHCE_DATETM DESC,
A.LOAD_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID,
SUBSCRPTN_OPT_NBR,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL L1

COLLECT STATS ALTERNATE_OPTOUT
COLUMN MKTNG_PGM_NBR;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN REGIS_CNSMR_ID_VAL;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN SOURCE_ID;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN CNTCT_OPTN_IND;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN CNTCT_POINT_CATEG_CODE;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN SUBSCRPTN_OPT_NBR;
COLLECT STATS ALTERNATE_OPTOUT
COLUMN CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE ALTERNATE_OPTOUT1 AS (
SELECT DISTINCT 
A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR SUBSCRPTN_OPT_NBR, 
A.CNSMR_CHCE_DATETM,
TRIM(A.LOAD_ID) SYS_SOURCE,
A.REGIS_CNSMR_ID_VAL,
B.SOURCE_ID,
CNTCT_OPTN_IND
FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG_HIST A
INNER JOIN LOAD_CONTROL B
ON A.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
INNER JOIN REGIS_PRSNA C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
AND B.SOURCE_ID=C.SYS_TARGET_ID
WHERE (A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,B.SOURCE_ID) IN
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID
FROM ALTERNATE_OPTOUT)
AND A. CNTCT_OPTN_IND IN ('N','O')
QUALIFY RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,
C.REGIS_PRSNA_ID,
A.CNTCT_POINT_CATEG_CODE,
A.CNTCT_OPTN_NBR
ORDER BY A.CNSMR_CHCE_DATETM DESC,
A.LOAD_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID,
SUBSCRPTN_OPT_NBR,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS ALTERNATE_OPTOUT1
COLUMN MKTNG_PGM_NBR;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN REGIS_CNSMR_ID_VAL;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN SOURCE_ID;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN CNTCT_OPTN_IND;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN CNTCT_POINT_CATEG_CODE;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN SUBSCRPTN_OPT_NBR;
COLLECT STATS ALTERNATE_OPTOUT1
COLUMN CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DEL FROM ALTERNATE_OPTOUT WHERE CNTCT_OPTN_IND NOT IN ('N','O');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SEL 1 FROM ALTERNATE_OPTOUT GROUP BY 1;
.IF ACTIVITYCOUNT = 0 THEN .GOTO OPT1

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM ALTERNATE_OPTOUT TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT)
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM ALTERNATE_OPTOUT TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT)
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_PHONE
FROM ALTERNATE_OPTOUT TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT)
AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM ALTERNATE_OPTOUT TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT)
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_SOC_NET_ACCT.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL OPT1

SEL 1 FROM ALTERNATE_OPTOUT1 GROUP BY 1;
.IF ACTIVITYCOUNT = 0 THEN .EXIT

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM ALTERNATE_OPTOUT1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT1)
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM ALTERNATE_OPTOUT1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT1)
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_PHONE
FROM ALTERNATE_OPTOUT1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT1)
AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM ALTERNATE_OPTOUT1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'Alternate i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM ALTERNATE_OPTOUT1)
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_SOC_NET_ACCT.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.EXIT