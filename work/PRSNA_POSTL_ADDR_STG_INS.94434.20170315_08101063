/***********************************************************************************************************
SCRIPT:               PRSNA_POSTL_ADDR_STG_INS.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        Change OF Failure-BadFile
3.00                 10/31/2011           TERADATA                        Removal of Deletes as  part of ||elism
4.00                 03/26/2012		  TERADATA                        Made change in insert to LOAD_INFO to
                                                                          manipulate LA data
5.7                  02/29/2016           TERADATA                        Release 5.7 - Add address to postal repo
                                                                          in case of external standardization
***********************************************************************************************************/

.logon 10.36.32.8/MDMVal,$tdwallet(mdmval)



 
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Stage=Validation;Step=Step20;' FOR SESSION; 
CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR
AS
(
SELECT A.* FROM 
ICRM_STAGE.PRSNA_POSTL_ADDR_STG  A 
JOIN
 VALIDATION_94434 B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE


CREATE VOLATILE TABLE V_CNTCT_OPTN_CHCE AS
(
SELECT A.* FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG  A 
JOIN
 VALIDATION_94434 B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

CREATE VOLATILE TABLE V_INPUT AS
(
SELECT DISTINCT
COALESCE(TRIM(STG.ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT1,
COALESCE(TRIM(STG.ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT1, 
COALESCE(TRIM(STG.ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT1, 
COALESCE(TRIM(STG.STRET_NUM),'') STRET_NUM1, 
COALESCE(TRIM(STG.STRET_NAME),'') STRET_NAME1, 
COALESCE(TRIM(STG.APT_NUM),'') APT_NUM1, 
COALESCE(TRIM(STG.PO_BOX_NUM),'') PO_BOX_NUM1, 
COALESCE(TRIM(STG.CITY_NAME),'') CITY_NAME1, 
COALESCE(TRIM(STG.TERR_NAME),'') TERR_NAME1,
COALESCE(TRIM(STG.POSTL_AREA_CODE),'') POSTL_AREA_CODE1, 
COALESCE(D.CNTRY_RECODE,TRIM(STG.CNTRY_NAME),
SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3),'') CNTRY_NAME1,
SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) CNTRY_NAME2,
STG.LOAD_ID, 
STG.LOAD_TS
FROM 
V_PRSNA_POSTL_ADDR STG

JOIN LOAD_CONTROL B
ON
STG.LOAD_ID = B.LOAD_ID
AND B.LOAD_TYPE='ETL'
JOIN MKTNG_PGM MP
ON STG.MKTNG_PGM_NBR=MP.MKTNG_PGM_NBR
LEFT JOIN CNTRY_RECODE D
ON TRIM(STG.CNTRY_NAME)=D.CNTRY
WHERE
(STG.MKTNG_PGM_NBR, STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID) NOT IN
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID FROM VALIDATION_ERR_94434 GROUP BY 1,2,3)
AND (MP.LEGAL_ENT_NBR IN (SEL AV_CODE    
FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='External Standardization')
 AND SYS_ENT_STATE='Active'))
)
WITH DATA
PRIMARY INDEX (ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,STRET_NUM1, 
STRET_NAME1,APT_NUM1,PO_BOX_NUM1,CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_NAME1)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS V_INPUT
COLUMN ADDR_LINE_1_TXT1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS V_INPUT
COLUMN CITY_NAME1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS V_INPUT
COLUMN CNTRY_NAME1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

MERGE INTO POSTL_ADDR_ID_GEN A
USING
(SELECT DISTINCT * FROM V_INPUT
QUALIFY RANK() OVER (PARTITION BY
ADDR_LINE_1_TXT1,
 ADDR_LINE_2_TXT1,
 ADDR_LINE_3_TXT1,
 STRET_NUM1, 
 STRET_NAME1,
 APT_NUM1,
 PO_BOX_NUM1,
 CITY_NAME1,
 TERR_NAME1,
 POSTL_AREA_CODE1,
 CNTRY_NAME1
 ORDER BY LOAD_ID DESC, LOAD_TS DESC)=1)
AS SRC
(
 V_ADDR_LINE_1_TXT1,
 V_ADDR_LINE_2_TXT1,
 V_ADDR_LINE_3_TXT1,
 V_STRET_NUM1, 
 V_STRET_NAME1,
 V_APT_NUM1,
 V_PO_BOX_NUM1,
 V_CITY_NAME1,
 V_TERR_NAME1,
 V_POSTL_AREA_CODE1,
 V_CNTRY_NAME1,
  V_CNTRY_NAME2,
 V_LOAD_ID,
V_LOAD_TS
)

ON ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT1
AND ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT1
AND ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT1
AND STRET_NUM=V_STRET_NUM1
AND STRET_NAME=V_STRET_NAME1
AND APT_NUM=V_APT_NUM1
AND PO_BOX_NUM=V_PO_BOX_NUM1
AND CITY_NAME=V_CITY_NAME1
AND TERR_NAME=V_TERR_NAME1
AND POSTL_AREA_CODE=V_POSTL_AREA_CODE1
AND CNTRY_INFO_TXT=V_CNTRY_NAME1

WHEN NOT MATCHED THEN 
INSERT
(ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT1,
STRET_NUM=V_STRET_NUM1, 
STRET_NAME=V_STRET_NAME1,
APT_NUM=V_APT_NUM1,
PO_BOX_NUM=V_PO_BOX_NUM1,
CITY_NAME=V_CITY_NAME1,
TERR_NAME=V_TERR_NAME1,
POSTL_AREA_CODE=V_POSTL_AREA_CODE1,
CNTRY_INFO_TXT=V_CNTRY_NAME1,
CNTRY_CODE=V_CNTRY_NAME2,
SYS_SOURCE=TRIM(CAST(V_LOAD_ID AS INTEGER)),
SYS_CREATION_DATE=V_LOAD_TS
);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

MERGE INTO POSTL_ADDR A
USING
(SELECT DISTINCT POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_INFO_TXT                ,
CNTRY_CODE                    ,
SYS_SOURCE                    
FROM POSTL_ADDR_ID_GEN)
AS SRC
(
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_INFO_TXT,
 V_CNTRY_CODE                    ,
V_SYS_SOURCE                    
)

ON POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN NOT MATCHED THEN 
INSERT
(POSTL_ADDR_ID=V_POSTL_ADDR_ID,
ORIG_ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ORIG_ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ORIG_ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
ORIG_STRET_NUM=V_STRET_NUM, 
ORIG_STRET_NAME=V_STRET_NAME,
ORIG_APT_NUM=V_APT_NUM,
ORIG_PO_BOX_NUM=V_PO_BOX_NUM,
ORIG_CITY_NAME=V_CITY_NAME,
ORIG_TERR_NAME=V_TERR_NAME,
ORIG_POSTL_AREA_CODE=V_POSTL_AREA_CODE,
ORIG_CNTRY_INFO_TXT=V_CNTRY_INFO_TXT,
CNTRY_CODE=V_CNTRY_CODE,
LOG_SOURCE_ID=CAST(V_SYS_SOURCE AS INTEGER),
LOG_UPDATE_USER='I2',
POSTL_STRD_STATUS_CD='NS'
);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


INSERT INTO PRSNA_POSTL_ADDR_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
CNTCT_POINT_CATEG_CODE,
ADDR_LINE_1_TXT, 
ADDR_LINE_2_TXT, 
ADDR_LINE_3_TXT, 
STRET_NUM,
STRET_NAME, 
APT_NUM, 
PO_BOX_NUM, 
CITY_NAME, 
TERR_NAME, 
POSTL_AREA_CODE,
GEOC_AREA_TYPE_CODE, 
GEOC_AREA_NAME, 
CNTRY_NAME, 
PREFR_IND, 
VALID_IND, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS, 
CNTCT_OPTN_IND,
CNTCT_OPTN_NBR, 
CNSMR_CHCE_DATETM, 
GUARDN_NAME, 
GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND, 
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE,
POSTL_ADDR_ID,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
PR_GEOCODE_FAIL,
PR_REV_GROUP,
TERR_CODE,
CITY_CODE)
SELECT
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.CNTCT_POINT_CATEG_CODE, 
COALESCE(D.ADDR_LINE_1_TXT,STG.ADDR_LINE_1_TXT),
COALESCE(D.ADDR_LINE_2_TXT,STG.ADDR_LINE_2_TXT), 
COALESCE(D.ADDR_LINE_3_TXT,STG.ADDR_LINE_3_TXT), 
COALESCE(D.STRET_NUM,STG.STRET_NUM), 
COALESCE(D.STRET_NAME,STG.STRET_NAME), 
COALESCE(D.APT_NUM,STG.APT_NUM), 
COALESCE(D.PO_BOX_NUM,STG.PO_BOX_NUM), 
COALESCE(D.CITY_NAME,STG.CITY_NAME), 
COALESCE(D.TERR_NAME,STG.TERR_NAME),
COALESCE(D.POSTL_AREA_CODE,STG.POSTL_AREA_CODE), 
STG.GEOC_AREA_TYPE_CODE, 
STG.GEOC_AREA_NAME, 
COALESCE(D.CNTRY_CODE,D1.CNTRY_RECODE,STG.CNTRY_NAME), 
CASE WHEN (stg.PREFR_IND NOT IN ('N','Y') OR stg.PREFR_IND IS NULL) THEN 'Y' ELSE stg.PREFR_IND END, 
CASE WHEN D.VALID_ADDR_IND IS NOT NULL THEN D.VALID_ADDR_IND
WHEN (stg.VALID_IND NOT IN ('N','Y') OR stg.VALID_IND IS NULL) THEN 'Y'
ELSE stg.VALID_IND END, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
CASE WHEN C.CNTCT_OPTN_IND = 'Y' THEN 'I'
     WHEN C.CNTCT_OPTN_IND = 'N' THEN 'O'
     ELSE C.CNTCT_OPTN_IND  END,
C.CNTCT_OPTN_NBR, 
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)), 
C.GUARDN_NAME, 
C.GUARDN_EMAIL_ADDR_TXT, 
C.GUARDN_CNSNT_IND,
C.ACNLGMT_DATE,
b.SOURCE_id,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS,
D.POSTL_ADDR_ID,
D.LAT_MEAS,
D.LONG_MEAS,
D.GL_ACCURACY,
D.GL_MATCH_FLG,
D.DR_CLEANSE_LVL,
D.PR_GEOCODE_FAIL,
D.PR_REV_GROUP,
D.TERR_CODE,
D.CITY_CODE
FROM 
V_PRSNA_POSTL_ADDR STG

LEFT OUTER JOIN
V_CNTCT_OPTN_CHCE C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND
JOIN MKTNG_PGM MP
ON STG.MKTNG_PGM_NBR=MP.MKTNG_PGM_NBR
LEFT JOIN CNTRY_RECODE D1
ON TRIM(STG.CNTRY_NAME)=D1.CNTRY
LEFT JOIN POSTL_ADDR D
ON COALESCE(TRIM(STG.ADDR_LINE_1_TXT),'')=D.ORIG_ADDR_LINE_1_TXT
AND COALESCE(TRIM(STG.ADDR_LINE_2_TXT),'')=D.ORIG_ADDR_LINE_2_TXT
AND COALESCE(TRIM(STG.ADDR_LINE_3_TXT),'')=D.ORIG_ADDR_LINE_3_TXT
AND COALESCE(TRIM(STG.STRET_NUM),'')=D.ORIG_STRET_NUM
AND COALESCE(TRIM(STG.STRET_NAME),'')=D.ORIG_STRET_NAME
AND COALESCE(TRIM(STG.APT_NUM),'')=D.ORIG_APT_NUM
AND COALESCE(TRIM(STG.PO_BOX_NUM),'')=D.ORIG_PO_BOX_NUM
AND COALESCE(TRIM(STG.CITY_NAME),'')=D.ORIG_CITY_NAME
AND COALESCE(TRIM(STG.TERR_NAME),'')=D.ORIG_TERR_NAME
AND COALESCE(TRIM(STG.POSTL_AREA_CODE),'')=D.ORIG_POSTL_AREA_CODE
AND COALESCE(D1.CNTRY_RECODE,TRIM(STG.CNTRY_NAME),
SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3),'')=D.ORIG_CNTRY_INFO_TXT

JOIN
LOAD_CONTROL B
ON
STG.LOAD_ID = B.LOAD_ID
AND B.LOAD_TYPE='ETL'
where
(STG.MKTNG_PGM_NBR, STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID) not in
(select MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID from VALIDATION_ERR_94434 group by 1,2,3)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION='Postal Address')
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL IS NULL))
QUALIFY RANK() OVER(PARTITION BY STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,b.SOURCE_ID
ORDER BY STG.LOAD_ID DESC) = 1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

.exit





