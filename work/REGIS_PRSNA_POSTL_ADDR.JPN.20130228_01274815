/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_POSTAL_ADDR.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts takes data friom trillium output tables 
                                                      and loads USER_WORK.REGIS_PRSNA_POSTAL_ADDR
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
4.2.1                01/14/2013           TERADATA                        INC0011026
***********************************************************************************************************/

.logon 10.36.32.43/mdm_sit3,mdmuser


.SET ERROROUT STDOUT;      
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE MDM_SIT3;

INS ADDR_TEMP
SEL * FROM TRILLIUM_OUTPUT1_JPN_TEMP;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


INSERT INTO ADDR_INPUT
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,TOUT.DR_ADDRESS
,TOUT.DR_ADDRESS2
,TOUT.DR_ADDRESS3
,TOUT.DR_HOUSE_NUMBER1
,TOUT.DR_STREET_NAME
,TOUT.DR_HOUSE_NUMBER2
,TOUT.DR_POBOX_NUMBER
,TOUT.DR_CITY_NAME
,TOUT.DR_POSTAL_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,CASE 
WHEN (GOUT_MATCH_LEVEL IN ('0','9')
      AND DR_COUNTRY_NAME IN ('JPN','CHN','TWN','KOR','NZL','AUS','MYS','SGP','HKG','USA','CAN'))
      OR DR_COUNTRY_NAME IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  DR_COUNTRY_NAME NOT IN ('JPN','CHN','TWN','KOR','NZL','AUS','MYS','SGP','HKG','USA','CAN','BRA','MEX'))

THEN 'Y'
WHEN (GOUT_MATCH_LEVEL IS NULL OR TRIM(GOUT_MATCH_LEVEL) = '') 
 AND (PR_REV_GROUP IS NULL OR TRIM(PR_REV_GROUP) = '')
THEN STG.VALID_IND
ELSE 'N'
END VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
FROM
ADDR_TEMP TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE TOUT.DR_COUNTRY_NAME NOT IN ('IND','CHN')
AND TOUT.RECENT_IND = 'Y'
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO ADDR_INPUT
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,STG.ADDR_LINE_1_TXT
,STG.ADDR_LINE_2_TXT
,STG.ADDR_LINE_3_TXT
,STG.STRET_NUM
,STG.STRET_NAME
,STG.APT_NUM
,STG.PO_BOX_NUM
,STG.CITY_NAME
,STG.POSTL_AREA_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,'Y'  VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
FROM
ADDR_TEMP TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE TOUT.DR_COUNTRY_NAME IN ('IND','CHN')
AND TOUT.RECENT_IND = 'Y'
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* **************************************************
ADDRESS UPDATES
************************************************** */
/**********************************************************************************************
TERR CODE UPDATES
**********************************************************************************************/

/*********************************************************************************************
This update is to populate the PO_BOX_NUM attribute in case the address is a PO Box Num for USA
**********************************************************************************************/
UPDATE ADDR_INPUT
SET PO_BOX_NUM = CASE WHEN ADDR_LINE_1_TXT LIKE 'PO BOX%' 
                      THEN ADDR_LINE_1_TXT
                      ELSE NULL
                  END
WHERE 
--CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 CNTRY_CODE IN ('USA','CAN');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE with the TERR_NAME. TERR_NAME is populated with the 
output from Trillium
**********************************************************************************************/
UPDATE ADDR_INPUT
SET TERR_CODE = TERR_NAME;
--WHERE CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE with the BR-/IN-/JP- prefix from the reference table as 
trillium does not provide the IN-/JP- prefix.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE ADDR_INPUT.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'IND' and ADDR_INPUT.CNTRY_CODE = 'IND';
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE ADDR_INPUT.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'JPN' and ADDR_INPUT.CNTRY_CODE = 'JPN';
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table.
**********************************************************************************************/
UPDATE PA
FROM ADDR_INPUT PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME_NTV
AND PA.CNTRY_CODE = 'JPN';
--AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table.
**********************************************************************************************/
UPDATE PA
FROM ADDR_INPUT PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME
AND PA.CNTRY_CODE = 'IND';
----AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR AUS */
/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table and POSTL_AREA if there
is no match in the CITY table.
**********************************************************************************************/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.CITY_NAME IS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
/* LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME */
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME IS NULL
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.POSTAL_AREA_CODE IS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
/* LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE */
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.POSTL_AREA_CODE IS NULL
AND ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME
AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.LEGAL_ENT_NBR IN(6);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR CHINA*/
/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table and POSTL_AREA if there
is no match in the CITY table.

Trillium provides the city name without the district value. Hence the TRIM on city name in the 
CITY table.
**********************************************************************************************/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR RECORDS HAVING EDW.CITY AS NULL */
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.CITY_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.TERR_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
/* LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1 */
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME IS NULL
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS HAVING POSTAL_AREA_CODE AS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
/* LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE */
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.POSTL_AREA_CODE IS NULL
AND ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE from the TERR reference table based on the native 
value.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME_NTV
AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY_RECODE_VAL reference table as the CITY
table does not have few native values. Customization requested from P&G.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM CITY_RECODE_VAL C
SET CITY_CODE = C.CITY_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
--AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('CHN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT FROM CITY_RECODE_VAL C
SET TERR_CODE = C.TERR_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
--AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('CHN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE from the TERR_RECODE_VAL reference table as the TERR
table does not have few native values. Customization requested from P&G.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR_RECODE_VAL T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME
--AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('AUS');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT
SET TERR_CODE = TERR_NAME
WHERE ADDR_INPUT.CNTRY_CODE IN('AUS','CHN')
AND ADDR_INPUT.TERR_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA
**********************************************************************************************/
UPDATE ADDR_INPUT FROM CITY C
SET CITY_CODE = C.CITY_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
AND ADDR_INPUT.TERR_CODE = C.TERR_CODE 
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('USA','CAN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE from the TERR reference table FOR USA
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('USA','CAN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/* POPULATE EDW TABLE */

/*DELETE FROM REGIS_PRSNA_POSTAL_ADDR
WHERE (REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(SELECT REFERENCE_REGISTRATIONKEY1,MKTNG_PGM_NBR FROM ADDR_INPUT GROUP BY 1);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
*/

DELETE FROM REGIS_PRSNA_POSTL_ADDR WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS_JPN TOUT
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT
SET VALID_CNTCT_POINT_IND = 'N'
WHERE ADDR_LINE_1_TXT IS NULL 
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


INSERT INTO REGIS_PRSNA_POSTL_ADDR
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,TERR_CODE
,CNTRY_CODE
,CITY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT 
CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,CASE WHEN COALESCE(TRIM(ADDR_LINE_1_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_1_TXT
  END
,CASE WHEN COALESCE(TRIM(ADDR_LINE_2_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_2_TXT
  END
,CASE WHEN COALESCE(TRIM(ADDR_LINE_3_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_3_TXT
  END
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,TERR_CODE
,CNTRY_CODE
,CITY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE
FROM ADDR_INPUT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE POSTL_OPTOUT AS (
SEL MKTNG_PGM_NBR,COALESCE(TRIM(ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT1,
COALESCE(TRIM(ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT1,
COALESCE(TRIM(ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT1,
COALESCE(TRIM(CITY_NAME),'') CITY_NAME1,
COALESCE(TRIM(TERR_NAME),'') TERR_NAME1,
COALESCE(TRIM(POSTL_AREA_CODE),'') POSTL_AREA_CODE1,
CNTRY_CODE,CNSMR_CHCE_DATETM,SYS_SOURCE
,COALESCE(SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR
,REGIS_PRSNA_ID
FROM REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE ((ADDR_LINE_1_TXT IS NOT NULL AND COALESCE(TRIM(ADDR_LINE_1_TXT),'') <> '')
OR (ADDR_LINE_2_TXT IS NOT NULL AND COALESCE(TRIM(ADDR_LINE_2_TXT),'') <> '')
OR (ADDR_LINE_3_TXT IS NOT NULL AND COALESCE(TRIM(ADDR_LINE_3_TXT),'') <> ''))
AND SUBSCRPTN_OPT_IND = 'O'
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_JPN_TEMP)
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,
CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_CODE,SUBSCRPTN_OPT_NBR)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM (
SEL 
ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT1,
CITY_NAME1,
TERR_NAME1,
POSTL_AREA_CODE1,
CNTRY_CODE,
CNSMR_CHCE_DATETM,
SYS_SOURCE,
SUBSCRPTN_OPT_NBR,
MKTNG_PGM_NBR
FROM POSTL_OPTOUT  ADJ
QUALIFY RANK() OVER (PARTITION BY MKTNG_PGM_NBR,ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,
CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_CODE,SUBSCRPTN_OPT_NBR
ORDER BY CNSMR_CHCE_DATETM DESC,SYS_SOURCE DESC,REGIS_PRSNA_ID DESC) = 1
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_1_TXT),'')=  TEMP.ADDR_LINE_1_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_2_TXT),'')= TEMP.ADDR_LINE_2_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_3_TXT),'')= TEMP.ADDR_LINE_3_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.CITY_NAME),'')= TEMP.CITY_NAME1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.TERR_NAME),'')= TEMP.TERR_NAME1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE),'')= TEMP.POSTL_AREA_CODE1
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE= TEMP.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = TEMP.SUBSCRPTN_OPT_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit