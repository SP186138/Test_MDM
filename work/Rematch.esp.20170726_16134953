/***********************************************************************************************************
SCRIPT:               Rematch_ESP.BTEQ 
DESCRIPTION:          THIS SCRIPT picks registrations to be rematched.
DEPENDENCY:           
INPUT:                EDW TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.0                  06/05/2017           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.logon 10.36.32.8/MDMMerge,$tdwallet(mdmmerge)


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=Rematch;Country=esp;Stage=RematchImpact;Step=Step03;' FOR SESSION; 
DATABASE MDM;


CREATE VOLATILE TABLE CNTRY_CODE AS
 (SEL 'esp' AS CNTRY_CODE) 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AFR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AFR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ARB');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ARB
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AUS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AUT');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUT
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BEL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BEL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BGR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BGR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BRA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BRA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CAN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CAN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CHE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CHN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CZE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CZE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('DEU');
.IF ACTIVITYCOUNT > 0 THEN .GOTO DEU
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('DNK');
.IF ACTIVITYCOUNT > 0 THEN .GOTO DNK
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('EGY');
.IF ACTIVITYCOUNT > 0 THEN .GOTO EGY
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ESP');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ESP
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('FIN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO FIN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('FRA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO FRA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('GBR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO GBR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('GRC');
.IF ACTIVITYCOUNT > 0 THEN .GOTO GRC
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HKG');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HKG
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HRV');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HRV
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HUN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HUN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('IND');
.IF ACTIVITYCOUNT > 0 THEN .GOTO IND
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('IRL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO IRL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ISR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ISR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ITA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ITA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('JPN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO JPN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('KOR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO KOR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('LA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO LA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('MYS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO MYS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NLD');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NLD
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NOR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NOR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('OTH');
.IF ACTIVITYCOUNT > 0 THEN .GOTO OTH
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PAK');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PAK
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PHL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PHL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('POL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO POL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PRT');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PRT
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ROU');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ROU
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('SGP');
.IF ACTIVITYCOUNT > 0 THEN .GOTO SGP
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('SWE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO SWE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('TUR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO TUR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('TWN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO TWN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('USA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO USA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('LUX');
.IF ACTIVITYCOUNT > 0 THEN .GOTO LUX
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('RUS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO RUS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NZL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NZL

.LABEL AFR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ARB 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL AUS 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL AUT 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BEL 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BGR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BRA 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CAN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CHE 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CHN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CZE 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL DEU 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL DNK 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL EGY 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ESP 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
 CREATE VOLATILE TABLE IMPACT1_esp AS
  (SELECT  
 A.MKTNG_PGM_NBR,
 A.REGIS_PRSNA_ID,
 A.GVN_NAME,
 A.FAMLY_NAME,
 A.GVN_NAME_ALIAS,
 A.FAMLY_NAME_ALIAS,
 A.LEGAL_ENT_NBR,
 A.MATCHD_CNSMR_PRSNA_ID,
 C.HSHLD_PRSNA_ID
 FROM REGIS_PRSNA A
 INNER JOIN MPN_esp B
 ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
 JOIN MATCHD_CNSMR_PRSNA C
 ON A.LEGAL_ENT_NBR=C.LEGAL_ENT_NBR
 AND A.MATCHD_CNSMR_PRSNA_ID=C.MATCHD_CNSMR_PRSNA_ID
 ) 
  WITH DATA 
  PRIMARY INDEX(MKTNG_PGM_NBR,REGIS_PRSNA_ID)
  PARTITION BY MKTNG_PGM_NBR
  ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
COLLECT STATS IMPACT1_esp
COLUMN MKTNG_PGM_NBR;

COLLECT STATS IMPACT1_esp
COLUMN REGIS_PRSNA_ID;

COLLECT STATS IMPACT1_esp
COLUMN LEGAL_ENT_NBR;

COLLECT STATS IMPACT1_esp
COLUMN HSHLD_PRSNA_ID;

COLLECT STATS IMPACT1_esp
COLUMN GVN_NAME;

COLLECT STATS IMPACT1_esp
COLUMN GVN_NAME_ALIAS;

COLLECT STATS IMPACT1_esp
COLUMN FAMLY_NAME;

COLLECT STATS IMPACT1_esp
COLUMN FAMLY_NAME_ALIAS;

COLLECT STATS IMPACT1_esp
COLUMN MATCHD_CNSMR_PRSNA_ID;

 .IF ERRORLEVEL > 0 THEN .GOTO EXIT; 
 
CREATE VOLATILE TABLE IMPACT_esp AS
 (SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID
FROM IMPACT1_esp A
JOIN IMPACT1_esp A1
ON A.LEGAL_ENT_NBR=A1.LEGAL_ENT_NBR
AND (COALESCE(TRIM(A.GVN_NAME),'')=COALESCE(TRIM(A1.GVN_NAME),'')
OR COALESCE(TRIM(A.GVN_NAME_ALIAS),'')=COALESCE(TRIM(A1.GVN_NAME_ALIAS),''))
AND (COALESCE(TRIM(A.FAMLY_NAME),'')=COALESCE(TRIM(A1.FAMLY_NAME),'')
OR COALESCE(TRIM(A.FAMLY_NAME_ALIAS),'')=COALESCE(TRIM(A1.FAMLY_NAME_ALIAS),''))
AND A.HSHLD_PRSNA_ID=A1.HSHLD_PRSNA_ID
AND A.MATCHD_CNSMR_PRSNA_ID<>A1.MATCHD_CNSMR_PRSNA_ID
) 
 WITH DATA 
 PRIMARY INDEX(MKTNG_PGM_NBR,REGIS_PRSNA_ID)
 PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
COLLECT STATS IMPACT_esp
COLUMN MKTNG_PGM_NBR;

COLLECT STATS IMPACT_esp
COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
INNER JOIN IMPACT_esp B1
ON A.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=B1.REGIS_PRSNA_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL FIN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL FRA 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL GBR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL GRC 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HKG 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HRV 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HUN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL IND 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL IRL 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ISR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ITA 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL JPN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL KOR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL LA 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL LUX 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL MYS 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NLD 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NOR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NZL 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL OTH 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PAK 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PHL 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL POL 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PRT 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
 CREATE VOLATILE TABLE IMPACT1_esp AS
  (SELECT  
 A.MKTNG_PGM_NBR,
 A.REGIS_PRSNA_ID,
 A.GVN_NAME,
 A.FAMLY_NAME,
 A.GVN_NAME_ALIAS,
 A.FAMLY_NAME_ALIAS,
 A.LEGAL_ENT_NBR,
 A.MATCHD_CNSMR_PRSNA_ID,
 C.HSHLD_PRSNA_ID
 FROM REGIS_PRSNA A
 INNER JOIN MPN_esp B
 ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
 JOIN MATCHD_CNSMR_PRSNA C
 ON A.LEGAL_ENT_NBR=C.LEGAL_ENT_NBR
 AND A.MATCHD_CNSMR_PRSNA_ID=C.MATCHD_CNSMR_PRSNA_ID
 ) 
  WITH DATA 
  PRIMARY INDEX(MKTNG_PGM_NBR,REGIS_PRSNA_ID)
  PARTITION BY MKTNG_PGM_NBR
  ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
COLLECT STATS IMPACT1_esp
COLUMN MKTNG_PGM_NBR;

COLLECT STATS IMPACT1_esp
COLUMN REGIS_PRSNA_ID;

COLLECT STATS IMPACT1_esp
COLUMN LEGAL_ENT_NBR;

COLLECT STATS IMPACT1_esp
COLUMN HSHLD_PRSNA_ID;

COLLECT STATS IMPACT1_esp
COLUMN GVN_NAME;

COLLECT STATS IMPACT1_esp
COLUMN GVN_NAME_ALIAS;

COLLECT STATS IMPACT1_esp
COLUMN FAMLY_NAME;

COLLECT STATS IMPACT1_esp
COLUMN FAMLY_NAME_ALIAS;

COLLECT STATS IMPACT1_esp
COLUMN MATCHD_CNSMR_PRSNA_ID;

 .IF ERRORLEVEL > 0 THEN .GOTO EXIT; 
 
CREATE VOLATILE TABLE IMPACT_esp AS
 (SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID
FROM IMPACT1_esp A
JOIN IMPACT1_esp A1
ON A.LEGAL_ENT_NBR=A1.LEGAL_ENT_NBR
AND (COALESCE(TRIM(A.GVN_NAME),'')=COALESCE(TRIM(A1.GVN_NAME),'')
OR COALESCE(TRIM(A.GVN_NAME_ALIAS),'')=COALESCE(TRIM(A1.GVN_NAME_ALIAS),''))
AND (COALESCE(TRIM(A.FAMLY_NAME),'')=COALESCE(TRIM(A1.FAMLY_NAME),'')
OR COALESCE(TRIM(A.FAMLY_NAME_ALIAS),'')=COALESCE(TRIM(A1.FAMLY_NAME_ALIAS),''))
AND A.HSHLD_PRSNA_ID=A1.HSHLD_PRSNA_ID
AND A.MATCHD_CNSMR_PRSNA_ID<>A1.MATCHD_CNSMR_PRSNA_ID
) 
 WITH DATA 
 PRIMARY INDEX(MKTNG_PGM_NBR,REGIS_PRSNA_ID)
 PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
COLLECT STATS IMPACT_esp
COLUMN MKTNG_PGM_NBR;

COLLECT STATS IMPACT_esp
COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
INNER JOIN IMPACT_esp B1
ON A.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=B1.REGIS_PRSNA_ID
;
 .QUIT 0

.LABEL ROU 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL RUS 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL SGP 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL SWE 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL TUR 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL TWN 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL USA 
CREATE VOLATILE TABLE MPN_esp AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='esp') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_esp B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_esp'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0


.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

UPDATE MDM.LOAD_CONTROL
SET LOADSTATUS = 'Failure'
,LOADENDTS = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE MDM.LOAD_CONTROL.MDM_PROCESS_DESC='Rematch_esp'
AND MDM.LOAD_CONTROL.LOADSTATUS = 'In Progress'
;

UPDATE MDM.LOAD_INFO
SET STATUS = 'Failure'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE MDM.LOAD_INFO.PROCESS_NAME='Rematch_esp'
AND MDM.LOAD_INFO.STATUS = 'In Progress'
; 

.QUIT 1

.LABEL WARN
.QUIT 0
