/***********************************************************************************************************
SCRIPT:               CNSMR_TSS_WINKEY_STG.BTEQ 
DESCRIPTION:          This script loads the WINKEY TRIGGER table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM WINKEY SCRIPT
INPUT:                TRILLIUM WINKEY FILE
OUTPUT:               WINKEY TRIGGER
ERRORS:
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

COLLECT STATS ON WINKEY_TRIGGER_$CNTRY
COLUMN WINDOW_KEY_01;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER_$CNTRY
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER_$CNTRY
COLUMN PHONE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Winkey Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = '$CNTRY'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
CNTRY_NAME,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Match Input Load',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'$CNTRY',
LI.BATCH_ID
FROM MDM_LOAD_CONTROL LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Trillium'
AND LI.STATUS = 'In Progress'
AND LI.CNTRY_NAME = '$CNTRY'

LEFT OUTER JOIN LOAD_INFO LII
ON LOAD.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Wrapper'

WHERE LII.LOAD_ID IS NULL
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INS TSS_MATCH_INPUT_TEMP
(
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
PHONE_EXTSN_NUM,
FULL_PHONE_NUM,
PHONE_LINE_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_CNTRY_NBR,
EMAIL_ADDR_TXT
)

SELECT 
COALESCE(A.LEGAL_ENT_NBR,B.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(A.MKTNG_PGM_NBR,B.MKTNG_PGM_NBR) MKTNG_PGM_NBR,
COALESCE(A.REGIS_PRSNA_ID,B.REGIS_PRSNA_ID) REGIS_PRSNA_ID,
A.PHONE_EXTSN_NUM,
A.FULL_PHONE_NUM,
A.PHONE_LINE_NBR,
A.PHONE_AREA_NBR,
A.PHONE_EXCHG_NBR,
A.PHONE_CNTRY_NBR,
B.EMAIL_ADDR_TXT

FROM 

(SELECT
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
PHONE_EXTSN_NUM,
A.FULL_PHONE_NUM AS FULL_PHONE_NUM,
PHONE_LINE_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_CNTRY_NBR,
RANK() OVER(PARTITION BY MKTNG_PGM_NBR,
REGIS_PRSNA_ID
ORDER BY A.FULL_PHONE_NUM DESC  ) AS RNK
FROM 
REGIS_PRSNA_PHONE A
WHERE (A.FULL_PHONE_NUM,LEGAL_ENT_NBR) IN
         (
            SEL PHONE,LEGAL_ENT_NBR
            FROM
            WINKEY_TRIGGER_$CNTRY WINKEY
            WHERE 
            WINKEY.PHONE <> ''
            AND WINKEY.PHONE IS NOT NULL
         )) A

FULL OUTER JOIN 
(SELECT
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
A.EMAIL_ADDR_TXT AS EMAIL_ADDR_TXT,
RANK() OVER(PARTITION BY MKTNG_PGM_NBR,
REGIS_PRSNA_ID
ORDER BY A.EMAIL_ADDR_TXT DESC  ) AS RNK
FROM 
REGIS_PRSNA_EMAIL_ADDR A
WHERE A.EMAIL_ADDR_TXT IN
         (
            SEL EMAIL_ADDR_TXT
            FROM
            WINKEY_TRIGGER_$CNTRY WINKEY
            WHERE 
            WINKEY.EMAIL_ADDR_TXT <> ''
            AND WINKEY.EMAIL_ADDR_TXT IS NOT NULL
         )    ) B
     ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
    AND A.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
     AND A.RNK = B.RNK
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO TSS_MATCH_IN_MATCHD_TEMP
(
MATCHD_CNSMR_PRSNA_ID,
LEGAL_ENT_NBR,
HSHLD_PRSNA_ID,
PRSNA_STATUS_CODE
)
SELECT
MATCHD_CNSMR_PRSNA_ID,
LEGAL_ENT_NBR,
HSHLD_PRSNA_ID,
PRSNA_STATUS_CODE
FROM MATCHD_CNSMR_PRSNA
WHERE LEGAL_ENT_NBR IN(SEL LEGAL_ENT_NBR FROM TSS_CLEANSE_INPUT1_$CNTRY GROUP BY 1);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TEMPORARY TSS_MATCH_IN_MATCHD_TEMP
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO TSS_MATCH_INPUT_POSTL_TEMP
(
   REGIS_PRSNA_ID
   ,MKTNG_PGM_NBR
   ,LEGAL_ENT_NBR
   ,CNTCT_POINT_CATEG_CODE
   ,WIN_KEY
   ,SUBSCRPTN_OPT_NBR
   ,SUBSCRPTN_OPT_IND
   ,CNSMR_CHCE_DATETM
   ,PREF_CNTCT_POINT_IND
   ,ADDR_LINE_1_TXT
   ,ADDR_LINE_2_TXT
   ,ADDR_LINE_3_TXT
   ,STRET_NUM
   ,STRET_NAME
   ,APT_NUM
   ,PO_BOX_NUM
   ,CITY_NAME
   ,CITY_CODE
   ,POSTL_AREA_CODE
   ,TERR_NAME
   ,TERR_CODE
   ,CNTRY_CODE
   ,LAT_MEAS
   ,LONG_MEAS
   ,VALID_CNTCT_POINT_IND
   ,GUARDN_NAME
   ,GUARDN_EMAIL_ADDR_TXT
   ,GUARDN_CNSNT_IND
   ,ACNLGMT_DATE
   ,POSTL_STATUS_CODE
   ,PR_GEOCODE_FAIL
   ,TQ_GOUT_MATCH_LEVEL
   ,PR_REV_GROUP
   ,DATA_SRCE_NBR
)
SELECT
REGIS_PRSNA_ID
   ,MKTNG_PGM_NBR
   ,LEGAL_ENT_NBR
   ,CNTCT_POINT_CATEG_CODE
   ,WIN_KEY
   ,SUBSCRPTN_OPT_NBR
   ,SUBSCRPTN_OPT_IND
   ,CNSMR_CHCE_DATETM
   ,PREF_CNTCT_POINT_IND
   ,ADDR_LINE_1_TXT
   ,ADDR_LINE_2_TXT
   ,ADDR_LINE_3_TXT
   ,STRET_NUM
   ,STRET_NAME
   ,APT_NUM
   ,PO_BOX_NUM
   ,CITY_NAME
   ,CITY_CODE
   ,POSTL_AREA_CODE
   ,TERR_NAME
   ,TERR_CODE
   ,CNTRY_CODE
   ,LAT_MEAS
   ,LONG_MEAS
   ,VALID_CNTCT_POINT_IND
   ,GUARDN_NAME
   ,GUARDN_EMAIL_ADDR_TXT
   ,GUARDN_CNSNT_IND
   ,ACNLGMT_DATE
   ,POSTL_STATUS_CODE
   ,PR_GEOCODE_FAIL
   ,TQ_GOUT_MATCH_LEVEL
   ,PR_REV_GROUP
   ,DATA_SRCE_NBR
FROM REGIS_PRSNA_POSTL_ADDR
WHERE WIN_KEY IN (
            SEL WINDOW_KEY_01 
            FROM
            WINKEY_TRIGGER_$CNTRY WINKEY
            WHERE 
            WINKEY.WINDOW_KEY_01 NOT IN ('','IN        1','JA         ','       1','CN     ','AU       1','CN','JP')
                  );
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_POSTL_TEMP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_POSTL_TEMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM TSS_MATCH_INPUT_$CNTRY ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INS TSS_MATCH_INPUT_$CNTRY
(
MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,CNSMR_USER_NAME
,LANG_CODE
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_CODE
,CNTRY_CODE
,EMAIL_ADDR_TXT 
,PHONE_CNTRY_NBR
,PHONE_AREA_NBR 
,PHONE_EXCHG_NBR
,PHONE_LINE_NBR 
,PHONE_EXTSN_NUM
,FULL_PHONE_NUM 
,WIN_KEY
,REGIS_PRSNA_ID 
,LEGAL_ENT_PRSNA_ID
,HSHLD_PRSNA_ID
,LEGAL_ENT_NBR
)
SELECT
      REGIS_PRSNA_1.MKTNG_PGM_NBR
     ,REGIS_PRSNA_1.REGIS_CNSMR_ID_VAL
     ,REGIS_PRSNA_1.NAME_PREFX_TXT
     ,REGIS_PRSNA_1.GVN_NAME
     ,REGIS_PRSNA_1.MID_NAME
     ,REGIS_PRSNA_1.FAMLY_NAME
     ,REGIS_PRSNA_1.NAME_SUFFX_TXT
     ,REGIS_PRSNA_1.FULL_NAME
     ,REGIS_PRSNA_1.GENDR_IND
     ,REGIS_PRSNA_1.BRTH_DATE
     ,REGIS_PRSNA_1.CNSMR_USER_NAME
     ,REGIS_PRSNA_1.LANG_CODE
     ,PRSNA_POSTL_ADDR_1.ADDR_LINE_1_TXT
     ,PRSNA_POSTL_ADDR_1.ADDR_LINE_2_TXT
     ,PRSNA_POSTL_ADDR_1.ADDR_LINE_3_TXT
     ,PRSNA_POSTL_ADDR_1.STRET_NUM
     ,PRSNA_POSTL_ADDR_1.STRET_NAME
     ,PRSNA_POSTL_ADDR_1.APT_NUM
     ,PRSNA_POSTL_ADDR_1.PO_BOX_NUM
     ,PRSNA_POSTL_ADDR_1.CITY_NAME
     ,PRSNA_POSTL_ADDR_1.POSTL_AREA_CODE
     ,PRSNA_POSTL_ADDR_1.TERR_NAME
     ,PRSNA_POSTL_ADDR_1.CNTRY_CODE
     ,PRSNA_PHONE_1.EMAIL_ADDR_TXT AS EMAIL_ADDR_TXT_1_CRM 
     ,PRSNA_PHONE_1.PHONE_CNTRY_NBR AS PHONE_CNTRY_NBR_1
     ,PRSNA_PHONE_1.PHONE_AREA_NBR  AS PHONE_AREA_NBR_1
     ,PRSNA_PHONE_1.PHONE_EXCHG_NBR AS PHONE_EXCHG_NBR_1
     ,PRSNA_PHONE_1.PHONE_LINE_NBR  AS PHONE_LINE_NBR_1
     ,PRSNA_PHONE_1.PHONE_EXTSN_NUM AS PHONE_EXTSN_NUM_1
     ,PRSNA_PHONE_1.FULL_PHONE_NUM AS FULL_PHONE_NUM_1_CRM 
     ,PRSNA_POSTL_ADDR_1.WIN_KEY AS WIN_KEY_CRM      
     ,REGIS_PRSNA_1.REGIS_PRSNA_ID 
     ,LEGAL_ENT_PRSNA_1.MATCHD_CNSMR_PRSNA_ID
     ,LEGAL_ENT_PRSNA_1.HSHLD_PRSNA_ID
     ,REGIS_PRSNA_1.LEGAL_ENT_NBR
    
      FROM (SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
            WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR 
                                    FROM TSS_CLEANSE_INPUT1_$CNTRY 
                                    GROUP BY 1)) C
      
  INNER JOIN REGIS_PRSNA REGIS_PRSNA_1
     ON REGIS_PRSNA_1.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
    AND REGIS_PRSNA_1.PRSNA_STATUS_CODE = 'AC'
    
  INNER JOIN TSS_MATCH_IN_MATCHD_TEMP LEGAL_ENT_PRSNA_1
     ON REGIS_PRSNA_1.MATCHD_CNSMR_PRSNA_ID = LEGAL_ENT_PRSNA_1.MATCHD_CNSMR_PRSNA_ID
    AND REGIS_PRSNA_1.LEGAL_ENT_NBR = LEGAL_ENT_PRSNA_1.LEGAL_ENT_NBR
       
  LEFT OUTER JOIN TSS_MATCH_INPUT_POSTL_TEMP PRSNA_POSTL_ADDR_1
    ON REGIS_PRSNA_1.REGIS_PRSNA_ID = PRSNA_POSTL_ADDR_1.REGIS_PRSNA_ID
   AND REGIS_PRSNA_1.MKTNG_PGM_NBR = PRSNA_POSTL_ADDR_1.MKTNG_PGM_NBR

  LEFT OUTER JOIN TSS_MATCH_INPUT_TEMP PRSNA_PHONE_1
    ON REGIS_PRSNA_1.REGIS_PRSNA_ID = PRSNA_PHONE_1.REGIS_PRSNA_ID
   AND REGIS_PRSNA_1.MKTNG_PGM_NBR = PRSNA_PHONE_1.MKTNG_PGM_NBR
     
 WHERE 
 (WIN_KEY_CRM IS NOT NULL AND WIN_KEY_CRM <> '')
 OR
 (PRSNA_PHONE_1.EMAIL_ADDR_TXT IS NOT NULL AND PRSNA_PHONE_1.EMAIL_ADDR_TXT <> '')
 OR
 (PRSNA_PHONE_1.FULL_PHONE_NUM IS NOT NULL AND PRSNA_PHONE_1.FULL_PHONE_NUM <> '')
  ;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_$CNTRY
COLUMN (LEGAL_ENT_NBR ,MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Match Input Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = '$CNTRY'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

/*
UPDATE LOAD_INFO
SET STATUS = 'Failure'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Match Input Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = '$CNTRY'
;
*/
.QUIT ERRORCODE

.LABEL WARN
.QUIT 0
