/***********************************************************************************************************
SCRIPT:               CNSMR_TSS_WINKEY_STG.BTEQ 
DESCRIPTION:          This script loads the WINKEY TRIGGER table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM WINKEY SCRIPT
INPUT:                TRILLIUM WINKEY FILE
OUTPUT:               WINKEY TRIGGER
ERRORS:
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
R5.1                 01/28/2014           TERADATA                        ADD NATIONAL_ID_NBR   
R5.5                 07/13/2015           TERADATA                        BR202 ADD ALIAS NAMES FOR NICKNAME MATCHING  
5.7                  02/29/2016           TERADATA                        Release 5.7 - i20b rematching
                                                                          in case of external standardization 
5.8.1                11/21/2016           TERADATA                        Release 5.8.1 - If the FullName is NULL in REGIS_PRSNA then we are concatenating the GVN_NAME and FAMILY_NAME and populate the 	TSS_MATCH_INPUT_LA table															  
***********************************************************************************************************/

.RUN FILE \\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\logon\LOGON.txt;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Country=LA;Stage=Trillium;Step=MatchInput;' FOR SESSION; 
COLLECT STATS ON WINKEY_TRIGGER_LA
COLUMN WINDOW_KEY_01;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER_LA
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON WINKEY_TRIGGER_LA
COLUMN PHONE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Winkey Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = 'LA'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
CNTRY_NAME,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Match Input Load',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'LA',
LI.BATCH_ID
FROM MDM_LOAD_CONTROL LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Trillium'
AND LI.STATUS = 'In Progress'
AND LI.CNTRY_NAME = 'LA'

LEFT OUTER JOIN LOAD_INFO LII
ON LOAD.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Wrapper'

WHERE LII.LOAD_ID IS NULL
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE VOLATILE TABLE POSTL AS (
SEL B.WIN_KEY 
FROM 
(SEL B.WIN_KEY
FROM 
REGIS_PRSNA_POSTL_ADDR B
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM 
MKTNG_PGM WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM 
WINKEY_TRIGGER_LA)) 
GROUP BY REGIS_PRSNA_ID,WIN_KEY
UNION ALL
SEL WINDOW_KEY_01 AS WIN_KEY
FROM WINKEY_TRIGGER_LA
GROUP BY EMAIL_ADDR_TXT, PHONE,WIN_KEY
) B
GROUP BY 1
HAVING COUNT(*) >= 500
) WITH DATA
ON COMMIT PRESERVE ROWS
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM REF_POSTL_DATA_IGNORE_LA ALL;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_POSTL_DATA_IGNORE_LA
SEL B.WIN_KEY 
FROM 
POSTL B
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS REF_POSTL_DATA_IGNORE_LA
COLUMN WINKEY;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE WINKEY_TRIGGER_LA
SET SYS_ERR_CODE=PHONE
,PHONE = ''
WHERE PHONE IN (SEL FULL_PHONE_NUM
FROM REF_PHONE_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE WINKEY_TRIGGER_LA
SET SYS_ERR_CODE=EMAIL_ADDR_TXT
,EMAIL_ADDR_TXT = ''
WHERE EMAIL_ADDR_TXT IN (SEL EMAIL_ADDR_TXT
FROM REF_EMAIL_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE WINKEY_TRIGGER_LA
SET SYS_ERR_CODE=WINDOW_KEY_01
,WINDOW_KEY_01 = ''
WHERE TRIM(WINDOW_KEY_01) IN (SEL TRIM(WINKEY)
FROM REF_POSTL_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE WINKEY_TRIGGER_LA
SET SYS_ERR_CODE=NATIONAL_ID_NBR
,NATIONAL_ID_NBR = ''
WHERE NATIONAL_ID_NBR IN (SEL NATIONAL_ID_NBR
FROM REF_NATNL_ID_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM WINKEY_TRIGGER_LA
WHERE TRIM(COALESCE(PHONE,'')) = ''
AND TRIM(COALESCE(EMAIL_ADDR_TXT,'')) = ''
AND TRIM(COALESCE(WINDOW_KEY_01,'')) = ''
AND TRIM(COALESCE(NATIONAL_ID_NBR,'')) = '';
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


INS TSS_MATCH_INPUT_TEMP
(
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
PHONE_EXTSN_NUM,
FULL_PHONE_NUM,
PHONE_LINE_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_CNTRY_NBR,
EMAIL_ADDR_TXT
)

SELECT 
COALESCE(A.LEGAL_ENT_NBR,B.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(A.MKTNG_PGM_NBR,B.MKTNG_PGM_NBR) MKTNG_PGM_NBR,
COALESCE(A.REGIS_PRSNA_ID,B.REGIS_PRSNA_ID) REGIS_PRSNA_ID,
A.PHONE_EXTSN_NUM,
A.FULL_PHONE_NUM,
A.PHONE_LINE_NBR,
A.PHONE_AREA_NBR,
A.PHONE_EXCHG_NBR,
A.PHONE_CNTRY_NBR,
B.EMAIL_ADDR_TXT

FROM 

(SELECT
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
PHONE_EXTSN_NUM,
A.FULL_PHONE_NUM AS FULL_PHONE_NUM,
PHONE_LINE_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_CNTRY_NBR,
RANK() OVER(PARTITION BY MKTNG_PGM_NBR,
REGIS_PRSNA_ID
ORDER BY A.FULL_PHONE_NUM DESC  ) AS RNK
FROM 
REGIS_PRSNA_PHONE A
WHERE A.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1))
AND (A.FULL_PHONE_NUM,LEGAL_ENT_NBR) IN
         (
            SEL PHONE,LEGAL_ENT_NBR
            FROM
            WINKEY_TRIGGER_LA WINKEY
            WHERE 
            WINKEY.PHONE <> ''
            AND WINKEY.PHONE IS NOT NULL
         )) A

FULL OUTER JOIN 
(SELECT
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
A.EMAIL_ADDR_TXT AS EMAIL_ADDR_TXT,
RANK() OVER(PARTITION BY MKTNG_PGM_NBR,
REGIS_PRSNA_ID
ORDER BY A.EMAIL_ADDR_TXT DESC  ) AS RNK
FROM 
REGIS_PRSNA_EMAIL_ADDR A
WHERE A.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1))
AND A.EMAIL_ADDR_TXT IN
         (
            SEL EMAIL_ADDR_TXT
            FROM
            WINKEY_TRIGGER_LA WINKEY
            WHERE 
            WINKEY.EMAIL_ADDR_TXT <> ''
            AND WINKEY.EMAIL_ADDR_TXT IS NOT NULL
         )    ) B
     ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
    AND A.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
     AND A.RNK = B.RNK
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_TEMP
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO TSS_MATCH_INPUT_POSTL_TEMP
(
   REGIS_PRSNA_ID
   ,MKTNG_PGM_NBR
   ,LEGAL_ENT_NBR
   ,CNTCT_POINT_CATEG_CODE
   ,WIN_KEY
   ,SUBSCRPTN_OPT_NBR
   ,SUBSCRPTN_OPT_IND
   ,CNSMR_CHCE_DATETM
   ,PREF_CNTCT_POINT_IND
   ,ADDR_LINE_1_TXT
   ,ADDR_LINE_2_TXT
   ,ADDR_LINE_3_TXT
   ,STRET_NUM
   ,STRET_NAME
   ,APT_NUM
   ,PO_BOX_NUM
   ,CITY_NAME
   ,CITY_CODE
   ,POSTL_AREA_CODE
   ,TERR_NAME
   ,TERR_CODE
   ,CNTRY_CODE
   ,LAT_MEAS
   ,LONG_MEAS
   ,VALID_CNTCT_POINT_IND
   ,GUARDN_NAME
   ,GUARDN_EMAIL_ADDR_TXT
   ,GUARDN_CNSNT_IND
   ,ACNLGMT_DATE
   ,POSTL_STATUS_CODE
   ,PR_GEOCODE_FAIL
   ,TQ_GOUT_MATCH_LEVEL
   ,PR_REV_GROUP
   ,DATA_SRCE_NBR
)
SELECT
REGIS_PRSNA_ID
   ,MKTNG_PGM_NBR
   ,LEGAL_ENT_NBR
   ,CNTCT_POINT_CATEG_CODE
   ,WIN_KEY
   ,SUBSCRPTN_OPT_NBR
   ,SUBSCRPTN_OPT_IND
   ,CNSMR_CHCE_DATETM
   ,PREF_CNTCT_POINT_IND
   ,ADDR_LINE_1_TXT
   ,ADDR_LINE_2_TXT
   ,ADDR_LINE_3_TXT
   ,STRET_NUM
   ,STRET_NAME
   ,APT_NUM
   ,PO_BOX_NUM
   ,CITY_NAME
   ,CITY_CODE
   ,POSTL_AREA_CODE
   ,TERR_NAME
   ,TERR_CODE
   ,CNTRY_CODE
   ,LAT_MEAS
   ,LONG_MEAS
   ,VALID_CNTCT_POINT_IND
   ,GUARDN_NAME
   ,GUARDN_EMAIL_ADDR_TXT
   ,GUARDN_CNSNT_IND
   ,ACNLGMT_DATE
   ,POSTL_STATUS_CODE
   ,PR_GEOCODE_FAIL
   ,TQ_GOUT_MATCH_LEVEL
   ,PR_REV_GROUP
   ,DATA_SRCE_NBR
FROM REGIS_PRSNA_POSTL_ADDR
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1))
AND WIN_KEY IN (
            SEL WINDOW_KEY_01 
            FROM
            WINKEY_TRIGGER_LA WINKEY
            WHERE 
            WINKEY.WINDOW_KEY_01 NOT IN ('','IN        1','JA         ','       1','CN     ','AU       1','CN','JP')
                  );
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_POSTL_TEMP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY TSS_MATCH_INPUT_POSTL_TEMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INS MATCH_INPUT_TEMP
(
MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_CODE
,CNTRY_CODE
,EMAIL_ADDR_TXT 
,PHONE_CNTRY_NBR
,PHONE_AREA_NBR 
,PHONE_EXCHG_NBR
,PHONE_LINE_NBR 
,PHONE_EXTSN_NUM
,FULL_PHONE_NUM 
,WIN_KEY
,REGIS_PRSNA_ID 
,LEGAL_ENT_NBR
,NATIONAL_ID_NBR
)
SELECT 
COALESCE(A.MKTNG_PGM_NBR,B.MKTNG_PGM_NBR,C.MKTNG_PGM_NBR) MKTNG_PGM_NBR,
'' REGIS_CNSMR_ID_VAL,
B.ADDR_LINE_1_TXT,
B.ADDR_LINE_2_TXT,
B.ADDR_LINE_3_TXT,
B.STRET_NUM,
B.STRET_NAME,
B.APT_NUM,
B.PO_BOX_NUM,
B.CITY_NAME,
B.POSTL_AREA_CODE,
B.TERR_NAME,
B.CNTRY_CODE,
A.EMAIL_ADDR_TXT,
A.PHONE_CNTRY_NBR,
A.PHONE_AREA_NBR ,
A.PHONE_EXCHG_NBR,
A.PHONE_LINE_NBR ,
A.PHONE_EXTSN_NUM,
A.FULL_PHONE_NUM ,
B.WIN_KEY,
COALESCE(A.REGIS_PRSNA_ID,B.REGIS_PRSNA_ID,C.REGIS_PRSNA_ID) REGIS_PRSNA_ID,
COALESCE(A.LEGAL_ENT_NBR,B.LEGAL_ENT_NBR,C.LEGAL_ENT_NBR) LEGAL_ENT_NBR
,C.NATIONAL_ID_NBR

FROM TSS_MATCH_INPUT_TEMP A
FULL OUTER JOIN TSS_MATCH_INPUT_POSTL_TEMP B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
FULL OUTER JOIN REGIS_PRSNA C
     INNER JOIN WINKEY_TRIGGER_LA WINKEY
     ON C.NATIONAL_ID_NBR=WINKEY.NATIONAL_ID_NBR
     AND C.LEGAL_ENT_NBR=WINKEY.LEGAL_ENT_NBR
ON A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
;

COLLECT STATS ON TEMPORARY MATCH_INPUT_TEMP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON TEMPORARY MATCH_INPUT_TEMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM TSS_MATCH_INPUT_LA ALL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INS TSS_MATCH_INPUT_LA
(
MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,CNSMR_USER_NAME
,LANG_CODE
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_CODE
,CNTRY_CODE
,EMAIL_ADDR_TXT 
,PHONE_CNTRY_NBR
,PHONE_AREA_NBR 
,PHONE_EXCHG_NBR
,PHONE_LINE_NBR 
,PHONE_EXTSN_NUM
,FULL_PHONE_NUM 
,WIN_KEY
,REGIS_PRSNA_ID 
,LEGAL_ENT_PRSNA_ID
,HSHLD_PRSNA_ID
,LEGAL_ENT_NBR
,NATIONAL_ID_NBR
/*********************** BR202 - Add attributes to enable nickname matching **************/
,GVN_NAME_ALIAS
,FAMLY_NAME_ALIAS
)
SELECT
      REGIS_PRSNA_1.MKTNG_PGM_NBR
     ,REGIS_PRSNA_1.REGIS_CNSMR_ID_VAL
     ,REGIS_PRSNA_1.NAME_PREFX_TXT
     ,REGIS_PRSNA_1.GVN_NAME
     ,REGIS_PRSNA_1.MID_NAME
     ,REGIS_PRSNA_1.FAMLY_NAME
     ,REGIS_PRSNA_1.NAME_SUFFX_TXT
	 ,CASE WHEN COALESCE(TRIM(REGIS_PRSNA_1.FULL_NAME),'')='' THEN TRIM(REGIS_PRSNA_1.GVN_NAME)||' '||TRIM(REGIS_PRSNA_1.FAMLY_NAME)
	ELSE TRIM(REGIS_PRSNA_1.FULL_NAME)
	END
     ,REGIS_PRSNA_1.GENDR_IND
     ,REGIS_PRSNA_1.BRTH_DATE
     ,REGIS_PRSNA_1.CNSMR_USER_NAME
     ,REGIS_PRSNA_1.LANG_CODE
     ,A.ADDR_LINE_1_TXT
     ,A.ADDR_LINE_2_TXT
     ,A.ADDR_LINE_3_TXT
     ,A.STRET_NUM
     ,A.STRET_NAME
     ,A.APT_NUM
     ,A.PO_BOX_NUM
     ,A.CITY_NAME
     ,A.POSTL_AREA_CODE
     ,A.TERR_CODE
     ,A.CNTRY_CODE
     ,A.EMAIL_ADDR_TXT AS EMAIL_ADDR_TXT_1_CRM 
     ,A.PHONE_CNTRY_NBR AS PHONE_CNTRY_NBR_1
     ,A.PHONE_AREA_NBR  AS PHONE_AREA_NBR_1
     ,A.PHONE_EXCHG_NBR AS PHONE_EXCHG_NBR_1
     ,A.PHONE_LINE_NBR  AS PHONE_LINE_NBR_1
     ,A.PHONE_EXTSN_NUM AS PHONE_EXTSN_NUM_1
     ,A.FULL_PHONE_NUM AS FULL_PHONE_NUM_1_CRM 
     ,COALESCE(A.WIN_KEY,REGIS_PRSNA_1.REGIS_CNSMR_ID_VAL) AS WIN_KEY_CRM      
     ,REGIS_PRSNA_1.REGIS_PRSNA_ID 
     ,LEGAL_ENT_PRSNA_1.MATCHD_CNSMR_PRSNA_ID
     ,LEGAL_ENT_PRSNA_1.HSHLD_PRSNA_ID
     ,REGIS_PRSNA_1.LEGAL_ENT_NBR
     ,A.NATIONAL_ID_NBR
     ,REGIS_PRSNA_1.GVN_NAME_ALIAS
     ,REGIS_PRSNA_1.FAMLY_NAME_ALIAS
    
  FROM MATCH_INPUT_TEMP A
      
  INNER JOIN REGIS_PRSNA REGIS_PRSNA_1
    ON REGIS_PRSNA_1.REGIS_PRSNA_ID = A.REGIS_PRSNA_ID
   AND REGIS_PRSNA_1.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
    
  INNER JOIN MATCHD_CNSMR_PRSNA LEGAL_ENT_PRSNA_1
     ON REGIS_PRSNA_1.MATCHD_CNSMR_PRSNA_ID = LEGAL_ENT_PRSNA_1.MATCHD_CNSMR_PRSNA_ID
    AND REGIS_PRSNA_1.LEGAL_ENT_NBR = LEGAL_ENT_PRSNA_1.LEGAL_ENT_NBR
     
 WHERE REGIS_PRSNA_1.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1))

   AND (COALESCE(TRIM(WIN_KEY_CRM),'') <> ''
 OR
 COALESCE(TRIM(A.EMAIL_ADDR_TXT),'') <> ''
 OR
 COALESCE(TRIM(A.NATIONAL_ID_NBR),'') <> '' 
 OR
 COALESCE(TRIM(A.FULL_PHONE_NUM),'') <> '')
  ;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_LA
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_LA
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_LA
COLUMN WIN_KEY;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE TSS_MATCH_INPUT_LA
SET FULL_PHONE_NUM = ''
WHERE FULL_PHONE_NUM IN (SEL FULL_PHONE_NUM
FROM REF_PHONE_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE TSS_MATCH_INPUT_LA
SET EMAIL_ADDR_TXT = ''
WHERE EMAIL_ADDR_TXT IN (SEL EMAIL_ADDR_TXT
FROM REF_EMAIL_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE TSS_MATCH_INPUT_LA
SET WIN_KEY = ''
WHERE WIN_KEY IN (SEL WINKEY
FROM REF_POSTL_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE TSS_MATCH_INPUT_LA
SET NATIONAL_ID_NBR = ''
WHERE NATIONAL_ID_NBR IN (SEL NATIONAL_ID_NBR
FROM REF_NATNL_ID_DATA_IGNORE_LA);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM TSS_MATCH_INPUT_LA
WHERE TRIM(COALESCE(FULL_PHONE_NUM,'')) = ''
AND TRIM(COALESCE(EMAIL_ADDR_TXT,'')) = ''
AND TRIM(COALESCE(WIN_KEY,'')) = ''
AND TRIM(COALESCE(NATIONAL_ID_NBR,'')) = '';
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_LA
COLUMN HSHLD_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE VOLATILE TABLE MC_HH AS
(SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID
FROM MATCHD_CNSMR_PRSNA
WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR 
FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1)
AND HSHLD_PRSNA_ID IN 
(SEL HSHLD_PRSNA_ID FROM TSS_MATCH_INPUT_LA))
 WITH DATA
 PRIMARY INDEX(MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR)
 PARTITION BY LEGAL_ENT_NBR
 ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS MC_HH
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS MC_HH
COLUMN MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DEL FROM TSS_MATCH_INPUT_LA
WHERE HSHLD_PRSNA_ID IN 
(SEL HSHLD_PRSNA_ID FROM REGIS_PRSNA A
INNER JOIN MC_HH B
ON A.MATCHD_CNSMR_PRSNA_ID=B.MATCHD_CNSMR_PRSNA_ID
AND A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
WHERE A.MKTNG_PGM_NBR IN 
(SEL MKTNG_PGM_NBR FROM MKTNG_PGM 
WHERE LEGAL_ENT_NBR IN 
(SEL LEGAL_ENT_NBR 
FROM TSS_CLEANSE_INPUT1_LA GROUP BY 1)
)
GROUP BY 1
HAVING COUNT(*) > 1000);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS TSS_MATCH_INPUT_LA
COLUMN (LEGAL_ENT_NBR ,MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Match Input Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = 'LA'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

/*
UPDATE LOAD_INFO
SET STATUS = 'Failure'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Match Input Load'
AND LOAD_INFO.STATUS = 'In Progress'
AND LOAD_INFO.CNTRY_NAME = 'LA'
;
*/
.QUIT ERRORCODE

.LABEL WARN
.QUIT 0

