/***********************************************************************************************************
SCRIPT:               TSS_RETLR_OUTPUT.BTEQ 
DESCRIPTION:          This script loads the TSS_RETLR_OUTPUT table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM RETLR SCRIPT
INPUT:                TRILLIUM RETLR FILE
OUTPUT:               RETLR TRIGGER
ERRORS:
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/30/2014           TERADATA                        INITIAL VERSION
5.0.1                04/11/2014           TERADATA                        RELEASE 5.0.1 PRB0041004
5.2.1	             19/11/2014           TERADATA                        RELEASE 5.2.1 PRB0041169 
5.3                  01/09/2015           TERADATA                        RELEASE 5.3
                                                                          PRB0041246   
5.3.2                05/19/2015           TERADATA                        Change VALID_CNTCT_POINT_IND Logic
                                                                          for GRC																		  
5.4                  04/07/2015           TERADATA                        RELEASE 5.4
                                                                          Addition of new countries ISR,EGY,ROU,AFR
5.5                  06/19/2015           TERADATA                        RELEASE 5.5
                                                                          Addition of new countries CZE,BGR,PAK,HRV
5.7                  02/29/2016           TERADATA                        Release 5.7 - Update POSTL_ADDR_ID
                                                                          in case of external standardization
1.6					 07/04/2017			  TERADATA						  Devops Sprint 1.6 
																		  Addition of new countries 'ARG','BHR','BOL','COL',
																		  'CRI','DOM', 'ECU','GTM','HND','IDN','JAM','KEN',
																		  'KWT','MAR','MYS','NIC','OMN','PAN','PER','PHL',
																		  'SAU','SLV','VEN'
1.7					 26/07/2017			  TERADATA						  Devops Sprint 1.7
																		  Added LAT and LONG column Update from POSTL_ADDR
1.8                  10/27/2017           TERADATA                        Changed GL_ACCURACY logic as part of Trillium Upgrade	
2.0                  12/04/2017           TERADATA                        Trillium Upgrade Phase 3 - Changing valid contact logic for 
                                                                          PHL,IDN, VNM & THA
2.1					 01/03/2018			  TERADATA						  Turning off the standardization for GRC as part of #RITM0420604

***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i4b;Stage=MDM;Step=TrilliumOutput;' FOR SESSION; 
UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='RETLR Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Staging RETLR Load',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
LI.BATCH_ID
FROM MDM_LOAD_CONTROL_RETLR LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='RETLR Load'
AND LI.STATUS = 'Success'
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS RETLR_TRIGGER
COLUMN(OPTOUT_ID,LOAD_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE VOLATILE TABLE V_INPUT AS
(SEL 
A.OPTOUT_ID,
A.ADDR_LINE_1_TXT,
A.ADDR_LINE_2_TXT,
A.ADDR_LINE_3_TXT,
A.CITY_NAME,
A.POSTL_AREA_CODE,
A.LOAD_ID,
A.LOAD_TS,
A.WINDOW_KEY_01,
A.STRET_NUM,
A.STRET_NAME,
A.APT_NUM,
A.ATTR1,
A.ATTR2,
A.ATTR3,
A.ATTR4,
A.ATTR5,
A.ATTR6,
A.ATTR7,
A.ATTR8,
A.ATTR9,
A.ATTR10,
A.ATTR11,
A.ATTR12,
A.ATTR13,
A.ATTR14,
A.ATTR15,
A.ATTR16,
A.ATTR17,
A.ATTR18,
A.ATTR19,
A.ATTR20,
A.ATTR21,
A.ATTR22,
A.ATTR23,
A.ATTR24,
A.ATTR25,
A.ATTR26,
A.ATTR27,
A.ATTR28,
A.ATTR29,
A.ATTR30
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR_NAME
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.CNTRY_NAME
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE 
FROM RETLR_TRIGGER A
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR_NAME = TR.TERR
AND A.CNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.CNTRY_NAME = CR.CNTRY
)
WITH DATA
PRIMARY INDEX (ATTR1,ATTR2,ATTR3,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME_NTV AS CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT.CITY_NAME
                 END                 
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME_NTV AS CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')) 
AND V_INPUT.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE V_INPUT.CITY_NAME = C.CITY_NAME --PRB0041004
WHERE (V_INPUT.CITY_NAME = C.CITY_NAME--PRB0041004
OR V_INPUT.CITY_NAME = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT.CITY_CODE),'') IS NULL
AND V_INPUT.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT.TERR_CODE = T.TERR_CODE
AND V_INPUT.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.STORE_STG
FROM V_INPUT B
SET ADDR_LINE_1_TEXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TEXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TEXT=B.ADDR_LINE_3_TXT
,CITY_NAME=B.CITY_NAME
,TERR_NAME=B.TERR_NAME
,CITY_CODE=NULLIF(B.CITY_CODE,0)
,TERR_CODE=B.TERR_CODE
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,CNTRY_CODE=B.CNTRY_NAME
,STRET_NAME=B.STRET_NAME
,STRET_NUM=B.STRET_NUM
,APT_NUM=B.APT_NUM
,GL_ACCURACY=CASE WHEN TRIM(B.ATTR4) = 'K' THEN 91
WHEN TRIM(B.ATTR4) = 'L' THEN 92
WHEN TRIM(B.ATTR4) = 'M' THEN 93
WHEN TRIM(B.ATTR4) = 'A' THEN 94
WHEN TRIM(B.ATTR4) = 'B' THEN 95
WHEN TRIM(B.ATTR4) = 'C' THEN 96
WHEN TRIM(B.ATTR4) = 'D' THEN 97
WHEN TRIM(B.ATTR4) = 'E' THEN 98
WHEN TRIM(B.ATTR4) = 'F' THEN 99
WHEN Trim(B.ATTR4) IN ('0','') THEN NULL
ELSE TRIM(B.ATTR4)
END
,GL_MATCH_FLG=B.ATTR5
,LAT_MEAS= CASE WHEN Trim(B.ATTR4) IN ('0','')
THEN NULL
ELSE CAST(B.ATTR6 AS DECIMAL(8,6) FORMAT '-99.999999')/1000000
END
,LONG_MEAS= CASE WHEN Trim(B.ATTR4) IN ('0','') 
THEN NULL
ELSE CAST(B.ATTR7 AS   DECIMAL(9,6) FORMAT '-999.999999')/1000000
END
,DR_CLEANSE_LVL=B.ATTR8
,PR_GEOCODE_FAIL=TRIM(B.ATTR10)
,PR_REV_GROUP=TRIM(B.ATTR9)
,VALID_CNTCT_POINT_IND=CASE
WHEN (ATTR10 IN ('0','9')
      AND CNTRY_NAME IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (ATTR10 NOT IN ('1','2','6','7')
      AND CNTRY_NAME IN ('THA'))
      OR (ATTR10 NOT IN ('1')
      AND CNTRY_NAME IN ('IDN','VNM'))
      OR (ATTR10 IN ('0','3')
      AND CNTRY_NAME IN ('NZL'))      
      OR CNTRY_NAME IN ('ARG','CHL','MEX','BRA')
      OR (ATTR9 NOT IN ('004','007','014','015','016','017','018')
      AND CNTRY_NAME IN ('PHL'))
      OR (ATTR9 IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  CNTRY_NAME NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM'))
      OR (ATTR10 = '0' AND ATTR9 IN ('000','002','005','007','008','009','010','014','018','020')
      AND CNTRY_NAME IN ('FRA'))
      OR (ATTR10 IN ('0','3') AND ATTR9 IN ('000','002','005','008','009','010','018')
      AND CNTRY_NAME IN ('IRL','AUT','ITA'))      
      /*OR (ATTR10 = '0' AND ATTR9 IN ('000','002','005','008','009','010')
      AND CNTRY_NAME IN ('GRC'))*/   /*commenting this as part of #RITM0420604*/
      OR (ATTR10 IN ('0') AND ATTR9 IN ('000','002','005','008','009','010','018')
      AND CNTRY_NAME IN ('CHE','DEU','BEL','NLD'))
      OR (ATTR10 IN ('0','3','8') AND ATTR9 IN ('000','002','005','008','009','010','018')
      AND CNTRY_NAME IN ('DNK','FIN','NOR'))   
      OR (ATTR10 IN ('0','3','8') AND ATTR9 IN ('000','002','005','007','008','009','010','018')
      AND CNTRY_NAME IN ('SWE'))       
      OR (ATTR10 = '0' AND ATTR9 IN ('000','002','005','008','009','010','014','018')
      AND CNTRY_NAME IN ('GBR','PRT'))     
      OR (ATTR10 IN ('0') AND ATTR9 IN ('000','002','005','008','009','010','018')
      AND CNTRY_NAME IN ('ESP'))
THEN 'Y'
WHEN CNTRY_NAME IN ('GRC')
THEN 'Y' /*adding as part of #RITM0420604*/
WHEN B.CNTRY_NAME='MYS' AND TRIM(COALESCE(B.POSTL_AREA_CODE,''))<>'' 
     AND (CHAR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')))=5 
          AND SUBSTR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')),1,2)<>'01'
          AND SUBSTR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')),1,1)='0')
THEN 'N'
WHEN ((ATTR10 IS NULL OR TRIM(ATTR10) = '') 
 AND (ATTR9 IS NULL OR TRIM(ATTR9) = ''))
THEN 'Y'
ELSE 'N'
END
WHERE B.LOAD_ID=$DATABASENAME.STORE_STG.LOAD_ID
AND B.LOAD_TS=$DATABASENAME.STORE_STG.LOAD_TS
AND B.ATTR1=$DATABASENAME.STORE_STG.STORE_NAME
AND B.ATTR2=$DATABASENAME.STORE_STG.RETLR_NAME
AND B.ATTR3=$DATABASENAME.STORE_STG.PARENT_RETLR_NAME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_INPUT1 AS
(
SEL 
A.RETLR_NAME,
A.RETLR_NAME_NTV,
A.PARENT_RETLR_NAME,
A.PARENT_RETLR_NAME_NTV,
A.STORE_NAME,
A.STORE_NAME_NTV,
A.STORE_PHN_NBR,
A.STORE_TYPE_CODE,
A.ALT_STORE_ID,
A.DATA_SRCE_NBR,
A.ADDR_LINE_1_TEXT,
A.ADDR_LINE_2_TEXT,
A.ADDR_LINE_3_TEXT,
A.CITY_NAME,
A.POSTL_AREA_CODE,
A.ADDR_LINE_1,
A.ADDR_LINE_2,
A.ADDR_LINE_3,
A.CITY,
A.TERR,
A.POSTL_AREA_CD,
A.CNTRY_CD,
A.LONG_MEAS,
A.LAT_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.LOAD_ID,
A.LOAD_TS,
A.MDM_LOAD_IND                  
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.CNTRY_CD
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE
FROM $DATABASENAME.STORE_STG A
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR = TR.TERR
AND A.CNTRY_CD = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.CNTRY_CD = CR.CNTRY
WHERE A.CNTRY_CODE IS NULL
AND A.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
where PROCESS_NAME='Staging RETLR Load'
and status='In Progress')
)
WITH DATA
PRIMARY INDEX (STORE_NAME,RETLR_NAME,PARENT_RETLR_NAME,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME_NTV AS CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT1.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT1.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT1.CITY_NAME
                 END                 
WHERE V_INPUT1.POSTL_AREA_CD = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME_NTV AS CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT1.POSTL_AREA_CD = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')) 
AND V_INPUT1.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT1 FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY) = C.CITY_NAME--PRB0041004
WHERE (COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY) = C.CITY_NAME--PRB0041004
OR COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY) = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT1.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT1.CITY_CODE),'') IS NULL
AND V_INPUT1.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT1 FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT1.TERR_CODE = T.TERR_CODE
AND V_INPUT1.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.STORE_STG
FROM V_INPUT1 B
SET ADDR_LINE_1_TEXT=B.ADDR_LINE_1
,ADDR_LINE_2_TEXT=B.ADDR_LINE_2
,ADDR_LINE_3_TEXT=B.ADDR_LINE_3
--,CITY_NAME=B.CITY_NAME                   --Commented : RELEASE 5.2.1 PRB0041169 
,CITY_NAME=coalesce(B.CITY_NAME,B.CITY)    --Added     : RELEASE 5.2.1 PRB0041169 
,TERR_NAME=B.TERR_NAME
,CITY_CODE=NULLIF(B.CITY_CODE,0)
,TERR_CODE=B.TERR_CODE
,POSTL_AREA_CODE=B.POSTL_AREA_CD
,CNTRY_CODE=B.CNTRY_NAME
WHERE $DATABASENAME.STORE_STG.CNTRY_CODE IS NULL
AND $DATABASENAME.STORE_STG.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
where PROCESS_NAME='Staging RETLR Load'
and status='In Progress'
)
AND B.LOAD_ID=$DATABASENAME.STORE_STG.LOAD_ID
AND B.LOAD_TS=$DATABASENAME.STORE_STG.LOAD_TS
AND B.STORE_NAME=$DATABASENAME.STORE_STG.STORE_NAME
AND B.RETLR_NAME=$DATABASENAME.STORE_STG.RETLR_NAME
AND B.PARENT_RETLR_NAME=$DATABASENAME.STORE_STG.PARENT_RETLR_NAME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/****************** Update POSTL_ADDR_ID, LAT_MEAS and LONG_MEAS from POSTL_ADDR *********************/
UPDATE $DATABASENAME.STORE_STG
FROM (SELECT DISTINCT
A.STORE_NAME,
A.RETLR_NAME,
A.PARENT_RETLR_NAME,
A.LOAD_ID,
D.POSTL_ADDR_ID,
A.LOAD_TS,
D.LAT_MEAS,
D.LONG_MEAS
  FROM $DATABASENAME.STORE_STG A
  INNER JOIN LOAD_INFO B
  ON A.LOAD_ID=B.LOAD_ID
  AND B.PROCESS_NAME='Staging RETLR Load'
  AND B.STATUS = 'In Progress'
  LEFT JOIN CNTRY_RECODE E
ON TRIM(A.CNTRY_CD)=E.CNTRY
LEFT JOIN POSTL_ADDR D
ON COALESCE(TRIM(A.ADDR_LINE_1),'')=D.ORIG_ADDR_LINE_1_TXT
AND COALESCE(TRIM(A.ADDR_LINE_2),'')=D.ORIG_ADDR_LINE_2_TXT
AND COALESCE(TRIM(A.ADDR_LINE_3),'')=D.ORIG_ADDR_LINE_3_TXT
AND ' '=D.ORIG_STRET_NUM
AND ' '=D.ORIG_STRET_NAME
AND ' '=D.ORIG_APT_NUM
AND ' '=D.ORIG_PO_BOX_NUM
AND COALESCE(TRIM(A.CITY),'')=D.ORIG_CITY_NAME
AND COALESCE(TRIM(A.TERR),'')=D.ORIG_TERR_NAME
AND COALESCE(TRIM(A.POSTL_AREA_CD),'')=D.ORIG_POSTL_AREA_CODE
AND COALESCE(E.CNTRY_RECODE,TRIM(A.CNTRY_CD),'')=D.ORIG_CNTRY_INFO_TXT   
WHERE D.POSTL_ADDR_ID IS NOT NULL
AND COALESCE(NULLIF(ORIG_STRET_NUM,' '),NULLIF(ORIG_STRET_NAME,' '),NULLIF(ORIG_APT_NUM,' '),NULLIF(ORIG_PO_BOX_NUM,' '),'')='') D
SET POSTL_ADDR_ID=D.POSTL_ADDR_ID,
LAT_MEAS = D.LAT_MEAS,
LONG_MEAS= D.LONG_MEAS
WHERE $DATABASENAME.STORE_STG.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
where PROCESS_NAME='Staging RETLR Load'
and status='In Progress')
AND $DATABASENAME.STORE_STG.STORE_NAME=D.STORE_NAME
AND $DATABASENAME.STORE_STG.RETLR_NAME=D.RETLR_NAME
AND $DATABASENAME.STORE_STG.PARENT_RETLR_NAME=D.PARENT_RETLR_NAME
AND $DATABASENAME.STORE_STG.LOAD_ID=D.LOAD_ID
AND $DATABASENAME.STORE_STG.LOAD_TS=D.LOAD_TS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Staging RETLR Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

.QUIT ERRORCODE

.LABEL WARN
.QUIT 0
