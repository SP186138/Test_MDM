/***********************************************************************************************************
SCRIPT:               Consumer Validation.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        Change OF Failure-BadFile
3.00                 10/31/2011           TERADATA                        Removal of Deletes as  part of ||elism
4.00                 03/26/2012		  TERADATA                        Made change in insert to LOAD_INFO to
                                                                          manipulate LA data
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;

SEL LOAD_ID FROM MDM_LOAD_CONTROL
WHERE LOAD_ID NOT IN (SEL LOAD_ID FROM LOAD_INFO);
.IF ACTIVITYCOUNT = 0 THEN .QUIT 0

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
ERR1.LOAD_ID,
'Validations',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
$BTCH
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN LOAD_INFO LOAD1
ON ERR1.LOAD_ID = LOAD1.LOAD_ID
WHERE LOAD1.LOAD_ID IS NULL
GROUP BY
ERR1.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE VOLATILE TABLE VALIDATIONS_LOAD_NBR
AS 
(

SELECT LC.LOAD_ID,LC.SOURCE_ID
FROM MDM_LOAD_CONTROL LC

INNER JOIN LOAD_INFO LII
ON LC.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Validations'
AND LII.STATUS = 'In Progress'
AND LII.BATCH_ID = $BTCH
GROUP BY 1,2
)
WITH DATA
PRIMARY INDEX ( LOAD_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE MULTISET VOLATILE TABLE ERR_PRSNA_STG_TMP ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
      MKTNG_PGM_NBR INTEGER NOT NULL,
      REGIS_CNSMR_ID_VAL VARCHAR(1000) CHARACTER SET UNICODE NOT CASESPECIFIC NOT NULL,
      USER_NAME VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      PRSNA_REG_DT TIMESTAMP(0),
      NAME_PREFX_TXT CHAR(5) CHARACTER SET UNICODE NOT CASESPECIFIC,
      GVN_NAME VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      MID_NAME VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      FAMLY_NAME VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      NAME_SUFFX_TXT CHAR(5) CHARACTER SET UNICODE NOT CASESPECIFIC,
      FULL_NAME VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      GENDR_IND CHAR(1) CHARACTER SET UNICODE NOT CASESPECIFIC,
      BRTH_DATE DATE FORMAT 'YY/MM/DD',
      LANG_CODE CHAR(5) CHARACTER SET UNICODE NOT CASESPECIFIC,
      PRSNA_STTUS_CODE CHAR(2) CHARACTER SET UNICODE NOT CASESPECIFIC,
      RECORD_IND CHAR(1) CHARACTER SET UNICODE NOT CASESPECIFIC,
      LYLTY_PGM_NBR SMALLINT,
      LYLTY_ACCT_NUM VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,
      LOYALTY_ACCT_ID VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC,
      LOAD_ID DECIMAL(18,0),
      LOAD_TS TIMESTAMP(0),
      MDM_LOAD_IND CHAR(2) CHARACTER SET UNICODE NOT CASESPECIFIC,
      WIN_KEY VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYNC_STATUS VARCHAR(15) CHARACTER SET UNICODE NOT CASESPECIFIC,
      CNTRY_CODE CHAR(5) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_TARGET_ID INTEGER,
      SYS_AUTH_ID VARCHAR(25) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_SOURCE VARCHAR(25) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_ERROR_TIME TIMESTAMP(0),
      SYS_ERR_SVRTY VARCHAR(30) CHARACTER SET UNICODE NOT CASESPECIFIC ,
      SYS_NC_TYPE VARCHAR(25) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_DOCUMENT VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_LOAD_ID VARCHAR(32) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_WORKFLOW_ID VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC,
      SYS_ERR_CODE VARCHAR(100) CHARACTER SET UNICODE NOT CASESPECIFIC)
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL ,LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,

DER.LOAD_ID,
'MISSING LEGAL ENTITY NUMBER IN MARKETING PROGRAM ENTITY' SYS_ERR_CODE
FROM
(
SELECT 
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_STG STG
LEFT OUTER JOIN MKTNG_PGM MKTNG_PGM_1
ON STG.MKTNG_PGM_NBR = MKTNG_PGM_1.MKTNG_PGM_NBR
WHERE MKTNG_PGM_1.MKTNG_PGM_NBR IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3
)DER;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;




/* VALIDATION FOR SAME CATEG CODE COMING TWICE */ 


INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,

DER.LOAD_ID,
'EMAIL ADDRESS HAVING SAME CATEGORY CODE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'PHONE HAVING SAME CATEGORY CODE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_PHONE_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'SOCIAL HAVING SAME CATEGORY CODE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



/* VALIDATION FOR CHECKING CATEG CODE VALUES FROM ATT VALUES TABLE */

INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID CATEGORY CODE VALUE FOR EMAIL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM ATTRIBUTE_VALUES A
INNER JOIN ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$EMAIL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
)DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,

DER3.LOAD_ID,
'NOT A VALID CATEGORY CODE VALUE FOR PHONE' 
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_PHONE_STG STG
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM ATTRIBUTE_VALUES A
INNER JOIN ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$PHONE
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
)DER3;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,

DER4.LOAD_ID,
'NOT A VALID CATEGORY CODE VALUE FOR POSTAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_POSTL_ADDR_STG STG
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM ATTRIBUTE_VALUES A
INNER JOIN ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$POSTL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
)DER4;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,

DER4.LOAD_ID,
'NOT A VALID CATEGORY CODE VALUE FOR SOCIAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM ATTRIBUTE_VALUES A
INNER JOIN ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION=$SOCIAL
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
)DER4;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



/* RECORDS HAVING MORE THEN TWO POSTAL/EMAIL/PHONE */

INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
TEMP.MKTNG_PGM_NBR,
TEMP.REGIS_CNSMR_ID_VAL,

TEMP.LOAD_ID,
'TOO MANY VALUES IN POSTAL' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
     --  ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_POSTL_ADDR_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4
HAVING COUNT(*) > 2)TEMP;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,

TEMP1.LOAD_ID,
'TOO MANY VALUES IN PHONE' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
  --     ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_PHONE_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4
HAVING COUNT(*) > 3)TEMP1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
TEMP3.MKTNG_PGM_NBR,
TEMP3.REGIS_CNSMR_ID_VAL,

TEMP3.LOAD_ID,
'TOO MANY VALUES IN EMAIL' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
   --    ,STG.LOAD_TS
       ,RECORD_IND
FROM $ETL_DB.PRSNA_EMAIL_ADDR_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4
HAVING COUNT(*) > 3)TEMP3;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;




/* RECORDS WITH INVALID CONTACT INDICATOR */

INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,

TEMP1.LOAD_ID,
'CNTCT_OPTN_IND NOT VALID' SYS_ERR_CODE
FROM
(
SELECT	
  PRSNA_STG_1.MKTNG_PGM_NBR
 ,PRSNA_STG_1.REGIS_CNSMR_ID_VAL  
 ,PRSNA_STG_1.LOAD_ID
FROM	$ETL_DB.PRSNA_STG PRSNA_STG_1
 LEFT OUTER  JOIN $ETL_DB.CNTCT_OPTN_CHCE_STG B    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=B.LOAD_ID
	AND B.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION=$EMAIL
                                                       OR B.AV_DESCRIPTION=$PHONE
                                                       OR B.AV_DESCRIPTION=$POSTL
                                                       OR B.AV_DESCRIPTION=$SOCIAL)
WHERE B.CNTCT_OPTN_IND IS NULL 
AND PRSNA_STG_1.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
)TEMP1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 

/* FAILED RECORDS FOR AGE */

INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,

DER5.LOAD_ID,
'FAILED BECAUSE OF AGE VALIDATION' SYS_ERR_CODE
FROM
(
   SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL, (CURRENT_DATE - CAST(BRTH_DATE AS DATE)) YEAR(4) AS AGE,
   STG.LOAD_ID
FROM $ETL_DB.PRSNA_STG STG
INNER JOIN
AGE_MIN_MAX M
ON
STG.CNTRY_NAME = M.COUNTRY
LEFT OUTER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
C.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
C.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND STG.LOAD_ID = C.LOAD_ID
WHERE
((AGE >= M.MIN_AGE AND AGE < M.MAX_AGE
AND
(C.GUARDN_CNSNT_IND IN('N',NULL)
OR
C.GUARDN_NAME IS NULL))
OR
(CURRENT_DATE - CAST(BRTH_DATE AS DATE)) <= 0)
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER5
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,

DER5.LOAD_ID,
'NO VALID CONTACT POINT' SYS_ERR_CODE
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID
FROM $ETL_DB.PRSNA_STG STG
 
 LEFT OUTER  JOIN $ETL_DB.PRSNA_EMAIL_ADDR_STG B1    
	ON	STG.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=B1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=B1.LOAD_ID
	AND     STG.RECORD_IND=B1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_PHONE_STG C1    
	ON	STG.MKTNG_PGM_NBR=C1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=C1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=C1.LOAD_ID
	AND     STG.RECORD_IND=C1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_POSTL_ADDR_STG D1    
	ON	STG.MKTNG_PGM_NBR=D1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=D1.REGIS_CNSMR_ID_VAL		
	AND     STG.LOAD_ID=D1.LOAD_ID
	AND     STG.RECORD_IND=D1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG E1    
	ON	STG.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=E1.REGIS_CNSMR_ID_VAL		
	AND     STG.LOAD_ID=E1.LOAD_ID
	AND     STG.RECORD_IND=E1.RECORD_IND
WHERE B1.MKTNG_PGM_NBR IS NULL
AND C1.MKTNG_PGM_NBR IS NULL
AND D1.MKTNG_PGM_NBR IS NULL
AND E1.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
) DER5
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 

/* VALIDATION TO CHECK DUPLICATE RECORDS */


INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'DUPLICATE TRAIT INFORMATION ON SOURCE FILE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
TRT_NBR,
PRSNA_TRT_SEQ_NBR,
STG.LOAD_ID,
RECORD_IND
FROM
$ETL_DB.PRSNA_TRT_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5,6
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'DUPLICATE DEPENDENT INFORMATION ON SOURCE FILE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
DPEND_SEQ_NBR,
STG.LOAD_ID,
RECORD_IND
FROM
$ETL_DB.DPEND_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)	
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'DUPLICATE DEPENDENT TRAIT INFORMATION ON SOURCE FILE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
DPEND_TRT_SEQ_NBR,
TRT_NBR,
DPEND_SEQ_NBR,
STG.LOAD_ID,
RECORD_IND
FROM
$ETL_DB.DPEND_TRT_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5,6,7
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'DUPLICATE PET INFORMATION ON SOURCE FILE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
PET_SEQ_NBR,
STG.LOAD_ID,
RECORD_IND
FROM
$ETL_DB.PET_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,

DER1.LOAD_ID,
'DUPLICATE PET TRAIT INFORMATION ON SOURCE FILE' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
PET_TRT_SEQ_NBR,
TRT_ID,
PET_SEQ_NBR,
STG.LOAD_ID,
RECORD_IND
FROM
$ETL_DB.PET_TRT_STG STG
WHERE LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
GROUP BY 1,2,3,4,5,6,7
HAVING COUNT(*) >1
)DER1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



/* NEW VALIDATION FOR MARKETING PROGRAM - TRAIT ASSOCIATION && INVALID TRAIT VALUES*/
/*
INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID TRAIT NUMBER FOR MARKETING PROGRAM' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_TRT_STG E
WHERE (E.MKTNG_PGM_NBR, E.TRT_NBR) NOT IN
(
SEL MKTNG_PGM_NBR,TRT_NBR 
FROM MKTNG_PGM_TRAIT_MAP 
)
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID TRAIT TEXT' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_TRT_STG E

WHERE (COALESCE(E.PRSNA_TRT_TXT,TRIM(CAST(E.PRSNA_TRT_INTEGER AS VARCHAR(100)))),E.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_TXT,TRT_NBR 
FROM PREDFND_TRT_VAL 
)AND E.PRSNA_TRT_DATE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

*/
/*
INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID TRAIT INTEGER' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_TRT_STG E

WHERE (TRIM(CAST(E.PRSNA_TRT_INTEGER AS VARCHAR(100))),E.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_TXT,TRT_NBR 
FROM PREDFND_TRT_VAL 
)
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


*/
/*
INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID TRAIT DATE' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_TRT_STG E

WHERE (E.PRSNA_TRT_DATE,E.TRT_NBR) NOT IN
(
SEL PREDFND_TRT_DATE,TRT_NBR 
FROM PREDFND_TRT_VAL 
)
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


*/
/*
INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,

DER2.LOAD_ID,
'NOT A VALID EMAIL OPTION NUMBER FOR MARKETING PROGRAM' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_EMAIL_ADDR_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='E'

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='E'
)
AND E.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER2;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;





INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,

DER3.LOAD_ID,
'NOT A VALID PHONE OPTION NUMBER FOR MARKETING PROGRAM' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_PHONE_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='P'

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='P'
)
AND E.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER3;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;





INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,

DER4.LOAD_ID,
'NOT A VALID POSTAL OPTION NUMBER FOR MARKETING PROGRAM' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_POSTL_ADDR_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='A'

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='A'
)
AND E.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER4;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO ERR_PRSNA_STG_TMP (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, LOAD_ID, SYS_ERR_CODE)
SELECT
DISTINCT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,

DER5.LOAD_ID,
'NOT A VALID SOCIAL OPTION NUMBER FOR MARKETING PROGRAM' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL,
E.LOAD_ID
FROM
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG E
INNER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
E.LOAD_ID = C.LOAD_ID
AND
C.CNTCT_POINT_TYPE_CODE='S'

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='S'
)
AND E.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR))DER5;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


*/



/* UPDATE ERR_PRSNA_STG */

INSERT INTO ERR_PRSNA_STG_CURR_LOAD
(MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,USER_NAME
,PRSNA_REG_DT 
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME 
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,PRSNA_STTUS_CODE
,RECORD_IND 
,LYLTY_ACCT_NUM
,LYLTY_PGM_NBR
,LOAD_ID 
,LOAD_TS 
,MDM_LOAD_IND
,SYS_TARGET_ID
,SYS_SOURCE
,SYS_NC_TYPE
,SYS_ERROR_TIME
,SYS_ERR_CODE
,SYS_DOCUMENT
,CNTRY_CODE
)
SELECT DISTINCT
ERR1.MKTNG_PGM_NBR,
ERR1.REGIS_CNSMR_ID_VAL,
ERR1.USER_NAME,
CAST(CAST(ERR1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)),
ERR1.NAME_PREFX_TXT,
ERR1.GVN_NAME,
ERR1.MID_NAME,
ERR1.FAMLY_NAME,
ERR1.NAME_SUFFX_TXT,
ERR1.FULL_NAME,
ERR1.GENDR_IND,
ERR1.BRTH_DATE,
ERR1.LANG_CODE,
ERR1.PRSNA_STTUS_CODE,
ERR1.RECORD_IND,
ERR1.LYLTY_ACCT_NUM,
ERR1.LYLTY_PGM_NBR,
ERR1.LOAD_ID,
ERR1.LOAD_TS,
ERR1.MDM_LOAD_IND,
0,
TRIM(CAST(ERR1.LOAD_ID AS INTEGER)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
ERR1.LOAD_TS,
ERR.SYS_ERR_CODE,
ERR.SYS_DOCUMENT,
ERR1.CNTRY_NAME
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN ERR_PRSNA_STG_TMP ERR
ON ERR.MKTNG_PGM_NBR = ERR1.MKTNG_PGM_NBR
AND ERR.REGIS_CNSMR_ID_VAL = ERR1.REGIS_CNSMR_ID_VAL
AND ERR.LOAD_ID = ERR1.LOAD_ID
AND ERR1.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



DELETE FROM ERR_PRSNA_STG_CURR_LOAD WHERE SYS_NC_TYPE IS NULL
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;




/* INSERT INTO MST STAGE */

INSERT INTO CNSMR_AFFLTN_STG
(
MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
CNSMR_GRP_NBR, 
AFFLTN_START_DATE, 
AFFLTN_END_DATE, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE
)
SELECT 
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.CNSMR_GRP_NBR, 
STG.AFFLTN_START_DATE, 
STG.AFFLTN_END_DATE, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM $ETL_DB.CNSMR_AFFLTN_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO DPEND_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
DPEND_SEQ_NBR, 
DPEND_NAME, 
DPEND_GENDR_IND, 
DPEND_BRTH_DATE, 
DPEND_AGE_NBR, 
DPEND_TYPE_CODE, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE
)
SELECT
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.DPEND_SEQ_NBR, 
STG.DPEND_NAME, 
STG.DPEND_GENDR_IND, 
STG.DPEND_BRTH_DATE, 
STG.DPEND_AGE_NBR, 
STG.DPEND_TYPE_CODE, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM $ETL_DB.DPEND_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
AND EXTRACT(YEAR FROM STG.DPEND_BRTH_DATE) <> 1900
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO DPEND_TRT_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
DPEND_SEQ_NBR, 
TRT_NBR, 
DPEND_TRT_DATE, 
DPEND_TRT_INTEGER, 
DPEND_TRT_TXT,
DPEND_TRT_SEQ_NBR, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE
)
SELECT
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.DPEND_SEQ_NBR, 
STG.TRT_NBR, 
STG.DPEND_TRT_DATE, 
STG.DPEND_TRT_INTEGER, 
STG.DPEND_TRT_TXT,
STG.DPEND_TRT_SEQ_NBR, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND ,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM $ETL_DB.DPEND_TRT_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO PET_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
PET_SEQ_NBR, 
PET_NAME, 
PET_GENDR_IND, 
PET_BRTH_DATE, 
PET_AGE_NBR, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE
)
SELECT 
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.PET_SEQ_NBR, 
STG.PET_NAME, 
STG.PET_GENDR_IND, 
STG.PET_BRTH_DATE,
STG.PET_AGE_NBR, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM $ETL_DB.PET_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PET_TRT_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
PET_SEQ_NBR, 
TRT_ID, 
PET_TRT_DATE, 
PET_TRT_INTEGRE, 
PET_TRT_TXT, 
PET_TRT_SEQ_NBR, 
RECORD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE
)
SELECT 
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.PET_SEQ_NBR, 
STG.TRT_ID, 
STG.PET_TRT_DATE, 
STG.PET_TRT_INTEGRE, 
STG.PET_TRT_TXT, 
STG.PET_TRT_SEQ_NBR, 
STG.RECORD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER))
FROM $ETL_DB.PET_TRT_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT	INTO PRSNA_EMAIL_ADDR_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
CNTCT_POINT_CATEG_CODE,
EMAIL_ADDR_TXT, 
EMAIL_FORMT_CODE, 
PREFR_IND, 
VALID_IND, 
RECORD_IND,
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
CNTCT_OPTN_NBR,
CNTCT_OPTN_IND, 
CNSMR_CHCE_DATETM,
GUARDN_NAME, 
GUARDN_EMAIL_ADDR_TXT, 
GUARDN_CNSNT_IND, 
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE )
SELECT	
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.CNTCT_POINT_CATEG_CODE, 
STG.EMAIL_ADDR_TXT,
STG.EMAIL_FORMT_CODE, 
CASE WHEN (PREFR_IND NOT IN ('N','Y') OR PREFR_IND IS NULL)
                     THEN 'Y' 
                     ELSE PREFR_IND
                 END, 
CASE WHEN (VALID_IND NOT IN ('N','Y') OR VALID_IND IS NULL)
                  THEN 'Y'
                  ELSE VALID_IND
              END, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
C.CNTCT_OPTN_NBR, 
CASE WHEN CNTCT_OPTN_IND = 'Y'
                       THEN 'I'
                       WHEN CNTCT_OPTN_IND = 'N'
                       THEN 'O'
                       ELSE CNTCT_OPTN_IND
                   END,
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)), 
C.GUARDN_NAME, 
C.GUARDN_EMAIL_ADDR_TXT, 
C.GUARDN_CNSNT_IND, 
C.ACNLGMT_DATE,
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM	
$ETL_DB.PRSNA_EMAIL_ADDR_STG STG
LEFT OUTER JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$EMAIL)
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL
 IS NULL))
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PRSNA_PHONE_STG
(MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
PHONE_CNTRY_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_LINE_NBR,
PHONE_EXTSN_NUM,
FULL_PHONE_NUM,
SMS_PREFR_IND,
SMS_AVAIL_START_TIME,
SMS_AVAIL_END_TIME,
PREFR_IND,
VALID_IND,
RECORD_IND,
LOAD_ID,
LOAD_TS,
MDM_LOAD_IND,
SYNC_STATUS,
CNTCT_OPTN_IND,
CNTCT_OPTN_NBR,
CNSMR_CHCE_DATETM,
GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND,
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE )
SELECT
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL,
STG.CNTCT_POINT_CATEG_CODE,
STG.PHONE_CNTRY_NBR,
STG.PHONE_AREA_NBR,
STG.PHONE_EXCHG_NBR,
STG.PHONE_LINE_NBR,
STG.PHONE_EXTSN_NUM,
STG.FULL_PHONE_NUM,
STG.SMS_PREFR_IND,
CAST(CAST(STG.SMS_AVAIL_START_TIME AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(CAST(STG.SMS_AVAIL_END_TIME AS VARCHAR(19)) AS TIMESTAMP(0)),
CASE WHEN (PREFR_IND NOT IN ('N','Y') OR PREFR_IND IS NULL)
                     THEN 'Y' 
                     ELSE PREFR_IND
                 END,
CASE WHEN (VALID_IND NOT IN ('N','Y') OR VALID_IND IS NULL)
                  THEN 'Y'
                  ELSE VALID_IND
              END,
STG.RECORD_IND,
STG.LOAD_ID,
STG.LOAD_TS,
STG.MDM_LOAD_IND,
'VALIDATED',
CASE WHEN CNTCT_OPTN_IND = 'Y'
                       THEN 'I'
                       WHEN CNTCT_OPTN_IND = 'N'
                       THEN 'O'
                       ELSE CNTCT_OPTN_IND
                   END,
C.CNTCT_OPTN_NBR,
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)),
C.GUARDN_NAME,
C.GUARDN_EMAIL_ADDR_TXT,
C.GUARDN_CNSNT_IND,
C.ACNLGMT_DATE,
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM
$ETL_DB.PRSNA_PHONE_STG STG
LEFT OUTER  JOIN
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$PHONE)
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL
 IS NULL))
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PRSNA_POSTL_ADDR_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
CNTCT_POINT_CATEG_CODE,
ADDR_LINE_1_TXT, 
ADDR_LINE_2_TXT, 
ADDR_LINE_3_TXT, 
STRET_NUM,
STRET_NAME, 
APT_NUM, 
PO_BOX_NUM, 
CITY_NAME, 
TERR_NAME, 
POSTL_AREA_CODE,
GEOC_AREA_TYPE_CODE, 
GEOC_AREA_NAME, 
CNTRY_NAME, 
PREFR_IND, 
VALID_IND, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,	
CNTCT_OPTN_IND,
CNTCT_OPTN_NBR, 
CNSMR_CHCE_DATETM, 
GUARDN_NAME, 
GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND, 
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE )
SELECT
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.CNTCT_POINT_CATEG_CODE, 
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT, 
STG.ADDR_LINE_3_TXT, 
STG.STRET_NUM, 
STG.STRET_NAME, 
STG.APT_NUM, 
STG.PO_BOX_NUM, 
STG.CITY_NAME, 
STG.TERR_NAME,
STG.POSTL_AREA_CODE, 
STG.GEOC_AREA_TYPE_CODE, 
STG.GEOC_AREA_NAME, 
STG.CNTRY_NAME, 
CASE WHEN (PREFR_IND NOT IN ('N','Y') OR PREFR_IND IS NULL)
                     THEN 'Y' 
                     ELSE PREFR_IND
                 END, 
CASE WHEN (VALID_IND NOT IN ('N','Y') OR VALID_IND IS NULL)
                  THEN 'Y'
                  ELSE VALID_IND
              END, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
CASE WHEN CNTCT_OPTN_IND = 'Y'
                       THEN 'I'
                       WHEN CNTCT_OPTN_IND = 'N'
                       THEN 'O'
                       ELSE CNTCT_OPTN_IND
                   END,
C.CNTCT_OPTN_NBR, 
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)), 
C.GUARDN_NAME, 
C.GUARDN_EMAIL_ADDR_TXT, 
C.GUARDN_CNSNT_IND,
C.ACNLGMT_DATE,
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM	
$ETL_DB.PRSNA_POSTL_ADDR_STG STG
LEFT OUTER JOIN 
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$POSTL)
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL
 IS NULL))
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PRSNA_SOC_NETWK_ACCT_STG	
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
CNTCT_POINT_CATEG_CODE,   
SOCIAL_NETWK_ACCT_ID_VAL, 
PREFR_IND, 
VALID_IND, 
RECORD_IND, 
LOAD_ID, 		
LOAD_TS, 
MDM_LOAD_IND, 
SYNC_STATUS,
CNTCT_OPTN_NBR, 
CNTCT_OPTN_IND, 
CNSMR_CHCE_DATETM, 		
GUARDN_NAME, 
GUARDN_EMAIL_ADDR_TXT, 
GUARDN_CNSNT_IND, 
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE )
SELECT  
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.CNTCT_POINT_CATEG_CODE, 
STG.SOCIAL_NETWK_ACCT_ID_VAL,    
CASE WHEN (PREFR_IND NOT IN ('N','Y') OR PREFR_IND IS NULL)
                     THEN 'Y' 
                     ELSE PREFR_IND
                 END, 
CASE WHEN (VALID_IND NOT IN ('N','Y') OR VALID_IND IS NULL)
                  THEN 'Y'
                  ELSE VALID_IND
              END, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND, 
'VALIDATED',
C.CNTCT_OPTN_NBR, 
CASE WHEN CNTCT_OPTN_IND = 'Y'
                       THEN 'I'
                       WHEN CNTCT_OPTN_IND = 'N'
                       THEN 'O'
                       ELSE CNTCT_OPTN_IND
                   END,
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)),   
C.GUARDN_NAME, 
C.GUARDN_EMAIL_ADDR_TXT, 
C.GUARDN_CNSNT_IND, 
C.ACNLGMT_DATE,
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM	
$ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG STG
LEFT OUTER JOIN 
$ETL_DB.CNTCT_OPTN_CHCE_STG C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION=$SOCIAL)
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL
 IS NULL))
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PRSNA_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
USER_NAME, 
PRSNA_REG_DT, 
NAME_PREFX_TXT, 
GVN_NAME, 
MID_NAME, 
FAMLY_NAME, 
NAME_SUFFX_TXT, 
FULL_NAME, 
GENDR_IND, 
BRTH_DATE, 
LANG_CODE, 
PRSNA_STTUS_CODE, 
RECORD_IND,  
LYLTY_ACCT_NUM,
LYLTY_PGM_NBR,
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE,
CNTRY_CODE
)
SELECT 
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.USER_NAME, 
CAST(CAST(STG.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)), 
STG.NAME_PREFX_TXT, 
STG.GVN_NAME, 
STG.MID_NAME, 
STG.FAMLY_NAME, 
STG.NAME_SUFFX_TXT, 
STG.FULL_NAME, 
CASE WHEN STG.GENDR_IND NOT IN ('F','U','M')
OR STG.GENDR_IND IS NULL
THEN 'U'
ELSE STG.GENDR_IND
END, 
STG.BRTH_DATE, 
STG.LANG_CODE, 
STG.PRSNA_STTUS_CODE, 
STG.RECORD_IND, 
STG.LYLTY_ACCT_NUM,
STG.LYLTY_PGM_NBR,
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS,
STG.CNTRY_NAME
FROM $ETL_DB.PRSNA_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
INSERT INTO PRSNA_TRT_STG
(MKTNG_PGM_NBR, 
REGIS_CNSMR_ID_VAL, 
TRT_NBR, 
PRSNA_TRT_SEQ_NBR, 
PRSNA_TRT_DATE, 
PRSNA_TRT_INTEGER,
PRSNA_TRT_TXT, 
RECORD_IND, 
LOAD_ID, 
LOAD_TS, 
MDM_LOAD_IND,
SYNC_STATUS,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE
)
SELECT 
STG.MKTNG_PGM_NBR, 
STG.REGIS_CNSMR_ID_VAL, 
STG.TRT_NBR, 
STG.PRSNA_TRT_SEQ_NBR, 
STG.PRSNA_TRT_DATE,  
STG.PRSNA_TRT_INTEGER, 
STG.PRSNA_TRT_TXT, 
STG.RECORD_IND, 
STG.LOAD_ID, 
STG.LOAD_TS, 
STG.MDM_LOAD_IND,
'VALIDATED',
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER))D,
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM $ETL_DB.PRSNA_TRT_STG STG
LEFT OUTER JOIN ERR_PRSNA_STG_CURR_LOAD ERR
ON
STG.MKTNG_PGM_NBR = ERR.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = ERR.REGIS_CNSMR_ID_VAL
AND
STG.LOAD_ID = ERR.LOAD_ID
INNER JOIN LOAD_CONTROL B
ON STG.LOAD_ID=B.LOAD_ID
AND B.LOAD_TYPE='ETL'
WHERE ERR.MKTNG_PGM_NBR IS NULL
AND STG.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE STATS_CNT
FROM (SEL COUNT(*) AS CNT FROM PRSNA_STG) B
SET CURRENT_CNT=B.CNT
,PREVIOUS_CNT=CURRENT_CNT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

SEL 1 FROM STATS_CNT
WHERE ABS(((CURRENT_CNT-PREVIOUS_CNT)/CURRENT_CNT)*100) < 10;
.IF ACTIVITYCOUNT > 0 THEN .GOTO VALID

COLLECT STATS ON ERR_PRSNA_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON ERR_PRSNA_STG_CURR_LOAD;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON CNSMR_AFFLTN_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON DPEND_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON DPEND_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PET_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PET_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_EMAIL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_PHONE_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_POSTL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_SOC_NETWK_ACCT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON PRSNA_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL VALID


SEL 1
FROM VALIDATIONS_LOAD_NBR A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM $ETL_DB.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG_CURR_LOAD
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100
;
.IF ACTIVITYCOUNT > 0 THEN .GOTO ERR1


.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

/*
UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Failure'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Validations'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
;
*/
.QUIT ERRORCODE

.LABEL WARN

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Validations'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
AND $DATABASENAME.LOAD_INFO.LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
CNTRY_NAME,
BATCH_ID) 
SELECT
ERR1.LOAD_ID,
'Trillium',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'Ready to Process',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CASE WHEN SUBSTR(MP.MKTNG_PGM_DESC,1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
ELSE SUBSTR(MP.MKTNG_PGM_DESC,1,3)
END AS CNTRY,
LI.BATCH_ID
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN MKTNG_PGM MP
ON ERR1.MKTNG_PGM_NBR = MP.MKTNG_PGM_NBR
INNER JOIN $DBNAME.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Validations'
AND LI.STATUS = 'Success'
INNER JOIN VALIDATIONS_LOAD_NBR VLN
ON LOAD.LOAD_ID = VLN.LOAD_ID
LEFT OUTER JOIN LOAD_INFO LII
ON LOAD.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Trillium'

WHERE LII.LOAD_ID IS NULL
GROUP BY
ERR1.LOAD_ID,
CNTRY,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.QUIT 0

.LABEL ERR1

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Failure-BadFile'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
,PROCESS_NAME='Validations-BadFile'
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Validations'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
AND $DATABASENAME.LOAD_INFO.LOAD_ID IN (
SELECT
A.LOAD_ID

FROM MDM_LOAD_CONTROL A

INNER JOIN VALIDATIONS_LOAD_NBR VLN
ON A.LOAD_ID = VLN.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM $ETL_DB.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG_CURR_LOAD
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100

GROUP BY
A.LOAD_ID
)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE VT_RPT_LOAD_NBR
AS 
(
SELECT 
CAST (A.LOAD_ID AS INTEGER) AS LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0) AS MKTNG_PGM_NBR
,COUNT(DISTINCT B.REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM 
(

SELECT A.LOAD_ID 
FROM
(
SELECT LOAD_ID
FROM LOAD_CONTROL  
WHERE LOAD_TYPE = 'ETL'
AND LOADSTATUS = 'SUCCESS'
AND FORMAT_ID = 1
AND MDM_PROCESS_DESC='COMPLETED'
AND TARGETCNT > 0	
) A

INNER JOIN MDM_LOAD_CONTROL LC
ON A.LOAD_ID = LC.LOAD_ID

INNER JOIN LOAD_INFO LI
ON A.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Validations-BadFile'
AND LI.STATUS = 'Failure-BadFile'

INNER JOIN VALIDATIONS_LOAD_NBR VLN
ON A.LOAD_ID = VLN.LOAD_ID

GROUP BY 1
)A

LEFT OUTER JOIN PRSNA_STG_CNT B
ON A.LOAD_ID = B.LOAD_ID	
GROUP BY 1,2 
)
WITH DATA
PRIMARY INDEX ( LOAD_ID, MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
, MKTNG_PGM_NBR
, LEGAL_ENT_NBR
, STAGING_NBR
, ERROR_NBR
, ACTIVE_NBR
, DUPLICATE_NBR
, PHONE_OPT_IN
, PHONE_OPT_OUT
, EMAIL_OPT_IN
, EMAIL_OPT_OUT
, POSTAL_OPT_IN
, POSTAL_OPT_OUT
, SOCIAL_OPT_IN
, SOCIAL_OPT_OUT
)
SELECT 
B.LOAD_ID
,	B.MKTNG_PGM_NBR
,	COALESCE(C.LEGAL_ENT_NBR,0)
,	B.STAGING_NBR
,	COALESCE(N.ERROR_NBR,0)
,	COALESCE(D.ACTIVE_NBR,0)
,	COALESCE(D.DUPLICATE_NBR,0)
,	COALESCE(E.PHONE_OPT_IN,0)
,	COALESCE(E.PHONE_OPT_OUT,0)
,	COALESCE(F.EMAIL_OPT_IN,0)
,	COALESCE(F.EMAIL_OPT_OUT,0)
,	COALESCE(G.POSTAL_OPT_IN,0)
,	COALESCE(G.POSTAL_OPT_OUT,0)
,	COALESCE(H.SOCIAL_OPT_IN,0)
,	COALESCE(H.SOCIAL_OPT_OUT,0)
FROM
VT_RPT_LOAD_NBR B

LEFT OUTER JOIN
MKTNG_PGM C
ON B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'AC' THEN REGIS_PRSNA_ID ELSE NULL END ) ACTIVE_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'DP' THEN REGIS_PRSNA_ID ELSE NULL END ) DUPLICATE_NBR
FROM REGIS_PRSNA R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
GROUP BY 1,2
) D
ON B.LOAD_ID = D.SYS_SOURCE
AND B.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) E
ON B.LOAD_ID = E.SYS_SOURCE
AND B.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON B.LOAD_ID = F.SYS_SOURCE
AND B.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON B.LOAD_ID = G.SYS_SOURCE
AND B.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NET_ACCT R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON B.LOAD_ID = H.SYS_SOURCE
AND B.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT E.LOAD_ID, E.MKTNG_PGM_NBR, COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG_CURR_LOAD E, VT_RPT_LOAD_NBR V
WHERE E.LOAD_ID		= V.LOAD_ID
AND E.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

 INSERT INTO ERR_PRSNA_STG
 (MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 )
SELECT DISTINCT
A.MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,A.LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 FROM
 ERR_PRSNA_STG_CURR_LOAD A
 INNER JOIN VT_RPT_LOAD_NBR B
 ON A.LOAD_ID = B.LOAD_ID
 ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM ERR_PRSNA_STG_CURR_LOAD
WHERE LOAD_ID IN (SELECT LOAD_ID FROM
LOAD_INFO 
WHERE PROCESS_NAME='Validations'
AND STATUS = 'In Progress'
)
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM LOAD_INFO 
WHERE PROCESS_NAME='Validations'
AND STATUS = 'In Progress'
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATIONS_LOAD_NBR)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.QUIT 2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    