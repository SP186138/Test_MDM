/***********************************************************************************************************
SCRIPT:               TSS_OPTOUT_OUTPUT.BTEQ 
DESCRIPTION:          This script loads the TSS_OPTOUT_OUTPUT table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM OPTOUT SCRIPT
INPUT:                TRILLIUM OPTOUT FILE
OUTPUT:               OPTOUT TRIGGER
ERRORS: 
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 03/26/2012           TERADATA                        INITIAL VERSION
5.0                  12/18/2013           TERADATA                        INTEGRATION CHANGES TO USE I2 
                                                                          TRILLIUM PROJECTS
5.0.1                04/11/2014           TERADATA                        RELEASE 5.0.1 PRB0041004
5.1                  04/21/2014           TERADATA                        RELEASE 5.1
                                                                          UPDATE TO OPT_OUT_NOT_FOUND
5.1.1                06/27/2014           TERADATA                        1. Release 5.1.1 BR175   
5.4                  04/07/2015           TERADATA                        RELEASE 5.4
                                                                          Addition of new countries ISR,EGY,ROU,AFR
5.5                  06/19/2015           TERADATA                        RELEASE 5.5
                                                                          Addition of new countries CZE,BGR,PAK,HRV
5.7                  02/29/2016           TERADATA                        Release 5.7 - Update POSTL_ADDR_ID
                                                                          in case of external standardization
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i60;Stage=MDM;Step=TrilliumOutput;' FOR SESSION; 
UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='OPTOUT Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Staging OptOut Load',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
LI.BATCH_ID
FROM MDM_LOAD_CONTROL_OPTOUT LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='OPTOUT Load'
AND LI.STATUS = 'Success'
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS OPTOUT_TRIGGER
COLUMN(OPTOUT_ID,LOAD_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


CREATE VOLATILE TABLE V_INPUT AS
(SEL 
A.OPTOUT_ID,
A.ADDR_LINE_1_TXT,
A.ADDR_LINE_2_TXT,
A.ADDR_LINE_3_TXT,
A.CITY_NAME,
A.POSTL_AREA_CODE,
A.LOAD_ID,
A.LOAD_TS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR_NAME
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.CNTRY_NAME
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE 
FROM OPTOUT_TRIGGER A
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR_NAME = TR.TERR
AND A.CNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.CNTRY_NAME = CR.CNTRY
)
WITH DATA
PRIMARY INDEX (OPTOUT_ID,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT.CITY_NAME
                 END                 
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')) 
AND V_INPUT.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE V_INPUT.CITY_NAME = C.CITY_NAME --PRB0041004
WHERE (V_INPUT.CITY_NAME = C.CITY_NAME--PRB0041004
OR V_INPUT.CITY_NAME = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT.CITY_CODE),'') IS NULL
AND V_INPUT.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT.TERR_CODE = T.TERR_CODE;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.REG_OPT_OUT_STG
FROM V_INPUT B
SET ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT
,CITY_NAME=B.CITY_NAME
,TERR_NAME=B.TERR_NAME
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,CNTRY_CODE=B.CNTRY_NAME
WHERE B.LOAD_ID=$DATABASENAME.REG_OPT_OUT_STG.LOAD_ID
AND B.LOAD_TS=$DATABASENAME.REG_OPT_OUT_STG.LOAD_TS
AND B.OPTOUT_ID=$DATABASENAME.REG_OPT_OUT_STG.OPTOUT_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_INPUT1 AS
(
SEL 
A.OPTOUT_ID,
A.MKTNG_PGM_NBR,
A.SUBSCRPTN_OPT_NBR,
A.FNAME,
A.LNAME,
A.EMAIL,
A.PHONE,
A.S_ADD1,
A.S_ADD2,
A.S_ADD3,
A.S_CITY,
A.S_STATE,
A.S_ZIP,
A.S_COUNTRY,
A.OPT_OUT_DTTIME,
A.ADDR_LINE_1_TXT,
A.ADDR_LINE_2_TXT,
A.ADDR_LINE_3_TXT,
A.CITY_NAME,
A.POSTL_AREA_CODE,
A.LOAD_ID,
A.LOAD_TS,
A.MDM_LOAD_IND                 
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.S_STATE
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.S_COUNTRY
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE
FROM $DATABASENAME.REG_OPT_OUT_STG A
LEFT OUTER JOIN TERR_RECODE TR
ON A.S_STATE = TR.TERR
AND A.S_COUNTRY = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.S_COUNTRY = CR.CNTRY
WHERE A.CNTRY_CODE IS NULL
AND A.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
where PROCESS_NAME='Staging OptOut Load'
and status='In Progress')
)
WITH DATA
PRIMARY INDEX (OPTOUT_ID,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT1.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT1.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT1.CITY_NAME
                 END                 
WHERE V_INPUT1.S_ZIP = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT1.S_ZIP = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK')) 
AND V_INPUT1.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT1 FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.S_CITY) = C.CITY_NAME--PRB0041004
WHERE (COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.S_CITY) = C.CITY_NAME --PRB0041004
OR COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.S_CITY) = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT1.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT1.CITY_CODE),'') IS NULL
AND V_INPUT1.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE','PAK');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT1 FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT1.TERR_CODE = T.TERR_CODE;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

----------------------------------------
--Start: Added :  Release 5.1.1 BR175 --
----------------------------------------

UPDATE V_INPUT1
FROM (SEL T.POSTL_AREA_CODE,T.CNTRY_CODE, R.TERR,C.CITY_NAME
,T.TERR_CODE,c.CITY_CODE,TERR.TERR_NAME
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
INNER JOIN TERR_RECODE R
ON T.TERR_CODE=R.TERR_RECODE
AND T.CNTRY_CODE=R.CNTRY
INNER JOIN TERR TERR
ON T.TERR_CODE=TERR.TERR_CODE
WHERE T.CNTRY_CODE IN('USA')
GROUP BY 1,2,3,4,5,6,7
) T
SET TERR_NAME=T.TERR_NAME
   ,CITY_NAME=T.CITY_NAME
   ,TERR_CODE=T.TERR_CODE
   ,CITY_CODE=T.CITY_CODE
WHERE V_INPUT1. S_ZIP = T.POSTL_AREA_CODE
AND V_INPUT1. CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1. CNTRY_NAME IN ('USA')
AND COALESCE(TRIM(ADDR_LINE_1_TXT),TRIM(ADDR_LINE_2_TXT),TRIM(ADDR_LINE_3_TXT),'') = ''
AND V_INPUT1.S_ZIP NOT IN (SELECT POSTL_AREA_CODE FROM POSTL_AREA
WHERE CNTRY_CODE='USA'
AND POSTL_AREA_CODE IS NOT NULL
GROUP BY POSTL_AREA_CODE
HAVING COUNT(1)>1)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

----------------------------------------
--End: Added :  Release 5.1.1 BR175 --
----------------------------------------

UPDATE $DATABASENAME.REG_OPT_OUT_STG
FROM V_INPUT1 B
SET ADDR_LINE_1_TXT=B.S_ADD1
,ADDR_LINE_2_TXT=B.S_ADD2
,ADDR_LINE_3_TXT=B.S_ADD3
--,CITY_NAME=B.S_CITY --Release 5.1.1 BR175 --
,CITY_NAME=coalesce(B.CITY_NAME,B.S_CITY) --Release 5.1.1 BR175 --
,TERR_NAME=B.TERR_NAME
,POSTL_AREA_CODE=B.S_ZIP
,CNTRY_CODE=B.CNTRY_NAME
WHERE $DATABASENAME.REG_OPT_OUT_STG.CNTRY_CODE IS NULL
AND $DATABASENAME.REG_OPT_OUT_STG.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
where PROCESS_NAME='Staging OptOut Load'
and status='In Progress'
)
AND B.LOAD_ID=$DATABASENAME.REG_OPT_OUT_STG.LOAD_ID
AND B.LOAD_TS=$DATABASENAME.REG_OPT_OUT_STG.LOAD_TS
AND B.OPTOUT_ID=$DATABASENAME.REG_OPT_OUT_STG.OPTOUT_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE OPT_OUT_NOT_FOUND
FROM $DATABASENAME.REG_OPT_OUT_STG B
SET ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT
,CITY_NAME=B.CITY_NAME
,TERR_NAME=B.TERR_NAME
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,CNTRY_NAME=B.CNTRY_CODE
WHERE B.PE_OPTOUT_ID=OPT_OUT_NOT_FOUND.PE_OPTOUT_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/****************** Update POSTL_ADDR_ID from POSTL_ADDR *********************/

UPDATE $DATABASENAME.REG_OPT_OUT_STG
FROM (SELECT DISTINCT
A.OPTOUT_ID,
A.LOAD_ID,
D.POSTL_ADDR_ID,
A.LOAD_TS
  FROM $DATABASENAME.REG_OPT_OUT_STG A
  INNER JOIN LOAD_INFO B
  ON A.LOAD_ID=B.LOAD_ID
  AND B.PROCESS_NAME='Staging OptOut Load'
  AND B.STATUS = 'In Progress'
  LEFT JOIN CNTRY_RECODE E
ON TRIM(A.S_COUNTRY)=E.CNTRY
LEFT JOIN POSTL_ADDR D
ON COALESCE(TRIM(A.S_ADD1),'')=D.ORIG_ADDR_LINE_1_TXT
AND COALESCE(TRIM(A.S_ADD2),'')=D.ORIG_ADDR_LINE_2_TXT
AND COALESCE(TRIM(A.S_ADD3),'')=D.ORIG_ADDR_LINE_3_TXT
AND ' '=D.ORIG_STRET_NUM
AND ' '=D.ORIG_STRET_NAME
AND ' '=D.ORIG_APT_NUM
AND ' '=D.ORIG_PO_BOX_NUM
AND COALESCE(TRIM(A.S_CITY),'')=D.ORIG_CITY_NAME
AND COALESCE(TRIM(A.S_STATE),'')=D.ORIG_TERR_NAME
AND COALESCE(TRIM(A.S_ZIP),'')=D.ORIG_POSTL_AREA_CODE
AND COALESCE(E.CNTRY_RECODE,TRIM(A.S_COUNTRY),'')=D.ORIG_CNTRY_INFO_TXT
WHERE D.POSTL_ADDR_ID IS NOT NULL
AND COALESCE(NULLIF(ORIG_STRET_NUM,' '),NULLIF(ORIG_STRET_NAME,' '),NULLIF(ORIG_APT_NUM,' '),NULLIF(ORIG_PO_BOX_NUM,' '),'')=''
AND A.LEGAL_ENT_NBR IN (SEL AV_CODE    
FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='External Standardization')
 AND SYS_ENT_STATE='Active')) D
SET POSTL_ADDR_ID=D.POSTL_ADDR_ID
WHERE $DATABASENAME.REG_OPT_OUT_STG.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
WHERE PROCESS_NAME='Staging OptOut Load'
AND status='In Progress')
AND $DATABASENAME.REG_OPT_OUT_STG.OPTOUT_ID=D.OPTOUT_ID
AND $DATABASENAME.REG_OPT_OUT_STG.LOAD_ID=D.LOAD_ID
AND $DATABASENAME.REG_OPT_OUT_STG.LOAD_TS=D.LOAD_TS;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Staging OptOut Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

.QUIT ERRORCODE

.LABEL WARN
.QUIT 0
