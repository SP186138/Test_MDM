/***********************************************************************************************************
SCRIPT:               CNSMR_TSS_MATCH_EDW.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL (3807, 2580) SEVERITY 0;

DATABASE $DATABASENAME;

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'In Progress'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Wrapper'
AND $DATABASENAME.LOAD_INFO.STATUS = 'Ready to Process'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE TSS_EDW_LOAD_NBR
AS 
(

SELECT LC.LOAD_ID
FROM MDM_LOAD_CONTROL LC

INNER JOIN LOAD_INFO LII
ON LC.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Wrapper'
AND LII.STATUS = 'In Progress'
GROUP BY 1
)
WITH DATA
PRIMARY INDEX ( LOAD_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM TRILLIUM_OUTPUT1 ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL IND

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_IND;
.IF ACTIVITYCOUNT > 0 THEN .GOTO JPN

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_IND A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL JPN

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_JPN;
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUS

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_JPN A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL AUS

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_AUS;
.IF ACTIVITYCOUNT > 0 THEN .GOTO NZL

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_AUS A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL NZL

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_NZL;
.IF ACTIVITYCOUNT > 0 THEN .GOTO SGP

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_NZL A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL SGP

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_SGP;
.IF ACTIVITYCOUNT > 0 THEN .GOTO MYS

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_SGP A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL MYS

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_MYS;
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHN

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_MYS A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL CHN

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_CHN;
.IF ACTIVITYCOUNT > 0 THEN .GOTO KOR

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_CHN A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL KOR

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_KOR;
.IF ACTIVITYCOUNT > 0 THEN .GOTO TWN

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_KOR A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL TWN

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_TWN;
.IF ACTIVITYCOUNT > 0 THEN .GOTO HKG

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_TWN A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL HKG

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_HKG;
.IF ACTIVITYCOUNT > 0 THEN .GOTO PHL

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_HKG A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL PHL

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_PHL;
.IF ACTIVITYCOUNT > 0 THEN .GOTO OTH

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_PHL A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL OTH

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_OTH;
.IF ACTIVITYCOUNT > 0 THEN .GOTO USA

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_OTH A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL USA

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_USA;
.IF ACTIVITYCOUNT > 0 THEN .GOTO BRA

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_USA A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL BRA

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_BRA;
.IF ACTIVITYCOUNT > 0 THEN .GOTO LA

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_BRA A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL LA

SELECT DISTINCT 1 FROM LOGTBL_TRILLIUM_OUTPUT1_LA;
.IF ACTIVITYCOUNT > 0 THEN .GOTO ALLDONE

INSERT INTO TRILLIUM_OUTPUT1
SEL A.* FROM TRILLIUM_OUTPUT1_LA A
INNER JOIN TSS_EDW_LOAD_NBR B
ON CAST(A.SYS_SOURCE AS INTEGER) = B.LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL ALLDONE

COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(RECORD_IND);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_SOURCE);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(RECENT_IND);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,REGIS_DATE,SYS_SOURCE,SYS_CREATION_DATE,SYS_NC_TYPE);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(REFERENCE_REGISTRATIONKEY);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(REFERENCE_LEGALENTITYKEY);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(REGIS_PRSNA_ID);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(REFERENCE_HOUSEHOLD_ID);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(DR_COUNTRY_NAME);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(REGIS_CNSMR_ID_VAL);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(LEGAL_ENT_NBR);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SELECT DISTINCT 
1
FROM 
TRILLIUM_OUTPUT1 A
GROUP BY 
COALESCE(MKTNG_PGM_NBR,''),
COALESCE(CAST(REGIS_CNSMR_ID_VAL AS CHAR(20)),''),
COALESCE(DR_FIRST_NAME,''),
COALESCE(DR_MIDDLE_NAME,''),
COALESCE(DR_LAST_NAME,''),
COALESCE(DR_MRMRS,''),
COALESCE(DR_NAME_SUFFIX,''),
COALESCE(DR_COUNTRY_NAME,''),
COALESCE(DR_REGION_NAME,''),
COALESCE(DR_CITY_NAME,''),
COALESCE(DR_POSTAL_CODE,''),
COALESCE(DR_STREET_NAME,''),
COALESCE(DR_HOUSE_NUMBER1,''),
COALESCE(DR_HOUSE_NUMBER2,''),
COALESCE(DR_POBOX_NUMBER,''),
COALESCE(DR_ADDRESS,''),
COALESCE(DR_ADDRESS2,''),
COALESCE(DR_ADDRESS3,''),
COALESCE(LEGAL_ENT_NBR,''),
COALESCE(CAST(CAST(BRTH_DATE AS DATE FORMAT 'YYYY-MM-DD') AS VARCHAR(10)),''),
COALESCE(LANG_CODE,''),
COALESCE(CNSMR_USER_NAME,''),
COALESCE(FULL_NAME,''),
COALESCE(PR_NAME_FORM_01,''),
COALESCE(CAST(CAST(SYS_SOURCE AS INTEGER) AS CHAR(20)),''),
COALESCE(SYS_NC_TYPE,''),
COALESCE(CAST(CAST(SYS_CREATION_DATE AS TIMESTAMP(0)) AS VARCHAR(20)),''),
COALESCE(REGIS_DATE,'')
HAVING COUNT(*) > 1
;

.IF ACTIVITYCOUNT = 0 THEN .GOTO PROCESS

UPDATE A
FROM TRILLIUM_OUTPUT1 A,
(
SELECT
COALESCE(MKTNG_PGM_NBR,'')						 AS MKTNG_PGM_NBR                 ,
COALESCE(CAST(REGIS_CNSMR_ID_VAL AS CHAR(20)),'')	 AS REGIS_CNSMR_ID_VAL            ,
COALESCE(DR_FIRST_NAME,'')						 AS DR_FIRST_NAME                 ,
COALESCE(DR_MIDDLE_NAME,'')						 AS DR_MIDDLE_NAME                ,
COALESCE(DR_LAST_NAME,'')						 AS DR_LAST_NAME                  ,
COALESCE(DR_MRMRS,'')							 AS DR_MRMRS                      ,
COALESCE(DR_NAME_SUFFIX,'')						 AS DR_NAME_SUFFIX                ,
COALESCE(DR_COUNTRY_NAME,'')						 AS DR_COUNTRY_NAME               ,
COALESCE(DR_REGION_NAME,'')						 AS DR_REGION_NAME                ,
COALESCE(DR_CITY_NAME,'')						 AS DR_CITY_NAME                  ,
COALESCE(DR_POSTAL_CODE,'')						 AS DR_POSTAL_CODE                ,
COALESCE(DR_STREET_NAME,'')						 AS DR_STREET_NAME                ,
COALESCE(DR_HOUSE_NUMBER1,'')						 AS DR_HOUSE_NUMBER1              ,
COALESCE(DR_HOUSE_NUMBER2,'')						 AS DR_HOUSE_NUMBER2              ,
COALESCE(DR_POBOX_NUMBER,'')						 AS DR_POBOX_NUMBER               ,
COALESCE(DR_ADDRESS,'')							 AS DR_ADDRESS                    ,
COALESCE(DR_ADDRESS2,'')						 AS DR_ADDRESS2                   ,
COALESCE(DR_ADDRESS3,'')						 AS DR_ADDRESS3                   ,
COALESCE(LEGAL_ENT_NBR,'')						 AS LEGAL_ENT_NBR                 ,
COALESCE(CAST(CAST(BRTH_DATE AS DATE FORMAT 'YYYY-MM-DD') AS VARCHAR(10)),'')	   AS BRTH_DATE                     ,
COALESCE(LANG_CODE,'')								   AS LANG_CODE                     ,
COALESCE(CNSMR_USER_NAME,'')							   AS CNSMR_USER_NAME               ,
COALESCE(FULL_NAME,'')								   AS FULL_NAME                     ,
COALESCE(PR_NAME_FORM_01,'')							   AS PR_NAME_FORM_01               ,
COALESCE(CAST(CAST(SYS_SOURCE AS INTEGER) AS CHAR(20)),'')			   AS SYS_SOURCE                    ,
COALESCE(SYS_NC_TYPE,'')							   AS SYS_NC_TYPE                   ,
COALESCE(CAST(CAST(SYS_CREATION_DATE AS TIMESTAMP(0)) AS VARCHAR(20)),'')	   AS SYS_CREATION_DATE             ,
COALESCE(REGIS_DATE,'')                                                            AS REGIS_DATE                    ,
MIN(REFERENCE_HOUSEHOLD_ID) AS REFERENCE_HOUSEHOLD_ID,
MIN(REFERENCE_LEGALENTITYKEY)						   AS REFERENCE_LEGALENTITYKEY      ,
MIN(REFERENCE_REGISTRATIONKEY)						   AS REFERENCE_REGISTRATIONKEY     ,
MIN(WINDOW_KEY_01) WINDOW_KEY_01,
MIN(GOUT_MATCH_LEVEL) GOUT_MATCH_LEVEL,
MIN(PR_REV_GROUP) PR_REV_GROUP
FROM 
TRILLIUM_OUTPUT1 A
GROUP BY 
COALESCE(MKTNG_PGM_NBR,''),
COALESCE(CAST(REGIS_CNSMR_ID_VAL AS CHAR(20)),''),
COALESCE(DR_FIRST_NAME,''),
COALESCE(DR_MIDDLE_NAME,''),
COALESCE(DR_LAST_NAME,''),
COALESCE(DR_MRMRS,''),
COALESCE(DR_NAME_SUFFIX,''),
COALESCE(DR_COUNTRY_NAME,''),
COALESCE(DR_REGION_NAME,''),
COALESCE(DR_CITY_NAME,''),
COALESCE(DR_POSTAL_CODE,''),
COALESCE(DR_STREET_NAME,''),
COALESCE(DR_HOUSE_NUMBER1,''),
COALESCE(DR_HOUSE_NUMBER2,''),
COALESCE(DR_POBOX_NUMBER,''),
COALESCE(DR_ADDRESS,''),
COALESCE(DR_ADDRESS2,''),
COALESCE(DR_ADDRESS3,''),
COALESCE(LEGAL_ENT_NBR,''),
COALESCE(CAST(CAST(BRTH_DATE AS DATE FORMAT 'YYYY-MM-DD') AS VARCHAR(10)),''),
COALESCE(LANG_CODE,''),
COALESCE(CNSMR_USER_NAME,''),
COALESCE(FULL_NAME,''),
COALESCE(PR_NAME_FORM_01,''),
COALESCE(CAST(CAST(SYS_SOURCE AS INTEGER) AS CHAR(20)),''),
COALESCE(SYS_NC_TYPE,''),
COALESCE(CAST(CAST(SYS_CREATION_DATE AS TIMESTAMP(0)) AS VARCHAR(20)),''),
COALESCE(REGIS_DATE,'')
HAVING COUNT(*) > 1
) B
SET REFERENCE_HOUSEHOLD_ID = B.REFERENCE_HOUSEHOLD_ID
,REFERENCE_LEGALENTITYKEY = B.REFERENCE_LEGALENTITYKEY
,REFERENCE_REGISTRATIONKEY = B.REFERENCE_REGISTRATIONKEY
,WINDOW_KEY_01 = B.WINDOW_KEY_01 
,GOUT_MATCH_LEVEL = B.GOUT_MATCH_LEVEL
,PR_REV_GROUP = B.PR_REV_GROUP
WHERE COALESCE(A.MKTNG_PGM_NBR,'')							       =COALESCE(B.MKTNG_PGM_NBR,'')
  AND COALESCE(CAST(A.REGIS_CNSMR_ID_VAL AS CHAR(20)),'')	       =COALESCE(CAST(B.REGIS_CNSMR_ID_VAL AS CHAR(20)),'')
  AND COALESCE(A.DR_FIRST_NAME,'')						       =COALESCE(B.DR_FIRST_NAME,'')
  AND COALESCE(A.DR_MIDDLE_NAME,'')						       =COALESCE(B.DR_MIDDLE_NAME,'')
  AND COALESCE(A.DR_LAST_NAME,'')						       =COALESCE(B.DR_LAST_NAME,'')
  AND COALESCE(A.DR_MRMRS,'')							       =COALESCE(B.DR_MRMRS,'')
  AND COALESCE(A.DR_NAME_SUFFIX,'')						       =COALESCE(B.DR_NAME_SUFFIX,'')
  AND COALESCE(A.DR_COUNTRY_NAME,'')						       =COALESCE(B.DR_COUNTRY_NAME,'')
  AND COALESCE(A.DR_REGION_NAME,'')						       =COALESCE(B.DR_REGION_NAME,'')
  AND COALESCE(A.DR_CITY_NAME,'')						       =COALESCE(B.DR_CITY_NAME,'')
  AND COALESCE(A.DR_POSTAL_CODE,'')						       =COALESCE(B.DR_POSTAL_CODE,'')
  AND COALESCE(A.DR_STREET_NAME,'')						       =COALESCE(B.DR_STREET_NAME,'')
  AND COALESCE(A.DR_HOUSE_NUMBER1,'')						       =COALESCE(B.DR_HOUSE_NUMBER1,'')
  AND COALESCE(A.DR_HOUSE_NUMBER2,'')						       =COALESCE(B.DR_HOUSE_NUMBER2,'')
  AND COALESCE(A.DR_POBOX_NUMBER,'')						       =COALESCE(B.DR_POBOX_NUMBER,'')
  AND COALESCE(A.DR_ADDRESS,'')							       =COALESCE(B.DR_ADDRESS,'')
  AND COALESCE(A.DR_ADDRESS2,'')						       =COALESCE(B.DR_ADDRESS2,'')
  AND COALESCE(A.DR_ADDRESS3,'')						       =COALESCE(B.DR_ADDRESS3,'')
  AND COALESCE(A.LEGAL_ENT_NBR,'')						       =COALESCE(B.LEGAL_ENT_NBR,'')
  AND COALESCE(CAST(CAST(A.BRTH_DATE AS DATE FORMAT 'YYYY-MM-DD') AS VARCHAR(10)),'')  =B.BRTH_DATE
  AND COALESCE(A.LANG_CODE,'')							       =COALESCE(B.LANG_CODE,'')
  AND COALESCE(A.CNSMR_USER_NAME,'')						       =COALESCE(B.CNSMR_USER_NAME,'')
  AND COALESCE(A.FULL_NAME,'')							       =COALESCE(B.FULL_NAME,'')
  AND COALESCE(A.PR_NAME_FORM_01,'')						       =COALESCE(B.PR_NAME_FORM_01,'')
  AND COALESCE(CAST(CAST(A.SYS_SOURCE AS INTEGER) AS CHAR(20)),'')		       =B.SYS_SOURCE
  AND COALESCE(A.SYS_NC_TYPE,'')						       =COALESCE(B.SYS_NC_TYPE,'')
  AND COALESCE(CAST(CAST(A.SYS_CREATION_DATE AS TIMESTAMP(0)) AS VARCHAR(20)),'')      =B.SYS_CREATION_DATE
  AND COALESCE(A.REGIS_DATE,'')                                                          =COALESCE(B.REGIS_DATE,'')
; 

.LABEL PROCESS

UPDATE TRILLIUM_OUTPUT1 SET RECORD_IND='Y'
WHERE EXISTS
(SELECT
1
FROM
REGIS_PRSNA
WHERE
LEGAL_ENT_NBR = TRILLIUM_OUTPUT1.LEGAL_ENT_NBR
AND MKTNG_PGM_NBR = TRILLIUM_OUTPUT1.MKTNG_PGM_NBR   
AND REGIS_CNSMR_ID_VAL = TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL
AND SYS_TARGET_ID = TRILLIUM_OUTPUT1.SYS_TARGET_ID
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


UPDATE TRILLIUM_OUTPUT1
FROM
(
SELECT * FROM
(
SELECT 
 LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL
,REGIS_DATE
,SYS_SOURCE
,SYS_CREATION_DATE
,SYS_NC_TYPE
,SYS_TARGET_ID
,RANK() OVER (PARTITION BY LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL 
,SYS_TARGET_ID
ORDER BY REGIS_DATE DESC 
,SYS_SOURCE DESC
,SYS_CREATION_DATE DESC
,SYS_NC_TYPE DESC
) AS RNK
GROUP BY LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL
,REGIS_DATE
,SYS_SOURCE
,SYS_CREATION_DATE
,SYS_NC_TYPE
,SYS_TARGET_ID
FROM TRILLIUM_OUTPUT1
) B
WHERE RNK = 1
) B

SET RECENT_IND = 'Y'
WHERE TRILLIUM_OUTPUT1.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1.REGIS_DATE=B.REGIS_DATE
AND TRILLIUM_OUTPUT1.SYS_CREATION_DATE=B.SYS_CREATION_DATE
AND TRILLIUM_OUTPUT1.SYS_NC_TYPE=B.SYS_NC_TYPE
AND TRILLIUM_OUTPUT1.SYS_SOURCE=B.SYS_SOURCE
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(RECORD_IND);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(RECENT_IND);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DR_ALIAS_CONTACT,DR_FIRST_NAME,DR_MIDDLE_NAME,DR_LAST_NAME,DR_MRMRS,DR_NAME_GENER,DR_NAME_SUFFIX,DR_NAME_GENDER,DR_COUNTRY_NAME,DR_REGION_NAME,DR_CITY_NAME,DR_POSTAL_CODE,DR_STREET_NAME,DR_HOUSE_NUMBER1,DR_HOUSE_NUMBER2,DR_POBOX_NUMBER,DR_ADDRESS,DR_ADDRESS2,DR_ADDRESS3,PR_REV_GROUP,GOUT_MATCH_LEVEL,WINDOW_KEY_01,REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY,REFERENCE_REGISTRATIONKEY,LEGAL_ENT_NBR,BRTH_DATE,LANG_CODE,CNSMR_USER_NAME,STATUS,FULL_NAME,PR_NAME_FORM_01,DR_ALIAS_ACCOUNT,DR_BUSINESS_NAME,REGIS_DATE,RECORD_IND,RECENT_IND,REGIS_PRSNA_ID,HH_FLAG,LE_FLAG,SYS_TARGET_ID,SYS_AUTH_ID,SYS_SOURCE,SYS_CREATED_BY,SYS_CREATION_DATE,SYS_ENT_STATE,SYS_LAST_MODIFIED_BY,SYS_LAST_MODIFIED_DATE,SYS_NC_TYPE,SYS_ERR_CODE,SYS_ERR_SVRTY);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DR_ALIAS_CONTACT,DR_FIRST_NAME,DR_MIDDLE_NAME,DR_LAST_NAME,DR_MRMRS,DR_NAME_GENER,DR_NAME_SUFFIX,DR_NAME_GENDER,DR_COUNTRY_NAME,DR_REGION_NAME,DR_CITY_NAME,DR_POSTAL_CODE,DR_STREET_NAME,DR_HOUSE_NUMBER1,DR_HOUSE_NUMBER2,DR_POBOX_NUMBER,DR_ADDRESS,DR_ADDRESS2,DR_ADDRESS3,CLEANSED_PHONE_1,CLEANSED_EMAIL_1,PR_REV_GROUP,GOUT_MATCH_LEVEL,WINDOW_KEY_01,REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY,REFERENCE_REGISTRATIONKEY,LEGAL_ENT_NBR,BRTH_DATE,LANG_CODE,CNSMR_USER_NAME,STATUS,FULL_NAME,DPEND_NAME,PET_NAME,PR_NAME_FORM_01,DR_ALIAS_ACCOUNT,REFERENCE_MATCHED_LEV1_PATTERN,REFERENCE_MATCHED_LEV2_PATTERN,DR_BUSINESS_NAME,EMAIL_IND,REGIS_DATE,RECORD_IND,RECENT_IND,SYS_TARGET_ID,SYS_AUTH_ID,SYS_SOURCE,SYS_CREATED_BY,SYS_ENT_STATE,SYS_LAST_MODIFIED_BY,SYS_LAST_MODIFIED_DATE,SYS_NC_TYPE,SYS_ERR_CODE,SYS_ERR_SVRTY);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(RECORD_IND,RECENT_IND);
COLLECT STATS ON TRILLIUM_OUTPUT1 COLUMN(DR_COUNTRY_NAME,RECORD_IND,RECENT_IND);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DEL FROM TRILLIUM_MDM_REFERENCE ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT TRILLIUM_MDM_REFERENCE 
(
 LEGAL_ENT_NBR
,MKTNG_PGM_NBR                 
,REGIS_CNSMR_ID_VAL            
,REFERENCE_HOUSEHOLD_ID        
,REFERENCE_LEGALENTITYKEY      
,NEW_HOUSEHOLD_ID              
,NEW_LEGAL_ENTITY_KEY          
,REFERENCE_REGISTRATIONKEY     
,NEW_REGISTRATION_KEY          
,SYS_CREATION_DATE             
,SYS_ENT_STATE                 
,SYS_NC_TYPE     
,SYS_LAST_MODIFIED_BY
,SYS_SOURCE
)
SELECT
 LEGAL_ENT_NBR
,MKTNG_PGM_NBR                  
,REGIS_CNSMR_ID_VAL            
,REFERENCE_HOUSEHOLD_ID        
,REFERENCE_LEGALENTITYKEY      
,CASE WHEN SUBSTR(TRIM(REFERENCE_HOUSEHOLD_ID),1,2)='HH'
      THEN TRIM(D.HSHLD_PRSNA_ID + RANK() OVER (PARTITION BY 1 ORDER BY REFERENCE_HOUSEHOLD_ID))
      ELSE REFERENCE_HOUSEHOLD_ID
  END
,CASE WHEN SUBSTR(TRIM(REFERENCE_LEGALENTITYKEY),1,2)='LE'
      THEN TRIM(C.MATCHD_CNSMR_PRSNA_ID + RANK() OVER (PARTITION BY 1 ORDER BY REFERENCE_LEGALENTITYKEY))
      ELSE REFERENCE_LEGALENTITYKEY
  END         
,REFERENCE_REGISTRATIONKEY     
,CASE WHEN SUBSTR(TRIM(REFERENCE_REGISTRATIONKEY),1,2)='RG'
      THEN TRIM(B.REGIS_PRSNA_ID + RANK() OVER (PARTITION BY 1 ORDER BY REFERENCE_REGISTRATIONKEY))
      ELSE REFERENCE_REGISTRATIONKEY
  END         
,SYS_CREATION_DATE             
,'ACTIVE'                 
,SYS_NC_TYPE 
,CASE WHEN SUBSTR(TRIM(REFERENCE_HOUSEHOLD_ID),1,2)='HH'
        OR SUBSTR(TRIM(REFERENCE_LEGALENTITYKEY),1,2)='LE'
        OR SUBSTR(TRIM(REFERENCE_REGISTRATIONKEY),1,2)='RG'
      THEN 'TRILLIUM'
  END AS SYS_LAST_MODIFIED_BY1
,SYS_SOURCE
FROM
TRILLIUM_OUTPUT1 A
INNER JOIN (SEL COALESCE(MAX(REGIS_PRSNA_ID),0) AS REGIS_PRSNA_ID
FROM REGIS_PRSNA) B
ON 1=1
INNER JOIN (SEL COALESCE(MAX(MATCHD_CNSMR_PRSNA_ID),0) AS MATCHD_CNSMR_PRSNA_ID
FROM MATCHD_CNSMR_PRSNA) C
ON 1=1
INNER JOIN (SEL COALESCE(MAX(HSHLD_PRSNA_ID),0) AS HSHLD_PRSNA_ID
FROM HSHLD_PRSNA) D
ON 1=1
WHERE SYS_LAST_MODIFIED_BY1 = 'TRILLIUM'
AND RECENT_IND = 'Y'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS ON $DATABASENAME.TRILLIUM_MDM_REFERENCE
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LEGAL_ENT_NBR,SYS_SOURCE);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


UPDATE TRILLIUM_OUTPUT1
FROM 
(SELECT MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LEGAL_ENT_NBR,
SYS_SOURCE,
MIN(NEW_HOUSEHOLD_ID) NEW_HOUSEHOLD_ID,
MIN(NEW_LEGAL_ENTITY_KEY) NEW_LEGAL_ENTITY_KEY,
MIN(NEW_REGISTRATION_KEY) NEW_REGISTRATION_KEY
FROM
TRILLIUM_MDM_REFERENCE
GROUP BY 1,2,3,4
) B
SET REFERENCE_HOUSEHOLD_ID = B.NEW_HOUSEHOLD_ID
,REFERENCE_LEGALENTITYKEY = B.NEW_LEGAL_ENTITY_KEY
,REFERENCE_REGISTRATIONKEY = B.NEW_REGISTRATION_KEY
WHERE TRILLIUM_OUTPUT1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1.SYS_SOURCE = B.SYS_SOURCE
AND TRILLIUM_OUTPUT1.RECENT_IND = 'Y'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
SEL
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1 A
 LEFT OUTER JOIN REGIS_PRSNA B
 ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REFERENCE_REGISTRATIONKEY=TRIM(B.REGIS_PRSNA_ID)
AND B.PRSNA_STATUS_CODE = 'AC'
WHERE A.RECENT_IND = 'Y'
AND A.REGIS_CNSMR_ID_VAL <> B.REGIS_CNSMR_ID_VAL
GROUP BY 1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,
51,52,53,54,55,56,57
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
SEL DISTINCT
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1 A
 WHERE A.RECENT_IND = 'Y'
 QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY
 ORDER BY A.REGIS_DATE DESC
 ,A.REGIS_CNSMR_ID_VAL DESC
 ,A.SYS_CREATION_DATE DESC
 ,A.SYS_NC_TYPE DESC
) <> 1
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS ON $DATABASENAME.TRILLIUM_OUTPUT_DUP1
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE TRILLIUM_OUTPUT1
FROM REGIS_PRSNA B
SET REGIS_PRSNA_ID = TRIM(B.REGIS_PRSNA_ID)
WHERE TRILLIUM_OUTPUT1.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1.SYS_TARGET_ID=B.SYS_TARGET_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS  
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,DUP_REGIS_PRSNA_ID
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
SEL
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS  
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,TRIM(A.REGIS_PRSNA_ID)
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1 A
 LEFT OUTER JOIN REGIS_PRSNA B
   ON A.REFERENCE_REGISTRATIONKEY = TRIM(B.REGIS_PRSNA_ID)
  AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
  AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
 LEFT OUTER JOIN (SELECT MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR FROM MATCHD_CNSMR_PRSNA 
 GROUP BY 1,2) C
   ON A.REFERENCE_LEGALENTITYKEY = TRIM(C.MATCHD_CNSMR_PRSNA_ID)
  AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
 LEFT OUTER JOIN (SELECT HSHLD_PRSNA_ID,LEGAL_ENT_NBR FROM HSHLD_PRSNA
 GROUP BY 1,2) D
   ON A.REFERENCE_HOUSEHOLD_ID = TRIM(D.HSHLD_PRSNA_ID)
  AND A.LEGAL_ENT_NBR = D.LEGAL_ENT_NBR
WHERE A.RECENT_IND = 'Y'
AND B.LEGAL_ENT_NBR IS NOT NULL
AND C.LEGAL_ENT_NBR IS NOT NULL
AND D.LEGAL_ENT_NBR IS NOT NULL
GROUP BY 1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,
51,52,53,54,55,56,57,58
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE TRILLIUM_OUTPUT1 
FROM REGIS_PRSNA B
SET RECENT_IND = NULL
WHERE TRILLIUM_OUTPUT1.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND TRILLIUM_OUTPUT1.SYS_TARGET_ID=B.SYS_TARGET_ID
AND CAST(TRIM(SUBSTR(TRILLIUM_OUTPUT1.REGIS_DATE,1,10)) AS DATE FORMAT 'YYYY-MM-DD') < CAST(B.REGIS_DATE AS DATE FORMAT 'MM/DD/YYYY')
; 
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO ERR_PRSNA_STG_CURR_LOAD
(
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
SYS_NC_TYPE,
SYS_ERROR_TIME,
SYS_ERR_CODE
)
SELECT
A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
TRIM(A.SYS_SOURCE),
A.SYS_NC_TYPE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
'RECORD NOT PROCESSED AS CONSUMER REGIS DATE IS EARLIER THAN REGIS DATE STORED ON EDW'
FROM TRILLIUM_OUTPUT1 A
INNER JOIN REGIS_PRSNA B
ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND A.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND CAST(TRIM(SUBSTR(A.REGIS_DATE,1,10)) AS DATE FORMAT 'YYYY-MM-DD') < CAST(B.REGIS_DATE AS DATE FORMAT 'MM/DD/YYYY')
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*******************************************************************************************************************
MOVE TO ERR IF STATE IS NOT VALID FOR COUNTRY US
*******************************************************************************************************************/

UPDATE TRILLIUM_OUTPUT1
SET RECENT_IND = NULL
WHERE ((CASE WHEN TRIM(DR_REGION_NAME) = 'UNK' THEN 'USUNK' 
             ELSE TRIM('US-'||TRIM(DR_REGION_NAME))
         END 
        ) NOT IN 
(SELECT TERR_CODE FROM TERR
WHERE CNTRY_CODE IN ('USA'))
OR TRIM(DR_REGION_NAME) IS NULL
OR TRIM(DR_REGION_NAME) = '')
AND LEGAL_ENT_NBR IN 
(
SELECT
       AV_CODE
  FROM ATTRIBUTE_VALUES
 WHERE AV_DESCRIPTION='State Validation'
);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO ERR_PRSNA_STG_CURR_LOAD
(
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
SYS_NC_TYPE,
SYS_ERROR_TIME,
SYS_ERR_CODE
)
SELECT DISTINCT
A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
TRIM(A.SYS_SOURCE),
A.SYS_NC_TYPE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
'Not a valid state /province/territory'
FROM TRILLIUM_OUTPUT1 A
WHERE ((CASE WHEN TRIM(DR_REGION_NAME) = 'UNK' THEN 'USUNK' 
             ELSE TRIM('US-'||TRIM(DR_REGION_NAME))
         END 
        ) NOT IN 
(SELECT TERR_CODE FROM TERR
WHERE CNTRY_CODE IN ('USA'))
OR TRIM(DR_REGION_NAME) IS NULL
OR TRIM(DR_REGION_NAME) = '')
AND LEGAL_ENT_NBR IN 
(
SELECT
       AV_CODE
  FROM ATTRIBUTE_VALUES
 WHERE AV_DESCRIPTION='State Validation'
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM TRILLIUM_OUTPUT1
WHERE RECENT_IND IS NULL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE TRILLIUM_OUTPUT1
FROM 
(
SEL DISTINCT A.LEGAL_ENT_NBR
,A.MKTNG_PGM_NBR
,A.REGIS_DATE
,A.REFERENCE_REGISTRATIONKEY
,A.REGIS_CNSMR_ID_VAL
,A.SYS_TARGET_ID
,A.SYS_NC_TYPE,TRIM(CASE WHEN D.REGIS_PRSNA_ID > C.REGIS_PRSNA_ID
                  THEN D.REGIS_PRSNA_ID
                  ELSE C.REGIS_PRSNA_ID
              END + RANK() OVER (PARTITION BY 1 ORDER BY A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.SYS_SOURCE))
AS REGIS_PRSNA_ID FROM
TRILLIUM_OUTPUT_DUP A
INNER JOIN TRILLIUM_OUTPUT1 B
 ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND A.SYS_SOURCE = B.SYS_SOURCE
AND B.RECENT_IND = 'Y'
INNER JOIN (SEL COALESCE(MAX(CAST(REFERENCE_REGISTRATIONKEY AS INTEGER)),0
) AS REGIS_PRSNA_ID
FROM TRILLIUM_OUTPUT1
WHERE RECENT_IND = 'Y') C
ON 1=1
INNER JOIN (SEL COALESCE(MAX(CAST(NEW_REGISTRATION_KEY AS INTEGER)),0) AS REGIS_PRSNA_ID
FROM TRILLIUM_MDM_REFERENCE) D
ON 1=1
WHERE DUP_REGIS_PRSNA_ID IS NULL
AND B.REGIS_PRSNA_ID IS NULL) B
SET REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
WHERE TRILLIUM_OUTPUT1.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1.REGIS_DATE=B.REGIS_DATE
AND TRILLIUM_OUTPUT1.REFERENCE_REGISTRATIONKEY=B.REFERENCE_REGISTRATIONKEY
AND TRILLIUM_OUTPUT1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1.SYS_TARGET_ID=B.SYS_TARGET_ID
AND TRILLIUM_OUTPUT1.SYS_NC_TYPE=B.SYS_NC_TYPE
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE TRILLIUM_OUTPUT_DUP
FROM 
(
SEL A.LEGAL_ENT_NBR
,A.MKTNG_PGM_NBR
,A.REGIS_DATE
,A.REFERENCE_REGISTRATIONKEY
,A.REGIS_CNSMR_ID_VAL
,A.SYS_CREATION_DATE
,A.SYS_NC_TYPE
,A.SYS_TARGET_ID
,B.REGIS_PRSNA_ID FROM
TRILLIUM_OUTPUT_DUP A
INNER JOIN TRILLIUM_OUTPUT1 B
 ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND A.SYS_SOURCE = B.SYS_SOURCE
AND B.RECENT_IND = 'Y'
AND A.DUP_REGIS_PRSNA_ID IS NULL
GROUP BY 1,2,3,4,5,6,7,8,9
) B
SET DUP_REGIS_PRSNA_ID = TRIM(B.REGIS_PRSNA_ID)
WHERE TRILLIUM_OUTPUT_DUP.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT_DUP.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT_DUP.REGIS_DATE=B.REGIS_DATE
AND TRILLIUM_OUTPUT_DUP.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT_DUP.SYS_CREATION_DATE=B.SYS_CREATION_DATE
AND TRILLIUM_OUTPUT_DUP.SYS_NC_TYPE=B.SYS_NC_TYPE
AND TRILLIUM_OUTPUT_DUP.SYS_TARGET_ID=B.SYS_TARGET_ID
AND TRILLIUM_OUTPUT_DUP.DUP_REGIS_PRSNA_ID IS NULL
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DEL FROM TSS_PRSNA_IDS ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO TSS_PRSNA_IDS
(
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
MATCHD_CNSMR_PRSNA_ID,
HSHLD_PRSNA_ID,
SYS_SOURCE
)
SELECT
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COALESCE(REGIS_PRSNA_ID,CAST(REFERENCE_REGISTRATIONKEY AS INTEGER)),
CAST(REFERENCE_LEGALENTITYKEY AS INTEGER),
CAST(REFERENCE_HOUSEHOLD_ID AS INTEGER),
SYS_SOURCE
FROM
TRILLIUM_OUTPUT1
QUALIFY RANK() OVER(PARTITION BY REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_SOURCE
ORDER BY SYS_CREATION_DATE DESC, SYS_NC_TYPE DESC) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS TSS_PRSNA_IDS
COLUMN (REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,SYS_SOURCE);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS TSS_PRSNA_IDS
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM PRSNA_TRT WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM PET WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM PET_TRT WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM DPEND WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM DPEND_TRT WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM CNSMR_AFFLTN WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS CNSMR_AFFLTN 
(
CNSMR_GRP_NBR                         ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
AFFLTN_START_DATE             ,
AFFLTN_END_DATE               ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 
)
SELECT DISTINCT
A.CNSMR_GRP_NBR                         ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.AFFLTN_START_DATE             ,
A.AFFLTN_END_DATE             ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM CNSMR_AFFLTN_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER(PARTITION BY B.REGIS_PRSNA_ID
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC  ) = 1
;	
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO HSHLD_PRSNA  
(HSHLD_PRSNA_ID
,LEGAL_ENT_NBR
,PRSNA_STATUS_CODE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE                                                                  
,SYS_ERR_SVRTY) 
SELECT *
FROM
(SELECT
A.REFERENCE_HOUSEHOLD_ID
,A.LEGAL_ENT_NBR
,'ACTIVATED' PRSNA_STATUS_CODE
,A.SYS_SOURCE
,A.SYS_TARGET_ID
,A.SYS_AUTH_ID
,A.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,A.SYS_ENT_STATE
,A.SYS_LAST_MODIFIED_BY
,A.SYS_NC_TYPE
,A.SYS_ERR_CODE                                                                  
,A.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 A
LEFT OUTER JOIN HSHLD_PRSNA B
  ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
 AND A.REFERENCE_HOUSEHOLD_ID = TRIM(B.HSHLD_PRSNA_ID)
WHERE B.HSHLD_PRSNA_ID IS NULL 
AND RECENT_IND = 'Y'
QUALIFY RANK() OVER(PARTITION BY REFERENCE_HOUSEHOLD_ID
ORDER BY REGIS_DATE DESC, REFERENCE_REGISTRATIONKEY DESC, A.SYS_CREATION_DATE DESC, A.SYS_SOURCE DESC, A.SYS_NC_TYPE DESC, A.SYS_TARGET_ID DESC  ) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO MATCHD_CNSMR_PRSNA  
(MATCHD_CNSMR_PRSNA_ID
,LEGAL_ENT_NBR
,HSHLD_PRSNA_ID
,HEAD_OF_HSHLD_IND
,UNIVERSAL_OPT_OUT
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,NOTE_TXT
,LATST_ACTVY_DATE
,PRSNA_STATUS_CODE
,CNSMR_USER_NAME
,LANG_CODE
,REGIS_DATE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE                                                                  
,SYS_ERR_SVRTY) 
SELECT *
FROM
(SELECT
TOUT.REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,TOUT.REFERENCE_HOUSEHOLD_ID
,CASE WHEN RANK() OVER (PARTITION BY REFERENCE_HOUSEHOLD_ID ORDER BY REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY) = 1
           AND A.HSHLD_PRSNA_ID IS NULL
      THEN 'Y'
      ELSE 'N'
  END AS HEAD_OF_HSHLD_IND
,'' AS UNIVERSAL_OPT_OUT
,TOUT.DR_MRMRS
,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME
,TOUT.DR_NAME_SUFFIX
,TOUT.FULL_NAME
,STG.GENDR_IND
,TOUT.BRTH_DATE
,'' AS NOTE_TXT
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) LATST_ACTVY_DATE
,'ACTIVATED' AS PRSNA_STATUS_CODE
,TOUT.CNSMR_USER_NAME
,TOUT.LANG_CODE
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) REGIS_DATE
,TOUT.SYS_SOURCE
,TOUT.SYS_TARGET_ID
,TOUT.SYS_AUTH_ID
,TOUT.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,TOUT.SYS_ENT_STATE
,TOUT.SYS_LAST_MODIFIED_BY
,TOUT.SYS_NC_TYPE
,TOUT.SYS_ERR_CODE                                                                  
,TOUT.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
LEFT OUTER JOIN (SEL TRIM(HSHLD_PRSNA_ID) HSHLD_PRSNA_ID,LEGAL_ENT_NBR FROM  MATCHD_CNSMR_PRSNA GROUP BY 1,2) A
ON TOUT.REFERENCE_HOUSEHOLD_ID = A.HSHLD_PRSNA_ID
AND TOUT.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
LEFT OUTER JOIN MATCHD_CNSMR_PRSNA B
ON TOUT.REFERENCE_LEGALENTITYKEY = TRIM(B.MATCHD_CNSMR_PRSNA_ID)
AND TOUT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN PRSNA_STG STG
ON STG.MKTNG_PGM_NBR = TOUT.MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = TOUT.REGIS_CNSMR_ID_VAL
AND STG.SYS_SOURCE = TOUT.SYS_SOURCE
WHERE RECENT_IND = 'Y'
AND B.MATCHD_CNSMR_PRSNA_ID IS NULL
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY 
ORDER BY TOUT.REGIS_DATE DESC, TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC,
TOUT.SYS_NC_TYPE DESC, TOUT.CNSMR_USER_NAME DESC,TOUT.FULL_NAME DESC ,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME, TOUT.SYS_TARGET_ID DESC,TOUT.BRTH_DATE DESC,TOUT.REFERENCE_HOUSEHOLD_ID ASC,STG.GENDR_IND ASC ) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO REGIS_PRSNA  
(REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,MATCHD_CNSMR_PRSNA_ID
,REFERAL_MKTNG_PGM_NBR
,TRM_LEAD_KEY
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,CNTRY_CODE
,EMAIL_SUPRSN_IND
,PHONE_SUPRSN_IND
,POSTL_SUPRSN_IND
,SOCL_NETWK_SUPRSN_IND
,LATST_ACTVY_DATE
,REGIS_CNSMR_ID_VAL
,CNSMR_USER_NAME
,REGIS_DATE
,PRSNA_STATUS_CODE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE                                                                  
,SYS_ERR_SVRTY
,LYLTY_ACCT_NUM
,LYLTY_PGM_NBR
,DATA_SRCE_NBR) 
SELECT *
FROM
(SELECT
COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.REFERENCE_LEGALENTITYKEY
,'' REFERAL_MKTNG_PGM_NBR
,'' TRM_LEAD_KEY
,TOUT.DR_MRMRS
,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME
,TOUT.DR_NAME_SUFFIX
,TOUT.FULL_NAME
,STG.GENDR_IND
,TOUT.BRTH_DATE
,TOUT.LANG_CODE
,TOUT.DR_COUNTRY_NAME
,'' EMAIL_SUPRSN_IND
,'' PHONE_SUPRSN_IND
,'' POSTL_SUPRSN_IND
,'' SOCL_NETWK_SUPRSN_IND
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) LATST_ACTVY_DATE
,TOUT.REGIS_CNSMR_ID_VAL
,TOUT.CNSMR_USER_NAME
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) REGIS_DATE
,'ACTIVATED' PRSNA_STATUS_CODE
,TOUT.SYS_SOURCE
,TOUT.SYS_TARGET_ID
,TOUT.SYS_AUTH_ID
,TOUT.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,TOUT.SYS_ENT_STATE
,TOUT.SYS_LAST_MODIFIED_BY
,TOUT.SYS_NC_TYPE
,TOUT.SYS_ERR_CODE                                                                  
,TOUT.SYS_ERR_SVRTY
,STG.LYLTY_ACCT_NUM
,STG.LYLTY_PGM_NBR
,STG.SYS_TARGET_ID SYS_TARGET_ID1
FROM
TRILLIUM_OUTPUT1 TOUT
LEFT OUTER JOIN PRSNA_STG STG
ON STG.MKTNG_PGM_NBR = TOUT.MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = TOUT.REGIS_CNSMR_ID_VAL
AND STG.SYS_SOURCE = TOUT.SYS_SOURCE
WHERE TOUT.RECORD_IND IS NULL
AND RECENT_IND = 'Y'
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30
,31,32,33,34,35,36,37,38,39;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO MATCHD_CNSMR_POSTL_ADDR
(MATCHD_CNSMR_PRSNA_ID
,LEGAL_ENT_NBR
,CNTCT_POINT_CATEG_CODE
,VALID_CNTCT_POINT_IND
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,LAT_MEAS
,LONG_MEAS
,TERR_CODE
,CNTRY_CODE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE
,SYS_ERR_SVRTY)
SELECT *
FROM
(SELECT 
TOUT.REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,TOUT.ADDRESS_CONTACT
,CASE WHEN TOUT.PR_REV_GROUP > 0
THEN 'N'
ELSE 'Y'
END VALID_CNTCT_POINT_IND
,STG.PREFR_IND
,TOUT.DR_ADDRESS
,TOUT.DR_ADDRESS2
,TOUT.DR_ADDRESS3
,TOUT.DR_HOUSE_NUMBER1
,TOUT.DR_STREET_NAME
,TOUT.DR_HOUSE_NUMBER2
,TOUT.DR_POBOX_NUMBER
,TOUT.DR_CITY_NAME
,TOUT.DR_POSTAL_CODE
,'' LAT_MEAS
,'' LONG_MEAS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.DR_COUNTRY_NAME NOT IN ('IND','CHN')
AND RECENT_IND = 'Y'
LEFT OUTER JOIN MATCHD_CNSMR_POSTL_ADDR B
ON TOUT.REFERENCE_LEGALENTITYKEY = TRIM(B.MATCHD_CNSMR_PRSNA_ID)
AND TOUT.ADDRESS_CONTACT = B.CNTCT_POINT_CATEG_CODE
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE B.CNTCT_POINT_CATEG_CODE IS NULL
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY,TOUT.ADDRESS_CONTACT
ORDER BY TOUT.LEGAL_ENT_NBR, TOUT.REGIS_DATE DESC, REFERENCE_HOUSEHOLD_ID DESC,
TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC,TOUT.SYS_NC_TYPE DESC,TOUT.DR_POSTAL_CODE DESC) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO MATCHD_CNSMR_POSTL_ADDR
(MATCHD_CNSMR_PRSNA_ID
,LEGAL_ENT_NBR
,CNTCT_POINT_CATEG_CODE
,VALID_CNTCT_POINT_IND
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,LAT_MEAS
,LONG_MEAS
,TERR_CODE
,CNTRY_CODE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE
,SYS_ERR_SVRTY)
SELECT *
FROM
(SELECT 
TOUT.REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,STG.CNTCT_POINT_CATEG_CODE
,STG.VALID_IND  VALID_CNTCT_POINT_IND
,STG.PREFR_IND
,STG.ADDR_LINE_1_TXT
,STG.ADDR_LINE_2_TXT
,STG.ADDR_LINE_3_TXT
,STG.STRET_NUM
,STG.STRET_NAME
,STG.APT_NUM
,STG.PO_BOX_NUM
,STG.CITY_NAME
,STG.POSTL_AREA_CODE
,'' LAT_MEAS
,'' LONG_MEAS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.DR_COUNTRY_NAME IN ('IND','CHN')
AND RECENT_IND = 'Y'
LEFT OUTER JOIN MATCHD_CNSMR_POSTL_ADDR B
ON TOUT.REFERENCE_LEGALENTITYKEY = TRIM(B.MATCHD_CNSMR_PRSNA_ID)
AND TOUT.ADDRESS_CONTACT = B.CNTCT_POINT_CATEG_CODE
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE B.CNTCT_POINT_CATEG_CODE IS NULL
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY,TOUT.ADDRESS_CONTACT
ORDER BY TOUT.REGIS_DATE DESC, REFERENCE_HOUSEHOLD_ID DESC,
TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC,TOUT.SYS_NC_TYPE DESC,STG.POSTL_AREA_CODE DESC  ) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE PRSNA_EMAIL_ADDR_STG
FROM
(
SELECT
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
SYS_SOURCE,
EMAIL_IND,
CLEANSED_EMAIL_1
FROM TRILLIUM_OUTPUT1
GROUP BY 1,2,3,4,5
) B

SET VALID_IND = B.EMAIL_IND
WHERE PRSNA_EMAIL_ADDR_STG.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
AND	PRSNA_EMAIL_ADDR_STG.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND     PRSNA_EMAIL_ADDR_STG.SYS_SOURCE = B.SYS_SOURCE
AND PRSNA_EMAIL_ADDR_STG.EMAIL_ADDR_TXT = B.CLEANSED_EMAIL_1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM REGIS_PRSNA_POSTL_ADDR WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM REGIS_PRSNA_PHONE WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM REGIS_PRSNA_EMAIL_ADDR WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM REGIS_PRSNA_SOC_NET_ACCT WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO REGIS_PRSNA_POSTL_ADDR
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT *
FROM
(SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,TOUT.DR_ADDRESS
,TOUT.DR_ADDRESS2
,TOUT.DR_ADDRESS3
,TOUT.DR_HOUSE_NUMBER1
,TOUT.DR_STREET_NAME
,TOUT.DR_HOUSE_NUMBER2
,TOUT.DR_POBOX_NUMBER
,TOUT.DR_CITY_NAME
,TOUT.DR_POSTAL_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,CASE 
WHEN GOUT_MATCH_LEVEL IN (0,9)
        OR (PR_REV_GROUP IN (0,000,008,001,002,003,004,005,008,009,010,012,019)
      AND  DR_COUNTRY_NAME NOT IN ('JPN','CHN','TWN','KOR','NZL','AUS','MYS','SGP','HKG','USA'))
THEN 'Y'
WHEN GOUT_MATCH_LEVEL IS NULL AND PR_REV_GROUP IS NULL
THEN STG.VALID_IND
ELSE 'N'
END VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
AND TOUT.DR_COUNTRY_NAME NOT IN ('IND','CHN')
AND RECENT_IND = 'Y'
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30
,31,32,33,34,35,36,37,38,39,40,41,42;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO REGIS_PRSNA_POSTL_ADDR
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT *
FROM
(SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,STG.ADDR_LINE_1_TXT
,STG.ADDR_LINE_2_TXT
,STG.ADDR_LINE_3_TXT
,STG.STRET_NUM
,STG.STRET_NAME
,STG.APT_NUM
,STG.PO_BOX_NUM
,STG.CITY_NAME
,STG.POSTL_AREA_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,'Y'  VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
AND TOUT.DR_COUNTRY_NAME IN ('IND','CHN')
AND RECENT_IND = 'Y'
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30
,31,32,33,34,35,36,37,38,39,40,41,42;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS REGIS_PRSNA_PHONE 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
PHONE_CNTRY_NBR               ,
PHONE_AREA_NBR                ,
PHONE_EXCHG_NBR               ,
PHONE_LINE_NBR                ,
PHONE_EXTSN_NUM               ,
FULL_PHONE_NUM                ,
SMS_PREFR_IND                 ,
SMS_AVAIL_START_TIME          ,
SMS_AVAIL_END_TIME            ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
DATA_SRCE_NBR,
PHONE_STATUS_CODE
)
SELECT *
FROM
(SELECT
A.CNTCT_POINT_CATEG_CODE        ,
--B.REFERENCE_REGISTRATIONKEY                ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.CNTCT_OPTN_NBR             ,
A.CNTCT_OPTN_IND             ,
CAST(A.CNSMR_CHCE_DATETM   AS TIMESTAMP(6))     CNSMR_CHCE_DATETM    ,
A.PREFR_IND          ,
A.PHONE_CNTRY_NBR               ,
A.PHONE_AREA_NBR                ,
A.PHONE_EXCHG_NBR               ,
A.PHONE_LINE_NBR                ,
A.PHONE_EXTSN_NUM               ,
A.FULL_PHONE_NUM                ,
A.SMS_PREFR_IND                 ,
SUBSTR(CAST(CAST(A.SMS_AVAIL_START_TIME AS TIMESTAMP(6)) AS VARCHAR(19)),12,8)     SMS_AVAIL_START_TIME     ,
SUBSTR(CAST(CAST(A.SMS_AVAIL_END_TIME AS TIMESTAMP(6)) AS VARCHAR(19)),12,8)      SMS_AVAIL_END_TIME    ,
A.VALID_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.SYS_TARGET_ID SYS_TARGET_ID1,
'AC' PHONE_STATUS_CODE
FROM PRSNA_PHONE_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.CNTCT_POINT_CATEG_CODE,COALESCE(A.CNTCT_OPTN_NBR,0)
ORDER BY A.SYS_CREATION_DATE DESC
,A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
,A.CNSMR_CHCE_DATETM DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30
,31,32,33,34,35
;	
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS REGIS_PRSNA_EMAIL_ADDR 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
EMAIL_ADDR_TXT                ,
EMAIL_FORMT_CODE              ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY  ,
DATA_SRCE_NBR,
EMAIL_STATUS_CODE
)
SELECT *
FROM
(SELECT 
A.CNTCT_POINT_CATEG_CODE        ,
--B.REFERENCE_REGISTRATIONKEY                ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.CNTCT_OPTN_NBR             ,
A.CNTCT_OPTN_IND             ,
CAST(A.CNSMR_CHCE_DATETM   AS TIMESTAMP(6))  CNSMR_CHCE_DATETM       ,
A.PREFR_IND          ,
A.EMAIL_ADDR_TXT                ,
A.EMAIL_FORMT_CODE              ,
A.VALID_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.SYS_TARGET_ID SYS_TARGET_ID1,
'AC' EMAIL_STATUS_CODE
FROM PRSNA_EMAIL_ADDR_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.CNTCT_POINT_CATEG_CODE,COALESCE(A.CNTCT_OPTN_NBR,0)  
ORDER BY A.SYS_CREATION_DATE DESC
,A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
,A.CNSMR_CHCE_DATETM DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28
;	
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS REGIS_PRSNA_SOC_NET_ACCT 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
SOCIAL_NETWK_ACCT_ID_VAL      ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY   ,
DATA_SRCE_NBR,
SOC_NET_STATUS_CODE
)
SELECT *
FROM 
(SELECT
A.CNTCT_POINT_CATEG_CODE        ,
--B.REFERENCE_REGISTRATIONKEY                ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.CNTCT_OPTN_NBR             ,
A.CNTCT_OPTN_IND             ,
CAST(A.CNSMR_CHCE_DATETM   AS TIMESTAMP(6))  CNSMR_CHCE_DATETM       ,
A.PREFR_IND          ,
A.SOCIAL_NETWK_ACCT_ID_VAL      ,
A.VALID_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.SYS_TARGET_ID SYS_TARGET_ID1,
'AC' SOC_NET_STATUS_CODE
FROM PRSNA_SOC_NETWK_ACCT_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.CNTCT_POINT_CATEG_CODE,COALESCE(A.CNTCT_OPTN_NBR,0)
ORDER BY A.SYS_CREATION_DATE DESC
,A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
,A.CNSMR_CHCE_DATETM DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27
;	
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS PRSNA_TRT 
(
      REGIS_PRSNA_ID ,
      PRSNA_TRT_SEQ_NBR ,
      TRT_NBR ,
      PRSNA_TRT_DATE ,
      PRSNA_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT
      --B.REFERENCE_REGISTRATIONKEY,
      B.REGIS_PRSNA_ID,
      A.PRSNA_TRT_SEQ_NBR,
      A.TRT_NBR,
      A.PRSNA_TRT_DATE,
     CASE WHEN A.PRSNA_TRT_TXT= '' OR A.PRSNA_TRT_TXT IS NULL
     THEN TRIM(CAST(PRSNA_TRT_INTEGER AS VARCHAR(1000) CHARACTER SET UNICODE))
     ELSE A.PRSNA_TRT_TXT
     END PRSNA_TRT_TXT,
      B.MKTNG_PGM_NBR,
      B.LEGAL_ENT_NBR,
      A.SYS_SOURCE,
      A.SYS_TARGET_ID,
      A.SYS_AUTH_ID,
      A.SYS_CREATED_BY ,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
      A.SYS_ENT_STATE,
      A.SYS_LAST_MODIFIED_BY,
      A.SYS_NC_TYPE,
      A.SYS_ERR_CODE,
      A.SYS_ERR_SVRTY
FROM PRSNA_TRT_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.TRT_NBR,A.PRSNA_TRT_SEQ_NBR  
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS PET
(
      REGIS_PRSNA_ID ,
      PET_NAME ,
      PET_GENDR_IND ,
      PET_BRTH_DATE ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      PET_SEQ_NBR,
      PET_AGE_NBR,
--      DECEASED_IND,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT
      --B.REFERENCE_REGISTRATIONKEY,
      B.REGIS_PRSNA_ID,
      A.PET_NAME,
      A.PET_GENDR_IND,
      A.PET_BRTH_DATE,
      B.MKTNG_PGM_NBR,
      B.LEGAL_ENT_NBR,
      A.PET_SEQ_NBR,
      A.PET_AGE_NBR,
--      A.DECEASED_IND,
      A.SYS_SOURCE,
      A.SYS_TARGET_ID,
      A.SYS_AUTH_ID,
      A.SYS_CREATED_BY ,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
      A.SYS_ENT_STATE,
      A.SYS_LAST_MODIFIED_BY,
      A.SYS_NC_TYPE,
      A.SYS_ERR_CODE,
      A.SYS_ERR_SVRTY
FROM PET_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.PET_NAME
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS PET_TRT 
(
      REGIS_PRSNA_ID ,
      PET_TRT_SEQ_NBR ,
      TRT_NBR ,
      PET_TRT_DATE ,
      PET_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      PET_SEQ_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT 
      --B.REFERENCE_REGISTRATIONKEY,
      B.REGIS_PRSNA_ID,
      A.PET_TRT_SEQ_NBR,
      A.TRT_ID,
      A.PET_TRT_DATE,
      A.PET_TRT_TXT,
      B.MKTNG_PGM_NBR,
      B.LEGAL_ENT_NBR,
      A.PET_SEQ_NBR,
      A.SYS_SOURCE,
      A.SYS_TARGET_ID,
      A.SYS_AUTH_ID,
      A.SYS_CREATED_BY ,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
      A.SYS_ENT_STATE,
      A.SYS_LAST_MODIFIED_BY,
      A.SYS_NC_TYPE,
      A.SYS_ERR_CODE,
      A.SYS_ERR_SVRTY
FROM PET_TRT_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.PET_SEQ_NBR,A.PET_TRT_SEQ_NBR,A.TRT_ID  
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS DPEND
(
      REGIS_PRSNA_ID ,
      DPEND_TYPE_CODE ,
      DPEND_NAME ,
      DPEND_GENDR_IND ,
      DPEND_BRTH_DATE ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      DPEND_SEQ_NBR,
      DPEND_AGE_NBR,
--      DECEASED_IND,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT
      --B.REFERENCE_REGISTRATIONKEY,
      B.REGIS_PRSNA_ID,
      A.DPEND_TYPE_CODE,
      A.DPEND_NAME,
      A.DPEND_GENDR_IND,
      A.DPEND_BRTH_DATE,
      B.MKTNG_PGM_NBR,
      B.LEGAL_ENT_NBR,
      A.DPEND_SEQ_NBR,
      A.DPEND_AGE_NBR,
--      A.DECEASED_IND,
      A.SYS_SOURCE,
      A.SYS_TARGET_ID,
      A.SYS_AUTH_ID,
      A.SYS_CREATED_BY ,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
      A.SYS_ENT_STATE,
      A.SYS_LAST_MODIFIED_BY,
      A.SYS_NC_TYPE,
      A.SYS_ERR_CODE,
      A.SYS_ERR_SVRTY
FROM DPEND_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.DPEND_NAME  
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS DPEND_TRT 
(
      REGIS_PRSNA_ID ,
      DPEND_TRT_SEQ_NBR ,
      TRT_NBR ,
      DPEND_TRT_DATE ,
      DPEND_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      DPEND_SEQ_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT
      --B.REFERENCE_REGISTRATIONKEY,
      B.REGIS_PRSNA_ID,
      A.DPEND_TRT_SEQ_NBR,
      A.TRT_NBR,
      A.DPEND_TRT_DATE,
      A.DPEND_TRT_TXT,
      B.MKTNG_PGM_NBR,
      B.LEGAL_ENT_NBR,
      A.DPEND_SEQ_NBR,
      A.SYS_SOURCE,
      A.SYS_TARGET_ID,
      A.SYS_AUTH_ID,
      A.SYS_CREATED_BY ,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
      CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
      A.SYS_ENT_STATE,
      A.SYS_LAST_MODIFIED_BY,
      A.SYS_NC_TYPE,
      A.SYS_ERR_CODE,
      A.SYS_ERR_SVRTY
FROM DPEND_TRT_STG A
INNER JOIN TSS_PRSNA_IDS B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.DPEND_TRT_SEQ_NBR,A.TRT_NBR,A.DPEND_SEQ_NBR  
ORDER BY A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE MATCHD_CNSMR_POSTL_ADDR
FROM
(
SELECT *
FROM
(SELECT 
TOUT.REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,TOUT.ADDRESS_CONTACT
,CASE WHEN TOUT.PR_REV_GROUP > 0
THEN 'N'
ELSE 'Y'
END VALID_CNTCT_POINT_IND
,STG.PREFR_IND
,TOUT.DR_ADDRESS
,TOUT.DR_ADDRESS2
,TOUT.DR_ADDRESS3
,TOUT.DR_HOUSE_NUMBER1
,TOUT.DR_STREET_NAME
,TOUT.DR_HOUSE_NUMBER2
,TOUT.DR_POBOX_NUMBER
,TOUT.DR_CITY_NAME
,TOUT.DR_POSTAL_CODE
,'' LAT_MEAS
,'' LONG_MEAS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.DR_COUNTRY_NAME NOT IN ('IND','CHN')
AND RECENT_IND = 'Y'
AND TOUT.RECORD_IND='Y'
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY,TOUT.ADDRESS_CONTACT
ORDER BY TOUT.REGIS_DATE DESC, REFERENCE_HOUSEHOLD_ID DESC, 
TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC,TOUT.SYS_NC_TYPE DESC,
DR_ADDRESS DESC,TOUT.DR_HOUSE_NUMBER1 DESC
,VALID_CNTCT_POINT_IND DESC,TOUT.DR_POSTAL_CODE DESC) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29
) B
SET VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND
,PREF_CNTCT_POINT_IND=B.PREFR_IND
,ADDR_LINE_1_TXT=B.DR_ADDRESS
,ADDR_LINE_2_TXT=B.DR_ADDRESS2
,ADDR_LINE_3_TXT=B.DR_ADDRESS3
,STRET_NUM=B.DR_HOUSE_NUMBER1
,STRET_NAME=B.DR_STREET_NAME
,APT_NUM=B.DR_HOUSE_NUMBER2
,PO_BOX_NUM=B.DR_POBOX_NUMBER
,CITY_NAME=B.DR_CITY_NAME
,POSTL_AREA_CODE=B.DR_POSTAL_CODE
,LAT_MEAS=B.LAT_MEAS
,LONG_MEAS=B.LONG_MEAS
,TERR_CODE=B.DR_REGION_NAME
,CNTRY_CODE=B.DR_COUNTRY_NAME,
SYS_SOURCE=B.SYS_SOURCE ,
SYS_TARGET_ID=B.SYS_TARGET_ID ,
SYS_AUTH_ID=B.SYS_AUTH_ID ,
SYS_CREATED_BY=B.SYS_CREATED_BY ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE ,
SYS_ENT_STATE=B.SYS_ENT_STATE ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY ,
SYS_NC_TYPE=B.SYS_NC_TYPE ,
SYS_ERR_CODE=B.SYS_ERR_CODE ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE MATCHD_CNSMR_POSTL_ADDR.MATCHD_CNSMR_PRSNA_ID = B.REFERENCE_LEGALENTITYKEY
AND MATCHD_CNSMR_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND MATCHD_CNSMR_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=B.ADDRESS_CONTACT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE MATCHD_CNSMR_POSTL_ADDR
FROM
(
SELECT *
FROM
(SELECT 
TOUT.REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,STG.CNTCT_POINT_CATEG_CODE
,STG.VALID_IND VALID_CNTCT_POINT_IND
,STG.PREFR_IND
,STG.ADDR_LINE_1_TXT
,STG.ADDR_LINE_2_TXT
,STG.ADDR_LINE_3_TXT
,STG.APT_NUM
,STG.STRET_NAME
,STG.STRET_NUM
,STG.PO_BOX_NUM
,STG.CITY_NAME
,STG.POSTL_AREA_CODE
,'' LAT_MEAS
,'' LONG_MEAS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.DR_COUNTRY_NAME IN ('IND','CHN')
AND RECENT_IND = 'Y'
AND TOUT.RECORD_IND='Y'
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY,STG.CNTCT_POINT_CATEG_CODE
ORDER BY TOUT.REGIS_DATE DESC, REFERENCE_HOUSEHOLD_ID DESC,
TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC,TOUT.SYS_NC_TYPE DESC,
DR_ADDRESS DESC,TOUT.DR_HOUSE_NUMBER1 DESC 
,VALID_CNTCT_POINT_IND DESC,STG.POSTL_AREA_CODE DESC) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29
) B
SET VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND
,PREF_CNTCT_POINT_IND=B.PREFR_IND
,ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT
,STRET_NUM=B.STRET_NUM
,STRET_NAME=B.STRET_NAME
,APT_NUM=B.APT_NUM
,PO_BOX_NUM=B.PO_BOX_NUM
,CITY_NAME=B.CITY_NAME
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,LAT_MEAS=B.LAT_MEAS
,LONG_MEAS=B.LONG_MEAS
,TERR_CODE=B.DR_REGION_NAME
,CNTRY_CODE=B.DR_COUNTRY_NAME,
SYS_SOURCE=B.SYS_SOURCE ,
SYS_TARGET_ID=B.SYS_TARGET_ID ,
SYS_AUTH_ID=B.SYS_AUTH_ID ,
SYS_CREATED_BY=B.SYS_CREATED_BY ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE ,
SYS_ENT_STATE=B.SYS_ENT_STATE ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY ,
SYS_NC_TYPE=B.SYS_NC_TYPE ,
SYS_ERR_CODE=B.SYS_ERR_CODE ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE MATCHD_CNSMR_POSTL_ADDR.MATCHD_CNSMR_PRSNA_ID = B.REFERENCE_LEGALENTITYKEY
AND MATCHD_CNSMR_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND MATCHD_CNSMR_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=B.CNTCT_POINT_CATEG_CODE;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE MATCHD_CNSMR_PRSNA  
FROM
(SELECT *
FROM
(SELECT
TRIM(TOUT.REFERENCE_LEGALENTITYKEY) REFERENCE_LEGALENTITYKEY
,TOUT.LEGAL_ENT_NBR
,TRIM(TOUT.REFERENCE_HOUSEHOLD_ID) REFERENCE_HOUSEHOLD_ID
,'' AS UNIVERSAL_OPT_OUT
,TOUT.DR_MRMRS
,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME
,TOUT.DR_NAME_SUFFIX
,TOUT.FULL_NAME
,STG.GENDR_IND 
,TOUT.BRTH_DATE
,'' AS NOTE_TXT
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) LATST_ACTVY_DATE
,'ACTIVATED' AS PRSNA_STATUS_CODE
,TOUT.CNSMR_USER_NAME
,TOUT.LANG_CODE
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) REGIS_DATE
,TOUT.SYS_SOURCE
,TOUT.SYS_TARGET_ID
,TOUT.SYS_AUTH_ID
,TOUT.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,TOUT.SYS_ENT_STATE
,TOUT.SYS_LAST_MODIFIED_BY
,TOUT.SYS_NC_TYPE
,TOUT.SYS_ERR_CODE                                                                  
,TOUT.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1 TOUT
LEFT OUTER JOIN PRSNA_STG STG
ON STG.MKTNG_PGM_NBR = TOUT.MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = TOUT.REGIS_CNSMR_ID_VAL
AND STG.SYS_SOURCE = TOUT.SYS_SOURCE
WHERE RECENT_IND = 'Y'
AND TOUT.RECORD_IND = 'Y'
QUALIFY RANK() OVER(PARTITION BY REFERENCE_LEGALENTITYKEY, LEGAL_ENT_NBR
ORDER BY  TOUT.REGIS_DATE DESC, TOUT.REFERENCE_REGISTRATIONKEY DESC,
 TOUT.SYS_CREATION_DATE DESC, TOUT.SYS_SOURCE DESC, 
TOUT.SYS_NC_TYPE DESC, TOUT.CNSMR_USER_NAME DESC 
,TOUT.FULL_NAME DESC,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME
,TOUT.SYS_TARGET_ID DESC,TOUT.BRTH_DATE DESC,REFERENCE_HOUSEHOLD_ID ASC,STG.GENDR_IND ASC) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29
) B
SET UNIVERSAL_OPT_OUT=B.UNIVERSAL_OPT_OUT
,NAME_PREFX_TXT=B.DR_MRMRS
,GVN_NAME=B.DR_FIRST_NAME
,MID_NAME=B.DR_MIDDLE_NAME
,FAMLY_NAME=B.DR_LAST_NAME
,NAME_SUFFX_TXT=B.DR_NAME_SUFFIX
,FULL_NAME=B.FULL_NAME
,GENDR_IND=B.GENDR_IND
,BRTH_DATE=B.BRTH_DATE
,NOTE_TXT=B.NOTE_TXT
,LATST_ACTVY_DATE=B.LATST_ACTVY_DATE
,PRSNA_STATUS_CODE=B.PRSNA_STATUS_CODE
,CNSMR_USER_NAME=B.CNSMR_USER_NAME
,LANG_CODE=B.LANG_CODE
,REGIS_DATE=B.REGIS_DATE,
SYS_SOURCE=B.SYS_SOURCE ,
SYS_TARGET_ID=B.SYS_TARGET_ID ,
SYS_AUTH_ID=B.SYS_AUTH_ID ,
SYS_CREATED_BY=B.SYS_CREATED_BY ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE ,
SYS_ENT_STATE=B.SYS_ENT_STATE ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY ,
SYS_NC_TYPE=B.SYS_NC_TYPE ,
SYS_ERR_CODE=B.SYS_ERR_CODE ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE MATCHD_CNSMR_PRSNA.MATCHD_CNSMR_PRSNA_ID = B.REFERENCE_LEGALENTITYKEY
AND MATCHD_CNSMR_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA
FROM
( 
SELECT *
FROM
(SELECT
COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.REFERENCE_LEGALENTITYKEY
,'' REFERAL_MKTNG_PGM_NBR
,'' TRM_LEAD_KEY
,TOUT.DR_MRMRS
,TOUT.DR_FIRST_NAME
,TOUT.DR_MIDDLE_NAME
,TOUT.DR_LAST_NAME
,TOUT.DR_NAME_SUFFIX
,TOUT.FULL_NAME
,STG.GENDR_IND
,TOUT.BRTH_DATE
,TOUT.LANG_CODE
,TOUT.DR_COUNTRY_NAME
,'' EMAIL_SUPRSN_IND
,'' PHONE_SUPRSN_IND
,'' POSTL_SUPRSN_IND
,'' SOCL_NETWK_SUPRSN_IND
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) LATST_ACTVY_DATE
,TOUT.REGIS_CNSMR_ID_VAL
,TOUT.CNSMR_USER_NAME
,CAST(CAST(TOUT.REGIS_DATE AS VARCHAR(19)) AS TIMESTAMP(0)) REGIS_DATE
,'ACTIVATED' PRSNA_STATUS_CODE
,TOUT.SYS_SOURCE
,TOUT.SYS_TARGET_ID
,TOUT.SYS_AUTH_ID
,TOUT.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,TOUT.SYS_ENT_STATE
,TOUT.SYS_LAST_MODIFIED_BY
,TOUT.SYS_NC_TYPE
,TOUT.SYS_ERR_CODE                                                                  
,TOUT.SYS_ERR_SVRTY
,STG.LYLTY_ACCT_NUM
,STG.LYLTY_PGM_NBR
FROM
TRILLIUM_OUTPUT1 TOUT
LEFT OUTER JOIN PRSNA_STG STG
ON STG.MKTNG_PGM_NBR = TOUT.MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = TOUT.REGIS_CNSMR_ID_VAL
AND STG.SYS_SOURCE = TOUT.SYS_SOURCE
WHERE TOUT.RECORD_IND='Y'
AND RECENT_IND = 'Y'
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,TOUT.REGIS_CNSMR_ID_VAL,TOUT.MKTNG_PGM_NBR,TOUT.LEGAL_ENT_NBR,TOUT.SYS_TARGET_ID
ORDER BY TOUT.SYS_SOURCE DESC, STG.GENDR_IND ) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30
,31,32,33,34,35,36,37,38
) B
SET MATCHD_CNSMR_PRSNA_ID=B.REFERENCE_LEGALENTITYKEY
,DATA_SRCE_NBR=B.SYS_TARGET_ID
,LYLTY_ACCT_NUM=B.LYLTY_ACCT_NUM
,LYLTY_PGM_NBR=B.LYLTY_PGM_NBR
,REFERAL_MKTNG_PGM_NBR=B.REFERAL_MKTNG_PGM_NBR
,TRM_LEAD_KEY=B.TRM_LEAD_KEY
,NAME_PREFX_TXT=B.DR_MRMRS
,GVN_NAME=B.DR_FIRST_NAME
,MID_NAME=B.DR_MIDDLE_NAME
,FAMLY_NAME=B.DR_LAST_NAME
,NAME_SUFFX_TXT=B.DR_NAME_SUFFIX
,FULL_NAME=B.FULL_NAME
,GENDR_IND=B.GENDR_IND
,BRTH_DATE=B.BRTH_DATE
,LANG_CODE=B.LANG_CODE
,CNTRY_CODE=B.DR_COUNTRY_NAME
,EMAIL_SUPRSN_IND=B.EMAIL_SUPRSN_IND
,PHONE_SUPRSN_IND=B.PHONE_SUPRSN_IND
,POSTL_SUPRSN_IND=B.POSTL_SUPRSN_IND
,SOCL_NETWK_SUPRSN_IND=B.SOCL_NETWK_SUPRSN_IND
,LATST_ACTVY_DATE=B.LATST_ACTVY_DATE
,REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
,CNSMR_USER_NAME=B.CNSMR_USER_NAME
,PRSNA_STATUS_CODE=B.PRSNA_STATUS_CODE,
SYS_SOURCE=B.SYS_SOURCE ,
SYS_TARGET_ID=B.SYS_TARGET_ID ,
SYS_AUTH_ID=B.SYS_AUTH_ID ,
SYS_CREATED_BY=B.SYS_CREATED_BY ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE ,
SYS_ENT_STATE=B.SYS_ENT_STATE ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY ,
SYS_NC_TYPE=B.SYS_NC_TYPE ,
SYS_ERR_CODE=B.SYS_ERR_CODE ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS TRILLIUM_OUTPUT2
SEL * FROM TRILLIUM_OUTPUT1;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL STATUSUPDATE

/***************************************************************************************************************
THIS UPDATE IS FOR OTHER MARKETING PROGRAMS THAT DO NOT USE LOYALTY 
***************************************************************************************************************/

UPDATE	REGIS_PRSNA 
FROM	(
SELECT	DISTINCT * 
FROM	(
SELECT	
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
COALESCE(B.REFERENCE_REGISTRATIONKEY,CAST(TRIM(A.REGIS_PRSNA_ID) AS VARCHAR(20))) AS PRSNA,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
A.REGIS_DATE,
A.SYS_CREATION_DATE,
A.SYS_NC_TYPE,
A.SYS_SOURCE,
RANK() OVER (PARTITION BY PRSNA
ORDER	BY A.REGIS_DATE DESC,
		A.REGIS_CNSMR_ID_VAL DESC,A.SYS_CREATION_DATE DESC,A.SYS_SOURCE DESC, A.SYS_NC_TYPE DESC) AS RNK 
FROM	REGIS_PRSNA A
INNER JOIN (SEL MKTNG_PGM_NBR
FROM PRSNA_STG
GROUP BY 1) C
ON A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'
LEFT OUTER JOIN TRILLIUM_OUTPUT B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR 
	AND     A.SYS_SOURCE = B.SYS_SOURCE
	AND	B.RECENT_IND = 'Y'
WHERE D.AV_CODE IS NULL	) B 
WHERE	RNK <> 1
) B 
SET	PRSNA_STATUS_CODE = 'DP' 
WHERE	REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR 
	AND	REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID 
	AND	REGIS_PRSNA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	REGIS_PRSNA.SYS_SOURCE=B.SYS_SOURCE
	AND	REGIS_PRSNA.REGIS_DATE=B.REGIS_DATE
	AND     REGIS_PRSNA.PRSNA_STATUS_CODE = 'AC';
 
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/**********************************************************************************************
TERR CODE UPDATES
**********************************************************************************************/

UPDATE REGIS_PRSNA_POSTL_ADDR
SET PO_BOX_NUM = CASE WHEN ADDR_LINE_1_TXT LIKE 'PO BOX%' 
                      THEN ADDR_LINE_1_TXT
                      ELSE NULL
                  END
WHERE CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
AND CNTRY_CODE='USA';
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
SET TERR_CODE = TERR_NAME
WHERE CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'IND' and REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = 'IND'
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'JPN' and REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = 'JPN'
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE PA
FROM REGIS_PRSNA_POSTL_ADDR PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME_NTV
AND PA.CNTRY_CODE = 'JPN'
AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE PA
FROM REGIS_PRSNA_POSTL_ADDR PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME
AND PA.CNTRY_CODE = 'IND'
AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR AUS */
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.CITY_NAME = A.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND 
CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.CITY_NAME IS NULL*/
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
/* LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME */
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.CITY_NAME IS NULL
AND REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND 
CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.POSTAL_AREA_CODE IS NULL*/
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT 
EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
/* LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE */
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CITY_NAME = A.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND 
CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_NAME = T.TERR_NAME
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.LEGAL_ENT_NBR IN(6)
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR CHINA*/
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.CITY_NAME = A.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR RECORDS HAVING EDW.CITY AS NULL */
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.CITY_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.TERR_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
/* LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1 */
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.CITY_NAME IS NULL
AND REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS HAVING POSTAL_AREA_CODE AS NULL*/
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM(SEL DISTINCT EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM REGIS_PRSNA_POSTL_ADDR EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
/* LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE */
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CITY_NAME = A.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE = A.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_NAME = T.TERR_NAME_NTV
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM CITY_RECODE_VAL C
SET CITY_CODE = C.CITY_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('CHN')
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM CITY_RECODE_VAL C
SET TERR_CODE = C.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('CHN')
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR_RECODE_VAL T
SET TERR_CODE = T.TERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_NAME = T.TERR_NAME
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('AUS')
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
SET TERR_CODE = TERR_NAME
WHERE REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('AUS','CHN')
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE IS NULL
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM CITY C
SET CITY_CODE = C.CITY_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME
AND REGIS_PRSNA_POSTL_ADDR.TERR_CODE = C.TERR_CODE 
AND REGIS_PRSNA_POSTL_ADDR.CITY_CODE IS NULL
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('USA')
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE REGIS_PRSNA_POSTL_ADDR.TERR_CODE = T.TERR_CODE
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE IN('USA')
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/****************************************************************************
OPT OUT MODULE
****************************************************************************/
DELETE FROM $DATABASENAME.REG_OPT_OUT_MDM_TEMP ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO $DATABASENAME.REG_OPT_OUT_MDM_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID)

SELECT	
STG_MKTNG_PGM_NBR
,EMAIL
,PHONE
,SUBSCRPTN_OPT_NBR
,REGIS_PRSNA_ID
,OPT_TIME
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,CITY_NAME
,TERR_NAME
,POSTL_AREA_CODE
,CNTRY_NAME
,COALESCE(LEGAL_ENT_NBR,-1)
,COALESCE(DATA_SRCE_NBR,-1)
,MATCHD_CNSMR_PRSNA_ID 
,FNAME
,LNAME
,LOG_SOURCE_ID
,EDW_MKTNG_PGM_NBR
,HIST_REGIS_PRSNA_ID
FROM	
( 
SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(
SELECT	
ADJ.CNTRY_CODE CNTRY_NAME, 
ADJ.ADDR_LINE_1_TXT, 
ADJ.ADDR_LINE_2_TXT,
ADJ.ADDR_LINE_3_TXT,
ADJ.CITY_NAME,
ADJ.TERR_NAME,
ADJ.POSTL_AREA_CODE,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM $DATABASENAME.REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
) AS CN

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
	ON	  coalesce(STG.ADDR_LINE_1_TXT,'')=  coalesce(CN.ADDR_LINE_1_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_2_TXT,'')= coalesce(CN.ADDR_LINE_2_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_3_TXT,'')= coalesce(CN.ADDR_LINE_3_TXT,'')
 	AND	  coalesce(STG.CITY_NAME,'')= coalesce(CN.CITY_NAME,'')
    	AND	 coalesce(STG.TERR_NAME,'')= coalesce(CN.TERR_NAME,'')
 	AND	  coalesce(STG.POSTL_AREA_CODE,'')= coalesce(CN.POSTL_AREA_CODE,'')
 	AND	 coalesce(STG.CNTRY_NAME,'')= coalesce(CN.CNTRY_NAME,'')
	AND	 STG.MKTNG_PGM_NBR= CN.MKTNG_PGM_NBR
	AND	STG.OPT_TIME>=CN.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND	RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE	 STG.MKTNG_PGM_NBR <>9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(SELECT	
ADJ.FULL_PHONE_NUM,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_PHONE ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)) PH

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM
AND STG.MKTNG_PGM_NBR=PH.MKTNG_PGM_NBR
AND STG.OPT_TIME>=PH.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR <>9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	
(SELECT	
ADJ.EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 ) EA
INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT
AND STG.MKTNG_PGM_NBR=EA.MKTNG_PGM_NBR
AND STG.OPT_TIME>=EA.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR <>9999
AND STG.REGIS_PRSNA_ID < 0 ) OPTOUT
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO $DATABASENAME.REG_OPT_OUT_MDM_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID)

SELECT	
STG_MKTNG_PGM_NBR
,EMAIL
,PHONE
,SUBSCRPTN_OPT_NBR
,REGIS_PRSNA_ID
,OPT_TIME
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,CITY_NAME
,TERR_NAME
,POSTL_AREA_CODE
,CNTRY_NAME
,COALESCE(LEGAL_ENT_NBR,-1)
,COALESCE(DATA_SRCE_NBR,-1)
,MATCHD_CNSMR_PRSNA_ID 
,FNAME
,LNAME
,LOG_SOURCE_ID
,EDW_MKTNG_PGM_NBR
,HIST_REGIS_PRSNA_ID
FROM	
( 
SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(
SELECT	
ADJ.CNTRY_CODE CNTRY_NAME, 
ADJ.ADDR_LINE_1_TXT, 
ADJ.ADDR_LINE_2_TXT,
ADJ.ADDR_LINE_3_TXT,
ADJ.CITY_NAME,
ADJ.TERR_NAME,
ADJ.POSTL_AREA_CODE,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM $DATABASENAME.REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
) AS CN

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
	ON	  coalesce(STG.ADDR_LINE_1_TXT,'')=  coalesce(CN.ADDR_LINE_1_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_2_TXT,'')= coalesce(CN.ADDR_LINE_2_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_3_TXT,'')= coalesce(CN.ADDR_LINE_3_TXT,'')
 	AND	  coalesce(STG.CITY_NAME,'')= coalesce(CN.CITY_NAME,'')
    	AND	 coalesce(STG.TERR_NAME,'')= coalesce(CN.TERR_NAME,'')
 	AND	  coalesce(STG.POSTL_AREA_CODE,'')= coalesce(CN.POSTL_AREA_CODE,'')
 	AND	 coalesce(STG.CNTRY_NAME,'')= coalesce(CN.CNTRY_NAME,'')

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND	RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE	 STG.MKTNG_PGM_NBR=9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(SELECT	
ADJ.FULL_PHONE_NUM,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_PHONE ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)) PH

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR =9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	
(SELECT	
ADJ.EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 ) EA
INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR =9999
AND STG.REGIS_PRSNA_ID < 0 ) OPTOUT
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
FROM	(
SELECT	REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
SUBSCRIPTION_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE TEMP1.EMAIL  IS NOT NULL  
AND	TEMP1.REGIS_PRSNA_ID > 0 
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,SUBSCRIPTION_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4,5) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM	(
SELECT	
REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
SUBSCRIPTION_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE TEMP1.PHONE  IS NOT NULL  
AND	TEMP1.REGIS_PRSNA_ID > 0 
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,SUBSCRIPTION_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4,5) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_POSTL_ADDR
FROM	(
SELECT	REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,SUBSCRIPTION_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE (TEMP1.ADDR_LINE_1_TXT IS  NOT NULL
OR 	TEMP1.ADDR_LINE_2_TXT IS  NOT NULL
 OR	TEMP1.ADDR_LINE_3_TXT IS  NOT NULL
 OR	TEMP1.CITY_NAME   IS  NOT NULL
 OR	TEMP1.TERR_NAME IS  NOT NULL
 OR	 TEMP1.POSTL_AREA_CODE IS  NOT NULL
 OR	TEMP1.CNTRY_NAME IS  NOT NULL
)  
AND	TEMP1.REGIS_PRSNA_ID > 0 
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,SUBSCRIPTION_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4,5) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
FROM	(
SELECT REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID
FROM MDM_SIT3.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.MKTNG_PGM_NBR=9999
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM	(
SELECT	
REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE TEMP1.MKTNG_PGM_NBR=9999
AND	TEMP1.REGIS_PRSNA_ID > 0 
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_POSTL_ADDR
FROM	(
SELECT	REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.REG_OPT_OUT_MDM_TEMP TEMP1  
WHERE TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.MKTNG_PGM_NBR=9999
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.MATCHD_CNSMR_PRSNA
FROM 
(SELECT MATCHD_CNSMR_PRSNA_ID,LOAD_ID,OPT_OUT_DTTIME FROM
$DATABASENAME.REG_OPT_OUT_MDM_TEMP 
WHERE MKTNG_PGM_NBR=9999
QUALIFY RANK() OVER (PARTITION BY MATCHD_CNSMR_PRSNA_ID
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP BY 1,2,3
) TEMP
SET UNIVERSAL_OPT_OUT= 'Y'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
,LATST_ACTVY_DATE=cast(OPT_OUT_DTTIME as date)
WHERE MATCHD_CNSMR_PRSNA.MATCHD_CNSMR_PRSNA_ID=TEMP.MATCHD_CNSMR_PRSNA_ID 
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.MATCHD_CNSMR_PRSNA
FROM 
(SELECT MATCHD_CNSMR_PRSNA_ID,LOAD_ID,OPT_OUT_DTTIME FROM
$DATABASENAME.REG_OPT_OUT_MDM_TEMP 
WHERE MKTNG_PGM_NBR<>9999
QUALIFY RANK() OVER (PARTITION BY MATCHD_CNSMR_PRSNA_ID
ORDER BY OPT_OUT_DTTIME DESC) = 1
GROUP BY 1,2,3
) TEMP
SET SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
,LATST_ACTVY_DATE=cast(OPT_OUT_DTTIME as date)
WHERE MATCHD_CNSMR_PRSNA.MATCHD_CNSMR_PRSNA_ID=TEMP.MATCHD_CNSMR_PRSNA_ID 
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR
FROM
(SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR,OPT_TIME,LOG_SOURCE_ID,OPT_REASN_TXT
FROM
REGIS_PRSNA_OPT_OUT_HIST 
--WHERE SUBSCRIPTION_NBR IS NOT NULL
WHERE OPT_REASN_TXT IN ('Multiple channel Opted Out','Multiple channel','Email Channel Opted Out')
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR
ORDER BY OPT_TIME DESC,OPT_REASN_TXT DESC,LOG_SOURCE_ID DESC) = 1
GROUP BY 1,2,3,4,5
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
--AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_TIME
AND CAST(REGIS_PRSNA_EMAIL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM
(SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR,OPT_TIME,LOG_SOURCE_ID,OPT_REASN_TXT
FROM
REGIS_PRSNA_OPT_OUT_HIST 
--WHERE SUBSCRIPTION_NBR IS NOT NULL
WHERE OPT_REASN_TXT IN ('Multiple channel Opted Out','Multiple channel','Phone Channel Opted Out')
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR
ORDER BY OPT_TIME DESC,OPT_REASN_TXT DESC,LOG_SOURCE_ID DESC) = 1
GROUP BY 1,2,3,4,5
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
--AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_TIME
AND CAST(REGIS_PRSNA_PHONE.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_POSTL_ADDR
FROM
(SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR,OPT_TIME,LOG_SOURCE_ID,OPT_REASN_TXT
FROM
REGIS_PRSNA_OPT_OUT_HIST 
--WHERE SUBSCRIPTION_NBR IS NOT NULL
WHERE OPT_REASN_TXT IN ('Multiple channel Opted Out','Multiple channel','Postal Channel Opted Out')
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR
ORDER BY OPT_TIME DESC,OPT_REASN_TXT DESC,LOG_SOURCE_ID DESC) = 1
GROUP BY 1,2,3,4,5
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
--AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.OPT_TIME
AND CAST(REGIS_PRSNA_POSTL_ADDR.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*
UPDATE	$DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST
FROM	REG_OPT_OUT_MDM_TEMP TEMP
SET	REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
WHERE REGIS_PRSNA_OPT_OUT_HIST.REGIS_PRSNA_ID=TEMP.HIST_REGIS_PRSNA_ID
AND TEMP.REGIS_PRSNA_ID>0
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
*/

INSERT INTO $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST
(
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
DATA_SRCE_NBR                 ,
SUBSCRIPTION_NBR              ,
FIRST_NAME                    ,
LAST_NAME                     ,
EMAIL_ADDR_TEXT               ,
CONTACT_PHONE_NBR             ,
SRC_ADDR_LINE_1_TXT           ,
SRC_ADDR_LINE_2_TXT           ,
SRC_ADDR_LINE_3_TXT           ,
SRC_CITY_NAME                 ,
SRC_STATE                     ,
SRC_ZIP                       ,
SRC_CNTRY_NAME                ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
CITY_NAME                     ,
TERR_NAME                     ,
POSTL_AREA_CODE               ,
CNTRY_NAME                    ,
OPT_IND                       ,
OPT_TIME                  ,
OPT_REASN_TXT             ,
LAST_ACTIVITY_TM              ,
LOG_SOURCE_ID                 ,
LOG_UPDATE_USER               ,
LOG_LOAD_ID                 ,
OPT_TYPE_CODE
)
SELECT
B.REGIS_PRSNA_ID                ,
A.MKTNG_PGM_NBR                 ,
A.LEGAL_ENT_NBR                 ,
A.DATA_SRCE_NBR                 ,
A.SUBSCRIPTION_NBR              ,
A.FIRST_NAME                    ,
A.LAST_NAME                     ,
A.EMAIL_ADDR_TEXT               ,
A.CONTACT_PHONE_NBR             ,
A.SRC_ADDR_LINE_1_TXT           ,
A.SRC_ADDR_LINE_2_TXT           ,
A.SRC_ADDR_LINE_3_TXT           ,
A.SRC_CITY_NAME                 ,
A.SRC_STATE                     ,
A.SRC_ZIP                       ,
A.SRC_CNTRY_NAME                ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.CITY_NAME                     ,
A.TERR_NAME                     ,
A.POSTL_AREA_CODE               ,
A.CNTRY_NAME                    ,
A.OPT_IND                       ,
A.OPT_TIME                  ,
A.OPT_REASN_TXT             ,
A.LAST_ACTIVITY_TM              ,
A.LOG_SOURCE_ID                 ,
A.LOG_UPDATE_USER               ,
A.LOG_LOAD_ID       ,
A.OPT_TYPE_CODE
FROM $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST A
INNER JOIN $DATABASENAME.REG_OPT_OUT_MDM_TEMP B
ON A.REGIS_PRSNA_ID=B.HIST_REGIS_PRSNA_ID
AND B.REGIS_PRSNA_ID>0
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST
WHERE REGIS_PRSNA_ID IN (
SELECT HIST_REGIS_PRSNA_ID
FROM $DATABASENAME.REG_OPT_OUT_MDM_TEMP
WHERE REGIS_PRSNA_ID>0
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/****************************************************************************************************
UPDATE NATIONAL ID INTO REGIS PRSNA FROM PRSNA TRT
****************************************************************************************************/

UPDATE REGIS_PRSNA
FROM PRSNA_TRT B
SET NATIONAL_ID_NBR = B.PRSNA_TRT_TXT
WHERE REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND B.TRT_NBR=562
AND CAST(REGIS_PRSNA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/****************************************************************************************************
ENTERING INTO MERGE PROCESS FOR SK-II
****************************************************************************************************/

SEL DISTINCT 1
FROM
PRSNA_STG
WHERE MKTNG_PGM_NBR IN 
(
SELECT
       AV_CODE
  FROM ATTRIBUTE_VALUES
 WHERE AV_DESCRIPTION='Merge'
);

.IF ACTIVITYCOUNT = 0 THEN .GOTO RPTLOAD

/***************************************************************************************************************
THIS UPDATE IS FOR OTHER MARKETING PROGRAMS THAT DO NOT USE LOYALTY BEFORE DEC 12
***************************************************************************************************************/


UPDATE	REGIS_PRSNA 
FROM	(
SELECT	DISTINCT * 
FROM	(
SELECT	
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
COALESCE(B.REFERENCE_REGISTRATIONKEY,CAST(TRIM(A.REGIS_PRSNA_ID) AS VARCHAR(20))) AS PRSNA,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
A.REGIS_DATE,
A.SYS_CREATION_DATE,
A.SYS_NC_TYPE,
A.SYS_SOURCE,
RANK() OVER (PARTITION BY PRSNA
ORDER	BY A.REGIS_DATE DESC,
		A.REGIS_CNSMR_ID_VAL DESC,A.SYS_CREATION_DATE DESC,A.SYS_SOURCE DESC, A.SYS_NC_TYPE DESC) AS RNK 
FROM	REGIS_PRSNA A
INNER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'
AND (A.LYLTY_ACCT_NUM IS NULL OR A.LYLTY_ACCT_NUM='')
--AND A.SYS_CREATION_DATE < D.SYS_CREATION_DATE
LEFT OUTER JOIN TRILLIUM_OUTPUT B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR 
	AND     A.SYS_SOURCE = B.SYS_SOURCE
	AND	B.RECENT_IND = 'Y'
) B 
WHERE	RNK <> 1
) B 
SET	PRSNA_STATUS_CODE = 'DP' 
WHERE	REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR 
	AND	REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR 
	AND	REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID 
	AND	REGIS_PRSNA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
	AND	REGIS_PRSNA.SYS_SOURCE=B.SYS_SOURCE
	AND     REGIS_PRSNA.PRSNA_STATUS_CODE = 'AC';
 
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA 
FROM (
SELECT DISTINCT * 
FROM (
SELECT	
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
A.REGIS_DATE,
A.SYS_CREATION_DATE,
A.SYS_NC_TYPE,
A.SYS_SOURCE,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,A.LYLTY_PGM_NBR,A.LYLTY_ACCT_NUM 
                 ORDER BY A.REGIS_DATE ASC,A.SYS_CREATION_DATE ASC,A.REGIS_PRSNA_ID ASC
            ) AS RNK 
FROM REGIS_PRSNA A

INNER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'
AND (A.LYLTY_ACCT_NUM IS NOT NULL AND A.LYLTY_ACCT_NUM <> '')
--AND A.SYS_CREATION_DATE > D.SYS_CREATION_DATE
) B 
WHERE RNK <> 1
) B 
SET PRSNA_STATUS_CODE = 'DP' 
WHERE REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR 
  AND REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
  AND REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID 
  AND REGIS_PRSNA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL 
  AND REGIS_PRSNA.SYS_SOURCE=B.SYS_SOURCE
  AND REGIS_PRSNA.PRSNA_STATUS_CODE = 'AC';
  
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;  

 INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,REGIS_DATE
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_CREATION_DATE
 ,DUP_REGIS_PRSNA_ID
 ,WINDOW_KEY_01
)
SELECT DISTINCT 
A.MKTNG_PGM_NBR
,A.REGIS_CNSMR_ID_VAL
,A.REGIS_PRSNA_ID
,A.LEGAL_ENT_NBR 
,A.REGIS_DATE
,A.SYS_TARGET_ID
,A.SYS_SOURCE
,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
,B.REGIS_PRSNA_ID
,'LOYALTY'
 FROM
 (SELECT * 
FROM (
SELECT	
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
A.REGIS_DATE,
A.SYS_CREATION_DATE,
A.SYS_NC_TYPE,
A.SYS_TARGET_ID,
A.SYS_SOURCE,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,A.LYLTY_PGM_NBR,A.LYLTY_ACCT_NUM 
                 ORDER BY A.SYS_CREATION_DATE ASC,A.REGIS_DATE ASC,A.REGIS_PRSNA_ID ASC
            ) AS RNK 
FROM REGIS_PRSNA A

INNER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'
AND (A.LYLTY_ACCT_NUM IS NOT NULL AND A.LYLTY_ACCT_NUM <> '')
--AND A.SYS_CREATION_DATE > D.SYS_CREATION_DATE

) B 
WHERE RNK <> 1
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
) A
INNER JOIN
(SELECT * 
FROM (
SELECT	
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
A.REGIS_DATE,
A.SYS_CREATION_DATE,
A.SYS_NC_TYPE,
A.SYS_TARGET_ID,
A.SYS_SOURCE,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
RANK() OVER (PARTITION BY A.MKTNG_PGM_NBR,A.LYLTY_PGM_NBR,A.LYLTY_ACCT_NUM 
                 ORDER BY A.SYS_CREATION_DATE ASC,A.REGIS_DATE ASC,A.REGIS_PRSNA_ID ASC
            ) AS RNK 
FROM REGIS_PRSNA A

INNER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'
AND (A.LYLTY_ACCT_NUM IS NOT NULL AND A.LYLTY_ACCT_NUM <> '')
--AND A.SYS_CREATION_DATE > D.SYS_CREATION_DATE

) B 
WHERE RNK = 1
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
) B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LYLTY_PGM_NBR = B.LYLTY_PGM_NBR
AND A.LYLTY_ACCT_NUM = B.LYLTY_ACCT_NUM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

DELETE FROM PRSNA_DPLCT_MERGE ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 
	
INSERT PRSNA_DPLCT_MERGE
(
DUP_REGIS_PRSNA_ID,
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REFERENCE_REGISTRATIONKEY
)
SELECT MAX(DUP_REGIS_PRSNA_ID),
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REFERENCE_REGISTRATIONKEY
FROM
(
SELECT DISTINCT 
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY 
FROM
TRILLIUM_OUTPUT_DUP1 A

INNER JOIN (SEL MKTNG_PGM_NBR
FROM PRSNA_STG
GROUP BY 1) C1
ON A.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'DP'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'DP'
WHERE (B.PRSNA_STATUS_CODE = 'DP' OR C.PRSNA_STATUS_CODE = 'DP')
  AND A.MKTNG_PGM_NBR IN 
(
SELECT
       AV_CODE
  FROM ATTRIBUTE_VALUES
 WHERE AV_DESCRIPTION='Merge'
)
  AND A.STATUS IS NULL
  AND A.WINDOW_KEY_01 = 'LOYALTY'
) A
GROUP BY 2,3,4
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.CNTCT_POINT_CATEG_CODE
,A.SUBSCRPTN_OPT_NBR
,A.VALID_CNTCT_POINT_IND
,A.PREF_CNTCT_POINT_IND
,A.GUARDN_NAME
,A.GUARDN_EMAIL_ADDR_TXT
,A.GUARDN_CNSNT_IND
,A.ACNLGMT_DATE
,A.CNSMR_CHCE_DATETM
,A.ADDR_LINE_1_TXT
,A.ADDR_LINE_2_TXT
,A.ADDR_LINE_3_TXT
,A.STRET_NUM
,A.STRET_NAME
,A.APT_NUM
,A.PO_BOX_NUM
,A.CITY_NAME
,A.POSTL_AREA_CODE
,A.CITY_CODE
,A.TERR_NAME
,A.TERR_CODE
,A.CNTRY_CODE
,A.PR_GEOCODE_FAIL
,A.TQ_GOUT_MATCH_LEVEL
,A.PR_REV_GROUP
,A.SUBSCRPTN_OPT_IND
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
,A.DATA_SRCE_NBR
,'AC' POSTL_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_POSTL_ADDR A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA_POSTL_ADDR C
ON C.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE COALESCE(A.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6))) >= COALESCE(C.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6)))
) B
SET 
SUBSCRPTN_OPT_IND=B.SUBSCRPTN_OPT_IND,
ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT,
STRET_NUM=B.STRET_NUM,
STRET_NAME=B.STRET_NAME,
APT_NUM=B.APT_NUM,
PO_BOX_NUM=B.PO_BOX_NUM,
CITY_NAME=B.CITY_NAME,
POSTL_AREA_CODE=B.POSTL_AREA_CODE,
CITY_CODE=B.CITY_CODE,
TERR_NAME=B.TERR_NAME,
TERR_CODE=B.TERR_CODE,
CNTRY_CODE=B.CNTRY_CODE,
VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND,
PREF_CNTCT_POINT_IND=B.PREF_CNTCT_POINT_IND,
GUARDN_NAME=B.GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT=B.GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND=B.GUARDN_CNSNT_IND,
ACNLGMT_DATE=B.ACNLGMT_DATE,
PR_GEOCODE_FAIL=B.PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL=B.TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP=B.PR_REV_GROUP,
CNSMR_CHCE_DATETM=B.CNSMR_CHCE_DATETM,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY ,
DATA_SRCE_NBR=B.DATA_SRCE_NBR,
POSTL_STATUS_CODE=B.POSTL_STATUS_CODE
WHERE 
REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_POSTL_ADDR.CNTCT_POINT_CATEG_CODE = B.CNTCT_POINT_CATEG_CODE
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE REGIS_PRSNA_PHONE
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.CNTCT_POINT_CATEG_CODE
,A.SUBSCRPTN_OPT_NBR
,A.VALID_CNTCT_POINT_IND
,A.PREF_CNTCT_POINT_IND
,A.GUARDN_NAME
,A.GUARDN_EMAIL_ADDR_TXT
,A.GUARDN_CNSNT_IND
,A.ACNLGMT_DATE
,A.CNSMR_CHCE_DATETM
,A.PHONE_CNTRY_NBR
,A.PHONE_AREA_NBR
,A.PHONE_EXCHG_NBR
,A.PHONE_LINE_NBR
,A.PHONE_EXTSN_NUM
,A.FULL_PHONE_NUM
,A.SMS_PREFR_IND
,A.SMS_AVAIL_START_TIME
,A.SMS_AVAIL_END_TIME
,A.SUBSCRPTN_OPT_IND
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
,A.DATA_SRCE_NBR
,'AC' PHONE_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_PHONE A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA_PHONE C
ON C.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE COALESCE(A.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6))) >= COALESCE(C.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6)))
) B
SET 
SUBSCRPTN_OPT_IND=B.SUBSCRPTN_OPT_IND,
VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND,
GUARDN_NAME=B.GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT=B.GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND=B.GUARDN_CNSNT_IND,
ACNLGMT_DATE=B.ACNLGMT_DATE,
CNSMR_CHCE_DATETM=B.CNSMR_CHCE_DATETM,
PREF_CNTCT_POINT_IND=B.PREF_CNTCT_POINT_IND,
PHONE_CNTRY_NBR=B.PHONE_CNTRY_NBR,
PHONE_AREA_NBR=B.PHONE_AREA_NBR,
PHONE_EXCHG_NBR=B.PHONE_EXCHG_NBR,
PHONE_LINE_NBR=B.PHONE_LINE_NBR,
PHONE_EXTSN_NUM=B.PHONE_EXTSN_NUM,
FULL_PHONE_NUM=B.FULL_PHONE_NUM,
SMS_PREFR_IND=B.SMS_PREFR_IND,
SMS_AVAIL_START_TIME=B.SMS_AVAIL_START_TIME,
SMS_AVAIL_END_TIME=B.SMS_AVAIL_END_TIME,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY,
DATA_SRCE_NBR=B.DATA_SRCE_NBR,
PHONE_STATUS_CODE=B.PHONE_STATUS_CODE
WHERE 
REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_PHONE.CNTCT_POINT_CATEG_CODE = B.CNTCT_POINT_CATEG_CODE
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.CNTCT_POINT_CATEG_CODE
,A.SUBSCRPTN_OPT_NBR
,A.VALID_CNTCT_POINT_IND
,A.PREF_CNTCT_POINT_IND
,A.GUARDN_NAME
,A.GUARDN_EMAIL_ADDR_TXT
,A.GUARDN_CNSNT_IND
,A.ACNLGMT_DATE
,A.CNSMR_CHCE_DATETM
,A.EMAIL_ADDR_TXT
,A.EMAIL_FORMT_CODE
,A.SUBSCRPTN_OPT_IND
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
,A.DATA_SRCE_NBR
,'AC' EMAIL_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_EMAIL_ADDR A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA_EMAIL_ADDR C
ON C.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE COALESCE(A.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6))) >= COALESCE(C.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6)))
) B
SET 
SUBSCRPTN_OPT_IND=B.SUBSCRPTN_OPT_IND,
VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND,
PREF_CNTCT_POINT_IND=B.PREF_CNTCT_POINT_IND,
GUARDN_NAME=B.GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT=B.GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND=B.GUARDN_CNSNT_IND,
ACNLGMT_DATE=B.ACNLGMT_DATE,
CNSMR_CHCE_DATETM=B.CNSMR_CHCE_DATETM,
EMAIL_ADDR_TXT=B.EMAIL_ADDR_TXT,
EMAIL_FORMT_CODE=B.EMAIL_FORMT_CODE,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY,
DATA_SRCE_NBR=B.DATA_SRCE_NBR,
EMAIL_STATUS_CODE=B.EMAIL_STATUS_CODE
WHERE 
REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNTCT_POINT_CATEG_CODE = B.CNTCT_POINT_CATEG_CODE
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.CNTCT_POINT_CATEG_CODE
,A.SUBSCRPTN_OPT_NBR
,A.VALID_CNTCT_POINT_IND
,A.PREF_CNTCT_POINT_IND
,A.GUARDN_NAME
,A.GUARDN_EMAIL_ADDR_TXT
,A.GUARDN_CNSNT_IND
,A.ACNLGMT_DATE
,A.CNSMR_CHCE_DATETM
,A.SOCIAL_NETWK_ACCT_ID_VAL
,A.SUBSCRPTN_OPT_IND
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
,A.DATA_SRCE_NBR
,'AC' SOC_NET_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT C
ON C.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE COALESCE(A.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6))) >= COALESCE(C.CNSMR_CHCE_DATETM,CAST('1900-01-01 00:00:00.000000' AS TIMESTAMP(6)))
) B
SET 
SUBSCRPTN_OPT_IND=B.SUBSCRPTN_OPT_IND,
VALID_CNTCT_POINT_IND=B.VALID_CNTCT_POINT_IND,
PREF_CNTCT_POINT_IND=B.PREF_CNTCT_POINT_IND,
GUARDN_NAME=B.GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT=B.GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND=B.GUARDN_CNSNT_IND,
ACNLGMT_DATE=B.ACNLGMT_DATE,
CNSMR_CHCE_DATETM=B.CNSMR_CHCE_DATETM,
SOCIAL_NETWK_ACCT_ID_VAL=B.SOCIAL_NETWK_ACCT_ID_VAL,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY,
DATA_SRCE_NBR=B.DATA_SRCE_NBR,
SOC_NET_STATUS_CODE=B.SOC_NET_STATUS_CODE
WHERE 
REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.CNTCT_POINT_CATEG_CODE = B.CNTCT_POINT_CATEG_CODE
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE PRSNA_TRT 
FROM
(SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PRSNA_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.PRSNA_TRT_DATE ,
A.PRSNA_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PRSNA_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
) B
SET PRSNA_TRT_SEQ_NBR=B.PRSNA_TRT_SEQ_NBR ,
TRT_NBR=B.TRT_NBR ,
PRSNA_TRT_DATE=B.PRSNA_TRT_DATE ,
PRSNA_TRT_TXT=B.PRSNA_TRT_TXT,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_CREATION_DATE=B.SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY
WHERE 
PRSNA_TRT.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND PRSNA_TRT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND PRSNA_TRT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND PRSNA_TRT.TRT_NBR = B.TRT_NBR
AND PRSNA_TRT.PRSNA_TRT_SEQ_NBR = B.PRSNA_TRT_SEQ_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE PET 
FROM
(SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PET_NAME ,
A.PET_GENDR_IND ,
A.PET_BRTH_DATE ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.PET_SEQ_NBR,
A.PET_AGE_NBR,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PET A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
) B
SET   PET_GENDR_IND=B.PET_GENDR_IND ,
PET_BRTH_DATE=B.PET_BRTH_DATE ,
PET_SEQ_NBR=B.PET_SEQ_NBR,
PET_AGE_NBR=B.PET_AGE_NBR,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_CREATION_DATE=B.SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY
WHERE 
PET.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND PET.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND PET.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND PET.PET_NAME = B.PET_NAME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE PET_TRT 
FROM
(SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PET_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.PET_TRT_DATE ,
A.PET_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
C.PET_SEQ_NBR,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PET_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN PET A1
ON A.REGIS_PRSNA_ID = A1.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = A1.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = A1.LEGAL_ENT_NBR
AND A.PET_SEQ_NBR = A1.PET_SEQ_NBR
INNER JOIN PET_TRT C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
INNER JOIN PET C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.PET_SEQ_NBR = C1.PET_SEQ_NBR
AND A1.PET_NAME=C1.PET_NAME
) B
SET PET_TRT_SEQ_NBR=B.PET_TRT_SEQ_NBR ,
PET_TRT_DATE=B.PET_TRT_DATE ,
PET_TRT_TXT=B.PET_TRT_TXT,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_CREATION_DATE=B.SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE 
PET_TRT.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND PET_TRT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND PET_TRT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND PET_TRT.TRT_NBR=B.TRT_NBR
AND PET_TRT.PET_SEQ_NBR=B.PET_SEQ_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE DPEND 
FROM
(SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.DPEND_TYPE_CODE ,
A.DPEND_NAME ,
A.DPEND_GENDR_IND ,
A.DPEND_BRTH_DATE ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.DPEND_SEQ_NBR,
A.DPEND_AGE_NBR,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN DPEND A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
) B
SET DPEND_TYPE_CODE=B.DPEND_TYPE_CODE ,
DPEND_GENDR_IND=B.DPEND_GENDR_IND ,
DPEND_BRTH_DATE=B.DPEND_BRTH_DATE ,
DPEND_SEQ_NBR=B.DPEND_SEQ_NBR,
DPEND_AGE_NBR=B.DPEND_AGE_NBR,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_CREATION_DATE=B.SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY 
WHERE 
DPEND.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND DPEND.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND DPEND.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND DPEND.DPEND_NAME = B.DPEND_NAME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE DPEND_TRT 
FROM
(SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.DPEND_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.DPEND_TRT_DATE ,
A.DPEND_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
C.DPEND_SEQ_NBR,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN DPEND_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN DPEND A1
ON A.REGIS_PRSNA_ID = A1.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = A1.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = A1.LEGAL_ENT_NBR
AND A.DPEND_SEQ_NBR = A1.DPEND_SEQ_NBR
INNER JOIN DPEND_TRT C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
INNER JOIN DPEND C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.DPEND_SEQ_NBR = C1.DPEND_SEQ_NBR
AND A1.DPEND_NAME=C1.DPEND_NAME
) B
SET DPEND_TRT_SEQ_NBR=B.DPEND_TRT_SEQ_NBR ,
DPEND_TRT_DATE=B.DPEND_TRT_DATE ,
DPEND_TRT_TXT=B.DPEND_TRT_TXT,
SYS_SOURCE=B.SYS_SOURCE,                    
SYS_TARGET_ID=B.SYS_TARGET_ID                 ,
SYS_AUTH_ID=B.SYS_AUTH_ID                   ,
SYS_CREATED_BY=B.SYS_CREATED_BY                ,
SYS_CREATION_DATE=B.SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE=B.SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE=B.SYS_NC_TYPE                   ,
SYS_ERR_CODE=B.SYS_ERR_CODE                  ,
SYS_ERR_SVRTY=B.SYS_ERR_SVRTY  
WHERE 
DPEND_TRT.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY
AND DPEND_TRT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND DPEND_TRT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND DPEND_TRT.TRT_NBR=B.TRT_NBR
AND DPEND_TRT.DPEND_SEQ_NBR=B.DPEND_SEQ_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INSERT INTO REGIS_PRSNA_POSTL_ADDR
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,TERR_CODE
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE)
SELECT DISTINCT 
 A.CNTCT_POINT_CATEG_CODE
,B.REFERENCE_REGISTRATIONKEY
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.WIN_KEY
,A.SUBSCRPTN_OPT_NBR
,A.SUBSCRPTN_OPT_IND
,A.CNSMR_CHCE_DATETM
,A.PREF_CNTCT_POINT_IND
,A.ADDR_LINE_1_TXT
,A.ADDR_LINE_2_TXT
,A.ADDR_LINE_3_TXT
,A.STRET_NUM
,A.STRET_NAME
,A.APT_NUM
,A.PO_BOX_NUM
,A.CITY_NAME
,A.POSTL_AREA_CODE
,A.TERR_NAME
,A.TERR_CODE
,A.CNTRY_CODE
,A.LAT_MEAS
,A.LONG_MEAS
,A.VALID_CNTCT_POINT_IND
,A.GUARDN_NAME
,A.GUARDN_EMAIL_ADDR_TXT
,A.GUARDN_CNSNT_IND
,A.ACNLGMT_DATE
,A.PR_REV_GROUP
,A.PR_GEOCODE_FAIL
,A.SYS_SOURCE
,A.SYS_TARGET_ID
,A.SYS_AUTH_ID
,A.SYS_CREATED_BY
,A.SYS_CREATION_DATE
,A.SYS_LAST_MODIFIED_DATE
,A.SYS_ENT_STATE
,A.SYS_LAST_MODIFIED_BY
,A.SYS_NC_TYPE
,A.SYS_ERR_CODE 
,A.SYS_ERR_SVRTY
,A.DATA_SRCE_NBR
,'AC' POSTL_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_POSTL_ADDR A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN REGIS_PRSNA_POSTL_ADDR C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS REGIS_PRSNA_PHONE 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
PHONE_CNTRY_NBR               ,
PHONE_AREA_NBR                ,
PHONE_EXCHG_NBR               ,
PHONE_LINE_NBR                ,
PHONE_EXTSN_NUM               ,
FULL_PHONE_NUM                ,
SMS_PREFR_IND                 ,
SMS_AVAIL_START_TIME          ,
SMS_AVAIL_END_TIME            ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
DATA_SRCE_NBR,
PHONE_STATUS_CODE
)
SELECT DISTINCT 
A.CNTCT_POINT_CATEG_CODE        ,
B.REFERENCE_REGISTRATIONKEY                ,
A.MKTNG_PGM_NBR                 ,
A.LEGAL_ENT_NBR                 ,
A.SUBSCRPTN_OPT_NBR             ,
A.SUBSCRPTN_OPT_IND             ,
A.CNSMR_CHCE_DATETM             ,
A.PREF_CNTCT_POINT_IND          ,
A.PHONE_CNTRY_NBR               ,
A.PHONE_AREA_NBR                ,
A.PHONE_EXCHG_NBR               ,
A.PHONE_LINE_NBR                ,
A.PHONE_EXTSN_NUM               ,
A.FULL_PHONE_NUM                ,
A.SMS_PREFR_IND                 ,
A.SMS_AVAIL_START_TIME          ,
A.SMS_AVAIL_END_TIME            ,
A.VALID_CNTCT_POINT_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.DATA_SRCE_NBR,
'AC' PHONE_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_PHONE A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN REGIS_PRSNA_PHONE C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS REGIS_PRSNA_EMAIL_ADDR 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
EMAIL_ADDR_TXT                ,
EMAIL_FORMT_CODE              ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
DATA_SRCE_NBR,
EMAIL_STATUS_CODE
)
SELECT DISTINCT 
A.CNTCT_POINT_CATEG_CODE        ,
B.REFERENCE_REGISTRATIONKEY                ,
A.MKTNG_PGM_NBR                 ,
A.LEGAL_ENT_NBR                 ,
A.SUBSCRPTN_OPT_NBR             ,
A.SUBSCRPTN_OPT_IND             ,
A.CNSMR_CHCE_DATETM             ,
A.PREF_CNTCT_POINT_IND          ,
A.EMAIL_ADDR_TXT                ,
A.EMAIL_FORMT_CODE              ,
A.VALID_CNTCT_POINT_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY  ,
A.DATA_SRCE_NBR,
'AC' EMAIL_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_EMAIL_ADDR A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN REGIS_PRSNA_EMAIL_ADDR C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS REGIS_PRSNA_SOC_NET_ACCT 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
SOCIAL_NETWK_ACCT_ID_VAL      ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
DATA_SRCE_NBR,
SOC_NET_STATUS_CODE
)
SELECT DISTINCT 
A.CNTCT_POINT_CATEG_CODE        ,
B.REFERENCE_REGISTRATIONKEY               ,
A.MKTNG_PGM_NBR                 ,
A.LEGAL_ENT_NBR                 ,
A.SUBSCRPTN_OPT_NBR             ,
A.SUBSCRPTN_OPT_IND             ,
A.CNSMR_CHCE_DATETM             ,
A.PREF_CNTCT_POINT_IND          ,
A.SOCIAL_NETWK_ACCT_ID_VAL      ,
A.VALID_CNTCT_POINT_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
A.SYS_SOURCE                    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
A.SYS_CREATION_DATE             ,
A.SYS_LAST_MODIFIED_DATE        ,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY   ,
A.DATA_SRCE_NBR,
'AC' SOC_NET_STATUS_CODE
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN REGIS_PRSNA_SOC_NET_ACCT C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND COALESCE(A.SUBSCRPTN_OPT_NBR,0) = COALESCE(C.SUBSCRPTN_OPT_NBR,0)
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS PRSNA_TRT 
(
      REGIS_PRSNA_ID ,
      PRSNA_TRT_SEQ_NBR ,
      TRT_NBR ,
      PRSNA_TRT_DATE ,
      PRSNA_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PRSNA_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.PRSNA_TRT_DATE ,
A.PRSNA_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PRSNA_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN PRSNA_TRT C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.TRT_NBR = C.TRT_NBR
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS PET
(
      REGIS_PRSNA_ID ,
      PET_NAME ,
      PET_GENDR_IND ,
      PET_BRTH_DATE ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      PET_SEQ_NBR,
      PET_AGE_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PET_NAME ,
A.PET_GENDR_IND ,
A.PET_BRTH_DATE ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.PET_SEQ_NBR,
A.PET_AGE_NBR,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PET A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN PET C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.PET_NAME = C.PET_NAME
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS PET_TRT 
(
      REGIS_PRSNA_ID ,
      PET_TRT_SEQ_NBR ,
      TRT_NBR ,
      PET_TRT_DATE ,
      PET_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      PET_SEQ_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PET_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.PET_TRT_DATE ,
A.PET_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.PET_SEQ_NBR,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN PET_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN PET A1
ON A.REGIS_PRSNA_ID = A1.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = A1.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = A1.LEGAL_ENT_NBR
AND A.PET_SEQ_NBR = A1.PET_SEQ_NBR
LEFT OUTER JOIN PET_TRT C
INNER JOIN PET C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.PET_SEQ_NBR = C1.PET_SEQ_NBR
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.TRT_NBR=C.TRT_NBR
AND A1.PET_NAME=C1.PET_NAME
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS DPEND
(
      REGIS_PRSNA_ID ,
      DPEND_TYPE_CODE ,
      DPEND_NAME ,
      DPEND_GENDR_IND ,
      DPEND_BRTH_DATE ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      DPEND_SEQ_NBR,
      DPEND_AGE_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.DPEND_TYPE_CODE ,
A.DPEND_NAME ,
A.DPEND_GENDR_IND ,
A.DPEND_BRTH_DATE ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.DPEND_SEQ_NBR,
A.DPEND_AGE_NBR,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN DPEND A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN DPEND C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.DPEND_NAME = C.DPEND_NAME
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

INS DPEND_TRT 
(
      REGIS_PRSNA_ID ,
      DPEND_TRT_SEQ_NBR ,
      TRT_NBR ,
      DPEND_TRT_DATE ,
      DPEND_TRT_TXT ,
      MKTNG_PGM_NBR ,
      LEGAL_ENT_NBR ,
      DPEND_SEQ_NBR,
      SYS_SOURCE ,
      SYS_TARGET_ID ,
      SYS_AUTH_ID ,
      SYS_CREATED_BY ,
      SYS_CREATION_DATE ,
      SYS_LAST_MODIFIED_DATE ,
      SYS_ENT_STATE ,
      SYS_LAST_MODIFIED_BY ,
      SYS_NC_TYPE ,
      SYS_ERR_CODE ,
      SYS_ERR_SVRTY 
)
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.DPEND_TRT_SEQ_NBR ,
A.TRT_NBR ,
A.DPEND_TRT_DATE ,
A.DPEND_TRT_TXT ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.DPEND_SEQ_NBR,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN DPEND_TRT A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN DPEND A1
ON A.REGIS_PRSNA_ID = A1.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = A1.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = A1.LEGAL_ENT_NBR
AND A.DPEND_SEQ_NBR = A1.DPEND_SEQ_NBR
LEFT OUTER JOIN DPEND_TRT C
INNER JOIN DPEND C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.DPEND_SEQ_NBR = C1.DPEND_SEQ_NBR
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.TRT_NBR = C.TRT_NBR
AND A1.DPEND_NAME=C1.DPEND_NAME
WHERE C.REGIS_PRSNA_ID IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 
/*
UPDATE REGIS_PRSNA
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.NAME_PREFX_TXT
,A.GVN_NAME
,A.MID_NAME
,A.FAMLY_NAME
,A.NAME_SUFFX_TXT
,A.FULL_NAME
,A.GENDR_IND
,A.BRTH_DATE
,A.LANG_CODE
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND B.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
) B
SET NAME_PREFX_TXT=B.NAME_PREFX_TXT
,GVN_NAME=B.GVN_NAME
,MID_NAME=B.MID_NAME
,FAMLY_NAME=B.FAMLY_NAME
,NAME_SUFFX_TXT=B.NAME_SUFFX_TXT
,FULL_NAME=B.FULL_NAME
,GENDR_IND=B.GENDR_IND
,BRTH_DATE=B.BRTH_DATE
,LANG_CODE=B.LANG_CODE
,SYS_TARGET_ID=B.SYS_TARGET_ID                 
,SYS_AUTH_ID=B.SYS_AUTH_ID                   
,SYS_CREATED_BY=B.SYS_CREATED_BY                
,SYS_CREATION_DATE=B.SYS_CREATION_DATE             
,SYS_LAST_MODIFIED_DATE=B.SYS_LAST_MODIFIED_DATE        
,SYS_ENT_STATE=B.SYS_ENT_STATE                 
,SYS_LAST_MODIFIED_BY=B.SYS_LAST_MODIFIED_BY          
,SYS_NC_TYPE=B.SYS_NC_TYPE                   
,SYS_ERR_CODE=B.SYS_ERR_CODE                  
,SYS_ERR_SVRTY=B.SYS_ERR_SVRTY
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR;
*/

UPDATE REGIS_PRSNA
FROM
( 
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY REFERENCE_REGISTRATIONKEY1
,A.MKTNG_PGM_NBR
,A.LEGAL_ENT_NBR
,A.NAME_PREFX_TXT
--,A.GVN_NAME
--,COALESCE(A.GVN_NAME,C.GVN_NAME) GVN_NAME
,CASE WHEN A.GVN_NAME IS NULL OR A.GVN_NAME = ''
      THEN C.GVN_NAME
      ELSE A.GVN_NAME
  END GVN_NAME
--,A.MID_NAME
--,COALESCE(A.MID_NAME,C.MID_NAME) MID_NAME
,CASE WHEN A.MID_NAME IS NULL OR A.MID_NAME = ''
      THEN C.MID_NAME
      ELSE A.MID_NAME
  END MID_NAME
--,A.FAMLY_NAME
--,COALESCE(A.FAMLY_NAME,C.FAMLY_NAME) FAMLY_NAME
,CASE WHEN A.FAMLY_NAME IS NULL OR A.FAMLY_NAME = ''
      THEN C.FAMLY_NAME
      ELSE A.FAMLY_NAME
  END FAMLY_NAME
--,A.NAME_SUFFX_TXT
--,COALESCE(A.NAME_SUFFX_TXT,C.NAME_SUFFX_TXT) NAME_SUFFX_TXT
,CASE WHEN A.NAME_SUFFX_TXT IS NULL OR A.NAME_SUFFX_TXT = ''
      THEN C.NAME_SUFFX_TXT
      ELSE A.NAME_SUFFX_TXT
  END NAME_SUFFX_TXT
--,A.FULL_NAME
--,COALESCE(A.FULL_NAME,C.FULL_NAME) FULL_NAME
,CASE WHEN A.FULL_NAME IS NULL OR A.FULL_NAME = ''
      THEN C.FULL_NAME
      ELSE A.FULL_NAME
  END FULL_NAME
--,A.GENDR_IND
--,COALESCE(A.GENDR_IND,C.GENDR_IND) GENDR_IND
,CASE WHEN A.GENDR_IND IS NULL OR A.GENDR_IND = ''
      THEN C.GENDR_IND
      ELSE A.GENDR_IND
  END GENDR_IND
--,A.BRTH_DATE
,COALESCE(A.BRTH_DATE,C.BRTH_DATE) BRTH_DATE
--,A.LANG_CODE
--,COALESCE(A.LANG_CODE,C.LANG_CODE) LANG_CODE
,CASE WHEN A.LANG_CODE IS NULL OR A.LANG_CODE = ''
      THEN C.LANG_CODE
      ELSE A.LANG_CODE
  END LANG_CODE
,A.LATST_ACTVY_DATE
,A.SYS_SOURCE                    
,A.SYS_TARGET_ID                 
,A.SYS_AUTH_ID                   
,A.SYS_CREATED_BY                
,A.SYS_CREATION_DATE             
,A.SYS_LAST_MODIFIED_DATE        
,A.SYS_ENT_STATE                 
,A.SYS_LAST_MODIFIED_BY          
,A.SYS_NC_TYPE                   
,A.SYS_ERR_CODE                  
,A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE B
INNER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
INNER JOIN REGIS_PRSNA C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND B.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
) B
SET 
 NAME_PREFX_TXT=B.NAME_PREFX_TXT
,GVN_NAME=B.GVN_NAME
,MID_NAME=B.MID_NAME
,FAMLY_NAME=B.FAMLY_NAME
,NAME_SUFFX_TXT=B.NAME_SUFFX_TXT
,FULL_NAME=B.FULL_NAME
,GENDR_IND=B.GENDR_IND
,BRTH_DATE=B.BRTH_DATE
,LANG_CODE=B.LANG_CODE
,LATST_ACTVY_DATE=B.LATST_ACTVY_DATE
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REFERENCE_REGISTRATIONKEY1
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT_MERGE A
INNER JOIN REGIS_PRSNA_POSTL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.POSTL_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_POSTL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR

WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,0) = COALESCE(D.SUBSCRPTN_OPT_NBR,0)
GROUP BY 1,2,3,4
) B
SET POSTL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_PHONE
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT_MERGE A
INNER JOIN REGIS_PRSNA_PHONE E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.PHONE_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_PHONE D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR

WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,0) = COALESCE(D.SUBSCRPTN_OPT_NBR,0)
GROUP BY 1,2,3,4
) B
SET PHONE_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE = 'AC';

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT_MERGE A
INNER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.EMAIL_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_EMAIL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR

WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,0) = COALESCE(D.SUBSCRPTN_OPT_NBR,0)
GROUP BY 1,2,3,4
) B
SET EMAIL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT_MERGE A
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.SOC_NET_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR

WHERE COALESCE(E.SUBSCRPTN_OPT_NBR,0) = COALESCE(D.SUBSCRPTN_OPT_NBR,0)
GROUP BY 1,2,3,4
) B
SET SOC_NET_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


.LABEL RPTLOAD

CREATE VOLATILE TABLE VT_RPT_LOAD_NBR
AS 
(
SELECT DISTINCT
CAST (A.LOAD_ID AS INTEGER) AS LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0) AS MKTNG_PGM_NBR
,COUNT(DISTINCT B.REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM 
(

SELECT A.LOAD_ID 
FROM
(
SELECT LOAD_ID
FROM LOAD_CONTROL  
WHERE LOAD_TYPE = 'ETL'
AND LOADSTATUS = 'SUCCESS'
AND MDM_PROCESS_DESC='COMPLETED'
AND TARGETCNT > 0	
) A

INNER JOIN MDM_LOAD_CONTROL LC
ON A.LOAD_ID = LC.LOAD_ID

INNER JOIN LOAD_INFO LI 
ON A.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Wrapper'
AND LI.STATUS = 'In Progress'
GROUP BY 1
)A

LEFT OUTER JOIN PRSNA_STG_CNT B
ON A.LOAD_ID = B.LOAD_ID	
GROUP BY 1,2 
)
WITH DATA
PRIMARY INDEX ( LOAD_ID, MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
, MKTNG_PGM_NBR
, LEGAL_ENT_NBR
, STAGING_NBR
, ERROR_NBR
, ACTIVE_NBR
, DUPLICATE_NBR
, PHONE_OPT_IN
, PHONE_OPT_OUT
, EMAIL_OPT_IN
, EMAIL_OPT_OUT
, POSTAL_OPT_IN
, POSTAL_OPT_OUT
, SOCIAL_OPT_IN
, SOCIAL_OPT_OUT
)
SELECT DISTINCT
B.LOAD_ID
,B.MKTNG_PGM_NBR
,COALESCE(C.LEGAL_ENT_NBR,0)
,B.STAGING_NBR
,COALESCE(N.ERROR_NBR,0)
,COALESCE(D.ACTIVE_NBR,0)
,COALESCE(D.DUPLICATE_NBR,0)
,COALESCE(E.PHONE_OPT_IN,0)
,COALESCE(E.PHONE_OPT_OUT,0)
,COALESCE(F.EMAIL_OPT_IN,0)
,COALESCE(F.EMAIL_OPT_OUT,0)
,COALESCE(G.POSTAL_OPT_IN,0)
,COALESCE(G.POSTAL_OPT_OUT,0)
,COALESCE(H.SOCIAL_OPT_IN,0)
,COALESCE(H.SOCIAL_OPT_OUT,0)
FROM
VT_RPT_LOAD_NBR B

LEFT OUTER JOIN
MKTNG_PGM C
ON B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'AC' THEN REGIS_PRSNA_ID ELSE NULL END ) ACTIVE_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'DP' THEN REGIS_PRSNA_ID ELSE NULL END ) DUPLICATE_NBR
FROM REGIS_PRSNA R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
GROUP BY 1,2
) D
ON B.LOAD_ID = D.SYS_SOURCE
AND B.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) E
ON B.LOAD_ID = E.SYS_SOURCE
AND B.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON B.LOAD_ID = F.SYS_SOURCE
AND B.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON B.LOAD_ID = G.SYS_SOURCE
AND B.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NET_ACCT R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON B.LOAD_ID = H.SYS_SOURCE
AND B.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT E.LOAD_ID, E.MKTNG_PGM_NBR, COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG_CURR_LOAD E, VT_RPT_LOAD_NBR V
WHERE E.LOAD_ID		= V.LOAD_ID
AND E.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

 INSERT INTO ERR_PRSNA_STG
 (MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 )
SELECT
MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,A.LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 FROM
 ERR_PRSNA_STG_CURR_LOAD A
 INNER JOIN TSS_EDW_LOAD_NBR B
 ON A.LOAD_ID = B.LOAD_ID
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .QUIT ERRORCODE;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL WARN

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Wrapper'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
;

.QUIT 0