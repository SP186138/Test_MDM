/***********************************************************************************************************
SCRIPT:               TSS_GDPR_OUTPUT.BTEQ 
DESCRIPTION:          This script loads the TSS_GDPR_OUTPUT table from the trigger file that is given by 
                      Trillium
DEPENDENCY:           TRILLIUM GDPR SCRIPT
INPUT:                TRILLIUM GDPR FILE
OUTPUT:               GDPR TRIGGER
ERRORS: 
SPECIAL INSTRUCTIONS: In case of failure, fast load cleanup needs to be performed and script to restart from top.

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 09/12/2017           TERADATA                        INITIAL VERSION

***********************************************************************************************************/

.RUN FILE \\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\logon\LOGON.txt;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
SET QUERY_BAND = 'WorkFlow=MDM;Interface=GDPRSearch;Stage=MDM;Step=TrilliumOutput;' FOR SESSION; 
UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='GDPR Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Staging Gdpr Load',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
LI.BATCH_ID
FROM MDM_LOAD_CONTROL_GDPR LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Gdpr Load'
AND LI.STATUS = 'Success'
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS GDPR_TRIGGER
COLUMN(GDPR_CASE_ID,LOAD_ID);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


CREATE VOLATILE TABLE V_INPUT AS
(SEL 
A.GDPR_CASE_ID,
A.ADDR_LINE_1_TXT,
A.ADDR_LINE_2_TXT,
A.ADDR_LINE_3_TXT,
A.CITY_NAME,
A.POSTL_AREA_CODE,
A.WIN_KEY,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.GL_LATITUDE,
A.GL_LONGITUDE,
A.DR_CLEANSE_LVL,
A.VALID_CNTCT_POINT_IND,
A.PR_REV_GROUP,
A.PR_GEOCODE_FAIL,
A.LOAD_ID,
A.LOAD_TS
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR_NAME
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.CNTRY_NAME
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE 
FROM GDPR_TRIGGER A
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR_NAME = TR.TERR
AND A.CNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.CNTRY_NAME = CR.CNTRY
)
WITH DATA
PRIMARY INDEX (GDPR_CASE_ID,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT.CITY_NAME
                 END                 
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_INPUT.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')) 
AND V_INPUT.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE V_INPUT.CITY_NAME = C.CITY_NAME --PRB0041004
WHERE (V_INPUT.CITY_NAME = C.CITY_NAME--PRB0041004
OR V_INPUT.CITY_NAME = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT.CITY_CODE),'') IS NULL
AND V_INPUT.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT.TERR_CODE = T.TERR_CODE;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ICRM_STAGE.GDPR_RQST_STG 
FROM V_INPUT B
SET ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT
,CITY_NAME=B.CITY_NAME
,TERR_NAME=B.TERR_NAME
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,CNTRY_CODE=B.CNTRY_NAME
,WIN_KEY=B.WIN_KEY
,GL_ACCURACY=B.GL_ACCURACY
,GL_MATCH_FLG=B.GL_MATCH_FLG
,GL_LATITUDE=CASE WHEN NULLIF(TRIM(B.GL_ACCURACY),'0') IS NULL 
THEN NULL
ELSE CAST(B.GL_LATITUDE AS DECIMAL(8,6) FORMAT '-99.999999')/1000000
END
,GL_LONGITUDE=CASE WHEN NULLIF(TRIM(B.GL_ACCURACY),'0') IS NULL 
THEN NULL
ELSE CAST(B.GL_LONGITUDE AS   DECIMAL(9,6) FORMAT '-999.999999')/1000000
END
,DR_CLEANSE_LVL=B.DR_CLEANSE_LVL
,VALID_CNTCT_POINT_IND=CASE WHEN (B.PR_GEOCODE_FAIL IN ('0','9')
      AND B.CNTRY_NAME IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','IDN','THA','VNM'))
      OR (B.PR_GEOCODE_FAIL IN ('0','3')
      AND B.CNTRY_NAME IN ('NZL'))      
      OR B.CNTRY_NAME IN ('ARG','CHL','MEX','BRA')
      OR (B.PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  B.CNTRY_NAME NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM'))
      OR (B.PR_GEOCODE_FAIL = '0' AND B.PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')AND B.CNTRY_NAME IN ('FRA'))
      OR (B.PR_GEOCODE_FAIL IN ('0','3') AND B.PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND B.CNTRY_NAME IN ('IRL','AUT','ITA'))      
      /*OR (B.PR_GEOCODE_FAIL = '0' AND B.PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND B.CNTRY_NAME IN ('GRC'))*/    
      OR (B.PR_GEOCODE_FAIL IN ('0') AND B.PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND B.CNTRY_NAME IN ('CHE','DEU','BEL','NLD'))
      OR (B.PR_GEOCODE_FAIL IN ('0','3','8') AND B.PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND B.CNTRY_NAME IN ('DNK','FIN','NOR'))   
      OR (B.PR_GEOCODE_FAIL IN ('0','3','8') AND B.PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND B.CNTRY_NAME IN ('SWE'))       
      OR (B.PR_GEOCODE_FAIL = '0' AND B.PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND B.CNTRY_NAME IN ('GBR','PRT'))     
      OR (B.PR_GEOCODE_FAIL IN ('0') AND B.PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND B.CNTRY_NAME IN ('ESP'))
THEN 'Y'
WHEN B.CNTRY_NAME='MYS' AND TRIM(COALESCE(B.POSTL_AREA_CODE,''))<>'' 
     AND (CHAR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')))=5 
     AND SUBSTR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')),1,2)<>'01'
     AND SUBSTR(TRIM(COALESCE(B.POSTL_AREA_CODE,'')),1,1)='0')
THEN 'N'
WHEN ((B.PR_GEOCODE_FAIL IS NULL OR TRIM(B.PR_GEOCODE_FAIL) = '') 
 AND (B.PR_REV_GROUP IS NULL OR TRIM(B.PR_REV_GROUP) = ''))
 OR  B.CNTRY_NAME IN ('HKG','GRC')
 OR  (B.PR_GEOCODE_FAIL NOT IN ('0','9')
      AND B.CNTRY_NAME IN ('JPN','TWN','KOR','NZL','AUS','MYS','SGP','IDN','THA','VNM'))
THEN 'N'
ELSE 'N'
END
,PR_REV_GROUP=B.PR_REV_GROUP
,PR_GEOCODE_FAIL=B.PR_GEOCODE_FAIL
WHERE  B.LOAD_ID =CAST(ICRM_STAGE.GDPR_RQST_STG.SYS_SOURCE AS INTEGER)
AND B.LOAD_TS=ICRM_STAGE.GDPR_RQST_STG.SYS_CREATION_DATE  
AND B.GDPR_CASE_ID =ICRM_STAGE.GDPR_RQST_STG.GDPR_CASE_ID 


;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_INPUT1 AS
(
SEL 
A.GDPR_CASE_ID,
A.GDPR_RQST_TYPE_CD,
A.GDPR_RQST_STATUS_CD,
A.GVN_NAME,
A.FAMLY_NAME,
A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.NATIONAL_ID_NBR,
A.EMAIL_ADDR_TXT,
A.FULL_PHONE_NUM,
A.ADDR_LINE_1_TXT_ORIG,
A.ADDR_LINE_2_TXT_ORIG,
A.ADDR_LINE_3_TXT_ORIG,
A.CITY_NAME_ORIG,
A.CNTRY_CODE_ORIG,
A.TERR_NAME_ORIG,
A.POSTL_AREA_CODE_ORIG,
A.ADDR_LINE_1_TXT,
A.ADDR_LINE_2_TXT,
A.ADDR_LINE_3_TXT,
A.CITY_NAME,
A.TERR_NAME,
A.POSTL_AREA_CODE,
A.CNTRY_CODE,
A.GDPR_RQST_FULFLMT_DATETM,
A.GDPR_RQST_CRTN_DATETM,
A.GDPR_RQST_IDNTY_VFYD_DATETM,
A.SYS_SOURCE AS LOAD_ID,
A.SYS_CREATION_DATE AS LOAD_TS,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR_NAME_ORIG
  END AS TERR_NAME_INITIAL
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE A.CNTRY_CODE_ORIG
  END AS CNTRY_NAME
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME1
,CAST('' AS VARCHAR(50)) AS CITY_CODE
FROM ICRM_STAGE.GDPR_RQST_STG A
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR_NAME_ORIG = TR.TERR
AND A.CNTRY_CODE_ORIG = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON A.CNTRY_CODE_ORIG = CR.CNTRY
WHERE A.CNTRY_CODE IS NULL
AND CAST(A.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID  FROM LOAD_INFO 
where PROCESS_NAME='Staging Gdpr Load'
and status='In Progress')
)
WITH DATA
PRIMARY INDEX (GDPR_CASE_ID,LOAD_ID,LOAD_TS)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_INPUT1.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_INPUT1.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_INPUT1.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_INPUT1.CITY_NAME
                 END                 
WHERE V_INPUT1.POSTL_AREA_CODE_ORIG = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.CNTRY_NAME IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_INPUT1 FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_INPUT1.POSTL_AREA_CODE_ORIG = T.POSTL_AREA_CODE
AND V_INPUT1.CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN')) 
AND V_INPUT1.CNTRY_NAME IN ('RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_INPUT1 FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY_NAME_ORIG) = C.CITY_NAME--PRB0041004
WHERE (COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY_NAME_ORIG) = C.CITY_NAME --PRB0041004
OR COALESCE(V_INPUT1.CITY_NAME,V_INPUT1.CITY_NAME_ORIG) = C.CITY_NAME_NTV)--PRB0041004
AND V_INPUT1.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_INPUT1.CITY_CODE),'') IS NULL
AND V_INPUT1.CNTRY_NAME IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA','BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK','FIN','NOR','SWE','GBR','PRT',
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM','EGY',
'ISR','KEN','MAR','NGA','ROU','ZAF','BGR','UKR','HRV','CZE',
'PAK','ARG','BOL','COL','CRI','DOM','ECU','GTM','HND','IDN',
'JAM','MYS','NIC','PAN','PER','PHL','SLV','VEN');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_INPUT1 FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME1 = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_INPUT1.TERR_CODE = T.TERR_CODE;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

----------------------------------------
--Start: Added :  Release 5.1.1 BR175 --
----------------------------------------

UPDATE V_INPUT1
FROM (SEL T.POSTL_AREA_CODE,T.CNTRY_CODE, R.TERR,C.CITY_NAME
,T.TERR_CODE,C.CITY_CODE,TERR.TERR_NAME
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
INNER JOIN TERR_RECODE R
ON T.TERR_CODE=R.TERR_RECODE
AND T.CNTRY_CODE=R.CNTRY
INNER JOIN TERR TERR
ON T.TERR_CODE=TERR.TERR_CODE
WHERE T.CNTRY_CODE IN('USA')
GROUP BY 1,2,3,4,5,6,7
) T
SET TERR_NAME1=T.TERR_NAME
   ,CITY_NAME=T.CITY_NAME
   ,TERR_CODE=T.TERR_CODE
   ,CITY_CODE=T.CITY_CODE
WHERE V_INPUT1. POSTL_AREA_CODE_ORIG = T.POSTL_AREA_CODE
AND V_INPUT1. CNTRY_NAME = T.CNTRY_CODE
AND V_INPUT1. CNTRY_NAME IN ('USA')
AND COALESCE(TRIM(ADDR_LINE_1_TXT),TRIM(ADDR_LINE_2_TXT),TRIM(ADDR_LINE_3_TXT),'') = ''
AND V_INPUT1.POSTL_AREA_CODE_ORIG NOT IN (SELECT POSTL_AREA_CODE FROM POSTL_AREA
WHERE CNTRY_CODE='USA'
AND POSTL_AREA_CODE IS NOT NULL
GROUP BY POSTL_AREA_CODE
HAVING COUNT(1)>1)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

----------------------------------------
--
----------------------------------------

UPDATE ICRM_STAGE.GDPR_RQST_STG
FROM V_INPUT1 B
SET ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT_ORIG
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT_ORIG
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT_ORIG
--,CITY_NAME=B.S_CITY --Release 5.1.1 BR175 --
,CITY_NAME=coalesce(B.CITY_NAME,B.CITY_NAME_ORIG) --Release 5.1.1 BR175 --
,TERR_NAME=B.TERR_NAME1
,POSTL_AREA_CODE=B.POSTL_AREA_CODE_ORIG
,CNTRY_CODE=B.CNTRY_NAME
,VALID_CNTCT_POINT_IND='N' --- Set for not matched rec
WHERE ICRM_STAGE.GDPR_RQST_STG.CNTRY_CODE IS NULL
AND CAST(ICRM_STAGE.GDPR_RQST_STG.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID  FROM LOAD_INFO 
where PROCESS_NAME='Staging Gdpr Load'
and status='In Progress'
)
AND B.LOAD_ID =CAST(ICRM_STAGE.GDPR_RQST_STG.SYS_SOURCE AS INTEGER)
AND B.LOAD_TS=ICRM_STAGE.GDPR_RQST_STG.SYS_CREATION_DATE
AND B.GDPR_CASE_ID=ICRM_STAGE.GDPR_RQST_STG.GDPR_CASE_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*UPDATE OPT_OUT_DIRECTIVE
FROM ICRM_STAGE.GDPR_RQST_STG B
SET ADDR_LINE_1_TXT=B.ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT=B.ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT=B.ADDR_LINE_3_TXT
,CITY_NAME=B.CITY_NAME
,TERR_NAME=B.TERR_NAME
,POSTL_AREA_CODE=B.POSTL_AREA_CODE
,CNTRY_NAME=B.CNTRY_CODE
WHERE B.PE_OPTOUT_ID=OPT_OUT_DIRECTIVE.PE_OPTOUT_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE; 

*/

/****************** Update POSTL_ADDR_ID from POSTL_ADDR *********************/

UPDATE ICRM_STAGE.GDPR_RQST_STG
FROM (SELECT DISTINCT
A.GDPR_CASE_ID,
A.SYS_SOURCE AS LOAD_ID,
D.POSTL_ADDR_ID,
A.SYS_CREATION_DATE AS LOAD_TS
,CN.LEGAL_ENT_NBR
  FROM ICRM_STAGE.GDPR_RQST_STG A
  LEFT JOIN ICRM.CNTRY CN
ON A.CNTRY_CODE_ORIG=CN.CNTRY_CODE
  INNER JOIN LOAD_INFO B
  ON CAST(A.SYS_SOURCE AS INTEGER)=B.LOAD_ID
  AND B.PROCESS_NAME='Staging Gdpr Load'
  AND B.STATUS = 'In Progress'
  LEFT JOIN CNTRY_RECODE E
ON TRIM(A.CNTRY_CODE_ORIG)=E.CNTRY
LEFT JOIN ICRM.POSTL_ADDR D
ON COALESCE(TRIM(A.ADDR_LINE_1_TXT_ORIG),'')=D.ORIG_ADDR_LINE_1_TXT
AND COALESCE(TRIM(A.ADDR_LINE_2_TXT_ORIG),'')=D.ORIG_ADDR_LINE_2_TXT
AND COALESCE(TRIM(A.ADDR_LINE_3_TXT_ORIG),'')=D.ORIG_ADDR_LINE_3_TXT
AND ' '=D.ORIG_STRET_NUM
AND ' '=D.ORIG_STRET_NAME
AND ' '=D.ORIG_APT_NUM
AND ' '=D.ORIG_PO_BOX_NUM
AND COALESCE(TRIM(A.CITY_NAME_ORIG),'')=D.ORIG_CITY_NAME
AND COALESCE(TRIM(A.TERR_NAME_ORIG),'')=D.ORIG_TERR_NAME
AND COALESCE(TRIM(A.POSTL_AREA_CODE_ORIG),'')=D.ORIG_POSTL_AREA_CODE
AND COALESCE(E.CNTRY_RECODE,TRIM(A.CNTRY_CODE_ORIG),'')=D.ORIG_CNTRY_INFO_TXT
WHERE D.POSTL_ADDR_ID IS NOT NULL
AND COALESCE(NULLIF(ORIG_STRET_NUM,' '),NULLIF(ORIG_STRET_NAME,' '),NULLIF(ORIG_APT_NUM,' '),NULLIF(ORIG_PO_BOX_NUM,' '),'')=''
AND CN.LEGAL_ENT_NBR IN (SEL AV_CODE    
FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='External Standardization')
 AND SYS_ENT_STATE='Active') ) D 
SET POSTL_ADDR_ID=D.POSTL_ADDR_ID
WHERE CAST(ICRM_STAGE.GDPR_RQST_STG.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM LOAD_INFO 
WHERE PROCESS_NAME='Staging Gdpr Load'
AND status='In Progress')
AND ICRM_STAGE.GDPR_RQST_STG.GDPR_CASE_ID=D.GDPR_CASE_ID
AND ICRM_STAGE.GDPR_RQST_STG.SYS_SOURCE=D.LOAD_ID
AND ICRM_STAGE.GDPR_RQST_STG.SYS_CREATION_DATE=D.LOAD_TS;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE LOAD_INFO.PROCESS_NAME='Staging Gdpr Load'
AND LOAD_INFO.STATUS = 'In Progress'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

.QUIT ERRORCODE

.LABEL WARN
.QUIT 0
