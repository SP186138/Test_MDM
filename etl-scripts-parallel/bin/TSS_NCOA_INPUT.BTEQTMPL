/***********************************************************************************************************
SCRIPT:               TSS_NCOA_CLEANUP.BTEQ 
DESCRIPTION:          THIS SCRIPT CLEANS UP FASTLOAD ERROR TABLES
DEPENDENCY:           
INPUT:                NCOA_TRIGGER
OUTPUT:               NCOA_TRIGGER
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/12/2012           TERADATA                        INITIAL VERSION
5.7                  02/29/2016           TERADATA                        Release 5.7 - Add address to postal repo
                                                                          in case of external standardization
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i25c;Stage=MDM;Step=TrilliumInput;' FOR SESSION; 
DATABASE $DATABASENAME;

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'NCOA Input',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
LI.BATCH_ID
FROM $DATABASENAME.MDM_LOAD_CONTROL_NCOA LOAD
LEFT OUTER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID

WHERE LI.LOAD_ID IS NULL
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

CREATE VOLATILE TABLE V_INPUT AS
(
SELECT DISTINCT
COALESCE(TRIM(STG.NEW_ADDRESS1),'') ADDR_LINE_1_TXT1,
COALESCE(TRIM(STG.NEW_ADDRESS2),'') ADDR_LINE_2_TXT1, 
' ' ADDR_LINE_3_TXT1, 
' ' STRET_NUM1, 
' ' STRET_NAME1, 
' ' APT_NUM1, 
' ' PO_BOX_NUM1, 
COALESCE(TRIM(STG.NEW_CITY),'') CITY_NAME1, 
COALESCE(TRIM(STG.NEW_STATE),'') TERR_NAME1,
COALESCE(TRIM(STG.NEW_ZIP),'') POSTL_AREA_CODE1, 
COALESCE(D.CNTRY_RECODE,TRIM(STG.NEW_COUNTRY),
SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3),'') CNTRY_NAME1,
SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) CNTRY_NAME2,
STG.LOAD_ID, 
STG.LOAD_TS
FROM $DATABASENAME.NCOA_ADDR_STG STG
  INNER JOIN LOAD_INFO B
  ON STG.LOAD_ID=B.LOAD_ID
  AND B.PROCESS_NAME='NCOA Input'
  AND B.STATUS = 'In Progress'
JOIN MKTNG_PGM MP
ON STG.MKTNG_PGM_NBR=MP.MKTNG_PGM_NBR  
LEFT JOIN CNTRY_RECODE D
ON TRIM(STG.NEW_COUNTRY)=D.CNTRY
WHERE (MP.LEGAL_ENT_NBR IN (SEL AV_CODE    
FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='External Standardization')
 AND SYS_ENT_STATE='Active'))
)
WITH DATA
PRIMARY INDEX (ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,STRET_NUM1, 
STRET_NAME1,APT_NUM1,PO_BOX_NUM1,CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_NAME1)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS V_INPUT
COLUMN ADDR_LINE_1_TXT1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS V_INPUT
COLUMN CITY_NAME1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS V_INPUT
COLUMN CNTRY_NAME1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

MERGE INTO POSTL_ADDR_ID_GEN A
USING
(SELECT DISTINCT * FROM V_INPUT
QUALIFY ROW_NUMBER() OVER (PARTITION BY ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,STRET_NUM1, 
STRET_NAME1,APT_NUM1,PO_BOX_NUM1,CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_NAME1
ORDER BY LOAD_ID DESC,LOAD_TS DESC)=1)
AS SRC
(
 V_ADDR_LINE_1_TXT1,
 V_ADDR_LINE_2_TXT1,
 V_ADDR_LINE_3_TXT1,
 V_STRET_NUM1, 
 V_STRET_NAME1,
 V_APT_NUM1,
 V_PO_BOX_NUM1,
 V_CITY_NAME1,
 V_TERR_NAME1,
 V_POSTL_AREA_CODE1,
 V_CNTRY_NAME1,
  V_CNTRY_NAME2,
 V_LOAD_ID,
V_LOAD_TS
)

ON ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT1
AND ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT1
AND ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT1
AND STRET_NUM=V_STRET_NUM1
AND STRET_NAME=V_STRET_NAME1
AND APT_NUM=V_APT_NUM1
AND PO_BOX_NUM=V_PO_BOX_NUM1
AND CITY_NAME=V_CITY_NAME1
AND TERR_NAME=V_TERR_NAME1
AND POSTL_AREA_CODE=V_POSTL_AREA_CODE1
AND CNTRY_INFO_TXT=V_CNTRY_NAME1

WHEN NOT MATCHED THEN 
INSERT
(ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT1,
STRET_NUM=V_STRET_NUM1, 
STRET_NAME=V_STRET_NAME1,
APT_NUM=V_APT_NUM1,
PO_BOX_NUM=V_PO_BOX_NUM1,
CITY_NAME=V_CITY_NAME1,
TERR_NAME=V_TERR_NAME1,
POSTL_AREA_CODE=V_POSTL_AREA_CODE1,
CNTRY_INFO_TXT=V_CNTRY_NAME1,
CNTRY_CODE=V_CNTRY_NAME2,
SYS_SOURCE=TRIM(CAST(V_LOAD_ID AS INTEGER)),
SYS_CREATION_DATE=V_LOAD_TS
);

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

MERGE INTO POSTL_ADDR A
USING
(SELECT DISTINCT POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_INFO_TXT                ,
CNTRY_CODE                    ,
SYS_SOURCE                    
FROM POSTL_ADDR_ID_GEN)
AS SRC
(
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_INFO_TXT                    ,
 V_CNTRY_CODE                    ,
V_SYS_SOURCE                    
)

ON POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN NOT MATCHED THEN 
INSERT
(POSTL_ADDR_ID=V_POSTL_ADDR_ID,
ORIG_ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ORIG_ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ORIG_ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
ORIG_STRET_NUM=V_STRET_NUM, 
ORIG_STRET_NAME=V_STRET_NAME,
ORIG_APT_NUM=V_APT_NUM,
ORIG_PO_BOX_NUM=V_PO_BOX_NUM,
ORIG_CITY_NAME=V_CITY_NAME,
ORIG_TERR_NAME=V_TERR_NAME,
ORIG_POSTL_AREA_CODE=V_POSTL_AREA_CODE,
ORIG_CNTRY_INFO_TXT=V_CNTRY_INFO_TXT,
CNTRY_CODE=V_CNTRY_CODE,
LOG_SOURCE_ID=CAST(V_SYS_SOURCE AS INTEGER),
LOG_UPDATE_USER='I25c',
POSTL_STRD_STATUS_CD='NS'
);

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT 1

.LABEL WARN
.QUIT 0
