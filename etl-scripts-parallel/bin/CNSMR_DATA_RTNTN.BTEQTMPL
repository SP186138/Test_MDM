/***********************************************************************************************************
SCRIPT:               CNSMR_DATA_RTNTN.BTEQ 
DESCRIPTION:          THIS SCRIPT DELETES CONSUMER INFORMATION
DEPENDENCY:           
INPUT:                GOLDEN TABLES
OUTPUT:               
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 05/17/2011           TERADATA                        INITIAL VERSION
2.00                 10/09/2012           TERADATA                        RELEASE 4.2
***********************************************************************************************************/

.RUN FILE $LOGON_FILE;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE $DATABASENAME;


DELETE FROM CNSMR_DATA_RTNTN ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
D.MKTNG_PGM_NBR,
D.LEGAL_ENT_NBR,
D.REGIS_PRSNA_ID,
D.REGIS_CNSMR_ID_VAL,
'Consumer Active',
D.CNSMR_ACTN_ID,
E.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM CNSMR_ACTN D

INNER JOIN DATA_RTNTN_REF B
ON D.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN SALES_TRANX E
ON D.CNSMR_ACTN_ID = E.CNSMR_ACTN_ID

WHERE CAST(CAST(D.CNSMR_ACTN_START_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

INNER JOIN LYLTY_TRANX E1
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM

WHERE CAST(CAST(E1.LYLTY_TRANX_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_OPT_OUT
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
C.CNSMR_CHCE_DATETM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

INNER JOIN (
SEL
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CAST(MAX(CAST(CNSMR_CHCE_DATETM AS VARCHAR(10))) AS DATE FORMAT 'YYYY-MM-DD') CNSMR_CHCE_DATETM
FROM
(
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_POSTL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_EMAIL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_PHONE A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_SOC_NET_ACCT A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
) A
GROUP BY 1,2,3
) C
ON A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_POSTL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) F
ON A.LEGAL_ENT_NBR = F.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = F.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_EMAIL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) H
ON A.LEGAL_ENT_NBR = H.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = H.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_PHONE A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) J
ON A.LEGAL_ENT_NBR = J.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = J.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = J.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_SOC_NET_ACCT A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) K
ON A.LEGAL_ENT_NBR = K.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = K.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = K.REGIS_PRSNA_ID

WHERE F.SUBSCRPTN_OPT_IND IS NULL
AND H.SUBSCRPTN_OPT_IND IS NULL
AND J.SUBSCRPTN_OPT_IND IS NULL
AND K.SUBSCRPTN_OPT_IND IS NULL
AND C.CNSMR_CHCE_DATETM IS NOT NULL
)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS REGIS_OPT_OUT
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN LYLTY_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_OPT_OUT_CNSMR_ACTN
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
D.CNSMR_ACTN_ID,
E.SALES_TRANX_NBR,
A.CNSMR_CHCE_DATETM

FROM REGIS_OPT_OUT A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

LEFT OUTER JOIN CNSMR_ACTN D
ON A.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D.REGIS_PRSNA_ID

LEFT OUTER JOIN SALES_TRANX E
ON D.CNSMR_ACTN_ID = E.CNSMR_ACTN_ID
)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
PII_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.CNSMR_ACTN_ID,
A.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'
WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.CNSMR_ACTN_ID,
A.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.CNSMR_ACTN_ID,
A.SALES_TRANX_NBR,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(B.STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_OPT_OUT_LYLTY_TRANX
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
S.LYLTY_TRANX_NUM,
S.LYLTY_PGM_NBR,
S.LYLTY_ACCT_NUM,
S.SALES_TRANX_NBR,
S.CNSMR_ACTN_ID,
A.CNSMR_CHCE_DATETM

FROM REGIS_OPT_OUT A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

LEFT OUTER JOIN (
SELECT 
S.LYLTY_TRANX_NUM,
S.LYLTY_PGM_NBR,
S.LYLTY_ACCT_NUM,
S.SALES_TRANX_NBR,
S.CNSMR_ACTN_ID
FROM LYLTY_TRANX S
GROUP BY 1,2,3,4,5
) S
ON A.LYLTY_PGM_NBR = S.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = S.LYLTY_ACCT_NUM
)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,LYLTY_TRANX_NUM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
PII_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_LYLTY_TRANX A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_LYLTY_TRANX A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Opted Out',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_OPT_OUT_LYLTY_TRANX A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

WHERE A.CNSMR_CHCE_DATETM <= ADD_MONTHS(CURRENT_DATE,-(B.STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE CNSMR_CHCE_DATETM
AS 
(SEL
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CAST(MAX(CAST(CNSMR_CHCE_DATETM AS VARCHAR(10))) AS DATE FORMAT 'YYYY-MM-DD') CNSMR_CHCE_DATETM
FROM
(
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_POSTL_ADDR A
WHERE CNSMR_CHCE_DATETM IS NOT NULL
GROUP BY 1,2,3
UNION
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_EMAIL_ADDR A
WHERE CNSMR_CHCE_DATETM IS NOT NULL
GROUP BY 1,2,3
UNION
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_PHONE A
WHERE CNSMR_CHCE_DATETM IS NOT NULL
GROUP BY 1,2,3
UNION
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_SOC_NET_ACCT A
WHERE CNSMR_CHCE_DATETM IS NOT NULL
GROUP BY 1,2,3
UNION
SEL 
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CAST(LATST_ACTVY_DATE AS TIMESTAMP(6)) CNSMR_CHCE_DATETM
FROM REGIS_PRSNA A
GROUP BY 1,2,3
) A
GROUP BY 1,2
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS CNSMR_CHCE_DATETM
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_CHCE_DATETM
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE CNSMR_ACTN_NAC
AS 
(
SELECT
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
MAX(CNSMR_ACTN_START_DATETM) CNSMR_ACTN_START_DATETM
FROM
(
SELECT
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
MAX(CNSMR_ACTN_START_DATETM) CNSMR_ACTN_START_DATETM
FROM
CNSMR_ACTN D
WHERE CNSMR_ACTN_START_DATETM IS NOT NULL
GROUP BY 1,2
UNION
SELECT
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
MAX(CAST(CNSMR_CHCE_DATETM AS TIMESTAMP(6))) CNSMR_ACTN_START_DATETM
FROM
CNSMR_CHCE_DATETM D
WHERE CNSMR_CHCE_DATETM IS NOT NULL
GROUP BY 1,2
) A
GROUP BY 1,2
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS CNSMR_ACTN_NAC
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_ACTN_NAC
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE LYLTY_TRANX_NAC
AS 
(
SELECT
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
MAX(LYLTY_TRANX_DATETM) LYLTY_TRANX_DATETM
FROM
LYLTY_TRANX D
WHERE LYLTY_TRANX_DATETM IS NOT NULL
GROUP BY 1,2
)
WITH DATA
PRIMARY INDEX ( LYLTY_PGM_NBR,LYLTY_ACCT_NUM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS LYLTY_TRANX_NAC
COLUMN LYLTY_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS LYLTY_TRANX_NAC
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_NAC1
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
D.LYLTY_PGM_NBR,
D.LYLTY_ACCT_NUM

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_NAC C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C.REGIS_PRSNA_ID

LEFT OUTER  JOIN LYLTY_TRANX_NAC D
ON A.LYLTY_PGM_NBR=D.LYLTY_PGM_NBR
AND A.LYLTY_ACCT_NUM=D.LYLTY_ACCT_NUM

WHERE COALESCE(CAST(CAST(C.CNSMR_ACTN_START_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND COALESCE(CAST(CAST(D.LYLTY_TRANX_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND (C.REGIS_PRSNA_ID IS NOT NULL OR D.LYLTY_ACCT_NUM IS NOT NULL)
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_NAC2
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
D.LYLTY_PGM_NBR,
D.LYLTY_ACCT_NUM

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_NAC C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C.REGIS_PRSNA_ID

LEFT OUTER  JOIN LYLTY_TRANX_NAC D
ON A.LYLTY_PGM_NBR=D.LYLTY_PGM_NBR
AND A.LYLTY_ACCT_NUM=D.LYLTY_ACCT_NUM

WHERE COALESCE(CAST(CAST(C.CNSMR_ACTN_START_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND COALESCE(CAST(CAST(D.LYLTY_TRANX_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND (C.REGIS_PRSNA_ID IS NOT NULL OR D.LYLTY_ACCT_NUM IS NOT NULL)
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_NAC3
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
D.LYLTY_PGM_NBR,
D.LYLTY_ACCT_NUM

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_NAC C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C.REGIS_PRSNA_ID

LEFT OUTER  JOIN LYLTY_TRANX_NAC D
ON A.LYLTY_PGM_NBR=D.LYLTY_PGM_NBR
AND A.LYLTY_ACCT_NUM=D.LYLTY_ACCT_NUM

WHERE COALESCE(CAST(CAST(C.CNSMR_ACTN_START_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND COALESCE(CAST(CAST(D.LYLTY_TRANX_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND (C.REGIS_PRSNA_ID IS NOT NULL OR D.LYLTY_ACCT_NUM IS NOT NULL)
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS REGIS_NAC1
COLUMN LYLTY_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC1
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC1
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC1
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC2
COLUMN LYLTY_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC2
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC2
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC2
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC3
COLUMN LYLTY_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC3
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC3
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAC3
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
D1.CNSMR_ACTN_ID,
F.SALES_TRANX_NBR,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC1 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN SALES_TRANX F
ON D1.CNSMR_ACTN_ID = F.CNSMR_ACTN_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC1 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN LYLTY_TRANX E1
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
D1.CNSMR_ACTN_ID,
F.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC2 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN SALES_TRANX F
ON D1.CNSMR_ACTN_ID = F.CNSMR_ACTN_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC2 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN LYLTY_TRANX E1
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
D1.CNSMR_ACTN_ID,
F.SALES_TRANX_NBR,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC3 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN SALES_TRANX F
ON D1.CNSMR_ACTN_ID = F.CNSMR_ACTN_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from Consumer',
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAC3 A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR NO ACTIVITY'

LEFT OUTER JOIN LYLTY_TRANX E1
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE LH_REALIZED_LEAD_NAP
AS 
(
SELECT
REGIS_PRSNA_ID,
MAX(SELECTION_DTTM) SELECTION_DTTM
FROM
LH_REALIZED_LEAD D
WHERE SELECTION_DTTM IS NOT NULL
GROUP BY 1
)
WITH DATA
PRIMARY INDEX ( REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS LH_REALIZED_LEAD_NAP
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE SET TABLE REGIS_NAP_CNSMR_ACTN
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
D.SELECTION_DTTM,
A.LATST_ACTVY_DATE

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE IN ('PG NO ACTIVITY','6 month rule')

LEFT OUTER JOIN LH_REALIZED_LEAD_NAP D
ON A.REGIS_PRSNA_ID = D.REGIS_PRSNA_ID

)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS REGIS_NAP_CNSMR_ACTN
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_NAP_CNSMR_ACTN
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE REGIS_NAP_LYLTY
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
D.SELECTION_DTTM,
A.LATST_ACTVY_DATE

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE IN ('PG NO ACTIVITY','6 month rule')

LEFT OUTER JOIN LH_REALIZED_LEAD_NAP D
ON A.REGIS_PRSNA_ID = D.REGIS_PRSNA_ID

LEFT OUTER JOIN LYLTY_TRANX E1
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,LYLTY_TRANX_NUM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE CNSMR_ACTN_TMP
AS 
(
SELECT 
D1.MKTNG_PGM_NBR,
D1.REGIS_PRSNA_ID,
E.SALES_TRANX_NBR,
D1.CNSMR_ACTN_ID

FROM CNSMR_ACTN D1
LEFT OUTER JOIN SALES_TRANX E
ON D1.CNSMR_ACTN_ID = E.CNSMR_ACTN_ID
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_ID,SALES_TRANX_NBR )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS CNSMR_ACTN_TMP
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(B.STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'No Activity from P&G',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'PG NO ACTIVITY'

WHERE CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(B.STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
PII_DATA,
PII_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
B.PII_STATUS,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(PII_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_DATA))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
D1.CNSMR_ACTN_ID,
D1.SALES_TRANX_NBR,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_CNSMR_ACTN A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_ACTN_TMP D1
ON A.MKTNG_PGM_NBR = D1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = D1.REGIS_PRSNA_ID

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
REGIS_DATA,
REGIS_STATUS,
SYS_LAST_MODIFIED_DATE
)
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'6 month rule',
A.LYLTY_TRANX_NUM,
A.LYLTY_PGM_NBR,
A.LYLTY_ACCT_NUM,
A.SALES_TRANX_NBR,
A.CNSMR_ACTN_ID,
'Y',
TRIM(B.STATUS_CHANGE),
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM REGIS_NAP_LYLTY A

INNER JOIN DATA_RTNTN_REF B
ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = '6 month rule'

LEFT OUTER JOIN CNSMR_CHCE_DATETM E1
ON A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = E1.REGIS_PRSNA_ID

WHERE COALESCE(CAST(CAST(A.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD'),
CAST('1900-01-01' AS DATE FORMAT 'YYYY-MM-DD')) <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND CAST(A.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
AND CAST(E1.CNSMR_CHCE_DATETM AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(STATUS))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS CNSMR_DATA_RTNTN
COLUMN CNSMR_ACTN_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN LYLTY_CNSMR_ACTN_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN LYLTY_ACCT_NUM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN SALES_TRANX_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN LYLTY_SALES_TRANX_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS CNSMR_DATA_RTNTN
COLUMN STATUS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT 1

.LABEL WARN
.QUIT 0                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               