/***********************************************************************************************************
SCRIPT:               CNSMR_TSS_MATCH_STG.BTEQ 
DESCRIPTION:          THIS SCRIPT UPDATES LOAD_INFO
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT
OUTPUT:               TRILLIUM OUTPUT
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 10/31/2011           TERADATA                        CHANGES FOR ||ELISM
R2O                  05/11/2012           TERADATA                        ADD VALIDATION FOR BLANK WINKEY
3.00                 05/13/2013           TERADATA                        EUROPE
R5.0                 01/28/2014           TERADATA                        ADD NATIONAL_ID_NBR,LAT/LONG 
***********************************************************************************************************/

.RUN FILE \\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\logon\LOGON.txt;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL (3807) SEVERITY 0;

DATABASE MDM;

INSERT INTO TRILLIUM_OUTPUT1_ET
(ImportSeq                     ,
DMLSeq                        ,
SMTSeq                        ,
ApplySeq                      ,
SourceSeq                     ,
ErrorCode                     ,
ErrorField                    ,
PROCESS_TIMESTAMP             ,
MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
SYS_TARGET_ID                 ,
SYS_SOURCE                    ,
LEGAL_ENT_NBR                 ,
NAME_PREFX_TXT                ,
GVN_NAME                      ,
MID_NAME                      ,
FAMLY_NAME                    ,
NAME_SUFFX_TXT                ,
FULL_NAME                     ,
GENDR_IND                     ,
BRTH_DATE                     ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_NAME                    ,
DPEND_NAME                    ,
PET_NAME                      ,
WIN_KEY                       ,
SYNC_STATUS                   ,
USER_NAME                     ,
LANG_CODE                     ,
SYS_NC_TYPE                   ,
SYS_CREATION_DATE             ,
EMAIL_ADDR_TXT                ,
PHONE_EXTSN_NUM               ,
FULL_PHONE_NUM                ,
PHONE_LINE_NBR                ,
PHONE_AREA_NBR                ,
PHONE_EXCHG_NBR               ,
PHONE_CNTRY_NBR               ,
PRSNA_REG_DT                  ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
ERR_FILE_KEY
)
SELECT A.ImportSeq,
A.DMLSeq,
A.SMTSeq,
A.ApplySeq,
A.SourceSeq,
A.ErrorCode,
A.ErrorField,
CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)),
B.MKTNG_PGM_NBR,
B.REGIS_CNSMR_ID_VAL,
B.SYS_TARGET_ID,
B.SYS_SOURCE,
C.LEGAL_ENT_NBR                 ,
C.NAME_PREFX_TXT                ,
C.GVN_NAME                      ,
C.MID_NAME                      ,
C.FAMLY_NAME                    ,
C.NAME_SUFFX_TXT                ,
C.FULL_NAME                     ,
C.GENDR_IND                     ,
C.BRTH_DATE                     ,
C.ADDR_LINE_1_TXT               ,
C.ADDR_LINE_2_TXT               ,
C.ADDR_LINE_3_TXT               ,
C.STRET_NUM                     ,
C.STRET_NAME                    ,
C.APT_NUM                       ,
C.PO_BOX_NUM                    ,
C.CITY_NAME                     ,
C.POSTL_AREA_CODE               ,
C.TERR_NAME                     ,
C.CNTRY_NAME                    ,
C.DPEND_NAME                    ,
C.PET_NAME                      ,
C.WIN_KEY                       ,
C.SYNC_STATUS                   ,
C.USER_NAME                     ,
C.LANG_CODE                     ,
C.SYS_NC_TYPE                   ,
C.SYS_CREATION_DATE             ,
C.EMAIL_ADDR_TXT                ,
C.PHONE_EXTSN_NUM               ,
C.FULL_PHONE_NUM                ,
C.PHONE_LINE_NBR                ,
C.PHONE_AREA_NBR                ,
C.PHONE_EXCHG_NBR               ,
C.PHONE_CNTRY_NBR               ,
C.PRSNA_REG_DT                  ,
C.ADDRESS_CONTACT               ,
C.ADDRESS_SUBSCRPTN             ,
C.PHONE_CONTACT                 ,
C.PHONE_SUBSCRPTN               ,
C.EMAIL_CONTACT                 ,
C.EMAIL_SUBSCRPTN      ,
TRIM(CAST(MIN(CAST(C.SYS_SOURCE AS INTEGER)) AS CHAR(20)))
FROM ET_TRILLIUM_OUTPUT1_GBR A
LEFT OUTER JOIN TRILLIUM_OUTPUT1_GBR_KEY B
ON A.SOURCESEQ=B.SEQ
LEFT OUTER JOIN TSS_CLEANSE_INPUT1_GBR C
ON C.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND C.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND C.SYS_TARGET_ID=B.SYS_TARGET_ID
AND C.SYS_SOURCE=B.SYS_SOURCE
GROUP BY 1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,
51,52,53,54;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO TRILLIUM_OUTPUT1_UV
(MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
DR_ALIAS_CONTACT              ,
DR_FIRST_NAME                 ,
DR_MIDDLE_NAME                ,
DR_LAST_NAME                  ,
DR_MRMRS                      ,
DR_NAME_GENER                 ,
DR_NAME_SUFFIX                ,
DR_NAME_GENDER                ,
DR_COUNTRY_NAME               ,
DR_REGION_NAME                ,
DR_CITY_NAME                  ,
DR_POSTAL_CODE                ,
DR_STREET_NAME                ,
DR_HOUSE_NUMBER1              ,
DR_HOUSE_NUMBER2              ,
DR_POBOX_NUMBER               ,
DR_ADDRESS                    ,
DR_ADDRESS2                   ,
DR_ADDRESS3                   ,
CLEANSED_PHONE_1              ,
CLEANSED_EMAIL_1              ,
PR_REV_GROUP                  ,
GOUT_MATCH_LEVEL              ,
WINDOW_KEY_01                 ,
REFERENCE_HOUSEHOLD_ID        ,
REFERENCE_LEGALENTITYKEY      ,
REFERENCE_REGISTRATIONKEY     ,
LEGAL_ENT_NBR                 ,
BRTH_DATE                     ,
LANG_CODE                     ,
CNSMR_USER_NAME               ,
STATUS                        ,
FULL_NAME                     ,
DPEND_NAME                    ,
PET_NAME                      ,
PR_NAME_FORM_01               ,
DR_ALIAS_ACCOUNT              ,
REFERENCE_MATCHED_LEV1_PATTERN,
REFERENCE_MATCHED_LEV2_PATTERN,
DR_BUSINESS_NAME              ,
EMAIL_IND                     ,
REGIS_DATE                    ,
RECORD_IND                    ,
RECENT_IND                    ,
REGIS_PRSNA_ID                ,
HH_FLAG                       ,
LE_FLAG                       ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_SOURCE                    ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_LAST_MODIFIED_DATE        ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
ImportSeq                     ,
DMLSeq                        ,
SMTSeq                        ,
ApplySeq                      ,
SourceSeq                     ,
Uniqueness                    ,
DBCErrorCode                  ,
DBCErrorField                 ,
PROCESS_TIMESTAMP             ,
SRC_MKTNG_PGM_NBR             ,
SRC_REGIS_CNSMR_ID_VAL        ,
SRC_SYS_TARGET_ID             ,
SRC_SYS_SOURCE                ,
SRC_LEGAL_ENT_NBR             ,
SRC_NAME_PREFX_TXT            ,
SRC_GVN_NAME                  ,
SRC_MID_NAME                  ,
SRC_FAMLY_NAME                ,
SRC_NAME_SUFFX_TXT            ,
SRC_FULL_NAME                 ,
SRC_GENDR_IND                 ,
SRC_BRTH_DATE                 ,
SRC_ADDR_LINE_1_TXT           ,
SRC_ADDR_LINE_2_TXT           ,
SRC_ADDR_LINE_3_TXT           ,
SRC_STRET_NUM                 ,
SRC_STRET_NAME                ,
SRC_APT_NUM                   ,
SRC_PO_BOX_NUM                ,
SRC_CITY_NAME                 ,
SRC_POSTL_AREA_CODE           ,
SRC_TERR_NAME                 ,
SRC_CNTRY_NAME                ,
SRC_DPEND_NAME                ,
SRC_PET_NAME                  ,
SRC_WIN_KEY                   ,
SRC_SYNC_STATUS               ,
SRC_USER_NAME                 ,
SRC_LANG_CODE                 ,
SRC_SYS_NC_TYPE               ,
SRC_SYS_CREATION_DATE         ,
SRC_EMAIL_ADDR_TXT            ,
SRC_PHONE_EXTSN_NUM           ,
SRC_FULL_PHONE_NUM            ,
SRC_PHONE_LINE_NBR            ,
SRC_PHONE_AREA_NBR            ,
SRC_PHONE_EXCHG_NBR           ,
SRC_PHONE_CNTRY_NBR           ,
SRC_PRSNA_REG_DT              ,
SRC_ADDRESS_CONTACT           ,
SRC_ADDRESS_SUBSCRPTN         ,
SRC_PHONE_CONTACT             ,
SRC_PHONE_SUBSCRPTN           ,
SRC_EMAIL_CONTACT             ,
SRC_EMAIL_SUBSCRPTN           
)
SELECT A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.DR_ALIAS_CONTACT,
A.DR_FIRST_NAME,
A.DR_MIDDLE_NAME,
A.DR_LAST_NAME,
A.DR_MRMRS,
A.DR_NAME_GENER,
A.DR_NAME_SUFFIX,
A.DR_NAME_GENDER,
A.DR_COUNTRY_NAME,
A.DR_REGION_NAME,
A.DR_CITY_NAME,
A.DR_POSTAL_CODE,
A.DR_STREET_NAME,
A.DR_HOUSE_NUMBER1,
A.DR_HOUSE_NUMBER2,
A.DR_POBOX_NUMBER,
A.DR_ADDRESS,
A.DR_ADDRESS2,
A.DR_ADDRESS3,
A.CLEANSED_PHONE_1,
A.CLEANSED_EMAIL_1,
A.PR_REV_GROUP,
A.GOUT_MATCH_LEVEL,
A.WINDOW_KEY_01,
A.REFERENCE_HOUSEHOLD_ID,
A.REFERENCE_LEGALENTITYKEY,
A.REFERENCE_REGISTRATIONKEY,
A.LEGAL_ENT_NBR,
A.BRTH_DATE,
A.LANG_CODE,
A.CNSMR_USER_NAME,
A.STATUS,
A.FULL_NAME,
A.DPEND_NAME,
A.PET_NAME,
A.PR_NAME_FORM_01,
A.DR_ALIAS_ACCOUNT,
A.REFERENCE_MATCHED_LEV1_PATTERN,
A.REFERENCE_MATCHED_LEV2_PATTERN,
A.DR_BUSINESS_NAME,
A.EMAIL_IND,
A.REGIS_DATE,
A.RECORD_IND,
A.RECENT_IND,
A.REGIS_PRSNA_ID,
A.HH_FLAG,
A.LE_FLAG,
A.SYS_TARGET_ID,
A.SYS_AUTH_ID,
A.SYS_SOURCE,
A.SYS_CREATED_BY,
A.SYS_CREATION_DATE,
A.SYS_ENT_STATE,
A.SYS_LAST_MODIFIED_BY,
A.SYS_LAST_MODIFIED_DATE,
A.SYS_NC_TYPE,
A.SYS_ERR_CODE,
A.SYS_ERR_SVRTY,
A.ADDRESS_CONTACT,
A.ADDRESS_SUBSCRPTN,
A.PHONE_CONTACT,
A.PHONE_SUBSCRPTN,
A.EMAIL_CONTACT,
A.EMAIL_SUBSCRPTN,
A.ImportSeq,
A.DMLSeq,
A.SMTSeq,
A.ApplySeq,
A.SourceSeq,
A.Uniqueness,
A.DBCErrorCode,
A.DBCErrorField,
CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)),
B.MKTNG_PGM_NBR,
B.REGIS_CNSMR_ID_VAL,
B.SYS_TARGET_ID,
B.SYS_SOURCE,
C.LEGAL_ENT_NBR             ,
C.NAME_PREFX_TXT            ,
C.GVN_NAME                  ,
C.MID_NAME                  ,
C.FAMLY_NAME                ,
C.NAME_SUFFX_TXT            ,
C.FULL_NAME                 ,
C.GENDR_IND                 ,
C.BRTH_DATE                 ,
C.ADDR_LINE_1_TXT           ,
C.ADDR_LINE_2_TXT           ,
C.ADDR_LINE_3_TXT           ,
C.STRET_NUM                 ,
C.STRET_NAME                ,
C.APT_NUM                   ,
C.PO_BOX_NUM                ,
C.CITY_NAME                 ,
C.POSTL_AREA_CODE           ,
C.TERR_NAME                 ,
C.CNTRY_NAME                ,
C.DPEND_NAME                ,
C.PET_NAME                  ,
C.WIN_KEY                   ,
C.SYNC_STATUS               ,
C.USER_NAME                 ,
C.LANG_CODE                 ,
C.SYS_NC_TYPE               ,
C.SYS_CREATION_DATE         ,
C.EMAIL_ADDR_TXT            ,
C.PHONE_EXTSN_NUM           ,
C.FULL_PHONE_NUM            ,
C.PHONE_LINE_NBR            ,
C.PHONE_AREA_NBR            ,
C.PHONE_EXCHG_NBR           ,
C.PHONE_CNTRY_NBR           ,
C.PRSNA_REG_DT              ,
C.ADDRESS_CONTACT           ,
C.ADDRESS_SUBSCRPTN         ,
C.PHONE_CONTACT             ,
C.PHONE_SUBSCRPTN           ,
C.EMAIL_CONTACT             ,
C.EMAIL_SUBSCRPTN           
FROM UV_TRILLIUM_OUTPUT1_GBR A
LEFT OUTER JOIN TRILLIUM_OUTPUT1_GBR_KEY B
ON A.SOURCESEQ=B.SEQ
LEFT OUTER JOIN TSS_CLEANSE_INPUT1_GBR C
ON C.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND C.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND C.SYS_TARGET_ID=B.SYS_TARGET_ID
AND C.SYS_SOURCE=B.SYS_SOURCE;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


INSERT INTO TRILLIUM_OUTPUT1_GBR
(
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
SYS_SOURCE,
WINDOW_KEY_01,
SYS_TARGET_ID,
SYS_NC_TYPE
)
SELECT
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
TRIM(A.SYS_SOURCE),
'',
SYS_TARGET_ID,
SYS_NC_TYPE
FROM
(SELECT 
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_TARGET_ID
FROM
TSS_CLEANSE_INPUT1_GBR
GROUP BY 1,2,3,4,5,6
MINUS
SELECT 
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_TARGET_ID
FROM
TRILLIUM_OUTPUT1_GBR
GROUP BY 1,2,3,4,5,6
) A
GROUP BY 1,2,3,4,5,6,7;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG_CURR_LOAD (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,
LOAD_ID,SYS_ERR_CODE,SYS_NC_TYPE)
SELECT DISTINCT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
DER1.SYS_TARGET_ID,
DER1.LOAD_ID,
CASE WHEN ERRORCODE IS NOT NULL AND ERRORCODE=6706
THEN 'Error Code - '||ERRORCODE||'; Error Description - '||ERRORTEXT||';Untranslatable Character found in '
||DBCERRORFIELD 
WHEN ERRORCODE IS NOT NULL AND ERRORCODE<>6706 AND DBCERRORFIELD IS NOT NULL
THEN 'Error Code - '||ERRORCODE||'; Error Description - '||ERRORTEXT||';Error found in '
||DBCERRORFIELD 
WHEN ERRORCODE IS NOT NULL AND ERRORCODE<>6706 AND DBCERRORFIELD IS NULL
THEN 'Error Code - '||ERRORCODE||'; Error Description - '||ERRORTEXT
ELSE 'Record not received from Trillium'
END SYS_ERR_CODE,
'I'

FROM
(
SELECT 
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL,
STG.SYS_TARGET_ID,
LOAD.LOAD_ID,
COALESCE(A.ERRORCODE,B.DBCERRORCODE) ERRORCODE,
C.ERRORTEXT,
COALESCE(A.ERRORFIELD,B.DBCERRORFIELD) DBCERRORFIELD
FROM
TRILLIUM_OUTPUT1_GBR STG
INNER JOIN
MDM_LOAD_CONTROL LOAD
ON CAST(STG.SYS_SOURCE AS INTEGER) = LOAD.LOAD_ID
LEFT OUTER JOIN TRILLIUM_OUTPUT1_ET A
ON STG.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = A.REGIS_CNSMR_ID_VAL
AND STG.SYS_TARGET_ID = A.SYS_TARGET_ID
AND STG.SYS_SOURCE = A.SYS_SOURCE
LEFT OUTER JOIN TRILLIUM_OUTPUT1_UV B
ON STG.MKTNG_PGM_NBR = B.SRC_MKTNG_PGM_NBR
AND STG.REGIS_CNSMR_ID_VAL = B.SRC_REGIS_CNSMR_ID_VAL
AND STG.SYS_TARGET_ID = B.SRC_SYS_TARGET_ID
AND STG.SYS_SOURCE = B.SRC_SYS_SOURCE
LEFT OUTER JOIN ERRORMSGS C
ON COALESCE(A.ERRORCODE,B.DBCERRORCODE) = C.ERRORCODE
WHERE STG.WINDOW_KEY_01 IS NULL
OR STG.WINDOW_KEY_01 = ''
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

--Get the rejected records from MDM.ERR_PRSNA_STG with error code 6706 for untranslatable character
CREATE VOLATILE TABLE VT_ERR_PRSNA AS
(SEL b.REGIS_CNSMR_ID_VAL,b.MKTNG_PGM_NBR,c.SYS_TARGET_ID,b.LOAD_ID FROM MDM.ERR_PRSNA_STG_CURR_LOAD   b
INNER JOIN mdm.TSS_CLEANSE_INPUT1_GBR c
ON b.REGIS_CNSMR_ID_VAL=c.REGIS_CNSMR_ID_VAL
AND b.MKTNG_PGM_NBR=c.MKTNG_PGM_NBR
AND b.LOAD_ID=cast(c.SYS_SOURCE as integer)
WHERE sys_err_code like '%6706%' )
WITH DATA
ON COMMIT PRESERVE ROWS;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

--Take all column values from TSS_CLEANSE_INPUT_GBR and REFERENCE_HOUSEHOLD_ID, REFERENCE_LEGALENTITYKEY, REFERENCE_REGISTRATIONKEY from TRILLIUM_OUTPUT1_GBR_KEY table
CREATE VOLATILE TABLE VT_Trillium_Output AS
(SEL b.*,c.REFERENCE_LEGALENTITYKEY, c.REFERENCE_REGISTRATIONKEY,c.REFERENCE_HOUSEHOLD_ID FROM  mdm.TSS_CLEANSE_INPUT_GBR B JOIN 
mdm.TRILLIUM_OUTPUT1_GBR_KEY C
ON 
B.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND B.REGIS_CNSMR_ID_VAL=C. REGIS_CNSMR_ID_VAL
AND  cast(B.SYS_SOURCE as integer)=cast(C.SYS_SOURCE as integer)
INNER JOIN VT_ERR_PRSNA D
ON B.MKTNG_PGM_NBR=D.MKTNG_PGM_NBR
AND B.REGIS_CNSMR_ID_VAL=D. REGIS_CNSMR_ID_VAL
AND  cast(B.SYS_SOURCE as integer)=D.LOAD_ID)
WITH DATA
Primary index ( MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID)
ON COMMIT PRESERVE ROWS;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


--update reference_household_id, reference_legalentitykey, reference_registrationkey which are not there in key table and existing registration
UPDATE a from VT_Trillium_Output a,
(SEL distinct  t1.matchd_cnsmr_prsna_id, regis_prsna_id,hshld_prsna_id,MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL,t1.SYS_TARGET_ID FROM mdm.REGIS_PRSNA t1
INNER JOIN iCRM.MATCHD_CNSMR_PRSNA t2
ON  t1.MATCHD_CNSMR_PRSNA_ID=t2.MATCHD_CNSMR_PRSNA_ID
AND t1.LEGAL_ENT_NBR=t2.LEGAL_ENT_NBR
where (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,t1.SYS_TARGET_ID) IN(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID FROM VT_ERR_PRSNA)
qualify row_number() over(partition by t1.regis_prsna_id order by t1.sys_last_modified_date desc) =1)b
set REFERENCE_HOUSEHOLD_ID=hshld_prsna_id,
REFERENCE_LEGALENTITYKEY=matchd_cnsmr_prsna_id,
REFERENCE_REGISTRATIONKEY=REGIS_PRSNA_ID
WHERE a.MKTNG_PGM_NBR=b.MKTNG_PGM_NBR and
a.REGIS_CNSMR_ID_VAL=b.REGIS_CNSMR_ID_VAL and
a.SYS_TARGET_ID=b.SYS_TARGET_ID and
(a.REFERENCE_HOUSEHOLD_ID is null or REFERENCE_LEGALENTITYKEY is null or REFERENCE_REGISTRATIONKEY is null);


.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

--for new registration update reference_household_id, reference_legalentitykey, reference_registrationkey based on same email address 
UPDATE a FROM VT_Trillium_Output a,
(
SEL E.REGIS_CNSMR_ID_VAL,E.MKTNG_PGM_NBR,E.SYS_TARGET_ID,hshld_prsna_id, 
CASE WHEN C.GVN_NAME=E.GVN_NAME and C.FAMLY_NAME=E.FAMLY_NAME and C.GENDR_IND=E.GENDR_IND
THEN C.matchd_cnsmr_prsna_id  ELSE (SEL coalesce('LE0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_LEGALENTITYKEY,'[^0-9]+'))+1) as integer)) ,'LE0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_LEGALENTITYKEY like '%LE%' )END matchd_cnsmr_prsna_id,
CASE WHEN C.MKTNG_PGM_NBR=E.MKTNG_PGM_NBR 
THEN C.REGIS_PRSNA_ID ELSE   (SEL coalesce('RG0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_REGISTRATIONKEY,'[^0-9]+'))+1) as integer)) ,'RG0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_REGISTRATIONKEY like '%RG%' )END REGIS_PRSNA_ID
FROM icrm.REGIS_PRSNA_EMAIL_ADDR B
JOIN icrm.REGIS_PRSNA C
ON B.MKTNG_PGM_NBR=C. MKTNG_PGM_NBR
AND B.REGIS_PRSNA_ID=C. REGIS_PRSNA_ID
JOIN iCRM.MATCHD_CNSMR_PRSNA D
ON  D.MATCHD_CNSMR_PRSNA_ID=C.MATCHD_CNSMR_PRSNA_ID
AND D.LEGAL_ENT_NBR=C.LEGAL_ENT_NBR
JOIN VT_Trillium_Output E
ON TRIM(E.EMAIL_ADDR_TXT)=TRIM(B.EMAIL_ADDR_TXT)
AND E.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
WHERE coalesce(trim(E.EMAIL_ADDR_TXT),'')<>''
qualify row_number() over(partition by E.MKTNG_PGM_NBR ,E.REGIS_CNSMR_ID_VAL,E.SYS_TARGET_ID
order by REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY,REFERENCE_REGISTRATIONKEY,c.SYS_LAST_MODIFIED_DATE,c.REGIS_DATETM,c.REGIS_PRSNA_ID) =1
)b
SET REFERENCE_HOUSEHOLD_ID=hshld_prsna_id,
REFERENCE_LEGALENTITYKEY=matchd_cnsmr_prsna_id,
REFERENCE_REGISTRATIONKEY=REGIS_PRSNA_ID
WHERE  a.REGIS_CNSMR_ID_VAL=b.REGIS_CNSMR_ID_VAL
and a.MKTNG_PGM_NBR=b.MKTNG_PGM_NBR
and a.SYS_TARGET_ID=b.SYS_TARGET_ID and
(a.REFERENCE_HOUSEHOLD_ID is null or REFERENCE_LEGALENTITYKEY is null or REFERENCE_REGISTRATIONKEY is null);


.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

--for new registration update reference_household_id, reference_legalentitykey, reference_registrationkey based on same phone number
UPDATE a FROM VT_Trillium_Output a,
(
SEL E.MKTNG_PGM_NBR ,E.REGIS_CNSMR_ID_VAL,E.SYS_TARGET_ID,hshld_prsna_id, 
CASE WHEN C.GVN_NAME=E.GVN_NAME and C.FAMLY_NAME=E.FAMLY_NAME and C.GENDR_IND=E.GENDR_IND
THEN C.matchd_cnsmr_prsna_id  ELSE (SEL coalesce('LE0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_LEGALENTITYKEY,'[^0-9]+'))+1) as integer)) ,'LE0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_LEGALENTITYKEY like '%LE%' )END matchd_cnsmr_prsna_id,
CASE WHEN C.MKTNG_PGM_NBR=E.MKTNG_PGM_NBR 
THEN C.REGIS_PRSNA_ID ELSE   (SEL coalesce('RG0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_REGISTRATIONKEY,'[^0-9]+'))+1) as integer)) ,'RG0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_REGISTRATIONKEY like '%RG%' )END REGIS_PRSNA_ID
FROM icrm.REGIS_PRSNA_PHONE B
JOIN icrm.REGIS_PRSNA C
ON B.MKTNG_PGM_NBR=C. MKTNG_PGM_NBR
AND B.REGIS_PRSNA_ID=C. REGIS_PRSNA_ID
JOIN iCRM.MATCHD_CNSMR_PRSNA D
ON  D.MATCHD_CNSMR_PRSNA_ID=C.MATCHD_CNSMR_PRSNA_ID
AND D.LEGAL_ENT_NBR=C.LEGAL_ENT_NBR
JOIN VT_Trillium_Output E
ON TRIM(E.FULL_PHONE_NUM)=TRIM(B.FULL_PHONE_NUM)
AND E.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
WHERE coalesce(trim(E.FULL_PHONE_NUM),'')<>''
qualify row_number() over(partition by E.MKTNG_PGM_NBR ,E.REGIS_CNSMR_ID_VAL,E.SYS_TARGET_ID
order by REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY,REFERENCE_REGISTRATIONKEY,c.SYS_LAST_MODIFIED_DATE,c.REGIS_DATETM,c.REGIS_PRSNA_ID) =1
)b
SET REFERENCE_HOUSEHOLD_ID=hshld_prsna_id,
REFERENCE_LEGALENTITYKEY=matchd_cnsmr_prsna_id,
REFERENCE_REGISTRATIONKEY=REGIS_PRSNA_ID
WHERE  a.REGIS_CNSMR_ID_VAL=b.REGIS_CNSMR_ID_VAL
and a.MKTNG_PGM_NBR=b.MKTNG_PGM_NBR
and a.SYS_TARGET_ID=b.SYS_TARGET_ID 
and a.REFERENCE_HOUSEHOLD_ID is null or REFERENCE_LEGALENTITYKEY is null or REFERENCE_REGISTRATIONKEY is null;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

--for new registration update reference_household_id, reference_legalentitykey, reference_registrationkey based on same postal address
UPDATE a FROM VT_Trillium_Output a,
(
SEL E.MKTNG_PGM_NBR ,E.REGIS_CNSMR_ID_VAL,E.SYS_TARGET_ID,hshld_prsna_id, 
CASE WHEN C.GVN_NAME=E.GVN_NAME and C.FAMLY_NAME=E.FAMLY_NAME and C.GENDR_IND=E.GENDR_IND
THEN C.matchd_cnsmr_prsna_id  ELSE (SEL coalesce('LE0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_LEGALENTITYKEY,'[^0-9]+'))+1) as integer)) ,'LE0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_LEGALENTITYKEY like '%LE%' )END matchd_cnsmr_prsna_id,
CASE WHEN C.MKTNG_PGM_NBR=E.MKTNG_PGM_NBR 
THEN C.REGIS_PRSNA_ID ELSE   (SEL coalesce('RG0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_REGISTRATIONKEY,'[^0-9]+'))+1) as integer)) ,'RG0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_REGISTRATIONKEY like '%RG%' )END REGIS_PRSNA_ID
FROM icrm.REGIS_PRSNA_POSTL_ADDR B
JOIN icrm.REGIS_PRSNA C
ON B.MKTNG_PGM_NBR=C. MKTNG_PGM_NBR
AND B.REGIS_PRSNA_ID=C. REGIS_PRSNA_ID
JOIN iCRM.MATCHD_CNSMR_PRSNA D
ON  D.MATCHD_CNSMR_PRSNA_ID=C.MATCHD_CNSMR_PRSNA_ID
AND D.LEGAL_ENT_NBR=C.LEGAL_ENT_NBR
JOIN VT_Trillium_Output E
ON COALESCE(TRIM(B.ADDR_LINE_1_TXT),'')=COALESCE(TRIM(E.ADDR_LINE_1_TXT),'')
AND COALESCE(TRIM(B.ADDR_LINE_2_TXT),'')=COALESCE(TRIM(E.ADDR_LINE_2_TXT),'')
AND COALESCE(TRIM(B.ADDR_LINE_3_TXT),'')=COALESCE(TRIM(E.ADDR_LINE_3_TXT),'')
AND COALESCE(TRIM(B.CNTRY_CODE),'')=COALESCE(TRIM(E.CNTRY_NAME),'')
AND COALESCE(TRIM(B.TERR_NAME),'')=COALESCE(TRIM(E.TERR_NAME),'')
AND COALESCE(TRIM(B.CITY_NAME),'')=COALESCE(TRIM(E.CITY_NAME),'')
AND COALESCE(TRIM(B.POSTL_AREA_CODE),'')=COALESCE(TRIM(E.POSTL_AREA_CODE),'')
AND E.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
WHERE (COALESCE(TRIM(E.ADDR_LINE_1_TXT),'')<>'' or COALESCE(TRIM(E.ADDR_LINE_2_TXT),'')<>'' or COALESCE(TRIM(E.ADDR_LINE_3_TXT),'')<>'' or 
COALESCE(TRIM(E.TERR_NAME),'')<>''  or  COALESCE(TRIM(E.CITY_NAME),'')<>''or COALESCE(TRIM(E.POSTL_AREA_CODE),'')<>'' or COALESCE(TRIM(E.CNTRY_NAME),'')<>'')
qualify row_number() over(partition by E.MKTNG_PGM_NBR ,E.REGIS_CNSMR_ID_VAL,E.SYS_TARGET_ID
order by REFERENCE_HOUSEHOLD_ID,REFERENCE_LEGALENTITYKEY,REFERENCE_REGISTRATIONKEY,c.SYS_LAST_MODIFIED_DATE,c.REGIS_DATETM,c.REGIS_PRSNA_ID) =1
)b
SET REFERENCE_HOUSEHOLD_ID=hshld_prsna_id,
REFERENCE_LEGALENTITYKEY=matchd_cnsmr_prsna_id,
REFERENCE_REGISTRATIONKEY=REGIS_PRSNA_ID
WHERE  a.REGIS_CNSMR_ID_VAL=b.REGIS_CNSMR_ID_VAL
and a.MKTNG_PGM_NBR=b.MKTNG_PGM_NBR
and a.SYS_TARGET_ID=b.SYS_TARGET_ID
and a.REFERENCE_HOUSEHOLD_ID is null or REFERENCE_LEGALENTITYKEY is null or REFERENCE_REGISTRATIONKEY is null;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


DELETE TRILLIUM_OUTPUT1_GBR 
WHERE (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,CAST(SYS_SOURCE AS INTEGER))
IN
(SELECT MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,LOAD_ID 
FROM MDM.ERR_PRSNA_STG_CURR_LOAD
WHERE SYS_ERR_CODE='Record not received from Trillium'
OR SYS_ERR_CODE LIKE '%Error Description%')
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
	  
	  --delete from error table for error code 6706	  
     DEL FROM MDM.ERR_PRSNA_STG_CURR_LOAD   WHERE (REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,LOAD_ID) IN
(SEL  REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR, cast(SYS_SOURCE as integer) FROM mdm.TSS_CLEANSE_INPUT1_GBR)
and sys_err_code like '%6706%';
     
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;	 


--insert rejected records into output table 
 INSERT into  mdm.TRILLIUM_OUTPUT1_GBR
(
      MKTNG_PGM_NBR,
      REGIS_CNSMR_ID_VAL ,
      DR_FIRST_NAME ,
      DR_MIDDLE_NAME ,
      DR_LAST_NAME ,
      DR_NAME_SUFFIX ,
      DR_NAME_GENDER ,
	  WINDOW_KEY_01,
      DR_COUNTRY_NAME ,
      DR_CITY_NAME ,
      DR_POSTAL_CODE ,
      DR_STREET_NAME ,
      DR_HOUSE_NUMBER1 ,
      DR_HOUSE_NUMBER2 ,
      DR_POBOX_NUMBER ,
      DR_ADDRESS ,
      DR_ADDRESS2 ,
      DR_ADDRESS3 ,
	  DR_BUSINESS_NAME,
	  REGIS_DATE,
	  CLEANSED_PHONE_1 ,
      CLEANSED_EMAIL_1 ,
      REFERENCE_HOUSEHOLD_ID ,
      REFERENCE_LEGALENTITYKEY ,
      REFERENCE_REGISTRATIONKEY ,
      LEGAL_ENT_NBR ,
      BRTH_DATE ,
      LANG_CODE ,
      STATUS,
      FULL_NAME ,
      DPEND_NAME ,
      PET_NAME ,
      SYS_SOURCE  ,
      SYS_CREATION_DATE ,
      SYS_NC_TYPE ,
	  SYS_TARGET_ID,
	  EMAIL_IND,
      ADDRESS_CONTACT ,
      ADDRESS_SUBSCRPTN ,
      PHONE_CONTACT ,
      PHONE_SUBSCRPTN ,
      EMAIL_CONTACT ,
      EMAIL_SUBSCRPTN ,
      NATIONAL_ID_NBR 
	  
 )
SEL       MKTNG_PGM_NBR,
      REGIS_CNSMR_ID_VAL,
      GVN_NAME ,
      MID_NAME ,
      FAMLY_NAME ,    
      NAME_SUFFX_TXT ,
      GENDR_IND ,
	  CASE WHEN TRIM(CNTRY_NAME) = 'TUR'
      THEN 'TUR'
      WHEN TRIM(CNTRY_NAME) = 'POL'
      THEN 'POL'
      WHEN TRIM(CNTRY_NAME) = 'HUN'
      THEN 'HUN'
      WHEN TRIM(CNTRY_NAME) = 'LUX'
      THEN 'LUX'
      WHEN TRIM(CNTRY_NAME) = 'RUS'
      THEN 'RUS'
      WHEN TRIM(CNTRY_NAME) = 'ARE'
      THEN 'ARE'
      WHEN TRIM(CNTRY_NAME) = 'BHR'
      THEN 'BHR'
      WHEN TRIM(CNTRY_NAME) = 'KWT'
      THEN 'KWT' 
      WHEN TRIM(CNTRY_NAME) = 'OMN'
      THEN 'OMN'
      WHEN TRIM(CNTRY_NAME) = 'QAT'
      THEN 'QAT'
      WHEN TRIM(CNTRY_NAME) = 'SAU'
      THEN 'SAU' 
      WHEN TRIM(CNTRY_NAME) = 'YEM'
      THEN 'YEM' 
      WHEN TRIM(CNTRY_NAME) = 'ISR'
      THEN 'ISR' 
      WHEN TRIM(CNTRY_NAME) = 'EGY'
      THEN 'EGY' 
      WHEN TRIM(CNTRY_NAME) = 'ROU'
      THEN 'ROU' 
      WHEN TRIM(CNTRY_NAME) = 'ARB'
      THEN 'ARB' 
      WHEN TRIM(CNTRY_NAME) = 'AFR'
      THEN 'AFR' 
      WHEN TRIM(CNTRY_NAME) = 'NGA'
      THEN 'NGA' 
      WHEN TRIM(CNTRY_NAME) = 'MAR'
      THEN 'MAR' 
      WHEN TRIM(CNTRY_NAME) = 'KEN'
      THEN 'KEN' 
      WHEN TRIM(CNTRY_NAME) = 'ZAF'
      THEN 'ZAF' 
      WHEN TRIM(CNTRY_NAME) = 'BGR'
      THEN 'BGR' 
      WHEN TRIM(CNTRY_NAME) = 'UKR'
      THEN 'UKR' 
      WHEN TRIM(CNTRY_NAME) = 'PAK'
      THEN 'PAK' 
      WHEN TRIM(CNTRY_NAME) = 'CZE'
      THEN 'CZE'      
      ELSE coalesce(trim(substr(CNTRY_NAME,1,2)),'')
      END,
      CNTRY_NAME ,
      CITY_NAME ,
      POSTL_AREA_CODE ,
      STRET_NAME ,
      STRET_NUM ,
      APT_NUM ,
      PO_BOX_NUM ,
      ADDR_LINE_1_TXT ,
      ADDR_LINE_2_TXT ,
      ADDR_LINE_3_TXT ,
	  GVN_NAME ,
	  PRSNA_REG_DT,
      FULL_PHONE_NUM,
      EMAIL_ADDR_TXT,
case when REFERENCE_HOUSEHOLD_ID is null then (SEL coalesce('HH0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_HOUSEHOLD_ID,'[^0-9]+'))+1) as integer)) ,'HH0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_HOUSEHOLD_ID like '%HH%' ) else REFERENCE_HOUSEHOLD_ID end as REFERENCE_HOUSEHOLD_ID,
case when REFERENCE_LEGALENTITYKEY is null then (SEL coalesce('LE0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_LEGALENTITYKEY,'[^0-9]+'))+1) as integer)) ,'LE0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_LEGALENTITYKEY like '%LE%' ) else REFERENCE_LEGALENTITYKEY end as REFERENCE_LEGALENTITYKEY,
case when REFERENCE_REGISTRATIONKEY is null then (SEL coalesce('RG0000'||trim(cast((max(REGEXP_REPLACE(REFERENCE_REGISTRATIONKEY,'[^0-9]+'))+1) as integer)) ,'RG0000000001') from mdm.TRILLIUM_OUTPUT1_GBR
WHERE REFERENCE_REGISTRATIONKEY like '%RG%' )else REFERENCE_REGISTRATIONKEY end as REFERENCE_REGISTRATIONKEY,
LEGAL_ENT_NBR,
      BRTH_DATE ,
      LANG_CODE,
      'IN PROCESS',
      FULL_NAME ,
      DPEND_NAME ,
      PET_NAME ,
      SYS_SOURCE,
      SYS_CREATION_DATE,
      SYS_NC_TYPE,
	  SYS_TARGET_ID,
	  CASE WHEN EMAIL_ADDR_TXT IS NOT NULL THEN 'Y' ELSE 'N' END EMAIL_IND,
      ADDRESS_CONTACT ,
      ADDRESS_SUBSCRPTN ,
      PHONE_CONTACT ,
      PHONE_SUBSCRPTN ,
      EMAIL_CONTACT ,
      EMAIL_SUBSCRPTN ,
      NATIONAL_ID_NBR      
FROM VT_Trillium_Output;
      

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



UPDATE TRILLIUM_OUTPUT1_GBR 
SET WINDOW_KEY_01 = ''
WHERE  TRIM(DR_COUNTRY_NAME) IN ('TUR','HUN','POL','RUS','LUX','ARE','BHR','KWT','OMN','QAT','SAU','YEM')
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON TRILLIUM_OUTPUT1_GBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

SELECT COUNT(*) FROM ET_TRILLIUM_OUTPUT1_GBR;
.IF ERRORLEVEL = 3807 THEN .GOTO SUCCESS

.EXPORT REPORT FILE = \\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\data\TSS_MATCH_OUTPUT_GBR.TEMP
.set width 400
.set titledashes off
.set format off
.set rtitle ''
SELECT CAST(CAST(SourceSeq AS FORMAT'-9(15)') AS CHAR(15)) (title '') FROM ET_TRILLIUM_OUTPUT1_GBR
WHERE ErrorCode=6706
ORDER BY 1;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
.EXPORT RESET

.EXPORT REPORT FILE = \\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\data\TSS_MATCH_OUTPUT_GBR.ERRFILE
.set width 400
.set titledashes off
.set format off
.set rtitle ''
SELECT '\\10.138.21.14\Teradata\MDM\3.05.02\custom\pngrelease3\data\TSS_MATCH_OUTPUT_GBR.ERR|'||CAST(MIN(CAST(SYS_SOURCE AS INTEGER)) AS CHAR(20)) (title '')
 FROM TSS_CLEANSE_INPUT1_GBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
.EXPORT RESET

.LABEL SUCCESS

UPDATE MDM.LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE MDM.LOAD_INFO.PROCESS_NAME='Trillium Load'
AND MDM.LOAD_INFO.STATUS = 'In Progress'
AND MDM.LOAD_INFO.CNTRY_NAME = 'GBR'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

UPDATE MDM.LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE MDM.LOAD_INFO.PROCESS_NAME='Trillium'
AND MDM.LOAD_INFO.STATUS = 'In Progress'
AND MDM.LOAD_INFO.CNTRY_NAME = 'GBR'
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
CNTRY_NAME,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'Wrapper',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'Ready to Process',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'GBR',
LI.BATCH_ID
FROM MDM.MDM_LOAD_CONTROL LOAD
INNER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Trillium'
AND LI.STATUS = 'Success'
AND LI.CNTRY_NAME = 'GBR'

LEFT OUTER JOIN LOAD_INFO LII
ON LOAD.LOAD_ID = LII.LOAD_ID
AND LII.PROCESS_NAME='Wrapper'

WHERE LII.LOAD_ID IS NULL
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR
.QUIT ERRORCODE;

.LABEL WARN
.QUIT 0

