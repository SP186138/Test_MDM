<?xml version="1.0" encoding="UTF-8"?>
<workflow mgcCount="171" ShowInBreadCrumbs="true" Version="1.0" Name="TriggerEventWF" Description="Triggers Workflows waiting on Events" Type="" PrimaryDocument="" IsStartAllowed="No">
  <variables/>
  <nodes>
    <start Name="start">
      <actions>
        <action>
          <TO_DOCVAR AssignToVar="nodeOutputXml">
            <TO_XML SelectList="$thisParam"/>
          </TO_DOCVAR>
        </action>
      </actions>
      <next_nodes OutputVar="{nodeOutputXml,xml}">
        <next_node Name="Trigger Event" Description=""/>
      </next_nodes>
    </start>
    <done Name="done">
      <actions>
        <action>
          <TO_DOCVAR AssignToVar="thisReturn">
            <RESPONSE Value="Success"/>
          </TO_DOCVAR>
        </action>
      </actions>
      <next_nodes/>
    </done>
    <ui_form2 Name="Trigger Event" InputVar="{nodeInputXml,xml}" OutputFormVar="pglFormOutput" InputFormVar="pglFormInput" ShowInBreadCrumbs="HIDE" Template="Trigger Event.pgl">
      <pre_actions>
        <action>
          <GET_SESSION Var="GServerName" AssignToVar="GServer"/>
          <TO_DOCVAR AssignToVar="pglFormInput">
            <root>
            </root>
          </TO_DOCVAR>
          <IF_TEST Test="strlen($nodeInputXml/EVENT_SVC/@Value) >=1">
            <THEN>
              <SET Var="eventsvc" FromValue="{$nodeInputXml/EVENT_SVC/@Value}"/>
            </THEN>
            <ELSE>
              <SET Var="eventsvc" FromValue="{$nodeInputXml/WFL_SVC/@Value}"/>
            </ELSE>
          </IF_TEST>
          <NATIVE_FUNCTION ClassName="com.teradata.xcore.bpm.BPMUtil" MethodName="getEvtDocs" AssignToVar="WFInstList">
            <PARAM Var="thisContext"/>
            <PARAM Value="{$nodeInputXml/NODE/@Value}" Type="String"/>
            <PARAM Value="{$eventsvc/@Value}" Type="String"/>
            <PARAM Value="eventDocXml" Type="String"/>
            <PARAM Value="{substringBefore($GServer/@Value, ':')}" Type="String"/>
            <PARAM Value="{substringAfter($GServer/@Value, ':')}" Type="String"/>
          </NATIVE_FUNCTION>
          <FOR_EACH CurrentElement="currElem" SelectList="$WFInstList/RAISE_EVENT">
            <SET_PROPS Select="$pglFormInput">
              <EventXml Value="{$currElem}"/>
            </SET_PROPS>
          </FOR_EACH>
          <ADD_CHILDREN FromValue="{$nodeInputXml/NODE}" DocVar="pglFormInput"/>
          <ADD_CHILDREN FromValue="{$nodeInputXml/EVT_DESC}" DocVar="pglFormInput"/>
          <ADD_CHILDREN FromValue="{$nodeInputXml/WFL_START_ALLOW}" DocVar="pglFormInput"/>
          <ADD_CHILDREN FromValue="{$nodeInputXml/INSTANCE_ID}" DocVar="pglFormInput"/>
          <ADD_CHILDREN FromValue="{$nodeInputXml/WFL_SVC}" DocVar="pglFormInput"/>
          <ADD_CHILDREN FromValue="{$nodeInputXml/EVENT_SVC}" DocVar="pglFormInput"/>
        </action>
      </pre_actions>
      <post_actions>
        <action>
          <GET_SESSION Var="GServerName" AssignToVar="GServer"/>
          <SET Var="event" FromValue="{$pglFormOutput/EventName/@Value}"/>
          <IF_TEST Test="strlen($pglFormOutput/EventXml/@Value) >= 2">
            <THEN>
              <STRING_TO_XML FromValue="{$pglFormOutput/EventXml/@Value}" DocVar="usereventxmlDoc"/>
              <NATIVE_FUNCTION ClassName="com.teradata.xcore.bpm.BPMUtil" MethodName="raiseEvents">
                <PARAM Var="thisContext"/>
                <PARAM Value="{$pglFormOutput/ServiceName/@Value}" Type="String"/>
                <PARAM Value="{$event}" Type="String"/>
                <PARAM Value="{$usereventxmlDoc}" Type="String"/>
                <PARAM Value="{substringBefore($GServer/@Value, ':')}" Type="String"/>
                <PARAM Value="{substringAfter($GServer/@Value, ':')}" Type="String"/>
              </NATIVE_FUNCTION>
            </THEN>
            <ELSE>
              <NATIVE_FUNCTION ClassName="com.teradata.xcore.bpm.BPMUtil" MethodName="raiseEvents">
                <PARAM Var="thisContext"/>
                <PARAM Value="{$pglFormOutput/ServiceName/@Value}" Type="String"/>
                <PARAM Value="{$event}" Type="String"/>
                <PARAM Value="" Type="String"/>
                <PARAM Value="{substringBefore($GServer/@Value, ':')}" Type="String"/>
                <PARAM Value="{substringAfter($GServer/@Value, ':')}" Type="String"/>
              </NATIVE_FUNCTION>
            </ELSE>
          </IF_TEST>
        </action>
      </post_actions>
      <if_cond Value="Done">
        <next_nodes OutputVar="{pglFormOutput,xml}">
          <next_node Name="done" Description=""/>
        </next_nodes>
      </if_cond>
      <else_if_cond Value="$userAction ='DONE'">
        <next_nodes OutputVar="{pglFormOutput,xml}">
          <next_node Name="done" Description=""/>
        </next_nodes>
      </else_if_cond>
      <else_if_cond Value="true()">
        <next_nodes OutputVar="{pglFormOutput,xml}">
          <next_node Name="done" Description=""/>
        </next_nodes>
      </else_if_cond>
    </ui_form2>
  </nodes>
  <mgcview>
    <mgcnodes>
      <start location="130,235" font="Times New Roman,0,9" componentConnect="true" componentIconBorder="false" componentTextColor="80,80,80" componentBorderColor="255,255,255" freeze="false" visible="true" fade="false" fadeConnectors="false" shapeKey="ICONISH" snapPointKey="MID" leadingEdge="5" trailingEdge="5" topGap="3" bottomGap="2">
        <textProps text="start" font="Times New Roman,0,9" textColor="80,80,80"/>
        <iconProps iconfile="z1start.gif" location="0,0"/>
      </start>
      <done location="511,234" font="Times New Roman,0,9" componentConnect="false" componentIconBorder="false" componentTextColor="80,80,80" componentBorderColor="255,255,255" freeze="false" visible="true" fade="false" fadeConnectors="false" shapeKey="ICONISH" snapPointKey="REGULAR" leadingEdge="5" trailingEdge="5" topGap="3" bottomGap="2">
        <textProps text="done" font="Times New Roman,0,9" textColor="80,80,80"/>
        <iconProps iconfile="z1end.gif" location="0,0"/>
      </done>
      <mgcnode Name="Trigger Event" location="263,232" font="Times New Roman,0,9" componentConnect="true" componentIconBorder="false" componentTextColor="80,80,80" componentBorderColor="255,255,255" freeze="false" visible="true" fade="false" fadeConnectors="false" shapeKey="ICONISH" snapPointKey="MID" leadingEdge="5" trailingEdge="5" topGap="3" bottomGap="2">
        <textProps text="Trigger Event" font="Times New Roman,0,9" textColor="80,80,80"/>
        <iconProps iconfile="x1age80.gif" location="0,0"/>
      </mgcnode>
    </mgcnodes>
    <mgcconnectors>
      <start>
        <nextNodeView font="Times New Roman,0,9" connectorColor="70,81,173" connectorStroke="1.0,2,0,10.0,null,0.0" connectorTextColor="80,80,80" wavyConnector="true" fade="false" allowedToSelectConnector="true" connStartPointFill="false" connStartPointOval="true" connEndPointFill="true" draggable="true" startpoint="162,257" endpoint="263,255" ctrlRect1Dirty="false" ctrlRect2Dirty="false" textRectDirty="false" ctrlRect1="235,255,4,4" ctrlRect2="185,253,4,4"/>
      </start>
      <mgcnode Name="Trigger Event">
        <nextNodeView font="Times New Roman,0,9" connectorColor="0,178,178" connectorStroke="1.0,2,0,10.0,null,0.0" connectorTextColor="80,80,80" wavyConnector="true" fade="false" allowedToSelectConnector="true" connStartPointFill="false" connStartPointOval="true" connEndPointFill="true" draggable="true" startpoint="295,255" endpoint="511,256" ctrlRect1Dirty="false" ctrlRect2Dirty="false" textRectDirty="false" ctrlRect1="455,253,4,4" ctrlRect2="347,254,4,4"/>
        <nextNodeView font="Times New Roman,0,9" connectorColor="0,178,178" connectorStroke="1.0,2,0,10.0,null,0.0" connectorTextColor="80,80,80" wavyConnector="true" fade="false" allowedToSelectConnector="true" connStartPointFill="false" connStartPointOval="true" connEndPointFill="true" draggable="true" startpoint="295,255" endpoint="511,256" ctrlRect1Dirty="false" ctrlRect2Dirty="false" textRectDirty="false" ctrlRect1="455,253,4,4" ctrlRect2="347,254,4,4"/>
        <nextNodeView font="Verdana,0,9" connectorColor="0,178,178" connectorStroke="1.0,2,0,10.0,null,0.0" connectorTextColor="80,80,80" wavyConnector="true" fade="false" allowedToSelectConnector="true" connStartPointFill="false" connStartPointOval="true" connEndPointFill="true" draggable="true" startpoint="295,255" endpoint="511,256" ctrlRect1Dirty="false" ctrlRect2Dirty="false" textRectDirty="false" ctrlRect1="455,253,4,4" ctrlRect2="347,254,4,4"/>
      </mgcnode>
    </mgcconnectors>
    <mgcgroups/>
    <mgctexts/>
    <mgcdashboard compId="MgcDashboard1" location="10,10" font="Times New Roman,0,9" componentConnect="false" componentIconBorder="false" componentTextColor="0,0,0" componentBorderColor="255,255,255" freeze="false" visible="true" fade="false" fadeConnectors="false" shapeKey="UML" snapPointKey="MID" leadingEdge="5" trailingEdge="5" topGap="3" bottomGap="2" textAttrsSize="0">
      <textProps text="Pipeline" font="Times New Roman,0,9"/>
      <iconProps iconfile="defaultNode.gif"/>
      <variables/>
    </mgcdashboard>
  </mgcview>
  <shutdown_handler>
    <pre_actions>
    </pre_actions>
    <post_actions>
    </post_actions>
    <checkcondition Value=""/>
  </shutdown_handler>
</workflow>