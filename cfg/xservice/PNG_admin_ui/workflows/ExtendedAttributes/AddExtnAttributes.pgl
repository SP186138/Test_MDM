<ui:page-group xmlns:ui="http://www.teradata.com/ui" version="3" name="studio.templates.simple_entry" source="studio.controller:load">
  <ui:container>
    <ui:step id="OuterStep" displayText="CreateExtendedAttribute_MainTitle">
      <ui:help displayPage="{$pages:ManageExtendedAttributesHelp}"/>
      <ui:field-group>
        <ui:display-field value="{$root/AlertGreen/@Value}" displayCondition="{string-length($root/AlertGreen/@Value) != 0}" name="success" class="requiredIndicatorGreen"/>
        <ui:display-field value="{$root/AlertRed/@Value}" displayCondition="{string-length($root/AlertRed/@Value) != 0}" name="error" class="requiredIndicator"/>
      </ui:field-group>
      <ui:hr displayCondition="{(string-length($root/AlertGreen/@Value) != 0) or (string-length($root/AlertRed/@Value) != 0) }"/>
      <ui:validation displayCondition="{(string-length($root/AlertGreen/@Value) = 0) and (string-length($root/AlertRed/@Value) = 0) }"/>
      <ui:field-group columns="1">
        <ui:hidden-field name="HierTable" value="{$root/HierTable/@Value}" id="HierTable"/>
        <ui:hidden-field name="UserSelectedTableName" value="{$root/USER_VALUES/Tablename/@Value}" id="UserSelectedTableName"/>
        <ui:hidden-field name="UserSelectedDataType" value="{$root/USER_VALUES/SelectDataType/@Value}" id="UserSelectedDataType"/>
        <ui:hidden-field name="UserSelectedIsValidValueType" value="{$root/USER_VALUES/IsValidValueType/@Value}" id="UserSelectedIsValidValueType"/>
        <ui:hidden-field name="UserSelectedValidValueType" value="{$root/USER_VALUES/SelectValidValueType/@Value}" id="UserSelectedValidValueType"/>
        <ui:hidden-field name="UserSelectedCodeSet" value="{$root/USER_VALUES/SelectCodeSet/@Value}" id="UserSelectedCodeSet"/>
        <ui:hidden-field name="UserSelectedRefTableName" value="{$root/USER_VALUES/SelectRefTableName/@Value}" id="UserSelectedRefTableName"/>
        <ui:hidden-field name="UserSelectedRefPropName" value="{$root/USER_VALUES/SelectRefPropName/@Value}" id="UserSelectedRefPropName"/>
        <ui:dropdown id="objects" name="objects" displayText="OBJECTS" codeSet="objects" selectOne="true">
          <ui:option value="OBJECT_TABLE" id="OBJECT_TABLE"/>
          <ui:option value="OBJECT_CODESET" id="OBJECT_CODESET"/>
          <ui:option value="OBJECT_HIERARCHY" id="OBJECT_HIERARCHY"/>
        </ui:dropdown>
        <ui:dropdown parentCodeSet="objects" id="Tablename" name="Tablename" displayText="CreateExtendedAttributeTable" optionSrc="$root/EXTN_TABLES_OPTIONS/*" required="true" title="CreateExtendedAttributeTableHover" onChange="getValidExtDataTypesForSelectedDoc();" inFormat="" selectOne="true" unFormat="true"/>
        <ui:display-field id="validityChk" value="You cannot create the extended attribute, all the available attributes are in use for the selected table." class="requiredIndicator"/>
        <ui:dropdown id="SelectDataType" name="SelectDataType" displayText="CreateExtendedAttributeSelectDataType" optionSrc="$root/USER_VALUES/ValidDataTypes/OPTIONS/*" required="true" title="CreateExtendedAttributeSelectDataTypeHover" inFormat="" selectOne="true" onChange="javascript:onChangeDataType();"/>
        <ui:checkbox id="IsValidValueType" name="IsValidValueType" displayText="CreateExtendedAttributeIsValidValueType" title="CreateExtendedAttributeIsValidValueTypeHover" onClick="javascript:onClickIsValidValueType('');"/>
        <ui:dropdown id="SelectValidValueType" name="SelectValidValueType" displayText="CreateExtendedAttributeSelectValidValueType" required="true" title="CreateExtendedAttributeSelectValidValueTypeHover" inFormat="" selectOne="true" onChange="javascript:onChangeValidValueType();">
          <ui:option id="LookUp" value="LookUp"/>
          <ui:option id="Reference" value="Reference"/>
        </ui:dropdown>
        <ui:dropdown id="SelectCodeSet" name="SelectCodeSet" displayText="CreateExtendedAttributeSelectCodeSet" optionSrc="$root/CODE_SET_OPTIONS/*" unFormat="true" required="true" title="CreateExtendedAttributeSelectCodeSetHover" inFormat="" selectOne="true"/>
        <ui:dropdown id="SelectRefTableName" name="SelectRefTableName" displayText="CreateExtendedAttributeSelectReferenceTableName" optionSrc="$root/ALL_TABLES_OPTIONS/*" required="true" title="CreateExtendedAttributeSelectReferenceTableNameHover" inFormat="" selectOne="true" onChange="javascript:onChangeRefTableName();"/>
        <ui:dropdown id="SelectRefPropName" name="SelectRefPropName" displayText="CreateExtendedAttributeSelectReferenceProperty" optionSrc="$root/USER_VALUES/SelectedRefTableProperties/*" unFormat="true" required="true" title="CreateExtendedAttributeSelectReferencePropertyHover" inFormat="" selectOne="true"/>
        <ui:entry-field id="attrName" name="attrName" displayText="CreateExtendedAttributeLogicalName" required="true" maxlength="30" title="CreateExtendedAttributeLogicalNameHover" value="{$root/USER_VALUES/attrName/@Value}" onChange="checkExtendedAttrName();" onKeyUp="onlyValidCharacters();"/>
        <ui:display-field id="attrNameExist" value="EXTENDED_ATTR_EXIST" class="requiredIndicator"/>
        <ui:checkbox id="attrIsRequired" name="attrIsRequired" displayText="CreateExtendedAttributeIsRequired" value="{$root/USER_VALUES/attrIsRequired/@Value}" title="CreateExtendedAttributeIsRequiredHover"/>
        <ui:entry-field id="attrDefaultValue" name="attrDefaultValue" displayText="CreateExtendedAttributeDefaultValue" maxlength="100" title="CreateExtendedAttributeDefaultValueHover" value="{$root/USER_VALUES/attrDefaultValue/@Value}"/>
        <ui:entry-field id="attrPrecisionDecimal" name="attrPrecisionDecimal" displayText="CreateExtendedAttributeDecimalPrecision" maxlength="1" title="CreateExtendedAttributeDecimalPrecisionHover" value="{$root/USER_VALUES/attrPrecisionDecimal/@Value}"/>
        <ui:textarea id="desc" name="desc" displayText="CreateExtendedAttributeDescription" rows="5" title="CreateExtendedAttributeDescriptionHover" value="{$root/USER_VALUES/desc/@Value}" onKeyUp="javascript:limitText(this.form.desc,200);"/>
      </ui:field-group>
      <ui:buttons>
        <ui:button id="Cancel" name="Cancel" displayText="Cancel"/>
        <ui:divider/>
        <ui:button id="Save" name="Save" displayText="Save" onClick="javascript:on_Save('Add');"/>
      </ui:buttons>
    </ui:step>
  </ui:container>
  <ui:script>
 function onLoad()
{
		toggleDisplayField('validityChk_td','hide');
		toggleDisplayField('attrNameExist_td','hide');

		hideField('attrPrecisionDecimal');

		var userSelTableName=document.form.UserSelectedTableName.value;
		if(userSelTableName.length > 0)
    	{
			populateUserEnteredValues();
        }
         else
			hideAllValidValueFields();
	if(document.getElementById('HierTable').value == 'true')
		getValidExtDataTypesForSelectedDoc();
		onResize();
}
function limitText(limitField, limitNum) 
{
	if (limitField.value.length > limitNum) {
	limitField.value = limitField.value.substring(0, limitNum);
	} else {
	//limitCount.value = limitNum - limitField.value.length;
	}
}  
function populateUserEnteredValues()
{
    var userSelTableName=document.form.UserSelectedTableName.value;
    if(userSelTableName.length > 0)
    {
		setSelectedInCombo(document.form.Tablename,userSelTableName);
        var selectedDataType=document.form.UserSelectedDataType.value;
		setSelectedInCombo(document.form.SelectDataType,selectedDataType);
        if(selectedDataType != 'string')
    	{
			hideAllValidValueFields();
			if( selectedDataType === 'decimal' )
			{
				showField('attrPrecisionDecimal');
				showField('attrDefaultValue');
			}
			else
			{
				hideField('attrPrecisionDecimal');
				hideField(&quot;attrDefaultValue&quot;);
			}
            return;
       	}
       var isValidValueType=document.form.UserSelectedIsValidValueType.value;
       if(isValidValueType == 'true')
      {
    		document.form.IsValidValueType.checked=true;
            var validValueType=document.form.UserSelectedValidValueType.value;
			setSelectedInCombo(document.form.SelectValidValueType,validValueType);
            if(validValueType == 'LookUp')
    		{
    			setSelectedInCombo(document.form.SelectCodeSet,document.form.UserSelectedCodeSet.value);
				document.form.SelectRefTableName.selectedIndex=0;
				document.form.SelectRefPropName.selectedIndex=0;
				document.form.SelectRefPropName.options.length=1;
				hideField('SelectRefTableName');
				hideField('SelectRefPropName');
             }
            else if(validValueType == 'Reference')
            {
    			setSelectedInCombo(document.form.SelectRefTableName,document.form.UserSelectedRefTableName.value);
    			setSelectedInCombo(document.form.SelectRefPropName,document.form.UserSelectedRefPropName.value);
				document.form.SelectCodeSet.selectedIndex=0;
				hideField('SelectCodeSet');    
            }
			hideField(&quot;attrDefaultValue&quot;);
      }
      else
      { 
			document.form.IsValidValueType.checked=false;
			document.form.SelectValidValueType.selectedIndex=0;
			document.form.SelectCodeSet.selectedIndex=0;
			document.form.SelectRefTableName.selectedIndex=0;
			document.form.SelectRefPropName.selectedIndex=0;
			document.form.SelectRefPropName.options.length=1;
			hideField('SelectValidValueType');
			hideField('SelectCodeSet');
			hideField('SelectRefTableName');
			hideField('SelectRefPropName');
    
      }
      	//alert(userSelTableName);
    }
}
    
    
function setSelectedInCombo(selectBox,selectedValue)
{
	for (var i=0; i&lt;selectBox.options.length; i++)
   {
		if (selectBox.options[i].value == selectedValue)
        {
			selectBox.options[i].selected=true;
			return;
        }
   }
}
    

    
function hideAllValidValueFields()
{
	document.form.IsValidValueType.checked=false;
	document.form.SelectValidValueType.selectedIndex=0;
	document.form.SelectCodeSet.selectedIndex=0;
	document.form.SelectRefTableName.selectedIndex=0;
	document.form.SelectRefPropName.selectedIndex=0;
    document.form.SelectRefPropName.options.length=1;
  	hideField('IsValidValueType');
	hideField('SelectValidValueType');
	hideField('SelectCodeSet');
	hideField('SelectRefTableName');
	hideField('SelectRefPropName');
} 
    
function onChangeDataType()
{
	hideAllValidValueFields();
    var selectedDataType=document.form.SelectDataType.options[document.form.SelectDataType.selectedIndex].value;
    if(selectedDataType === &quot;string&quot; || selectedDataType === 'decimal')
    {
		if( selectedDataType === 'string' )
		showField('IsValidValueType');
		showField('attrDefaultValue');
    }
    else
    	hideField(&quot;attrDefaultValue&quot;);
	if( selectedDataType === 'decimal' )
	{
		showField('attrPrecisionDecimal');    
	}
	else
	{
		hideField('attrPrecisionDecimal');
	}
    
}

function onClickIsValidValueType()
{
    if(document.form.IsValidValueType.checked)
    {
		 showField('SelectValidValueType');
		 hideField(&quot;attrDefaultValue&quot;);
		document.form.attrDefaultValue.value=&quot;&quot;;
    }
    else
    {
		document.form.SelectValidValueType.selectedIndex=0;
		document.form.SelectCodeSet.selectedIndex=0;
		document.form.SelectRefTableName.selectedIndex=0;
		document.form.SelectRefPropName.selectedIndex=0;
		document.form.SelectRefPropName.options.length=1;
   		hideField('SelectValidValueType');
		hideField('SelectCodeSet');
		hideField('SelectRefTableName');
		hideField('SelectRefPropName');
		showField(&quot;attrDefaultValue&quot;);
    }
}
    
function onChangeValidValueType()
{
	var selectedValidValueType=document.form.SelectValidValueType.options[document.form.SelectValidValueType.selectedIndex].value;
    if(selectedValidValueType === &quot;LookUp&quot;)
    {
		showField('SelectCodeSet');
		hideField('SelectRefTableName');
		hideField('SelectRefPropName');
     }
    else if (selectedValidValueType === &quot;Reference&quot;)
    {
		hideField('SelectCodeSet');
		showField('SelectRefTableName');
		showField('SelectRefPropName');
     }
    else
    {
		hideField('SelectCodeSet');
		hideField('SelectRefTableName');
		hideField('SelectRefPropName');
     }
}   

function onChangeRefTableName()
{
    var selectedRefTableName=document.form.SelectRefTableName.options[document.form.SelectRefTableName.selectedIndex].value;
	document.form.SelectRefPropName.selectedIndex=0;
	document.form.SelectRefPropName.options.length=1;
    var paramNames=['DOCUMENT_NAME','SERVICE_NAME','SORT'];
    var paramValues=[selectedRefTableName,'BCM_MASTER','true'];
	var requestXMLObj=createRequestXmlObjectTd('getXDocumentProperties','BPE_META',paramNames,paramValues);
    var requestXMLStr=serializeXmlTd(requestXMLObj);
	var xpath = &quot;/RESPONSES/RESPONSE/DOCUMENT/PROPERTY&quot;;
	SendAjaxRequest('BPE_META',requestXMLStr,'populateSelectRefProp',xpath);

}
    
function populateSelectRefProp(node)
{
    var sysFields=[&quot;SYS_TARGET_ID&quot;,&quot;SYS_AUTH_ID&quot;,&quot;SOURCE&quot;,&quot;CREATED_BY&quot;,&quot;CREATION_DATE&quot;,&quot;ENTITY_STATE&quot;,
								&quot;LAST_MODIFIED_BY&quot;,&quot;LAST_MODIFIED_DATE&quot;,&quot;SYS_TYPE&quot;,&quot;SYS_ERR_CODE&quot;,&quot;SYS_ERR_SEVERITY&quot;,
								&quot;ERROR_ID&quot;,&quot;ERROR_MESSAGE&quot;,&quot;ERROR_TIME&quot;,&quot;SYS_DOCUMENT&quot;,&quot;SYS_LOAD_ID&quot;,&quot;WORKFLOW_ID&quot;];
    for (i=0;i&lt;node.length;i++)
	{
		var propName=node[i].getAttribute(&quot;Name&quot;);
        var isSysField=false;
		for (j=0;j&lt;sysFields.length;j++)
       {
    		if(sysFields[j] === propName)
    		{
    			isSysField=true;
    			break;
    		}
       }
       if(isSysField == true)
        	continue;
		var propDispName=node[i].getAttribute(&quot;DisplayName&quot;);
		newOption = new Option(propDispName, propName, false, false);
		var dataTypelength=document.form.SelectRefPropName.length;
		document.form.SelectRefPropName.options[dataTypelength]=newOption;
	}
}    
    
    
function isNumericDigit(input){
    var RE = /^-{0,1}\d*\.{0,1}\d+$/;
    return (RE.test(input));
}
  
    
function on_Save()
{
	var bIsValid = true;
	document.form.SUBMIT_AS_XML.value = 'false';

	bIsValid = (isValid_OuterStep());

	if( bIsValid == false )
	{
		validation_alert('OuterStep');
	}
	if ( bIsValid == true)
	{
	/*	if(document.form.attrName.value.indexOf(' ')!=-1)
		{
			core_alert_jquery('EXT_ATTR_NO_SPACE');
			return;
		}
		var spChars = &quot;!@#$`%^&amp;*()+=-[]\\\';,./{}|\&quot;:&lt;>?~&quot;;
		var inputName=document.form.attrName.value;
	    if(( inputName.charAt(0) >= &quot;0&quot; ) &amp;&amp; ( inputName.charAt(0) &lt;= &quot;9&quot; ))
    	{
			core_alert_jquery('EXT_ATTR_NO_NUMERIC_CHAR');
    		return;
    	}
		var strlength= inputName.length;
		for (var i = 0; i &lt; inputName.length; i++)
		{
    		if (spChars.indexOf(inputName.charAt(i)) != -1)
			{
				if(inputName.charAt(i)=='+')
					core_alert_jquery (&quot;Extended Attribute Name should not contain special character %2B  &quot; +&quot;.&quot;);
				else
					core_alert_jquery (&quot;Extended Attribute Name should not contain special character  &quot; + escape(inputName.charAt(i))+&quot;.&quot;);
				return;
			}
		}*/
		var selectedDataType=document.form.SelectDataType.options[document.form.SelectDataType.selectedIndex].value;
		if(selectedDataType === 'decimal')
		{
			var defaultValue=document.form.attrDefaultValue.value.trim();
			if(defaultValue !== '')
			{
				if(isNumericDigit(defaultValue) !== true)
				{
					core_alert_jquery('DECIMAL_EXT_ATTR_VALID_NUMBER');
					document.form.attrDefaultValue.focus();
					return;
				}
			}
			var precisionValue=document.form.attrPrecisionDecimal.value.trim();
			if(precisionValue !== '')
			{
				if(isNumericDigit(precisionValue) !== true  || precisionValue > 8 || precisionValue == 0 )
				{
					core_alert_jquery('DECIMAL_PRECISION_ALERT');
					document.form.attrPrecisionDecimal.focus();
					return;
				}
			}
		}
		disableButtons();
		trapExcelPivotChanges();
		document.form.BUTTON_ID.value = 'Save';
		document.form.action = 'view.x2ps';
		document.form.submit();
		grayOut(true);
	}
	onResize();
	return;
}
function on_Cancel()
{
	var bIsValid = true;
	document.form.SUBMIT_AS_XML.value = 'false';
	disableButtons();
	trapExcelPivotChanges();
	document.form.BUTTON_ID.value = 'Cancel';
	document.form.action = 'view.x2ps';
	document.form.submit();
	grayOut(true);
	onResize();
	return;
}
function toggleDisplayField(id,state)
{
fieldCell  = document.getElementById(id);
fieldRow = fieldCell.parentNode;
toggleItemVisibility(fieldRow, state);
var i = document.getElementById(id);
if (state==&quot;hide&quot;)
{
//validation_clearFieldErrors(i);
i.disabled = true;
}
else
{
i.disabled = false;
i.enabled = true;
}
}
function getUserGroupsCallback(node)
{

var test;
test=node[0].getAttribute(&quot;Value&quot;);
if(test==&quot;TRUE&quot;)
{
toggleDisplayField('validityChk_td','show');
}
else
{
toggleDisplayField('validityChk_td','hide');
}
}
function ValidityCheck()
{
var tableName = document.form.Tablename.value;
var service_name = &quot;USER_SECURITY&quot;;
var request= &quot;&lt;REQUEST Name='getDocumentAjaxValidation' ServiceName='USER_SECURITY' AssignToVar='attrReturnValue'>&lt;DocName Value='SYS_EXT_ATTRBS' />&lt;ServName Value='BPE_META' />&lt;property>&lt;DOCUMENT_NAME Value='&quot;+tableName+&quot;' />&lt;IS_USED Value='&quot;+0+&quot;' />&lt;/property>&lt;/REQUEST>&quot;
var xpath = &quot;/RESPONSES/RESPONSE/StatusFlagVal&quot;;
SendAjaxRequest(service_name,request,'getUserGroupsCallback',xpath);
}
function getValidExtDataTypesForSelectedDoc()
{
	hideAllValidValueFields();
    document.form.SelectDataType.options.length=1;
    var selIndex = document.form.Tablename.selectedIndex;
    if(selIndex == 0)
    {
		
        return ;
    }
var tableName = document.form.Tablename.value;
var request= &quot;&lt;REQUEST Name='getAvailableExtAttrbsDataTypesForDoc'  ServiceName='BPE_META' >&lt;DOCUMENT_NAME Value='&quot;+tableName+&quot;'/> &lt;/REQUEST>&quot;;
var xpath = &quot;/RESPONSES/RESPONSE/OPTIONS/OPTION&quot;;
SendAjaxRequest('BPE_META',request,'populateSelectDataType',xpath);
}
function populateSelectDataType(node)
{
	document.form.SelectDataType.options.length=1;
        if(node.length==0)
       {
			toggleDisplayField('validityChk_td','show');
       }
       else
       {
			toggleDisplayField('validityChk_td','hide');
       }
		for (i=0;i&lt;node.length;i++)
        {
           var newOptionTxt=node[i].getAttribute(&quot;Value&quot;);
           var newOptionId=node[i].getAttribute(&quot;Id&quot;);
			newOption = new Option(newOptionTxt, newOptionId, false, false);
           var dataTypelength=document.form.SelectDataType.length;
			document.form.SelectDataType.options[dataTypelength]=newOption;
        }
}   
 
    
function hideField(id)
{
	toggleField(id,'hide');
}

function showField(id)
{
	toggleField(id,'show');
}

function toggleField(id,state)
{
	fieldCell  = document.getElementById(id + '_td');
	fieldRow = fieldCell.parentNode;
	toggleItemVisibility(fieldRow, state);
	var i = document.getElementById(id);
	if(i!=null)
	{
		if (state==&quot;hide&quot;)
		{
    		i.disabled = true;
		}
		else
		{
			i.disabled = false;
			i.enabled = true;
		}
	}
enableSelect2();
}
function checkExtendedAttrName(){
var attrName = document.form.attrName.value;
var Tablename = document.form.Tablename.value;

var request= &quot;&lt;REQUEST Name='checkExtendedAttrName' ServiceName='BCM_MASTER' AssignToVar='extendedAttrValidity'>&lt;Tablename Value='&quot;+Tablename+&quot;' />&lt;attrName Value='&quot;+attrName+&quot;' />&lt;/REQUEST>&quot;
var xpath = &quot;/RESPONSES/RESPONSE/StatusFlagVal&quot;;
SendAjaxRequest('BCM_MASTER',request,'checkExtendedAttrNameCallback',xpath);
}
function checkExtendedAttrNameCallback(node){
var test;
test=node[0].getAttribute(&quot;Value&quot;);

if(test==&quot;TRUE&quot;)
{
toggleDisplayField('attrNameExist_td','show');
}
else
{
toggleDisplayField('attrNameExist_td','hide');
}
}
function onlyValidCharacters()
{
var invalidCharacters = /[!@#$`%^&amp;*()+-=\\\';,./{}|\&quot;:&lt;>?~\]\[ ]/;
var numbers = /[0123456789]/

    
var bChanged = false;

var oField = event.srcElement;
var sField = oField.value;
var nStringLen = sField.length;
var sValidField = &quot;&quot;;

for(var x = 0; x &lt; nStringLen; x++)
{
var cChar = sField.charAt(x);
if(cChar.search(invalidCharacters) == -1 || (cChar.search(numbers) != -1 &amp;&amp; x!=0))
{
sValidField += cChar;
}
else
{
bChanged = true;
}
}

if(bChanged)
{
oField.value = sValidField;
}
}
 
 </ui:script>
</ui:page-group>