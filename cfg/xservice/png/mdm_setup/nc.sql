DROP TABLE SYS_NC_SQLS CASCADE CONSTRAINTS;

CREATE TABLE SYS_NC_SQLS (TABLE_NAME VARCHAR2(400),SQLSTRING LONG);

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDTL_GEOC_AREA', 'INSERT INTO NC_ADDTL_GEOC_AREA ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,''INSERT'',''VALID'' FROM IN_ADDTL_GEOC_AREA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ADDTL_GEOC_AREA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDTL_GEOC_AREA', 'INSERT INTO NC_ADDTL_GEOC_AREA ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,''DELETE'',''VALID'' FROM ADDTL_GEOC_AREA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ADDTL_GEOC_AREA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ADDTL_GEOC_AREA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDTL_GEOC_AREA', 'INSERT INTO NC_ADDTL_GEOC_AREA ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_NAME,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,''UPDATE'',''VALID'' FROM IN_ADDTL_GEOC_AREA t1, ADDTL_GEOC_AREA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GEOC_AREA_TYPE_CODE <> t2.GEOC_AREA_TYPE_CODE OR ( t1.GEOC_AREA_TYPE_CODE IS NULL AND t2.GEOC_AREA_TYPE_CODE IS NOT NULL) OR (t1.GEOC_AREA_TYPE_CODE IS NOT NULL AND t2.GEOC_AREA_TYPE_CODE IS NULL)) OR (t1.GEOC_AREA_NAME <> t2.GEOC_AREA_NAME OR ( t1.GEOC_AREA_NAME IS NULL AND t2.GEOC_AREA_NAME IS NOT NULL) OR (t1.GEOC_AREA_NAME IS NOT NULL AND t2.GEOC_AREA_NAME IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDTL_GEOC_AREA', 'INSERT INTO NC_ADDTL_GEOC_AREA ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_NAME,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,''ACTIVATE'',''VALID'' FROM IN_ADDTL_GEOC_AREA t1, ADDTL_GEOC_AREA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('AGE_MIN_MAX', 'INSERT INTO NC_AGE_MIN_MAX ( SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,''INSERT'',''VALID'' FROM AGE_MIN_MAX t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGE_MIN_MAX t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('AGE_MIN_MAX', 'INSERT INTO NC_AGE_MIN_MAX ( SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,''DELETE'',''VALID'' FROM AGE_MIN_MAX t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM AGE_MIN_MAX t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM AGE_MIN_MAX t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('AGE_MIN_MAX', 'INSERT INTO NC_AGE_MIN_MAX ( SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MIN_AGE,t1.MAX_AGE,t1.COUNTRY,''UPDATE'',''VALID'' FROM AGE_MIN_MAX t1, AGE_MIN_MAX t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MIN_AGE <> t2.MIN_AGE OR ( t1.MIN_AGE IS NULL AND t2.MIN_AGE IS NOT NULL) OR (t1.MIN_AGE IS NOT NULL AND t2.MIN_AGE IS NULL)) OR (t1.MAX_AGE <> t2.MAX_AGE OR ( t1.MAX_AGE IS NULL AND t2.MAX_AGE IS NOT NULL) OR (t1.MAX_AGE IS NOT NULL AND t2.MAX_AGE IS NULL)) OR (t1.COUNTRY <> t2.COUNTRY OR ( t1.COUNTRY IS NULL AND t2.COUNTRY IS NOT NULL) OR (t1.COUNTRY IS NOT NULL AND t2.COUNTRY IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('AGE_MIN_MAX', 'INSERT INTO NC_AGE_MIN_MAX ( SCENARIO_ID,MIN_AGE,MAX_AGE,COUNTRY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MIN_AGE,t1.MAX_AGE,t1.COUNTRY,''ACTIVATE'',''VALID'' FROM AGE_MIN_MAX t1, AGE_MIN_MAX t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY', 'INSERT INTO NC_AGNCY ( SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,''INSERT'',''VALID'' FROM IN_AGNCY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY', 'INSERT INTO NC_AGNCY ( SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,''DELETE'',''VALID'' FROM AGNCY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY', 'INSERT INTO NC_AGNCY ( SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_DESC,t1.AGNCY_BUS_NM,t1.ACTV_DT,t1.REQSTD_DT,t1.AGNCY_STATUS_CD,t1.SR_NBR,t1.DMG_IND,t1.EXTRNL_AGNCY_ID,t1.RQSTR_CNTCT_NBR,t1.SPLR_IND,t1.TRNS_IND,t1.GRS_IND,t1.AGNCY_CNSMR_FCNG_NM,t1.BUSN_NOTES,''UPDATE'',''VALID'' FROM IN_AGNCY t1, AGNCY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.AGNCY_NM <> t2.AGNCY_NM OR ( t1.AGNCY_NM IS NULL AND t2.AGNCY_NM IS NOT NULL) OR (t1.AGNCY_NM IS NOT NULL AND t2.AGNCY_NM IS NULL)) OR (t1.AGNCY_DESC <> t2.AGNCY_DESC OR ( t1.AGNCY_DESC IS NULL AND t2.AGNCY_DESC IS NOT NULL) OR (t1.AGNCY_DESC IS NOT NULL AND t2.AGNCY_DESC IS NULL)) OR (t1.AGNCY_BUS_NM <> t2.AGNCY_BUS_NM OR ( t1.AGNCY_BUS_NM IS NULL AND t2.AGNCY_BUS_NM IS NOT NULL) OR (t1.AGNCY_BUS_NM IS NOT NULL AND t2.AGNCY_BUS_NM IS NULL)) OR (t1.ACTV_DT <> t2.ACTV_DT OR ( t1.ACTV_DT IS NULL AND t2.ACTV_DT IS NOT NULL) OR (t1.ACTV_DT IS NOT NULL AND t2.ACTV_DT IS NULL)) OR (t1.REQSTD_DT <> t2.REQSTD_DT OR ( t1.REQSTD_DT IS NULL AND t2.REQSTD_DT IS NOT NULL) OR (t1.REQSTD_DT IS NOT NULL AND t2.REQSTD_DT IS NULL)) OR (t1.AGNCY_STATUS_CD <> t2.AGNCY_STATUS_CD OR ( t1.AGNCY_STATUS_CD IS NULL AND t2.AGNCY_STATUS_CD IS NOT NULL) OR (t1.AGNCY_STATUS_CD IS NOT NULL AND t2.AGNCY_STATUS_CD IS NULL)) OR (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) OR (t1.DMG_IND <> t2.DMG_IND OR ( t1.DMG_IND IS NULL AND t2.DMG_IND IS NOT NULL) OR (t1.DMG_IND IS NOT NULL AND t2.DMG_IND IS NULL)) OR (t1.EXTRNL_AGNCY_ID <> t2.EXTRNL_AGNCY_ID OR ( t1.EXTRNL_AGNCY_ID IS NULL AND t2.EXTRNL_AGNCY_ID IS NOT NULL) OR (t1.EXTRNL_AGNCY_ID IS NOT NULL AND t2.EXTRNL_AGNCY_ID IS NULL)) OR (t1.RQSTR_CNTCT_NBR <> t2.RQSTR_CNTCT_NBR OR ( t1.RQSTR_CNTCT_NBR IS NULL AND t2.RQSTR_CNTCT_NBR IS NOT NULL) OR (t1.RQSTR_CNTCT_NBR IS NOT NULL AND t2.RQSTR_CNTCT_NBR IS NULL)) OR (t1.SPLR_IND <> t2.SPLR_IND OR ( t1.SPLR_IND IS NULL AND t2.SPLR_IND IS NOT NULL) OR (t1.SPLR_IND IS NOT NULL AND t2.SPLR_IND IS NULL)) OR (t1.TRNS_IND <> t2.TRNS_IND OR ( t1.TRNS_IND IS NULL AND t2.TRNS_IND IS NOT NULL) OR (t1.TRNS_IND IS NOT NULL AND t2.TRNS_IND IS NULL)) OR (t1.GRS_IND <> t2.GRS_IND OR ( t1.GRS_IND IS NULL AND t2.GRS_IND IS NOT NULL) OR (t1.GRS_IND IS NOT NULL AND t2.GRS_IND IS NULL)) OR (t1.AGNCY_CNSMR_FCNG_NM <> t2.AGNCY_CNSMR_FCNG_NM OR ( t1.AGNCY_CNSMR_FCNG_NM IS NULL AND t2.AGNCY_CNSMR_FCNG_NM IS NOT NULL) OR (t1.AGNCY_CNSMR_FCNG_NM IS NOT NULL AND t2.AGNCY_CNSMR_FCNG_NM IS NULL)) OR (t1.BUSN_NOTES <> t2.BUSN_NOTES OR ( t1.BUSN_NOTES IS NULL AND t2.BUSN_NOTES IS NOT NULL) OR (t1.BUSN_NOTES IS NOT NULL AND t2.BUSN_NOTES IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY', 'INSERT INTO NC_AGNCY ( SCENARIO_ID,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,AGNCY_BUS_NM,ACTV_DT,REQSTD_DT,AGNCY_STATUS_CD,SR_NBR,DMG_IND,EXTRNL_AGNCY_ID,RQSTR_CNTCT_NBR,SPLR_IND,TRNS_IND,GRS_IND,AGNCY_CNSMR_FCNG_NM,BUSN_NOTES,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_DESC,t1.AGNCY_BUS_NM,t1.ACTV_DT,t1.REQSTD_DT,t1.AGNCY_STATUS_CD,t1.SR_NBR,t1.DMG_IND,t1.EXTRNL_AGNCY_ID,t1.RQSTR_CNTCT_NBR,t1.SPLR_IND,t1.TRNS_IND,t1.GRS_IND,t1.AGNCY_CNSMR_FCNG_NM,t1.BUSN_NOTES,''ACTIVATE'',''VALID'' FROM IN_AGNCY t1, AGNCY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTCT', 'INSERT INTO NC_AGNCY_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,''INSERT'',''VALID'' FROM IN_AGNCY_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTCT', 'INSERT INTO NC_AGNCY_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,''DELETE'',''VALID'' FROM AGNCY_CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTCT', 'INSERT INTO NC_AGNCY_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.PRMRY_CNTCT_IND,''UPDATE'',''VALID'' FROM IN_AGNCY_CNTCT t1, AGNCY_CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.PRMRY_CNTCT_IND <> t2.PRMRY_CNTCT_IND OR ( t1.PRMRY_CNTCT_IND IS NULL AND t2.PRMRY_CNTCT_IND IS NOT NULL) OR (t1.PRMRY_CNTCT_IND IS NOT NULL AND t2.PRMRY_CNTCT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTCT', 'INSERT INTO NC_AGNCY_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.PRMRY_CNTCT_IND,''ACTIVATE'',''VALID'' FROM IN_AGNCY_CNTCT t1, AGNCY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY', 'INSERT INTO NC_AGNCY_CNTRY ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,''INSERT'',''VALID'' FROM IN_AGNCY_CNTRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY', 'INSERT INTO NC_AGNCY_CNTRY ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,''DELETE'',''VALID'' FROM AGNCY_CNTRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY', 'INSERT INTO NC_AGNCY_CNTRY ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.CNTRY_CODE,''UPDATE'',''VALID'' FROM IN_AGNCY_CNTRY t1, AGNCY_CNTRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY', 'INSERT INTO NC_AGNCY_CNTRY ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.CNTRY_CODE,''ACTIVATE'',''VALID'' FROM IN_AGNCY_CNTRY t1, AGNCY_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY_CNTCT', 'INSERT INTO NC_AGNCY_CNTRY_CNTCT ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,''INSERT'',''VALID'' FROM IN_AGNCY_CNTRY_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_CNTRY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY_CNTCT', 'INSERT INTO NC_AGNCY_CNTRY_CNTCT ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,''DELETE'',''VALID'' FROM AGNCY_CNTRY_CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_CNTRY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_CNTRY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY_CNTCT', 'INSERT INTO NC_AGNCY_CNTRY_CNTCT ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.CNTRY_CODE,t1.CNTCT_NBR,''UPDATE'',''VALID'' FROM IN_AGNCY_CNTRY_CNTCT t1, AGNCY_CNTRY_CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_CNTRY_CNTCT', 'INSERT INTO NC_AGNCY_CNTRY_CNTCT ( SCENARIO_ID,AGNCY_NBR,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.CNTRY_CODE,t1.CNTCT_NBR,''ACTIVATE'',''VALID'' FROM IN_AGNCY_CNTRY_CNTCT t1, AGNCY_CNTRY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC', 'INSERT INTO NC_AGNCY_INTRFC ( SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,''INSERT'',''VALID'' FROM IN_AGNCY_INTRFC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_INTRFC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_INTRFC_NBR = t2.AGNCY_INTRFC_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC', 'INSERT INTO NC_AGNCY_INTRFC ( SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,''DELETE'',''VALID'' FROM AGNCY_INTRFC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_INTRFC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_INTRFC_NBR = t2.AGNCY_INTRFC_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_INTRFC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_INTRFC_NBR = t2.AGNCY_INTRFC_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC', 'INSERT INTO NC_AGNCY_INTRFC ( SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_INTRFC_NBR,t1.DATA_CLCTN_TYPE_CD,t1.BRAND_SPLR_LST,t1.INTRFC_NBR,t1.AGNCY_NBR,t1.PII_DATA_IND,t1.FREQ_NBR_DAYS,t1.ERR_THRSHLD_PCT,''UPDATE'',''VALID'' FROM IN_AGNCY_INTRFC t1, AGNCY_INTRFC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_INTRFC_NBR = t2.AGNCY_INTRFC_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_INTRFC_NBR <> t2.AGNCY_INTRFC_NBR OR ( t1.AGNCY_INTRFC_NBR IS NULL AND t2.AGNCY_INTRFC_NBR IS NOT NULL) OR (t1.AGNCY_INTRFC_NBR IS NOT NULL AND t2.AGNCY_INTRFC_NBR IS NULL)) OR (t1.DATA_CLCTN_TYPE_CD <> t2.DATA_CLCTN_TYPE_CD OR ( t1.DATA_CLCTN_TYPE_CD IS NULL AND t2.DATA_CLCTN_TYPE_CD IS NOT NULL) OR (t1.DATA_CLCTN_TYPE_CD IS NOT NULL AND t2.DATA_CLCTN_TYPE_CD IS NULL)) OR (t1.BRAND_SPLR_LST <> t2.BRAND_SPLR_LST OR ( t1.BRAND_SPLR_LST IS NULL AND t2.BRAND_SPLR_LST IS NOT NULL) OR (t1.BRAND_SPLR_LST IS NOT NULL AND t2.BRAND_SPLR_LST IS NULL)) OR (t1.INTRFC_NBR <> t2.INTRFC_NBR OR ( t1.INTRFC_NBR IS NULL AND t2.INTRFC_NBR IS NOT NULL) OR (t1.INTRFC_NBR IS NOT NULL AND t2.INTRFC_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.PII_DATA_IND <> t2.PII_DATA_IND OR ( t1.PII_DATA_IND IS NULL AND t2.PII_DATA_IND IS NOT NULL) OR (t1.PII_DATA_IND IS NOT NULL AND t2.PII_DATA_IND IS NULL)) OR (t1.FREQ_NBR_DAYS <> t2.FREQ_NBR_DAYS OR ( t1.FREQ_NBR_DAYS IS NULL AND t2.FREQ_NBR_DAYS IS NOT NULL) OR (t1.FREQ_NBR_DAYS IS NOT NULL AND t2.FREQ_NBR_DAYS IS NULL)) OR (t1.ERR_THRSHLD_PCT <> t2.ERR_THRSHLD_PCT OR ( t1.ERR_THRSHLD_PCT IS NULL AND t2.ERR_THRSHLD_PCT IS NOT NULL) OR (t1.ERR_THRSHLD_PCT IS NOT NULL AND t2.ERR_THRSHLD_PCT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC', 'INSERT INTO NC_AGNCY_INTRFC ( SCENARIO_ID,AGNCY_INTRFC_NBR,DATA_CLCTN_TYPE_CD,BRAND_SPLR_LST,INTRFC_NBR,AGNCY_NBR,PII_DATA_IND,FREQ_NBR_DAYS,ERR_THRSHLD_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_INTRFC_NBR,t1.DATA_CLCTN_TYPE_CD,t1.BRAND_SPLR_LST,t1.INTRFC_NBR,t1.AGNCY_NBR,t1.PII_DATA_IND,t1.FREQ_NBR_DAYS,t1.ERR_THRSHLD_PCT,''ACTIVATE'',''VALID'' FROM IN_AGNCY_INTRFC t1, AGNCY_INTRFC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_INTRFC_NBR = t2.AGNCY_INTRFC_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC_CNTCT', 'INSERT INTO NC_AGNCY_INTRFC_CNTCT ( SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,''INSERT'',''VALID'' FROM IN_AGNCY_INTRFC_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_INTRFC_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.INTRFC_NBR = t2.INTRFC_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC_CNTCT', 'INSERT INTO NC_AGNCY_INTRFC_CNTCT ( SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,''DELETE'',''VALID'' FROM AGNCY_INTRFC_CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_INTRFC_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.INTRFC_NBR = t2.INTRFC_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_INTRFC_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.INTRFC_NBR = t2.INTRFC_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC_CNTCT', 'INSERT INTO NC_AGNCY_INTRFC_CNTCT ( SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_NBR,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.PRMRY_CNTCT_IND,''UPDATE'',''VALID'' FROM IN_AGNCY_INTRFC_CNTCT t1, AGNCY_INTRFC_CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.INTRFC_NBR = t2.INTRFC_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.INTRFC_NBR <> t2.INTRFC_NBR OR ( t1.INTRFC_NBR IS NULL AND t2.INTRFC_NBR IS NOT NULL) OR (t1.INTRFC_NBR IS NOT NULL AND t2.INTRFC_NBR IS NULL)) OR (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.PRMRY_CNTCT_IND <> t2.PRMRY_CNTCT_IND OR ( t1.PRMRY_CNTCT_IND IS NULL AND t2.PRMRY_CNTCT_IND IS NOT NULL) OR (t1.PRMRY_CNTCT_IND IS NOT NULL AND t2.PRMRY_CNTCT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_INTRFC_CNTCT', 'INSERT INTO NC_AGNCY_INTRFC_CNTCT ( SCENARIO_ID,INTRFC_NBR,CNTCT_NBR,AGNCY_NBR,PRMRY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_NBR,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.PRMRY_CNTCT_IND,''ACTIVATE'',''VALID'' FROM IN_AGNCY_INTRFC_CNTCT t1, AGNCY_INTRFC_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.INTRFC_NBR = t2.INTRFC_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_IP', 'INSERT INTO NC_AGNCY_IP ( SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,''INSERT'',''VALID'' FROM IN_AGNCY_IP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_IP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.IP_ADDR = t2.IP_ADDR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_IP', 'INSERT INTO NC_AGNCY_IP ( SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,''DELETE'',''VALID'' FROM AGNCY_IP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_IP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.IP_ADDR = t2.IP_ADDR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_IP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.IP_ADDR = t2.IP_ADDR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_IP', 'INSERT INTO NC_AGNCY_IP ( SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SR_NBR,t1.IP_ADDR,t1.AGNCY_NBR,t1.REQSTD_DT,''UPDATE'',''VALID'' FROM IN_AGNCY_IP t1, AGNCY_IP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.IP_ADDR = t2.IP_ADDR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) OR (t1.IP_ADDR <> t2.IP_ADDR OR ( t1.IP_ADDR IS NULL AND t2.IP_ADDR IS NOT NULL) OR (t1.IP_ADDR IS NOT NULL AND t2.IP_ADDR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.REQSTD_DT <> t2.REQSTD_DT OR ( t1.REQSTD_DT IS NULL AND t2.REQSTD_DT IS NOT NULL) OR (t1.REQSTD_DT IS NOT NULL AND t2.REQSTD_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_IP', 'INSERT INTO NC_AGNCY_IP ( SCENARIO_ID,SR_NBR,IP_ADDR,AGNCY_NBR,REQSTD_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SR_NBR,t1.IP_ADDR,t1.AGNCY_NBR,t1.REQSTD_DT,''ACTIVATE'',''VALID'' FROM IN_AGNCY_IP t1, AGNCY_IP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.IP_ADDR = t2.IP_ADDR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM', 'INSERT INTO NC_AGNCY_MKTNG_PGM ( SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_AGNCY_MKTNG_PGM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM', 'INSERT INTO NC_AGNCY_MKTNG_PGM ( SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM AGNCY_MKTNG_PGM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM', 'INSERT INTO NC_AGNCY_MKTNG_PGM ( SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.MKTNG_PGM_NBR,t1.PREF_SRC_IND,t1.WEBSITE_REGIS_IND,t1.DTC_REGIS_PRIOR_IND,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_AGNCY_MKTNG_PGM t1, AGNCY_MKTNG_PGM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PREF_SRC_IND <> t2.PREF_SRC_IND OR ( t1.PREF_SRC_IND IS NULL AND t2.PREF_SRC_IND IS NOT NULL) OR (t1.PREF_SRC_IND IS NOT NULL AND t2.PREF_SRC_IND IS NULL)) OR (t1.WEBSITE_REGIS_IND <> t2.WEBSITE_REGIS_IND OR ( t1.WEBSITE_REGIS_IND IS NULL AND t2.WEBSITE_REGIS_IND IS NOT NULL) OR (t1.WEBSITE_REGIS_IND IS NOT NULL AND t2.WEBSITE_REGIS_IND IS NULL)) OR (t1.DTC_REGIS_PRIOR_IND <> t2.DTC_REGIS_PRIOR_IND OR ( t1.DTC_REGIS_PRIOR_IND IS NULL AND t2.DTC_REGIS_PRIOR_IND IS NOT NULL) OR (t1.DTC_REGIS_PRIOR_IND IS NOT NULL AND t2.DTC_REGIS_PRIOR_IND IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM', 'INSERT INTO NC_AGNCY_MKTNG_PGM ( SCENARIO_ID,AGNCY_NBR,MKTNG_PGM_NBR,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_NBR,t1.MKTNG_PGM_NBR,t1.PREF_SRC_IND,t1.WEBSITE_REGIS_IND,t1.DTC_REGIS_PRIOR_IND,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_AGNCY_MKTNG_PGM t1, AGNCY_MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM_CNTCT', 'INSERT INTO NC_AGNCY_MKTNG_PGM_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,''INSERT'',''VALID'' FROM IN_AGNCY_MKTNG_PGM_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_MKTNG_PGM_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM_CNTCT', 'INSERT INTO NC_AGNCY_MKTNG_PGM_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,''DELETE'',''VALID'' FROM AGNCY_MKTNG_PGM_CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_MKTNG_PGM_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_MKTNG_PGM_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM_CNTCT', 'INSERT INTO NC_AGNCY_MKTNG_PGM_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.MKTNG_PGM_NBR,t1.PRIMARY_CNTCT_IND,''UPDATE'',''VALID'' FROM IN_AGNCY_MKTNG_PGM_CNTCT t1, AGNCY_MKTNG_PGM_CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PRIMARY_CNTCT_IND <> t2.PRIMARY_CNTCT_IND OR ( t1.PRIMARY_CNTCT_IND IS NULL AND t2.PRIMARY_CNTCT_IND IS NOT NULL) OR (t1.PRIMARY_CNTCT_IND IS NOT NULL AND t2.PRIMARY_CNTCT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MKTNG_PGM_CNTCT', 'INSERT INTO NC_AGNCY_MKTNG_PGM_CNTCT ( SCENARIO_ID,CNTCT_NBR,AGNCY_NBR,MKTNG_PGM_NBR,PRIMARY_CNTCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.AGNCY_NBR,t1.MKTNG_PGM_NBR,t1.PRIMARY_CNTCT_IND,''ACTIVATE'',''VALID'' FROM IN_AGNCY_MKTNG_PGM_CNTCT t1, AGNCY_MKTNG_PGM_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MSTR', 'INSERT INTO NC_AGNCY_MSTR ( SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,''INSERT'',''VALID'' FROM IN_AGNCY_MSTR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_MSTR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MSTR', 'INSERT INTO NC_AGNCY_MSTR ( SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,''DELETE'',''VALID'' FROM AGNCY_MSTR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_MSTR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_MSTR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MSTR', 'INSERT INTO NC_AGNCY_MSTR ( SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACTV_DT,t1.AGNCY_BUS_NM,t1.AGNCY_CNSMR_FCNG_NM,t1.AGNCY_DESC,t1.AGNCY_INTRFC_NBR,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_STATUS_CD,t1.AGNCY_STATUS_NM,t1.BRAND_SPLR_LST,t1.BUSN_NOTES,t1.CNTCT_NBR,t1.CNTRY_CODE,t1.DATA_CLCTN_TYPE_CD,t1.DMG_IND,t1.DTC_REGIS_PRIOR_IND,t1.ERR_THRSHLD_PCT,t1.EXTRNL_AGNCY_ID,t1.FREQ_NBR_DAYS,t1.GRS_IND,t1.INTRFC_NBR,t1.IP_ADDR,t1.LEGAL_ENT_NBR,t1.LOG_LOAD_ID,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.MKTNG_PGM_NBR,t1.PII_DATA_IND,t1.PREF_SRC_IND,t1.PRIMARY_CNTCT_IND,t1.PRMRY_CNTCT_IND,t1.REQSTD_DT,t1.RQSTR_CNTCT_NBR,t1.SPLR_IND,t1.SR_NBR,t1.TRNS_IND,t1.WEBSITE_REGIS_IND,''UPDATE'',''VALID'' FROM IN_AGNCY_MSTR t1, AGNCY_MSTR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACTV_DT <> t2.ACTV_DT OR ( t1.ACTV_DT IS NULL AND t2.ACTV_DT IS NOT NULL) OR (t1.ACTV_DT IS NOT NULL AND t2.ACTV_DT IS NULL)) OR (t1.AGNCY_BUS_NM <> t2.AGNCY_BUS_NM OR ( t1.AGNCY_BUS_NM IS NULL AND t2.AGNCY_BUS_NM IS NOT NULL) OR (t1.AGNCY_BUS_NM IS NOT NULL AND t2.AGNCY_BUS_NM IS NULL)) OR (t1.AGNCY_CNSMR_FCNG_NM <> t2.AGNCY_CNSMR_FCNG_NM OR ( t1.AGNCY_CNSMR_FCNG_NM IS NULL AND t2.AGNCY_CNSMR_FCNG_NM IS NOT NULL) OR (t1.AGNCY_CNSMR_FCNG_NM IS NOT NULL AND t2.AGNCY_CNSMR_FCNG_NM IS NULL)) OR (t1.AGNCY_DESC <> t2.AGNCY_DESC OR ( t1.AGNCY_DESC IS NULL AND t2.AGNCY_DESC IS NOT NULL) OR (t1.AGNCY_DESC IS NOT NULL AND t2.AGNCY_DESC IS NULL)) OR (t1.AGNCY_INTRFC_NBR <> t2.AGNCY_INTRFC_NBR OR ( t1.AGNCY_INTRFC_NBR IS NULL AND t2.AGNCY_INTRFC_NBR IS NOT NULL) OR (t1.AGNCY_INTRFC_NBR IS NOT NULL AND t2.AGNCY_INTRFC_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.AGNCY_NM <> t2.AGNCY_NM OR ( t1.AGNCY_NM IS NULL AND t2.AGNCY_NM IS NOT NULL) OR (t1.AGNCY_NM IS NOT NULL AND t2.AGNCY_NM IS NULL)) OR (t1.AGNCY_STATUS_CD <> t2.AGNCY_STATUS_CD OR ( t1.AGNCY_STATUS_CD IS NULL AND t2.AGNCY_STATUS_CD IS NOT NULL) OR (t1.AGNCY_STATUS_CD IS NOT NULL AND t2.AGNCY_STATUS_CD IS NULL)) OR (t1.AGNCY_STATUS_NM <> t2.AGNCY_STATUS_NM OR ( t1.AGNCY_STATUS_NM IS NULL AND t2.AGNCY_STATUS_NM IS NOT NULL) OR (t1.AGNCY_STATUS_NM IS NOT NULL AND t2.AGNCY_STATUS_NM IS NULL)) OR (t1.BRAND_SPLR_LST <> t2.BRAND_SPLR_LST OR ( t1.BRAND_SPLR_LST IS NULL AND t2.BRAND_SPLR_LST IS NOT NULL) OR (t1.BRAND_SPLR_LST IS NOT NULL AND t2.BRAND_SPLR_LST IS NULL)) OR (t1.BUSN_NOTES <> t2.BUSN_NOTES OR ( t1.BUSN_NOTES IS NULL AND t2.BUSN_NOTES IS NOT NULL) OR (t1.BUSN_NOTES IS NOT NULL AND t2.BUSN_NOTES IS NULL)) OR (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.DATA_CLCTN_TYPE_CD <> t2.DATA_CLCTN_TYPE_CD OR ( t1.DATA_CLCTN_TYPE_CD IS NULL AND t2.DATA_CLCTN_TYPE_CD IS NOT NULL) OR (t1.DATA_CLCTN_TYPE_CD IS NOT NULL AND t2.DATA_CLCTN_TYPE_CD IS NULL)) OR (t1.DMG_IND <> t2.DMG_IND OR ( t1.DMG_IND IS NULL AND t2.DMG_IND IS NOT NULL) OR (t1.DMG_IND IS NOT NULL AND t2.DMG_IND IS NULL)) OR (t1.DTC_REGIS_PRIOR_IND <> t2.DTC_REGIS_PRIOR_IND OR ( t1.DTC_REGIS_PRIOR_IND IS NULL AND t2.DTC_REGIS_PRIOR_IND IS NOT NULL) OR (t1.DTC_REGIS_PRIOR_IND IS NOT NULL AND t2.DTC_REGIS_PRIOR_IND IS NULL)) OR (t1.ERR_THRSHLD_PCT <> t2.ERR_THRSHLD_PCT OR ( t1.ERR_THRSHLD_PCT IS NULL AND t2.ERR_THRSHLD_PCT IS NOT NULL) OR (t1.ERR_THRSHLD_PCT IS NOT NULL AND t2.ERR_THRSHLD_PCT IS NULL)) OR (t1.EXTRNL_AGNCY_ID <> t2.EXTRNL_AGNCY_ID OR ( t1.EXTRNL_AGNCY_ID IS NULL AND t2.EXTRNL_AGNCY_ID IS NOT NULL) OR (t1.EXTRNL_AGNCY_ID IS NOT NULL AND t2.EXTRNL_AGNCY_ID IS NULL)) OR (t1.FREQ_NBR_DAYS <> t2.FREQ_NBR_DAYS OR ( t1.FREQ_NBR_DAYS IS NULL AND t2.FREQ_NBR_DAYS IS NOT NULL) OR (t1.FREQ_NBR_DAYS IS NOT NULL AND t2.FREQ_NBR_DAYS IS NULL)) OR (t1.GRS_IND <> t2.GRS_IND OR ( t1.GRS_IND IS NULL AND t2.GRS_IND IS NOT NULL) OR (t1.GRS_IND IS NOT NULL AND t2.GRS_IND IS NULL)) OR (t1.INTRFC_NBR <> t2.INTRFC_NBR OR ( t1.INTRFC_NBR IS NULL AND t2.INTRFC_NBR IS NOT NULL) OR (t1.INTRFC_NBR IS NOT NULL AND t2.INTRFC_NBR IS NULL)) OR (t1.IP_ADDR <> t2.IP_ADDR OR ( t1.IP_ADDR IS NULL AND t2.IP_ADDR IS NOT NULL) OR (t1.IP_ADDR IS NOT NULL AND t2.IP_ADDR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PII_DATA_IND <> t2.PII_DATA_IND OR ( t1.PII_DATA_IND IS NULL AND t2.PII_DATA_IND IS NOT NULL) OR (t1.PII_DATA_IND IS NOT NULL AND t2.PII_DATA_IND IS NULL)) OR (t1.PREF_SRC_IND <> t2.PREF_SRC_IND OR ( t1.PREF_SRC_IND IS NULL AND t2.PREF_SRC_IND IS NOT NULL) OR (t1.PREF_SRC_IND IS NOT NULL AND t2.PREF_SRC_IND IS NULL)) OR (t1.PRIMARY_CNTCT_IND <> t2.PRIMARY_CNTCT_IND OR ( t1.PRIMARY_CNTCT_IND IS NULL AND t2.PRIMARY_CNTCT_IND IS NOT NULL) OR (t1.PRIMARY_CNTCT_IND IS NOT NULL AND t2.PRIMARY_CNTCT_IND IS NULL)) OR (t1.PRMRY_CNTCT_IND <> t2.PRMRY_CNTCT_IND OR ( t1.PRMRY_CNTCT_IND IS NULL AND t2.PRMRY_CNTCT_IND IS NOT NULL) OR (t1.PRMRY_CNTCT_IND IS NOT NULL AND t2.PRMRY_CNTCT_IND IS NULL)) OR (t1.REQSTD_DT <> t2.REQSTD_DT OR ( t1.REQSTD_DT IS NULL AND t2.REQSTD_DT IS NOT NULL) OR (t1.REQSTD_DT IS NOT NULL AND t2.REQSTD_DT IS NULL)) OR (t1.RQSTR_CNTCT_NBR <> t2.RQSTR_CNTCT_NBR OR ( t1.RQSTR_CNTCT_NBR IS NULL AND t2.RQSTR_CNTCT_NBR IS NOT NULL) OR (t1.RQSTR_CNTCT_NBR IS NOT NULL AND t2.RQSTR_CNTCT_NBR IS NULL)) OR (t1.SPLR_IND <> t2.SPLR_IND OR ( t1.SPLR_IND IS NULL AND t2.SPLR_IND IS NOT NULL) OR (t1.SPLR_IND IS NOT NULL AND t2.SPLR_IND IS NULL)) OR (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) OR (t1.TRNS_IND <> t2.TRNS_IND OR ( t1.TRNS_IND IS NULL AND t2.TRNS_IND IS NOT NULL) OR (t1.TRNS_IND IS NOT NULL AND t2.TRNS_IND IS NULL)) OR (t1.WEBSITE_REGIS_IND <> t2.WEBSITE_REGIS_IND OR ( t1.WEBSITE_REGIS_IND IS NULL AND t2.WEBSITE_REGIS_IND IS NOT NULL) OR (t1.WEBSITE_REGIS_IND IS NOT NULL AND t2.WEBSITE_REGIS_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_MSTR', 'INSERT INTO NC_AGNCY_MSTR ( SCENARIO_ID,ACTV_DT,AGNCY_BUS_NM,AGNCY_CNSMR_FCNG_NM,AGNCY_DESC,AGNCY_INTRFC_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_STATUS_CD,AGNCY_STATUS_NM,BRAND_SPLR_LST,BUSN_NOTES,CNTCT_NBR,CNTRY_CODE,DATA_CLCTN_TYPE_CD,DMG_IND,DTC_REGIS_PRIOR_IND,ERR_THRSHLD_PCT,EXTRNL_AGNCY_ID,FREQ_NBR_DAYS,GRS_IND,INTRFC_NBR,IP_ADDR,LEGAL_ENT_NBR,LOG_LOAD_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,MKTNG_PGM_NBR,PII_DATA_IND,PREF_SRC_IND,PRIMARY_CNTCT_IND,PRMRY_CNTCT_IND,REQSTD_DT,RQSTR_CNTCT_NBR,SPLR_IND,SR_NBR,TRNS_IND,WEBSITE_REGIS_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACTV_DT,t1.AGNCY_BUS_NM,t1.AGNCY_CNSMR_FCNG_NM,t1.AGNCY_DESC,t1.AGNCY_INTRFC_NBR,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_STATUS_CD,t1.AGNCY_STATUS_NM,t1.BRAND_SPLR_LST,t1.BUSN_NOTES,t1.CNTCT_NBR,t1.CNTRY_CODE,t1.DATA_CLCTN_TYPE_CD,t1.DMG_IND,t1.DTC_REGIS_PRIOR_IND,t1.ERR_THRSHLD_PCT,t1.EXTRNL_AGNCY_ID,t1.FREQ_NBR_DAYS,t1.GRS_IND,t1.INTRFC_NBR,t1.IP_ADDR,t1.LEGAL_ENT_NBR,t1.LOG_LOAD_ID,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.MKTNG_PGM_NBR,t1.PII_DATA_IND,t1.PREF_SRC_IND,t1.PRIMARY_CNTCT_IND,t1.PRMRY_CNTCT_IND,t1.REQSTD_DT,t1.RQSTR_CNTCT_NBR,t1.SPLR_IND,t1.SR_NBR,t1.TRNS_IND,t1.WEBSITE_REGIS_IND,''ACTIVATE'',''VALID'' FROM IN_AGNCY_MSTR t1, AGNCY_MSTR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_NBR = t2.AGNCY_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_STATUS', 'INSERT INTO NC_AGNCY_STATUS ( SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_AGNCY_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM AGNCY_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_STATUS_CD = t2.AGNCY_STATUS_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_STATUS', 'INSERT INTO NC_AGNCY_STATUS ( SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM AGNCY_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_AGNCY_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_STATUS_CD = t2.AGNCY_STATUS_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_AGNCY_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_STATUS_CD = t2.AGNCY_STATUS_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_STATUS', 'INSERT INTO NC_AGNCY_STATUS ( SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_STATUS_CD,t1.AGNCY_STATUS_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_AGNCY_STATUS t1, AGNCY_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_STATUS_CD = t2.AGNCY_STATUS_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AGNCY_STATUS_CD <> t2.AGNCY_STATUS_CD OR ( t1.AGNCY_STATUS_CD IS NULL AND t2.AGNCY_STATUS_CD IS NOT NULL) OR (t1.AGNCY_STATUS_CD IS NOT NULL AND t2.AGNCY_STATUS_CD IS NULL)) OR (t1.AGNCY_STATUS_NM <> t2.AGNCY_STATUS_NM OR ( t1.AGNCY_STATUS_NM IS NULL AND t2.AGNCY_STATUS_NM IS NOT NULL) OR (t1.AGNCY_STATUS_NM IS NOT NULL AND t2.AGNCY_STATUS_NM IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_AGNCY_STATUS', 'INSERT INTO NC_AGNCY_STATUS ( SCENARIO_ID,AGNCY_STATUS_CD,AGNCY_STATUS_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AGNCY_STATUS_CD,t1.AGNCY_STATUS_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_AGNCY_STATUS t1, AGNCY_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AGNCY_STATUS_CD = t2.AGNCY_STATUS_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES', 'INSERT INTO NC_ATTRIBUTE_TYPES ( SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_TYPES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_TYPES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID = t2.ATTRIBUTE_TYPE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES', 'INSERT INTO NC_ATTRIBUTE_TYPES ( SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,''DELETE'',''VALID'' FROM ATTRIBUTE_TYPES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_TYPES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID = t2.ATTRIBUTE_TYPE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_TYPES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID = t2.ATTRIBUTE_TYPE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES', 'INSERT INTO NC_ATTRIBUTE_TYPES ( SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID,t1.ATTRIBUTE_TYPE,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.DATA_FORMAT,t1.DATA_LENGTH,t1.SELECTION_METHOD,t1.AV_CODE_FLAG,t1.AV_SHORT_NAME_FLAG,t1.USER_MANAGED_FLAG,t1.API,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES t1, ATTRIBUTE_TYPES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID = t2.ATTRIBUTE_TYPE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ATTRIBUTE_TYPE_ID <> t2.ATTRIBUTE_TYPE_ID OR ( t1.ATTRIBUTE_TYPE_ID IS NULL AND t2.ATTRIBUTE_TYPE_ID IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID IS NULL)) OR (t1.ATTRIBUTE_TYPE <> t2.ATTRIBUTE_TYPE OR ( t1.ATTRIBUTE_TYPE IS NULL AND t2.ATTRIBUTE_TYPE IS NOT NULL) OR (t1.ATTRIBUTE_TYPE IS NOT NULL AND t2.ATTRIBUTE_TYPE IS NULL)) OR (t1.DISPLAY_NAME <> t2.DISPLAY_NAME OR ( t1.DISPLAY_NAME IS NULL AND t2.DISPLAY_NAME IS NOT NULL) OR (t1.DISPLAY_NAME IS NOT NULL AND t2.DISPLAY_NAME IS NULL)) OR (t1.DATA_TYPE <> t2.DATA_TYPE OR ( t1.DATA_TYPE IS NULL AND t2.DATA_TYPE IS NOT NULL) OR (t1.DATA_TYPE IS NOT NULL AND t2.DATA_TYPE IS NULL)) OR (t1.DATA_FORMAT <> t2.DATA_FORMAT OR ( t1.DATA_FORMAT IS NULL AND t2.DATA_FORMAT IS NOT NULL) OR (t1.DATA_FORMAT IS NOT NULL AND t2.DATA_FORMAT IS NULL)) OR (t1.DATA_LENGTH <> t2.DATA_LENGTH OR ( t1.DATA_LENGTH IS NULL AND t2.DATA_LENGTH IS NOT NULL) OR (t1.DATA_LENGTH IS NOT NULL AND t2.DATA_LENGTH IS NULL)) OR (t1.SELECTION_METHOD <> t2.SELECTION_METHOD OR ( t1.SELECTION_METHOD IS NULL AND t2.SELECTION_METHOD IS NOT NULL) OR (t1.SELECTION_METHOD IS NOT NULL AND t2.SELECTION_METHOD IS NULL)) OR (t1.AV_CODE_FLAG <> t2.AV_CODE_FLAG OR ( t1.AV_CODE_FLAG IS NULL AND t2.AV_CODE_FLAG IS NOT NULL) OR (t1.AV_CODE_FLAG IS NOT NULL AND t2.AV_CODE_FLAG IS NULL)) OR (t1.AV_SHORT_NAME_FLAG <> t2.AV_SHORT_NAME_FLAG OR ( t1.AV_SHORT_NAME_FLAG IS NULL AND t2.AV_SHORT_NAME_FLAG IS NOT NULL) OR (t1.AV_SHORT_NAME_FLAG IS NOT NULL AND t2.AV_SHORT_NAME_FLAG IS NULL)) OR (t1.USER_MANAGED_FLAG <> t2.USER_MANAGED_FLAG OR ( t1.USER_MANAGED_FLAG IS NULL AND t2.USER_MANAGED_FLAG IS NOT NULL) OR (t1.USER_MANAGED_FLAG IS NOT NULL AND t2.USER_MANAGED_FLAG IS NULL)) OR (t1.API <> t2.API OR ( t1.API IS NULL AND t2.API IS NOT NULL) OR (t1.API IS NOT NULL AND t2.API IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES', 'INSERT INTO NC_ATTRIBUTE_TYPES ( SCENARIO_ID,ATTRIBUTE_TYPE_ID,ATTRIBUTE_TYPE,DISPLAY_NAME,DATA_TYPE,DATA_FORMAT,DATA_LENGTH,SELECTION_METHOD,AV_CODE_FLAG,AV_SHORT_NAME_FLAG,USER_MANAGED_FLAG,API,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID,t1.ATTRIBUTE_TYPE,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.DATA_FORMAT,t1.DATA_LENGTH,t1.SELECTION_METHOD,t1.AV_CODE_FLAG,t1.AV_SHORT_NAME_FLAG,t1.USER_MANAGED_FLAG,t1.API,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES t1, ATTRIBUTE_TYPES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID = t2.ATTRIBUTE_TYPE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_TYPES_HIERARCHY ( SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_TYPES_HIERARCHY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_TYPES_HIERARCHY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID_CHILD = t2.ATTRIBUTE_TYPE_ID_CHILD AND t1.ATTRIBUTE_TYPE_ID_PARENT = t2.ATTRIBUTE_TYPE_ID_PARENT )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_TYPES_HIERARCHY ( SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,''DELETE'',''VALID'' FROM ATTRIBUTE_TYPES_HIERARCHY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_TYPES_HIERARCHY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID_CHILD = t2.ATTRIBUTE_TYPE_ID_CHILD AND t1.ATTRIBUTE_TYPE_ID_PARENT = t2.ATTRIBUTE_TYPE_ID_PARENT ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_TYPES_HIERARCHY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID_CHILD = t2.ATTRIBUTE_TYPE_ID_CHILD AND t1.ATTRIBUTE_TYPE_ID_PARENT = t2.ATTRIBUTE_TYPE_ID_PARENT));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_TYPES_HIERARCHY ( SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID_CHILD,t1.ATTRIBUTE_TYPE_ID_PARENT,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES_HIERARCHY t1, ATTRIBUTE_TYPES_HIERARCHY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID_CHILD = t2.ATTRIBUTE_TYPE_ID_CHILD AND t1.ATTRIBUTE_TYPE_ID_PARENT = t2.ATTRIBUTE_TYPE_ID_PARENT AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ATTRIBUTE_TYPE_ID_CHILD <> t2.ATTRIBUTE_TYPE_ID_CHILD OR ( t1.ATTRIBUTE_TYPE_ID_CHILD IS NULL AND t2.ATTRIBUTE_TYPE_ID_CHILD IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID_CHILD IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID_CHILD IS NULL)) OR (t1.ATTRIBUTE_TYPE_ID_PARENT <> t2.ATTRIBUTE_TYPE_ID_PARENT OR ( t1.ATTRIBUTE_TYPE_ID_PARENT IS NULL AND t2.ATTRIBUTE_TYPE_ID_PARENT IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID_PARENT IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID_PARENT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_TYPES_HIERARCHY ( SCENARIO_ID,ATTRIBUTE_TYPE_ID_CHILD,ATTRIBUTE_TYPE_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID_CHILD,t1.ATTRIBUTE_TYPE_ID_PARENT,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES_HIERARCHY t1, ATTRIBUTE_TYPES_HIERARCHY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID_CHILD = t2.ATTRIBUTE_TYPE_ID_CHILD AND t1.ATTRIBUTE_TYPE_ID_PARENT = t2.ATTRIBUTE_TYPE_ID_PARENT AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_RELN', 'INSERT INTO NC_ATTRIBUTE_TYPES_RELN ( SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_TYPES_RELN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_TYPES_RELN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID1 = t2.ATTRIBUTE_TYPE_ID1 AND t1.ATTRIBUTE_TYPE_ID2 = t2.ATTRIBUTE_TYPE_ID2 )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_RELN', 'INSERT INTO NC_ATTRIBUTE_TYPES_RELN ( SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,''DELETE'',''VALID'' FROM ATTRIBUTE_TYPES_RELN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_TYPES_RELN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID1 = t2.ATTRIBUTE_TYPE_ID1 AND t1.ATTRIBUTE_TYPE_ID2 = t2.ATTRIBUTE_TYPE_ID2 ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_TYPES_RELN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID1 = t2.ATTRIBUTE_TYPE_ID1 AND t1.ATTRIBUTE_TYPE_ID2 = t2.ATTRIBUTE_TYPE_ID2));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_RELN', 'INSERT INTO NC_ATTRIBUTE_TYPES_RELN ( SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID1,t1.ATTRIBUTE_TYPE_ID2,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES_RELN t1, ATTRIBUTE_TYPES_RELN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID1 = t2.ATTRIBUTE_TYPE_ID1 AND t1.ATTRIBUTE_TYPE_ID2 = t2.ATTRIBUTE_TYPE_ID2 AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ATTRIBUTE_TYPE_ID1 <> t2.ATTRIBUTE_TYPE_ID1 OR ( t1.ATTRIBUTE_TYPE_ID1 IS NULL AND t2.ATTRIBUTE_TYPE_ID1 IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID1 IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID1 IS NULL)) OR (t1.ATTRIBUTE_TYPE_ID2 <> t2.ATTRIBUTE_TYPE_ID2 OR ( t1.ATTRIBUTE_TYPE_ID2 IS NULL AND t2.ATTRIBUTE_TYPE_ID2 IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID2 IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID2 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_TYPES_RELN', 'INSERT INTO NC_ATTRIBUTE_TYPES_RELN ( SCENARIO_ID,ATTRIBUTE_TYPE_ID1,ATTRIBUTE_TYPE_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_TYPE_ID1,t1.ATTRIBUTE_TYPE_ID2,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_TYPES_RELN t1, ATTRIBUTE_TYPES_RELN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTRIBUTE_TYPE_ID1 = t2.ATTRIBUTE_TYPE_ID1 AND t1.ATTRIBUTE_TYPE_ID2 = t2.ATTRIBUTE_TYPE_ID2 AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES', 'INSERT INTO NC_ATTRIBUTE_VALUES ( SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_VALUES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_VALUES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID = t2.AV_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES', 'INSERT INTO NC_ATTRIBUTE_VALUES ( SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,''DELETE'',''VALID'' FROM ATTRIBUTE_VALUES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_VALUES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID = t2.AV_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_VALUES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID = t2.AV_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES', 'INSERT INTO NC_ATTRIBUTE_VALUES ( SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AV_ID,t1.ATTRIBUTE_TYPE_ID,t1.ACTIVE_FLAG,t1.AV_DESCRIPTION,t1.AV_CODE,t1.AV_SHORT_NAME,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES t1, ATTRIBUTE_VALUES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID = t2.AV_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AV_ID <> t2.AV_ID OR ( t1.AV_ID IS NULL AND t2.AV_ID IS NOT NULL) OR (t1.AV_ID IS NOT NULL AND t2.AV_ID IS NULL)) OR (t1.ATTRIBUTE_TYPE_ID <> t2.ATTRIBUTE_TYPE_ID OR ( t1.ATTRIBUTE_TYPE_ID IS NULL AND t2.ATTRIBUTE_TYPE_ID IS NOT NULL) OR (t1.ATTRIBUTE_TYPE_ID IS NOT NULL AND t2.ATTRIBUTE_TYPE_ID IS NULL)) OR (t1.ACTIVE_FLAG <> t2.ACTIVE_FLAG OR ( t1.ACTIVE_FLAG IS NULL AND t2.ACTIVE_FLAG IS NOT NULL) OR (t1.ACTIVE_FLAG IS NOT NULL AND t2.ACTIVE_FLAG IS NULL)) OR (t1.AV_DESCRIPTION <> t2.AV_DESCRIPTION OR ( t1.AV_DESCRIPTION IS NULL AND t2.AV_DESCRIPTION IS NOT NULL) OR (t1.AV_DESCRIPTION IS NOT NULL AND t2.AV_DESCRIPTION IS NULL)) OR (t1.AV_CODE <> t2.AV_CODE OR ( t1.AV_CODE IS NULL AND t2.AV_CODE IS NOT NULL) OR (t1.AV_CODE IS NOT NULL AND t2.AV_CODE IS NULL)) OR (t1.AV_SHORT_NAME <> t2.AV_SHORT_NAME OR ( t1.AV_SHORT_NAME IS NULL AND t2.AV_SHORT_NAME IS NOT NULL) OR (t1.AV_SHORT_NAME IS NOT NULL AND t2.AV_SHORT_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES', 'INSERT INTO NC_ATTRIBUTE_VALUES ( SCENARIO_ID,AV_ID,ATTRIBUTE_TYPE_ID,ACTIVE_FLAG,AV_DESCRIPTION,AV_CODE,AV_SHORT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AV_ID,t1.ATTRIBUTE_TYPE_ID,t1.ACTIVE_FLAG,t1.AV_DESCRIPTION,t1.AV_CODE,t1.AV_SHORT_NAME,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES t1, ATTRIBUTE_VALUES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID = t2.AV_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_VALUES_HIERARCHY ( SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_VALUES_HIERARCHY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_VALUES_HIERARCHY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID_CHILD = t2.AV_ID_CHILD AND t1.AV_ID_PARENT = t2.AV_ID_PARENT )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_VALUES_HIERARCHY ( SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,''DELETE'',''VALID'' FROM ATTRIBUTE_VALUES_HIERARCHY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_VALUES_HIERARCHY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID_CHILD = t2.AV_ID_CHILD AND t1.AV_ID_PARENT = t2.AV_ID_PARENT ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_VALUES_HIERARCHY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID_CHILD = t2.AV_ID_CHILD AND t1.AV_ID_PARENT = t2.AV_ID_PARENT));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_VALUES_HIERARCHY ( SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AV_ID_CHILD,t1.AV_ID_PARENT,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES_HIERARCHY t1, ATTRIBUTE_VALUES_HIERARCHY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID_CHILD = t2.AV_ID_CHILD AND t1.AV_ID_PARENT = t2.AV_ID_PARENT AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AV_ID_CHILD <> t2.AV_ID_CHILD OR ( t1.AV_ID_CHILD IS NULL AND t2.AV_ID_CHILD IS NOT NULL) OR (t1.AV_ID_CHILD IS NOT NULL AND t2.AV_ID_CHILD IS NULL)) OR (t1.AV_ID_PARENT <> t2.AV_ID_PARENT OR ( t1.AV_ID_PARENT IS NULL AND t2.AV_ID_PARENT IS NOT NULL) OR (t1.AV_ID_PARENT IS NOT NULL AND t2.AV_ID_PARENT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_HIERARCHY', 'INSERT INTO NC_ATTRIBUTE_VALUES_HIERARCHY ( SCENARIO_ID,AV_ID_CHILD,AV_ID_PARENT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AV_ID_CHILD,t1.AV_ID_PARENT,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES_HIERARCHY t1, ATTRIBUTE_VALUES_HIERARCHY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID_CHILD = t2.AV_ID_CHILD AND t1.AV_ID_PARENT = t2.AV_ID_PARENT AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_RELN', 'INSERT INTO NC_ATTRIBUTE_VALUES_RELN ( SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,''INSERT'',''VALID'' FROM IN_ATTRIBUTE_VALUES_RELN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ATTRIBUTE_VALUES_RELN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID1 = t2.AV_ID1 AND t1.AV_ID2 = t2.AV_ID2 )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_RELN', 'INSERT INTO NC_ATTRIBUTE_VALUES_RELN ( SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,''DELETE'',''VALID'' FROM ATTRIBUTE_VALUES_RELN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ATTRIBUTE_VALUES_RELN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID1 = t2.AV_ID1 AND t1.AV_ID2 = t2.AV_ID2 ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ATTRIBUTE_VALUES_RELN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID1 = t2.AV_ID1 AND t1.AV_ID2 = t2.AV_ID2));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_RELN', 'INSERT INTO NC_ATTRIBUTE_VALUES_RELN ( SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACTIVE_FLAG,t1.AV_ID1,t1.AV_ID2,''UPDATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES_RELN t1, ATTRIBUTE_VALUES_RELN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID1 = t2.AV_ID1 AND t1.AV_ID2 = t2.AV_ID2 AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACTIVE_FLAG <> t2.ACTIVE_FLAG OR ( t1.ACTIVE_FLAG IS NULL AND t2.ACTIVE_FLAG IS NOT NULL) OR (t1.ACTIVE_FLAG IS NOT NULL AND t2.ACTIVE_FLAG IS NULL)) OR (t1.AV_ID1 <> t2.AV_ID1 OR ( t1.AV_ID1 IS NULL AND t2.AV_ID1 IS NOT NULL) OR (t1.AV_ID1 IS NOT NULL AND t2.AV_ID1 IS NULL)) OR (t1.AV_ID2 <> t2.AV_ID2 OR ( t1.AV_ID2 IS NULL AND t2.AV_ID2 IS NOT NULL) OR (t1.AV_ID2 IS NOT NULL AND t2.AV_ID2 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ATTRIBUTE_VALUES_RELN', 'INSERT INTO NC_ATTRIBUTE_VALUES_RELN ( SCENARIO_ID,ACTIVE_FLAG,AV_ID1,AV_ID2,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACTIVE_FLAG,t1.AV_ID1,t1.AV_ID2,''ACTIVATE'',''VALID'' FROM IN_ATTRIBUTE_VALUES_RELN t1, ATTRIBUTE_VALUES_RELN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.AV_ID1 = t2.AV_ID1 AND t1.AV_ID2 = t2.AV_ID2 AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,''INSERT'',''VALID'' FROM IN_GRP_ATTR_SET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_ATTR_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,''DELETE'',''VALID'' FROM MST_GRP_ATTR_SET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_ATTR_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_ATTR_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_SET_NAME,t1.ATTRIBUTE_SET_DESCRIPTION,t1.GROUP_CLASS_ID,t1.UPDT_PRIORITY,''UPDATE'',''VALID'' FROM IN_GRP_ATTR_SET t1, MST_GRP_ATTR_SET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Attribute_Set_Name <> t2.Attribute_Set_Name OR ( t1.Attribute_Set_Name IS NULL AND t2.Attribute_Set_Name IS NOT NULL) OR (t1.Attribute_Set_Name IS NOT NULL AND t2.Attribute_Set_Name IS NULL)) OR (t1.Attribute_Set_Description <> t2.Attribute_Set_Description OR ( t1.Attribute_Set_Description IS NULL AND t2.Attribute_Set_Description IS NOT NULL) OR (t1.Attribute_Set_Description IS NOT NULL AND t2.Attribute_Set_Description IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Updt_Priority <> t2.Updt_Priority OR ( t1.Updt_Priority IS NULL AND t2.Updt_Priority IS NOT NULL) OR (t1.Updt_Priority IS NOT NULL AND t2.Updt_Priority IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_SET_NAME,t1.ATTRIBUTE_SET_DESCRIPTION,t1.GROUP_CLASS_ID,t1.UPDT_PRIORITY,''ACTIVATE'',''VALID'' FROM IN_GRP_ATTR_SET t1, MST_GRP_ATTR_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,''INSERT'',''VALID'' FROM IN_GRP_ATTR_SET_DETAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_ATTR_SET_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,''DELETE'',''VALID'' FROM MST_GRP_ATTR_SET_DETAIL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_ATTR_SET_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_ATTR_SET_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_DESCRIPTION,t1.UPDT_PHY_COL_NAME,t1.UPDT_LOG_COL_NAME,''UPDATE'',''VALID'' FROM IN_GRP_ATTR_SET_DETAIL t1, MST_GRP_ATTR_SET_DETAIL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Attribute_Description <> t2.Attribute_Description OR ( t1.Attribute_Description IS NULL AND t2.Attribute_Description IS NOT NULL) OR (t1.Attribute_Description IS NOT NULL AND t2.Attribute_Description IS NULL)) OR (t1.Updt_Phy_Col_Name <> t2.Updt_Phy_Col_Name OR ( t1.Updt_Phy_Col_Name IS NULL AND t2.Updt_Phy_Col_Name IS NOT NULL) OR (t1.Updt_Phy_Col_Name IS NOT NULL AND t2.Updt_Phy_Col_Name IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_DESCRIPTION,t1.UPDT_PHY_COL_NAME,t1.UPDT_LOG_COL_NAME,''ACTIVATE'',''VALID'' FROM IN_GRP_ATTR_SET_DETAIL t1, MST_GRP_ATTR_SET_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND', 'INSERT INTO NC_BRAND ( SCENARIO_ID,BRAND_CODE,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_CODE,BRAND_NAME,''INSERT'',''VALID'' FROM IN_BRAND t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM BRAND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND', 'INSERT INTO NC_BRAND ( SCENARIO_ID,BRAND_CODE,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_CODE,BRAND_NAME,''DELETE'',''VALID'' FROM BRAND t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_BRAND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_BRAND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND', 'INSERT INTO NC_BRAND ( SCENARIO_ID,BRAND_CODE,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_CODE,t1.BRAND_NAME,''UPDATE'',''VALID'' FROM IN_BRAND t1, BRAND t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.BRAND_NAME <> t2.BRAND_NAME OR ( t1.BRAND_NAME IS NULL AND t2.BRAND_NAME IS NOT NULL) OR (t1.BRAND_NAME IS NOT NULL AND t2.BRAND_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND', 'INSERT INTO NC_BRAND ( SCENARIO_ID,BRAND_CODE,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_CODE,t1.BRAND_NAME,''ACTIVATE'',''VALID'' FROM IN_BRAND t1, BRAND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY', 'INSERT INTO NC_BRAND_FAMLY ( SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,''INSERT'',''VALID'' FROM IN_BRAND_FAMLY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM BRAND_FAMLY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY', 'INSERT INTO NC_BRAND_FAMLY ( SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,''DELETE'',''VALID'' FROM BRAND_FAMLY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_BRAND_FAMLY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_BRAND_FAMLY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY', 'INSERT INTO NC_BRAND_FAMLY ( SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_FAMLY_ID,t1.BRAND_FAMLY_NAME,''UPDATE'',''VALID'' FROM IN_BRAND_FAMLY t1, BRAND_FAMLY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.BRAND_FAMLY_ID <> t2.BRAND_FAMLY_ID OR ( t1.BRAND_FAMLY_ID IS NULL AND t2.BRAND_FAMLY_ID IS NOT NULL) OR (t1.BRAND_FAMLY_ID IS NOT NULL AND t2.BRAND_FAMLY_ID IS NULL)) OR (t1.BRAND_FAMLY_NAME <> t2.BRAND_FAMLY_NAME OR ( t1.BRAND_FAMLY_NAME IS NULL AND t2.BRAND_FAMLY_NAME IS NOT NULL) OR (t1.BRAND_FAMLY_NAME IS NOT NULL AND t2.BRAND_FAMLY_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY', 'INSERT INTO NC_BRAND_FAMLY ( SCENARIO_ID,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_FAMLY_ID,t1.BRAND_FAMLY_NAME,''ACTIVATE'',''VALID'' FROM IN_BRAND_FAMLY t1, BRAND_FAMLY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY_ASSOC', 'INSERT INTO NC_BRAND_FAMLY_ASSOC ( SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,''INSERT'',''VALID'' FROM IN_BRAND_FAMLY_ASSOC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM BRAND_FAMLY_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND t1.CATEG_CODE = t2.CATEG_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY_ASSOC', 'INSERT INTO NC_BRAND_FAMLY_ASSOC ( SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,''DELETE'',''VALID'' FROM BRAND_FAMLY_ASSOC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_BRAND_FAMLY_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND t1.CATEG_CODE = t2.CATEG_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_BRAND_FAMLY_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND t1.CATEG_CODE = t2.CATEG_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY_ASSOC', 'INSERT INTO NC_BRAND_FAMLY_ASSOC ( SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_FAMLY_ID,t1.CATEG_CODE,t1.BRAND_CODE,''UPDATE'',''VALID'' FROM IN_BRAND_FAMLY_ASSOC t1, BRAND_FAMLY_ASSOC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND t1.CATEG_CODE = t2.CATEG_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.BRAND_FAMLY_ID <> t2.BRAND_FAMLY_ID OR ( t1.BRAND_FAMLY_ID IS NULL AND t2.BRAND_FAMLY_ID IS NOT NULL) OR (t1.BRAND_FAMLY_ID IS NOT NULL AND t2.BRAND_FAMLY_ID IS NULL)) OR (t1.CATEG_CODE <> t2.CATEG_CODE OR ( t1.CATEG_CODE IS NULL AND t2.CATEG_CODE IS NOT NULL) OR (t1.CATEG_CODE IS NOT NULL AND t2.CATEG_CODE IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_BRAND_FAMLY_ASSOC', 'INSERT INTO NC_BRAND_FAMLY_ASSOC ( SCENARIO_ID,BRAND_FAMLY_ID,CATEG_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BRAND_FAMLY_ID,t1.CATEG_CODE,t1.BRAND_CODE,''ACTIVATE'',''VALID'' FROM IN_BRAND_FAMLY_ASSOC t1, BRAND_FAMLY_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.BRAND_FAMLY_ID = t2.BRAND_FAMLY_ID AND t1.CATEG_CODE = t2.CATEG_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN', 'INSERT INTO NC_CNSMR_ACTN ( SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,''INSERT'',''VALID'' FROM IN_CNSMR_ACTN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_ACTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_ID = t2.CNSMR_ACTN_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN', 'INSERT INTO NC_CNSMR_ACTN ( SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,''DELETE'',''VALID'' FROM CNSMR_ACTN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_ACTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_ID = t2.CNSMR_ACTN_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_ACTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_ID = t2.CNSMR_ACTN_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN', 'INSERT INTO NC_CNSMR_ACTN ( SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_ACTN_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_START_DATETM,t1.CNSMR_ACTN_END_DATETM,t1.CNSMR_ACTN_STATUS_CODE,t1.CNSMR_ACTN_SENTIMENT,t1.CNTCT_PATH_TYPE_CODE,t1.CNTCT_SUB_PATH_TYPE_CODE,t1.INCTV_NBR,t1.ASSOC_NBR,t1.STORE_NBR,t1.CONTR_NBR,t1.TRM_LEAD_KEY,t1.TRANS_ID,t1.STARTING_WEB_URL,t1.STRTG_WEB_SITE_NBR,t1.ENDING_WEB_URL,t1.ENDG_WEB_SITE_NBR,t1.WEB_SRCH_VAL,t1.VISTD_PAGE_CNT,t1.SURVY_NBR,t1.CONTEST_NBR,t1.SOCIAL_MD_TYPE,t1.SOCIAL_MD_TXT,t1.RATING_VALUE,t1.REVIEW_TXT,t1.LOG_SOURCE_ID,t1.LOG_LOAD_ID,t1.LOG_UPDATE_USER,t1.REGIS_CNSMR_ID_VAL,t1.INCTV_TYPE_CODE,t1.LYLTY_PGM_NBR,t1.LYLTY_ACCT_NUM,t1.LYLTY_TRANX_NUM,t1.CAMPAIGN_LEAD_KEY,t1.COLLATERAL_NBR,t1.RETLR_NBR,t1.ALT_RETLR_NAME,''UPDATE'',''VALID'' FROM IN_CNSMR_ACTN t1, CNSMR_ACTN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_ID = t2.CNSMR_ACTN_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_ACTN_ID <> t2.CNSMR_ACTN_ID OR ( t1.CNSMR_ACTN_ID IS NULL AND t2.CNSMR_ACTN_ID IS NOT NULL) OR (t1.CNSMR_ACTN_ID IS NOT NULL AND t2.CNSMR_ACTN_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.CNSMR_ACTN_TYPE_CODE <> t2.CNSMR_ACTN_TYPE_CODE OR ( t1.CNSMR_ACTN_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NULL)) OR (t1.CNSMR_ACTN_NUM <> t2.CNSMR_ACTN_NUM OR ( t1.CNSMR_ACTN_NUM IS NULL AND t2.CNSMR_ACTN_NUM IS NOT NULL) OR (t1.CNSMR_ACTN_NUM IS NOT NULL AND t2.CNSMR_ACTN_NUM IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNSMR_ACTN_START_DATETM <> t2.CNSMR_ACTN_START_DATETM OR ( t1.CNSMR_ACTN_START_DATETM IS NULL AND t2.CNSMR_ACTN_START_DATETM IS NOT NULL) OR (t1.CNSMR_ACTN_START_DATETM IS NOT NULL AND t2.CNSMR_ACTN_START_DATETM IS NULL)) OR (t1.CNSMR_ACTN_END_DATETM <> t2.CNSMR_ACTN_END_DATETM OR ( t1.CNSMR_ACTN_END_DATETM IS NULL AND t2.CNSMR_ACTN_END_DATETM IS NOT NULL) OR (t1.CNSMR_ACTN_END_DATETM IS NOT NULL AND t2.CNSMR_ACTN_END_DATETM IS NULL)) OR (t1.CNSMR_ACTN_STATUS_CODE <> t2.CNSMR_ACTN_STATUS_CODE OR ( t1.CNSMR_ACTN_STATUS_CODE IS NULL AND t2.CNSMR_ACTN_STATUS_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_STATUS_CODE IS NOT NULL AND t2.CNSMR_ACTN_STATUS_CODE IS NULL)) OR (t1.CNSMR_ACTN_SENTIMENT <> t2.CNSMR_ACTN_SENTIMENT OR ( t1.CNSMR_ACTN_SENTIMENT IS NULL AND t2.CNSMR_ACTN_SENTIMENT IS NOT NULL) OR (t1.CNSMR_ACTN_SENTIMENT IS NOT NULL AND t2.CNSMR_ACTN_SENTIMENT IS NULL)) OR (t1.CNTCT_PATH_TYPE_CODE <> t2.CNTCT_PATH_TYPE_CODE OR ( t1.CNTCT_PATH_TYPE_CODE IS NULL AND t2.CNTCT_PATH_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_PATH_TYPE_CODE IS NOT NULL AND t2.CNTCT_PATH_TYPE_CODE IS NULL)) OR (t1.CNTCT_SUB_PATH_TYPE_CODE <> t2.CNTCT_SUB_PATH_TYPE_CODE OR ( t1.CNTCT_SUB_PATH_TYPE_CODE IS NULL AND t2.CNTCT_SUB_PATH_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_SUB_PATH_TYPE_CODE IS NOT NULL AND t2.CNTCT_SUB_PATH_TYPE_CODE IS NULL)) OR (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.ASSOC_NBR <> t2.ASSOC_NBR OR ( t1.ASSOC_NBR IS NULL AND t2.ASSOC_NBR IS NOT NULL) OR (t1.ASSOC_NBR IS NOT NULL AND t2.ASSOC_NBR IS NULL)) OR (t1.STORE_NBR <> t2.STORE_NBR OR ( t1.STORE_NBR IS NULL AND t2.STORE_NBR IS NOT NULL) OR (t1.STORE_NBR IS NOT NULL AND t2.STORE_NBR IS NULL)) OR (t1.CONTR_NBR <> t2.CONTR_NBR OR ( t1.CONTR_NBR IS NULL AND t2.CONTR_NBR IS NOT NULL) OR (t1.CONTR_NBR IS NOT NULL AND t2.CONTR_NBR IS NULL)) OR (t1.TRM_LEAD_KEY <> t2.TRM_LEAD_KEY OR ( t1.TRM_LEAD_KEY IS NULL AND t2.TRM_LEAD_KEY IS NOT NULL) OR (t1.TRM_LEAD_KEY IS NOT NULL AND t2.TRM_LEAD_KEY IS NULL)) OR (t1.TRANS_ID <> t2.TRANS_ID OR ( t1.TRANS_ID IS NULL AND t2.TRANS_ID IS NOT NULL) OR (t1.TRANS_ID IS NOT NULL AND t2.TRANS_ID IS NULL)) OR (t1.STARTING_WEB_URL <> t2.STARTING_WEB_URL OR ( t1.STARTING_WEB_URL IS NULL AND t2.STARTING_WEB_URL IS NOT NULL) OR (t1.STARTING_WEB_URL IS NOT NULL AND t2.STARTING_WEB_URL IS NULL)) OR (t1.STRTG_WEB_SITE_NBR <> t2.STRTG_WEB_SITE_NBR OR ( t1.STRTG_WEB_SITE_NBR IS NULL AND t2.STRTG_WEB_SITE_NBR IS NOT NULL) OR (t1.STRTG_WEB_SITE_NBR IS NOT NULL AND t2.STRTG_WEB_SITE_NBR IS NULL)) OR (t1.ENDING_WEB_URL <> t2.ENDING_WEB_URL OR ( t1.ENDING_WEB_URL IS NULL AND t2.ENDING_WEB_URL IS NOT NULL) OR (t1.ENDING_WEB_URL IS NOT NULL AND t2.ENDING_WEB_URL IS NULL)) OR (t1.ENDG_WEB_SITE_NBR <> t2.ENDG_WEB_SITE_NBR OR ( t1.ENDG_WEB_SITE_NBR IS NULL AND t2.ENDG_WEB_SITE_NBR IS NOT NULL) OR (t1.ENDG_WEB_SITE_NBR IS NOT NULL AND t2.ENDG_WEB_SITE_NBR IS NULL)) OR (t1.WEB_SRCH_VAL <> t2.WEB_SRCH_VAL OR ( t1.WEB_SRCH_VAL IS NULL AND t2.WEB_SRCH_VAL IS NOT NULL) OR (t1.WEB_SRCH_VAL IS NOT NULL AND t2.WEB_SRCH_VAL IS NULL)) OR (t1.VISTD_PAGE_CNT <> t2.VISTD_PAGE_CNT OR ( t1.VISTD_PAGE_CNT IS NULL AND t2.VISTD_PAGE_CNT IS NOT NULL) OR (t1.VISTD_PAGE_CNT IS NOT NULL AND t2.VISTD_PAGE_CNT IS NULL)) OR (t1.SURVY_NBR <> t2.SURVY_NBR OR ( t1.SURVY_NBR IS NULL AND t2.SURVY_NBR IS NOT NULL) OR (t1.SURVY_NBR IS NOT NULL AND t2.SURVY_NBR IS NULL)) OR (t1.CONTEST_NBR <> t2.CONTEST_NBR OR ( t1.CONTEST_NBR IS NULL AND t2.CONTEST_NBR IS NOT NULL) OR (t1.CONTEST_NBR IS NOT NULL AND t2.CONTEST_NBR IS NULL)) OR (t1.SOCIAL_MD_TYPE <> t2.SOCIAL_MD_TYPE OR ( t1.SOCIAL_MD_TYPE IS NULL AND t2.SOCIAL_MD_TYPE IS NOT NULL) OR (t1.SOCIAL_MD_TYPE IS NOT NULL AND t2.SOCIAL_MD_TYPE IS NULL)) OR (t1.SOCIAL_MD_TXT <> t2.SOCIAL_MD_TXT OR ( t1.SOCIAL_MD_TXT IS NULL AND t2.SOCIAL_MD_TXT IS NOT NULL) OR (t1.SOCIAL_MD_TXT IS NOT NULL AND t2.SOCIAL_MD_TXT IS NULL)) OR (t1.RATING_VALUE <> t2.RATING_VALUE OR ( t1.RATING_VALUE IS NULL AND t2.RATING_VALUE IS NOT NULL) OR (t1.RATING_VALUE IS NOT NULL AND t2.RATING_VALUE IS NULL)) OR (t1.REVIEW_TXT <> t2.REVIEW_TXT OR ( t1.REVIEW_TXT IS NULL AND t2.REVIEW_TXT IS NOT NULL) OR (t1.REVIEW_TXT IS NOT NULL AND t2.REVIEW_TXT IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.INCTV_TYPE_CODE <> t2.INCTV_TYPE_CODE OR ( t1.INCTV_TYPE_CODE IS NULL AND t2.INCTV_TYPE_CODE IS NOT NULL) OR (t1.INCTV_TYPE_CODE IS NOT NULL AND t2.INCTV_TYPE_CODE IS NULL)) OR (t1.LYLTY_PGM_NBR <> t2.LYLTY_PGM_NBR OR ( t1.LYLTY_PGM_NBR IS NULL AND t2.LYLTY_PGM_NBR IS NOT NULL) OR (t1.LYLTY_PGM_NBR IS NOT NULL AND t2.LYLTY_PGM_NBR IS NULL)) OR (t1.LYLTY_ACCT_NUM <> t2.LYLTY_ACCT_NUM OR ( t1.LYLTY_ACCT_NUM IS NULL AND t2.LYLTY_ACCT_NUM IS NOT NULL) OR (t1.LYLTY_ACCT_NUM IS NOT NULL AND t2.LYLTY_ACCT_NUM IS NULL)) OR (t1.LYLTY_TRANX_NUM <> t2.LYLTY_TRANX_NUM OR ( t1.LYLTY_TRANX_NUM IS NULL AND t2.LYLTY_TRANX_NUM IS NOT NULL) OR (t1.LYLTY_TRANX_NUM IS NOT NULL AND t2.LYLTY_TRANX_NUM IS NULL)) OR (t1.CAMPAIGN_LEAD_KEY <> t2.CAMPAIGN_LEAD_KEY OR ( t1.CAMPAIGN_LEAD_KEY IS NULL AND t2.CAMPAIGN_LEAD_KEY IS NOT NULL) OR (t1.CAMPAIGN_LEAD_KEY IS NOT NULL AND t2.CAMPAIGN_LEAD_KEY IS NULL)) OR (t1.COLLATERAL_NBR <> t2.COLLATERAL_NBR OR ( t1.COLLATERAL_NBR IS NULL AND t2.COLLATERAL_NBR IS NOT NULL) OR (t1.COLLATERAL_NBR IS NOT NULL AND t2.COLLATERAL_NBR IS NULL)) OR (t1.RETLR_NBR <> t2.RETLR_NBR OR ( t1.RETLR_NBR IS NULL AND t2.RETLR_NBR IS NOT NULL) OR (t1.RETLR_NBR IS NOT NULL AND t2.RETLR_NBR IS NULL)) OR (t1.ALT_RETLR_NAME <> t2.ALT_RETLR_NAME OR ( t1.ALT_RETLR_NAME IS NULL AND t2.ALT_RETLR_NAME IS NOT NULL) OR (t1.ALT_RETLR_NAME IS NOT NULL AND t2.ALT_RETLR_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN', 'INSERT INTO NC_CNSMR_ACTN ( SCENARIO_ID,CNSMR_ACTN_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_START_DATETM,CNSMR_ACTN_END_DATETM,CNSMR_ACTN_STATUS_CODE,CNSMR_ACTN_SENTIMENT,CNTCT_PATH_TYPE_CODE,CNTCT_SUB_PATH_TYPE_CODE,INCTV_NBR,ASSOC_NBR,STORE_NBR,CONTR_NBR,TRM_LEAD_KEY,TRANS_ID,STARTING_WEB_URL,STRTG_WEB_SITE_NBR,ENDING_WEB_URL,ENDG_WEB_SITE_NBR,WEB_SRCH_VAL,VISTD_PAGE_CNT,SURVY_NBR,CONTEST_NBR,SOCIAL_MD_TYPE,SOCIAL_MD_TXT,RATING_VALUE,REVIEW_TXT,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,REGIS_CNSMR_ID_VAL,INCTV_TYPE_CODE,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,LYLTY_TRANX_NUM,CAMPAIGN_LEAD_KEY,COLLATERAL_NBR,RETLR_NBR,ALT_RETLR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_ACTN_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_START_DATETM,t1.CNSMR_ACTN_END_DATETM,t1.CNSMR_ACTN_STATUS_CODE,t1.CNSMR_ACTN_SENTIMENT,t1.CNTCT_PATH_TYPE_CODE,t1.CNTCT_SUB_PATH_TYPE_CODE,t1.INCTV_NBR,t1.ASSOC_NBR,t1.STORE_NBR,t1.CONTR_NBR,t1.TRM_LEAD_KEY,t1.TRANS_ID,t1.STARTING_WEB_URL,t1.STRTG_WEB_SITE_NBR,t1.ENDING_WEB_URL,t1.ENDG_WEB_SITE_NBR,t1.WEB_SRCH_VAL,t1.VISTD_PAGE_CNT,t1.SURVY_NBR,t1.CONTEST_NBR,t1.SOCIAL_MD_TYPE,t1.SOCIAL_MD_TXT,t1.RATING_VALUE,t1.REVIEW_TXT,t1.LOG_SOURCE_ID,t1.LOG_LOAD_ID,t1.LOG_UPDATE_USER,t1.REGIS_CNSMR_ID_VAL,t1.INCTV_TYPE_CODE,t1.LYLTY_PGM_NBR,t1.LYLTY_ACCT_NUM,t1.LYLTY_TRANX_NUM,t1.CAMPAIGN_LEAD_KEY,t1.COLLATERAL_NBR,t1.RETLR_NBR,t1.ALT_RETLR_NAME,''ACTIVATE'',''VALID'' FROM IN_CNSMR_ACTN t1, CNSMR_ACTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_ID = t2.CNSMR_ACTN_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN_SUB_TYPE', 'INSERT INTO NC_CNSMR_ACTN_SUB_TYPE ( SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,''INSERT'',''VALID'' FROM IN_CNSMR_ACTN_SUB_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_ACTN_SUB_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_SUB_TYPE_CODE = t2.CNSMR_ACTN_SUB_TYPE_CODE AND t1.CNSMR_ACTN_TYPE_CODE = t2.CNSMR_ACTN_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN_SUB_TYPE', 'INSERT INTO NC_CNSMR_ACTN_SUB_TYPE ( SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,''DELETE'',''VALID'' FROM CNSMR_ACTN_SUB_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_ACTN_SUB_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_SUB_TYPE_CODE = t2.CNSMR_ACTN_SUB_TYPE_CODE AND t1.CNSMR_ACTN_TYPE_CODE = t2.CNSMR_ACTN_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_ACTN_SUB_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_SUB_TYPE_CODE = t2.CNSMR_ACTN_SUB_TYPE_CODE AND t1.CNSMR_ACTN_TYPE_CODE = t2.CNSMR_ACTN_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN_SUB_TYPE', 'INSERT INTO NC_CNSMR_ACTN_SUB_TYPE ( SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_SUB_TYPE_CODE,t1.CNSMR_ACTN_SUB_TYPE_NAME,''UPDATE'',''VALID'' FROM IN_CNSMR_ACTN_SUB_TYPE t1, CNSMR_ACTN_SUB_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_SUB_TYPE_CODE = t2.CNSMR_ACTN_SUB_TYPE_CODE AND t1.CNSMR_ACTN_TYPE_CODE = t2.CNSMR_ACTN_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_ACTN_TYPE_CODE <> t2.CNSMR_ACTN_TYPE_CODE OR ( t1.CNSMR_ACTN_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NULL)) OR (t1.CNSMR_ACTN_SUB_TYPE_CODE <> t2.CNSMR_ACTN_SUB_TYPE_CODE OR ( t1.CNSMR_ACTN_SUB_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_SUB_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_SUB_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_SUB_TYPE_CODE IS NULL)) OR (t1.CNSMR_ACTN_SUB_TYPE_NAME <> t2.CNSMR_ACTN_SUB_TYPE_NAME OR ( t1.CNSMR_ACTN_SUB_TYPE_NAME IS NULL AND t2.CNSMR_ACTN_SUB_TYPE_NAME IS NOT NULL) OR (t1.CNSMR_ACTN_SUB_TYPE_NAME IS NOT NULL AND t2.CNSMR_ACTN_SUB_TYPE_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_ACTN_SUB_TYPE', 'INSERT INTO NC_CNSMR_ACTN_SUB_TYPE ( SCENARIO_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_CODE,CNSMR_ACTN_SUB_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_SUB_TYPE_CODE,t1.CNSMR_ACTN_SUB_TYPE_NAME,''ACTIVATE'',''VALID'' FROM IN_CNSMR_ACTN_SUB_TYPE t1, CNSMR_ACTN_SUB_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_ACTN_SUB_TYPE_CODE = t2.CNSMR_ACTN_SUB_TYPE_CODE AND t1.CNSMR_ACTN_TYPE_CODE = t2.CNSMR_ACTN_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN', 'INSERT INTO NC_CNSMR_AFFLTN ( SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_CNSMR_AFFLTN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_AFFLTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN', 'INSERT INTO NC_CNSMR_AFFLTN ( SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM CNSMR_AFFLTN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_AFFLTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_AFFLTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN', 'INSERT INTO NC_CNSMR_AFFLTN ( SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AFFLTN_START_DATE,t1.AFFLTN_END_DATE,t1.CNSMR_GRP_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_CNSMR_AFFLTN t1, CNSMR_AFFLTN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.AFFLTN_START_DATE <> t2.AFFLTN_START_DATE OR ( t1.AFFLTN_START_DATE IS NULL AND t2.AFFLTN_START_DATE IS NOT NULL) OR (t1.AFFLTN_START_DATE IS NOT NULL AND t2.AFFLTN_START_DATE IS NULL)) OR (t1.AFFLTN_END_DATE <> t2.AFFLTN_END_DATE OR ( t1.AFFLTN_END_DATE IS NULL AND t2.AFFLTN_END_DATE IS NOT NULL) OR (t1.AFFLTN_END_DATE IS NOT NULL AND t2.AFFLTN_END_DATE IS NULL)) OR (t1.CNSMR_GRP_NBR <> t2.CNSMR_GRP_NBR OR ( t1.CNSMR_GRP_NBR IS NULL AND t2.CNSMR_GRP_NBR IS NOT NULL) OR (t1.CNSMR_GRP_NBR IS NOT NULL AND t2.CNSMR_GRP_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN', 'INSERT INTO NC_CNSMR_AFFLTN ( SCENARIO_ID,AFFLTN_START_DATE,AFFLTN_END_DATE,CNSMR_GRP_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.AFFLTN_START_DATE,t1.AFFLTN_END_DATE,t1.CNSMR_GRP_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_CNSMR_AFFLTN t1, CNSMR_AFFLTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN_STG', 'INSERT INTO NC_CNSMR_AFFLTN_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_CNSMR_AFFLTN_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_AFFLTN_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN_STG', 'INSERT INTO NC_CNSMR_AFFLTN_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,''DELETE'',''VALID'' FROM CNSMR_AFFLTN_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_AFFLTN_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_AFFLTN_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN_STG', 'INSERT INTO NC_CNSMR_AFFLTN_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNSMR_GRP_NBR,t1.AFFLTN_START_DATE,t1.AFFLTN_END_DATE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_CNSMR_AFFLTN_STG t1, CNSMR_AFFLTN_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNSMR_GRP_NBR <> t2.CNSMR_GRP_NBR OR ( t1.CNSMR_GRP_NBR IS NULL AND t2.CNSMR_GRP_NBR IS NOT NULL) OR (t1.CNSMR_GRP_NBR IS NOT NULL AND t2.CNSMR_GRP_NBR IS NULL)) OR (t1.AFFLTN_START_DATE <> t2.AFFLTN_START_DATE OR ( t1.AFFLTN_START_DATE IS NULL AND t2.AFFLTN_START_DATE IS NOT NULL) OR (t1.AFFLTN_START_DATE IS NOT NULL AND t2.AFFLTN_START_DATE IS NULL)) OR (t1.AFFLTN_END_DATE <> t2.AFFLTN_END_DATE OR ( t1.AFFLTN_END_DATE IS NULL AND t2.AFFLTN_END_DATE IS NOT NULL) OR (t1.AFFLTN_END_DATE IS NOT NULL AND t2.AFFLTN_END_DATE IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.NC_STATUS <> t2.NC_STATUS OR ( t1.NC_STATUS IS NULL AND t2.NC_STATUS IS NOT NULL) OR (t1.NC_STATUS IS NOT NULL AND t2.NC_STATUS IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_AFFLTN_STG', 'INSERT INTO NC_CNSMR_AFFLTN_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNSMR_GRP_NBR,AFFLTN_START_DATE,AFFLTN_END_DATE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNSMR_GRP_NBR,t1.AFFLTN_START_DATE,t1.AFFLTN_END_DATE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_CNSMR_AFFLTN_STG t1, CNSMR_AFFLTN_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP', 'INSERT INTO NC_CNSMR_GRP ( SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_CNSMR_GRP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_GRP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_NBR = t2.CNSMR_GRP_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP', 'INSERT INTO NC_CNSMR_GRP ( SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM CNSMR_GRP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_GRP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_NBR = t2.CNSMR_GRP_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_GRP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_NBR = t2.CNSMR_GRP_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP', 'INSERT INTO NC_CNSMR_GRP ( SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_GRP_NAME,t1.CNSMR_GRP_NBR,t1.CNSMR_GRP_DESC,t1.CNSMR_GRP_TYPE_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_CNSMR_GRP t1, CNSMR_GRP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_NBR = t2.CNSMR_GRP_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_GRP_NAME <> t2.CNSMR_GRP_NAME OR ( t1.CNSMR_GRP_NAME IS NULL AND t2.CNSMR_GRP_NAME IS NOT NULL) OR (t1.CNSMR_GRP_NAME IS NOT NULL AND t2.CNSMR_GRP_NAME IS NULL)) OR (t1.CNSMR_GRP_NBR <> t2.CNSMR_GRP_NBR OR ( t1.CNSMR_GRP_NBR IS NULL AND t2.CNSMR_GRP_NBR IS NOT NULL) OR (t1.CNSMR_GRP_NBR IS NOT NULL AND t2.CNSMR_GRP_NBR IS NULL)) OR (t1.CNSMR_GRP_DESC <> t2.CNSMR_GRP_DESC OR ( t1.CNSMR_GRP_DESC IS NULL AND t2.CNSMR_GRP_DESC IS NOT NULL) OR (t1.CNSMR_GRP_DESC IS NOT NULL AND t2.CNSMR_GRP_DESC IS NULL)) OR (t1.CNSMR_GRP_TYPE_CODE <> t2.CNSMR_GRP_TYPE_CODE OR ( t1.CNSMR_GRP_TYPE_CODE IS NULL AND t2.CNSMR_GRP_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_GRP_TYPE_CODE IS NOT NULL AND t2.CNSMR_GRP_TYPE_CODE IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP', 'INSERT INTO NC_CNSMR_GRP ( SCENARIO_ID,CNSMR_GRP_NAME,CNSMR_GRP_NBR,CNSMR_GRP_DESC,CNSMR_GRP_TYPE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_GRP_NAME,t1.CNSMR_GRP_NBR,t1.CNSMR_GRP_DESC,t1.CNSMR_GRP_TYPE_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_CNSMR_GRP t1, CNSMR_GRP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_NBR = t2.CNSMR_GRP_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP_TYPE', 'INSERT INTO NC_CNSMR_GRP_TYPE ( SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_CNSMR_GRP_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_GRP_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_TYPE_CODE = t2.CNSMR_GRP_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP_TYPE', 'INSERT INTO NC_CNSMR_GRP_TYPE ( SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM CNSMR_GRP_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_GRP_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_TYPE_CODE = t2.CNSMR_GRP_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_GRP_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_TYPE_CODE = t2.CNSMR_GRP_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP_TYPE', 'INSERT INTO NC_CNSMR_GRP_TYPE ( SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_GRP_TYPE_CODE,t1.CNSMR_GRP_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_CNSMR_GRP_TYPE t1, CNSMR_GRP_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_TYPE_CODE = t2.CNSMR_GRP_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_GRP_TYPE_CODE <> t2.CNSMR_GRP_TYPE_CODE OR ( t1.CNSMR_GRP_TYPE_CODE IS NULL AND t2.CNSMR_GRP_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_GRP_TYPE_CODE IS NOT NULL AND t2.CNSMR_GRP_TYPE_CODE IS NULL)) OR (t1.CNSMR_GRP_TYPE_NAME <> t2.CNSMR_GRP_TYPE_NAME OR ( t1.CNSMR_GRP_TYPE_NAME IS NULL AND t2.CNSMR_GRP_TYPE_NAME IS NOT NULL) OR (t1.CNSMR_GRP_TYPE_NAME IS NOT NULL AND t2.CNSMR_GRP_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_GRP_TYPE', 'INSERT INTO NC_CNSMR_GRP_TYPE ( SCENARIO_ID,CNSMR_GRP_TYPE_CODE,CNSMR_GRP_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_GRP_TYPE_CODE,t1.CNSMR_GRP_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_CNSMR_GRP_TYPE t1, CNSMR_GRP_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_GRP_TYPE_CODE = t2.CNSMR_GRP_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_PROC', 'INSERT INTO NC_CNSMR_INTEL_PROC ( SCENARIO_ID,PROC_ID,PROC_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROC_ID,PROC_NAME,''INSERT'',''VALID'' FROM IN_CNSMR_INTEL_PROC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_INTEL_PROC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PROC_ID = t2.PROC_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_PROC', 'INSERT INTO NC_CNSMR_INTEL_PROC ( SCENARIO_ID,PROC_ID,PROC_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROC_ID,PROC_NAME,''DELETE'',''VALID'' FROM CNSMR_INTEL_PROC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_INTEL_PROC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PROC_ID = t2.PROC_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_INTEL_PROC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PROC_ID = t2.PROC_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_PROC', 'INSERT INTO NC_CNSMR_INTEL_PROC ( SCENARIO_ID,PROC_ID,PROC_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROC_ID,t1.PROC_NAME,''UPDATE'',''VALID'' FROM IN_CNSMR_INTEL_PROC t1, CNSMR_INTEL_PROC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PROC_ID = t2.PROC_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PROC_ID <> t2.PROC_ID OR ( t1.PROC_ID IS NULL AND t2.PROC_ID IS NOT NULL) OR (t1.PROC_ID IS NOT NULL AND t2.PROC_ID IS NULL)) OR (t1.PROC_NAME <> t2.PROC_NAME OR ( t1.PROC_NAME IS NULL AND t2.PROC_NAME IS NOT NULL) OR (t1.PROC_NAME IS NOT NULL AND t2.PROC_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_PROC', 'INSERT INTO NC_CNSMR_INTEL_PROC ( SCENARIO_ID,PROC_ID,PROC_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROC_ID,t1.PROC_NAME,''ACTIVATE'',''VALID'' FROM IN_CNSMR_INTEL_PROC t1, CNSMR_INTEL_PROC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PROC_ID = t2.PROC_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_TRUSTED_REF', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF ( SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,''INSERT'',''VALID'' FROM IN_CNSMR_INTEL_TRUSTED_REF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_INTEL_TRUSTED_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PROC_ID = t2.PROC_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_TRUSTED_REF', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF ( SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,''DELETE'',''VALID'' FROM CNSMR_INTEL_TRUSTED_REF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_INTEL_TRUSTED_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PROC_ID = t2.PROC_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_INTEL_TRUSTED_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PROC_ID = t2.PROC_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_TRUSTED_REF', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF ( SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.PROC_ID,t1.MKTNG_PGM_NBR,t1.TRT_NBR,''UPDATE'',''VALID'' FROM IN_CNSMR_INTEL_TRUSTED_REF t1, CNSMR_INTEL_TRUSTED_REF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PROC_ID = t2.PROC_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.PROC_ID <> t2.PROC_ID OR ( t1.PROC_ID IS NULL AND t2.PROC_ID IS NOT NULL) OR (t1.PROC_ID IS NOT NULL AND t2.PROC_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INTEL_TRUSTED_REF', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF ( SCENARIO_ID,LEGAL_ENT_NBR,PROC_ID,MKTNG_PGM_NBR,TRT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.PROC_ID,t1.MKTNG_PGM_NBR,t1.TRT_NBR,''ACTIVATE'',''VALID'' FROM IN_CNSMR_INTEL_TRUSTED_REF t1, CNSMR_INTEL_TRUSTED_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PROC_ID = t2.PROC_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INT_TRSTD_REF_VAL', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF_VAL ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,''INSERT'',''VALID'' FROM IN_CNSMR_INT_TRSTD_REF_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_INTEL_TRUSTED_REF_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NAME = t2.ATTR_NAME AND t1.ATTR_VAL = t2.ATTR_VAL AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INT_TRSTD_REF_VAL', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF_VAL ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,''DELETE'',''VALID'' FROM CNSMR_INTEL_TRUSTED_REF_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_INT_TRSTD_REF_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NAME = t2.ATTR_NAME AND t1.ATTR_VAL = t2.ATTR_VAL AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_INT_TRSTD_REF_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NAME = t2.ATTR_NAME AND t1.ATTR_VAL = t2.ATTR_VAL AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INT_TRSTD_REF_VAL', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF_VAL ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.ATTR_NAME,t1.ATTR_VAL,''UPDATE'',''VALID'' FROM IN_CNSMR_INT_TRSTD_REF_VAL t1, CNSMR_INTEL_TRUSTED_REF_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NAME = t2.ATTR_NAME AND t1.ATTR_VAL = t2.ATTR_VAL AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.ATTR_NAME <> t2.ATTR_NAME OR ( t1.ATTR_NAME IS NULL AND t2.ATTR_NAME IS NOT NULL) OR (t1.ATTR_NAME IS NOT NULL AND t2.ATTR_NAME IS NULL)) OR (t1.ATTR_VAL <> t2.ATTR_VAL OR ( t1.ATTR_VAL IS NULL AND t2.ATTR_VAL IS NOT NULL) OR (t1.ATTR_VAL IS NOT NULL AND t2.ATTR_VAL IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_INT_TRSTD_REF_VAL', 'INSERT INTO NC_CNSMR_INTEL_TRUSTED_REF_VAL ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,ATTR_NAME,ATTR_VAL,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.ATTR_NAME,t1.ATTR_VAL,''ACTIVATE'',''VALID'' FROM IN_CNSMR_INT_TRSTD_REF_VAL t1, CNSMR_INTEL_TRUSTED_REF_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NAME = t2.ATTR_NAME AND t1.ATTR_VAL = t2.ATTR_VAL AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_SCORE_REF', 'INSERT INTO NC_CNSMR_SCORE_REF ( SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,''INSERT'',''VALID'' FROM IN_CNSMR_SCORE_REF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNSMR_SCORE_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_SCORE_REF', 'INSERT INTO NC_CNSMR_SCORE_REF ( SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,''DELETE'',''VALID'' FROM CNSMR_SCORE_REF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNSMR_SCORE_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNSMR_SCORE_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_SCORE_REF', 'INSERT INTO NC_CNSMR_SCORE_REF ( SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_SCORE_NBR,t1.CNSMR_SCORE_NAME,t1.CNSMR_SCORE_DESC,t1.IS_ACTIVE,t1.HIST_RETEN_DAYS,t1.SCORE_RUN_FREQ_CODE,t1.WKLY_RTN_IND,t1.WEBSITE_SGMNT_IND,t1.COL_DSPL_TYPE_TXT,''UPDATE'',''VALID'' FROM IN_CNSMR_SCORE_REF t1, CNSMR_SCORE_REF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_SCORE_NBR <> t2.CNSMR_SCORE_NBR OR ( t1.CNSMR_SCORE_NBR IS NULL AND t2.CNSMR_SCORE_NBR IS NOT NULL) OR (t1.CNSMR_SCORE_NBR IS NOT NULL AND t2.CNSMR_SCORE_NBR IS NULL)) OR (t1.CNSMR_SCORE_NAME <> t2.CNSMR_SCORE_NAME OR ( t1.CNSMR_SCORE_NAME IS NULL AND t2.CNSMR_SCORE_NAME IS NOT NULL) OR (t1.CNSMR_SCORE_NAME IS NOT NULL AND t2.CNSMR_SCORE_NAME IS NULL)) OR (t1.CNSMR_SCORE_DESC <> t2.CNSMR_SCORE_DESC OR ( t1.CNSMR_SCORE_DESC IS NULL AND t2.CNSMR_SCORE_DESC IS NOT NULL) OR (t1.CNSMR_SCORE_DESC IS NOT NULL AND t2.CNSMR_SCORE_DESC IS NULL)) OR (t1.IS_ACTIVE <> t2.IS_ACTIVE OR ( t1.IS_ACTIVE IS NULL AND t2.IS_ACTIVE IS NOT NULL) OR (t1.IS_ACTIVE IS NOT NULL AND t2.IS_ACTIVE IS NULL)) OR (t1.HIST_RETEN_DAYS <> t2.HIST_RETEN_DAYS OR ( t1.HIST_RETEN_DAYS IS NULL AND t2.HIST_RETEN_DAYS IS NOT NULL) OR (t1.HIST_RETEN_DAYS IS NOT NULL AND t2.HIST_RETEN_DAYS IS NULL)) OR (t1.SCORE_RUN_FREQ_CODE <> t2.SCORE_RUN_FREQ_CODE OR ( t1.SCORE_RUN_FREQ_CODE IS NULL AND t2.SCORE_RUN_FREQ_CODE IS NOT NULL) OR (t1.SCORE_RUN_FREQ_CODE IS NOT NULL AND t2.SCORE_RUN_FREQ_CODE IS NULL)) OR (t1.WKLY_RTN_IND <> t2.WKLY_RTN_IND OR ( t1.WKLY_RTN_IND IS NULL AND t2.WKLY_RTN_IND IS NOT NULL) OR (t1.WKLY_RTN_IND IS NOT NULL AND t2.WKLY_RTN_IND IS NULL)) OR (t1.WEBSITE_SGMNT_IND <> t2.WEBSITE_SGMNT_IND OR ( t1.WEBSITE_SGMNT_IND IS NULL AND t2.WEBSITE_SGMNT_IND IS NOT NULL) OR (t1.WEBSITE_SGMNT_IND IS NOT NULL AND t2.WEBSITE_SGMNT_IND IS NULL)) OR (t1.COL_DSPL_TYPE_TXT <> t2.COL_DSPL_TYPE_TXT OR ( t1.COL_DSPL_TYPE_TXT IS NULL AND t2.COL_DSPL_TYPE_TXT IS NOT NULL) OR (t1.COL_DSPL_TYPE_TXT IS NOT NULL AND t2.COL_DSPL_TYPE_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNSMR_SCORE_REF', 'INSERT INTO NC_CNSMR_SCORE_REF ( SCENARIO_ID,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,IS_ACTIVE,HIST_RETEN_DAYS,SCORE_RUN_FREQ_CODE,WKLY_RTN_IND,WEBSITE_SGMNT_IND,COL_DSPL_TYPE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_SCORE_NBR,t1.CNSMR_SCORE_NAME,t1.CNSMR_SCORE_DESC,t1.IS_ACTIVE,t1.HIST_RETEN_DAYS,t1.SCORE_RUN_FREQ_CODE,t1.WKLY_RTN_IND,t1.WEBSITE_SGMNT_IND,t1.COL_DSPL_TYPE_TXT,''ACTIVATE'',''VALID'' FROM IN_CNSMR_SCORE_REF t1, CNSMR_SCORE_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT', 'INSERT INTO NC_CNTCT ( SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,''INSERT'',''VALID'' FROM IN_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT', 'INSERT INTO NC_CNTCT ( SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,''DELETE'',''VALID'' FROM CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT', 'INSERT INTO NC_CNTCT ( SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.FIRST_NM,t1.LAST_NM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.FULL_PHONE_NUM,t1.EMAIL_ADDR_TXT,t1.TERR_NAME,t1.CNTRY_CODE,t1.SR_NBR,''UPDATE'',''VALID'' FROM IN_CNTCT t1, CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.FIRST_NM <> t2.FIRST_NM OR ( t1.FIRST_NM IS NULL AND t2.FIRST_NM IS NOT NULL) OR (t1.FIRST_NM IS NOT NULL AND t2.FIRST_NM IS NULL)) OR (t1.LAST_NM <> t2.LAST_NM OR ( t1.LAST_NM IS NULL AND t2.LAST_NM IS NOT NULL) OR (t1.LAST_NM IS NOT NULL AND t2.LAST_NM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT', 'INSERT INTO NC_CNTCT ( SCENARIO_ID,CNTCT_NBR,FIRST_NM,LAST_NM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,FULL_PHONE_NUM,EMAIL_ADDR_TXT,TERR_NAME,CNTRY_CODE,SR_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.FIRST_NM,t1.LAST_NM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.FULL_PHONE_NUM,t1.EMAIL_ADDR_TXT,t1.TERR_NAME,t1.CNTRY_CODE,t1.SR_NBR,''ACTIVATE'',''VALID'' FROM IN_CNTCT t1, CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_CHANL_TYPE', 'INSERT INTO NC_CNTCT_CHANL_TYPE ( SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_CNTCT_CHANL_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTCT_CHANL_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_CHANL_TYPE', 'INSERT INTO NC_CNTCT_CHANL_TYPE ( SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM CNTCT_CHANL_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTCT_CHANL_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTCT_CHANL_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_CHANL_TYPE', 'INSERT INTO NC_CNTCT_CHANL_TYPE ( SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_CHANL_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_CNTCT_CHANL_TYPE t1, CNTCT_CHANL_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_CHANL_TYPE_CODE <> t2.CNTCT_CHANL_TYPE_CODE OR ( t1.CNTCT_CHANL_TYPE_CODE IS NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_CODE IS NOT NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NULL)) OR (t1.CNTCT_CHANL_TYPE_NAME <> t2.CNTCT_CHANL_TYPE_NAME OR ( t1.CNTCT_CHANL_TYPE_NAME IS NULL AND t2.CNTCT_CHANL_TYPE_NAME IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_NAME IS NOT NULL AND t2.CNTCT_CHANL_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_CHANL_TYPE', 'INSERT INTO NC_CNTCT_CHANL_TYPE ( SCENARIO_ID,CNTCT_CHANL_TYPE_CODE,CNTCT_CHANL_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_CHANL_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_CNTCT_CHANL_TYPE t1, CNTCT_CHANL_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_OPT_PGM', 'INSERT INTO NC_CNTCT_OPT_PGM ( SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_CNTCT_OPT_PGM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTCT_OPT_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_OPT_NBR = t2.CNTCT_OPT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPTED_MKTNG_PGM_NBR = t2.OPTED_MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_OPT_PGM', 'INSERT INTO NC_CNTCT_OPT_PGM ( SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM CNTCT_OPT_PGM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTCT_OPT_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_OPT_NBR = t2.CNTCT_OPT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPTED_MKTNG_PGM_NBR = t2.OPTED_MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTCT_OPT_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_OPT_NBR = t2.CNTCT_OPT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPTED_MKTNG_PGM_NBR = t2.OPTED_MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_OPT_PGM', 'INSERT INTO NC_CNTCT_OPT_PGM ( SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_OPT_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.MKTNG_PGM_NBR,t1.OPTED_MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_CNTCT_OPT_PGM t1, CNTCT_OPT_PGM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_OPT_NBR = t2.CNTCT_OPT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPTED_MKTNG_PGM_NBR = t2.OPTED_MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_OPT_NBR <> t2.CNTCT_OPT_NBR OR ( t1.CNTCT_OPT_NBR IS NULL AND t2.CNTCT_OPT_NBR IS NOT NULL) OR (t1.CNTCT_OPT_NBR IS NOT NULL AND t2.CNTCT_OPT_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.OPTED_MKTNG_PGM_NBR <> t2.OPTED_MKTNG_PGM_NBR OR ( t1.OPTED_MKTNG_PGM_NBR IS NULL AND t2.OPTED_MKTNG_PGM_NBR IS NOT NULL) OR (t1.OPTED_MKTNG_PGM_NBR IS NOT NULL AND t2.OPTED_MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_OPT_PGM', 'INSERT INTO NC_CNTCT_OPT_PGM ( SCENARIO_ID,CNTCT_OPT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MKTNG_PGM_NBR,OPTED_MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_OPT_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.MKTNG_PGM_NBR,t1.OPTED_MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_CNTCT_OPT_PGM t1, CNTCT_OPT_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_OPT_NBR = t2.CNTCT_OPT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPTED_MKTNG_PGM_NBR = t2.OPTED_MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM', 'INSERT INTO NC_CNTNT_ELEM ( SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,''INSERT'',''VALID'' FROM IN_CNTNT_ELEM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTNT_ELEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM', 'INSERT INTO NC_CNTNT_ELEM ( SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,''DELETE'',''VALID'' FROM CNTNT_ELEM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTNT_ELEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTNT_ELEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM', 'INSERT INTO NC_CNTNT_ELEM ( SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.MKTNG_PGM_NBR,t1.ALT_SYS_CNTNT_ID,t1.CNTNT_NAME,t1.CNTNT_SHORT_NAME,t1.CNTNT_DESC,t1.CNSMR_ACTN_TYPE_CODE,t1.INCTV_NBR,t1.TRGT_PATH_TYPE_CODE,t1.TRGT_SUB_PATH_TYPE_CODE,t1.TRGT_CNSMR_SEG_CODE,t1.VIEW_WEB_SITE_URL_TXT,t1.CNTNT_OWNER_NAME,t1.CNTNT_PHYS_LOCATION,t1.CNTNT_ACTIVE_START_DATE,t1.CNTNT_ACTIVE_END_DATE,t1.CNTNT_ELEM_TYPE_CODE,t1.GBL_CNTNT_ELEM_ID,''UPDATE'',''VALID'' FROM IN_CNTNT_ELEM t1, CNTNT_ELEM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTNT_ELEM_ID <> t2.CNTNT_ELEM_ID OR ( t1.CNTNT_ELEM_ID IS NULL AND t2.CNTNT_ELEM_ID IS NOT NULL) OR (t1.CNTNT_ELEM_ID IS NOT NULL AND t2.CNTNT_ELEM_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.ALT_SYS_CNTNT_ID <> t2.ALT_SYS_CNTNT_ID OR ( t1.ALT_SYS_CNTNT_ID IS NULL AND t2.ALT_SYS_CNTNT_ID IS NOT NULL) OR (t1.ALT_SYS_CNTNT_ID IS NOT NULL AND t2.ALT_SYS_CNTNT_ID IS NULL)) OR (t1.CNTNT_NAME <> t2.CNTNT_NAME OR ( t1.CNTNT_NAME IS NULL AND t2.CNTNT_NAME IS NOT NULL) OR (t1.CNTNT_NAME IS NOT NULL AND t2.CNTNT_NAME IS NULL)) OR (t1.CNTNT_SHORT_NAME <> t2.CNTNT_SHORT_NAME OR ( t1.CNTNT_SHORT_NAME IS NULL AND t2.CNTNT_SHORT_NAME IS NOT NULL) OR (t1.CNTNT_SHORT_NAME IS NOT NULL AND t2.CNTNT_SHORT_NAME IS NULL)) OR (t1.CNTNT_DESC <> t2.CNTNT_DESC OR ( t1.CNTNT_DESC IS NULL AND t2.CNTNT_DESC IS NOT NULL) OR (t1.CNTNT_DESC IS NOT NULL AND t2.CNTNT_DESC IS NULL)) OR (t1.CNSMR_ACTN_TYPE_CODE <> t2.CNSMR_ACTN_TYPE_CODE OR ( t1.CNSMR_ACTN_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NULL)) OR (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.TRGT_PATH_TYPE_CODE <> t2.TRGT_PATH_TYPE_CODE OR ( t1.TRGT_PATH_TYPE_CODE IS NULL AND t2.TRGT_PATH_TYPE_CODE IS NOT NULL) OR (t1.TRGT_PATH_TYPE_CODE IS NOT NULL AND t2.TRGT_PATH_TYPE_CODE IS NULL)) OR (t1.TRGT_SUB_PATH_TYPE_CODE <> t2.TRGT_SUB_PATH_TYPE_CODE OR ( t1.TRGT_SUB_PATH_TYPE_CODE IS NULL AND t2.TRGT_SUB_PATH_TYPE_CODE IS NOT NULL) OR (t1.TRGT_SUB_PATH_TYPE_CODE IS NOT NULL AND t2.TRGT_SUB_PATH_TYPE_CODE IS NULL)) OR (t1.TRGT_CNSMR_SEG_CODE <> t2.TRGT_CNSMR_SEG_CODE OR ( t1.TRGT_CNSMR_SEG_CODE IS NULL AND t2.TRGT_CNSMR_SEG_CODE IS NOT NULL) OR (t1.TRGT_CNSMR_SEG_CODE IS NOT NULL AND t2.TRGT_CNSMR_SEG_CODE IS NULL)) OR (t1.VIEW_WEB_SITE_URL_TXT <> t2.VIEW_WEB_SITE_URL_TXT OR ( t1.VIEW_WEB_SITE_URL_TXT IS NULL AND t2.VIEW_WEB_SITE_URL_TXT IS NOT NULL) OR (t1.VIEW_WEB_SITE_URL_TXT IS NOT NULL AND t2.VIEW_WEB_SITE_URL_TXT IS NULL)) OR (t1.CNTNT_OWNER_NAME <> t2.CNTNT_OWNER_NAME OR ( t1.CNTNT_OWNER_NAME IS NULL AND t2.CNTNT_OWNER_NAME IS NOT NULL) OR (t1.CNTNT_OWNER_NAME IS NOT NULL AND t2.CNTNT_OWNER_NAME IS NULL)) OR (t1.CNTNT_PHYS_LOCATION <> t2.CNTNT_PHYS_LOCATION OR ( t1.CNTNT_PHYS_LOCATION IS NULL AND t2.CNTNT_PHYS_LOCATION IS NOT NULL) OR (t1.CNTNT_PHYS_LOCATION IS NOT NULL AND t2.CNTNT_PHYS_LOCATION IS NULL)) OR (t1.CNTNT_ACTIVE_START_DATE <> t2.CNTNT_ACTIVE_START_DATE OR ( t1.CNTNT_ACTIVE_START_DATE IS NULL AND t2.CNTNT_ACTIVE_START_DATE IS NOT NULL) OR (t1.CNTNT_ACTIVE_START_DATE IS NOT NULL AND t2.CNTNT_ACTIVE_START_DATE IS NULL)) OR (t1.CNTNT_ACTIVE_END_DATE <> t2.CNTNT_ACTIVE_END_DATE OR ( t1.CNTNT_ACTIVE_END_DATE IS NULL AND t2.CNTNT_ACTIVE_END_DATE IS NOT NULL) OR (t1.CNTNT_ACTIVE_END_DATE IS NOT NULL AND t2.CNTNT_ACTIVE_END_DATE IS NULL)) OR (t1.CNTNT_ELEM_TYPE_CODE <> t2.CNTNT_ELEM_TYPE_CODE OR ( t1.CNTNT_ELEM_TYPE_CODE IS NULL AND t2.CNTNT_ELEM_TYPE_CODE IS NOT NULL) OR (t1.CNTNT_ELEM_TYPE_CODE IS NOT NULL AND t2.CNTNT_ELEM_TYPE_CODE IS NULL)) OR (t1.GBL_CNTNT_ELEM_ID <> t2.GBL_CNTNT_ELEM_ID OR ( t1.GBL_CNTNT_ELEM_ID IS NULL AND t2.GBL_CNTNT_ELEM_ID IS NOT NULL) OR (t1.GBL_CNTNT_ELEM_ID IS NOT NULL AND t2.GBL_CNTNT_ELEM_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM', 'INSERT INTO NC_CNTNT_ELEM ( SCENARIO_ID,CNTNT_ELEM_ID,MKTNG_PGM_NBR,ALT_SYS_CNTNT_ID,CNTNT_NAME,CNTNT_SHORT_NAME,CNTNT_DESC,CNSMR_ACTN_TYPE_CODE,INCTV_NBR,TRGT_PATH_TYPE_CODE,TRGT_SUB_PATH_TYPE_CODE,TRGT_CNSMR_SEG_CODE,VIEW_WEB_SITE_URL_TXT,CNTNT_OWNER_NAME,CNTNT_PHYS_LOCATION,CNTNT_ACTIVE_START_DATE,CNTNT_ACTIVE_END_DATE,CNTNT_ELEM_TYPE_CODE,GBL_CNTNT_ELEM_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.MKTNG_PGM_NBR,t1.ALT_SYS_CNTNT_ID,t1.CNTNT_NAME,t1.CNTNT_SHORT_NAME,t1.CNTNT_DESC,t1.CNSMR_ACTN_TYPE_CODE,t1.INCTV_NBR,t1.TRGT_PATH_TYPE_CODE,t1.TRGT_SUB_PATH_TYPE_CODE,t1.TRGT_CNSMR_SEG_CODE,t1.VIEW_WEB_SITE_URL_TXT,t1.CNTNT_OWNER_NAME,t1.CNTNT_PHYS_LOCATION,t1.CNTNT_ACTIVE_START_DATE,t1.CNTNT_ACTIVE_END_DATE,t1.CNTNT_ELEM_TYPE_CODE,t1.GBL_CNTNT_ELEM_ID,''ACTIVATE'',''VALID'' FROM IN_CNTNT_ELEM t1, CNTNT_ELEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_ITEM', 'INSERT INTO NC_CNTNT_ELEM_ITEM ( SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,''INSERT'',''VALID'' FROM IN_CNTNT_ELEM_ITEM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTNT_ELEM_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_ITEM_NBR = t2.CNTNT_ELEM_ITEM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_ITEM', 'INSERT INTO NC_CNTNT_ELEM_ITEM ( SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,''DELETE'',''VALID'' FROM CNTNT_ELEM_ITEM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTNT_ELEM_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_ITEM_NBR = t2.CNTNT_ELEM_ITEM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTNT_ELEM_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_ITEM_NBR = t2.CNTNT_ELEM_ITEM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_ITEM', 'INSERT INTO NC_CNTNT_ELEM_ITEM ( SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.CNTNT_ELEM_ITEM_NBR,t1.CNTNT_ELEM_ITEM_NAME,t1.CNTNT_ELEM_ITEM_QTY,t1.CNTNT_ELEM_ITEM_DESC,t1.CATEG_CODE,t1.SEG_CODE,t1.BRAND_CODE,t1.SUB_BRAND_CODE,t1.ITEM_VERS_CODE,t1.GLOBAL_FORM_CODE,t1.BRAND_FAMLY_ID,t1.PROD_FAMLY_ID,t1.PROD_ITEM_UPC,''UPDATE'',''VALID'' FROM IN_CNTNT_ELEM_ITEM t1, CNTNT_ELEM_ITEM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_ITEM_NBR = t2.CNTNT_ELEM_ITEM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTNT_ELEM_ID <> t2.CNTNT_ELEM_ID OR ( t1.CNTNT_ELEM_ID IS NULL AND t2.CNTNT_ELEM_ID IS NOT NULL) OR (t1.CNTNT_ELEM_ID IS NOT NULL AND t2.CNTNT_ELEM_ID IS NULL)) OR (t1.CNTNT_ELEM_ITEM_NBR <> t2.CNTNT_ELEM_ITEM_NBR OR ( t1.CNTNT_ELEM_ITEM_NBR IS NULL AND t2.CNTNT_ELEM_ITEM_NBR IS NOT NULL) OR (t1.CNTNT_ELEM_ITEM_NBR IS NOT NULL AND t2.CNTNT_ELEM_ITEM_NBR IS NULL)) OR (t1.CNTNT_ELEM_ITEM_NAME <> t2.CNTNT_ELEM_ITEM_NAME OR ( t1.CNTNT_ELEM_ITEM_NAME IS NULL AND t2.CNTNT_ELEM_ITEM_NAME IS NOT NULL) OR (t1.CNTNT_ELEM_ITEM_NAME IS NOT NULL AND t2.CNTNT_ELEM_ITEM_NAME IS NULL)) OR (t1.CNTNT_ELEM_ITEM_QTY <> t2.CNTNT_ELEM_ITEM_QTY OR ( t1.CNTNT_ELEM_ITEM_QTY IS NULL AND t2.CNTNT_ELEM_ITEM_QTY IS NOT NULL) OR (t1.CNTNT_ELEM_ITEM_QTY IS NOT NULL AND t2.CNTNT_ELEM_ITEM_QTY IS NULL)) OR (t1.CNTNT_ELEM_ITEM_DESC <> t2.CNTNT_ELEM_ITEM_DESC OR ( t1.CNTNT_ELEM_ITEM_DESC IS NULL AND t2.CNTNT_ELEM_ITEM_DESC IS NOT NULL) OR (t1.CNTNT_ELEM_ITEM_DESC IS NOT NULL AND t2.CNTNT_ELEM_ITEM_DESC IS NULL)) OR (t1.CATEG_CODE <> t2.CATEG_CODE OR ( t1.CATEG_CODE IS NULL AND t2.CATEG_CODE IS NOT NULL) OR (t1.CATEG_CODE IS NOT NULL AND t2.CATEG_CODE IS NULL)) OR (t1.SEG_CODE <> t2.SEG_CODE OR ( t1.SEG_CODE IS NULL AND t2.SEG_CODE IS NOT NULL) OR (t1.SEG_CODE IS NOT NULL AND t2.SEG_CODE IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.SUB_BRAND_CODE <> t2.SUB_BRAND_CODE OR ( t1.SUB_BRAND_CODE IS NULL AND t2.SUB_BRAND_CODE IS NOT NULL) OR (t1.SUB_BRAND_CODE IS NOT NULL AND t2.SUB_BRAND_CODE IS NULL)) OR (t1.ITEM_VERS_CODE <> t2.ITEM_VERS_CODE OR ( t1.ITEM_VERS_CODE IS NULL AND t2.ITEM_VERS_CODE IS NOT NULL) OR (t1.ITEM_VERS_CODE IS NOT NULL AND t2.ITEM_VERS_CODE IS NULL)) OR (t1.GLOBAL_FORM_CODE <> t2.GLOBAL_FORM_CODE OR ( t1.GLOBAL_FORM_CODE IS NULL AND t2.GLOBAL_FORM_CODE IS NOT NULL) OR (t1.GLOBAL_FORM_CODE IS NOT NULL AND t2.GLOBAL_FORM_CODE IS NULL)) OR (t1.BRAND_FAMLY_ID <> t2.BRAND_FAMLY_ID OR ( t1.BRAND_FAMLY_ID IS NULL AND t2.BRAND_FAMLY_ID IS NOT NULL) OR (t1.BRAND_FAMLY_ID IS NOT NULL AND t2.BRAND_FAMLY_ID IS NULL)) OR (t1.PROD_FAMLY_ID <> t2.PROD_FAMLY_ID OR ( t1.PROD_FAMLY_ID IS NULL AND t2.PROD_FAMLY_ID IS NOT NULL) OR (t1.PROD_FAMLY_ID IS NOT NULL AND t2.PROD_FAMLY_ID IS NULL)) OR (t1.PROD_ITEM_UPC <> t2.PROD_ITEM_UPC OR ( t1.PROD_ITEM_UPC IS NULL AND t2.PROD_ITEM_UPC IS NOT NULL) OR (t1.PROD_ITEM_UPC IS NOT NULL AND t2.PROD_ITEM_UPC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_ITEM', 'INSERT INTO NC_CNTNT_ELEM_ITEM ( SCENARIO_ID,CNTNT_ELEM_ID,CNTNT_ELEM_ITEM_NBR,CNTNT_ELEM_ITEM_NAME,CNTNT_ELEM_ITEM_QTY,CNTNT_ELEM_ITEM_DESC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,GLOBAL_FORM_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,PROD_ITEM_UPC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.CNTNT_ELEM_ITEM_NBR,t1.CNTNT_ELEM_ITEM_NAME,t1.CNTNT_ELEM_ITEM_QTY,t1.CNTNT_ELEM_ITEM_DESC,t1.CATEG_CODE,t1.SEG_CODE,t1.BRAND_CODE,t1.SUB_BRAND_CODE,t1.ITEM_VERS_CODE,t1.GLOBAL_FORM_CODE,t1.BRAND_FAMLY_ID,t1.PROD_FAMLY_ID,t1.PROD_ITEM_UPC,''ACTIVATE'',''VALID'' FROM IN_CNTNT_ELEM_ITEM t1, CNTNT_ELEM_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_ITEM_NBR = t2.CNTNT_ELEM_ITEM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TRT', 'INSERT INTO NC_CNTNT_ELEM_TRT ( SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,''INSERT'',''VALID'' FROM IN_CNTNT_ELEM_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTNT_ELEM_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_TRT_SEQ_NBR = t2.CNTNT_ELEM_TRT_SEQ_NBR AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TRT', 'INSERT INTO NC_CNTNT_ELEM_TRT ( SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,''DELETE'',''VALID'' FROM CNTNT_ELEM_TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTNT_ELEM_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_TRT_SEQ_NBR = t2.CNTNT_ELEM_TRT_SEQ_NBR AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTNT_ELEM_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_TRT_SEQ_NBR = t2.CNTNT_ELEM_TRT_SEQ_NBR AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TRT', 'INSERT INTO NC_CNTNT_ELEM_TRT ( SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.TRT_NBR,t1.CNTNT_ELEM_TRT_SEQ_NBR,t1.CNTNT_ELEM_TRT_DATE,t1.CNTNT_ELEM_TRT_TXT,t1.CNTNT_ELEM_TRT_DESC,''UPDATE'',''VALID'' FROM IN_CNTNT_ELEM_TRT t1, CNTNT_ELEM_TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_TRT_SEQ_NBR = t2.CNTNT_ELEM_TRT_SEQ_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTNT_ELEM_ID <> t2.CNTNT_ELEM_ID OR ( t1.CNTNT_ELEM_ID IS NULL AND t2.CNTNT_ELEM_ID IS NOT NULL) OR (t1.CNTNT_ELEM_ID IS NOT NULL AND t2.CNTNT_ELEM_ID IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.CNTNT_ELEM_TRT_SEQ_NBR <> t2.CNTNT_ELEM_TRT_SEQ_NBR OR ( t1.CNTNT_ELEM_TRT_SEQ_NBR IS NULL AND t2.CNTNT_ELEM_TRT_SEQ_NBR IS NOT NULL) OR (t1.CNTNT_ELEM_TRT_SEQ_NBR IS NOT NULL AND t2.CNTNT_ELEM_TRT_SEQ_NBR IS NULL)) OR (t1.CNTNT_ELEM_TRT_DATE <> t2.CNTNT_ELEM_TRT_DATE OR ( t1.CNTNT_ELEM_TRT_DATE IS NULL AND t2.CNTNT_ELEM_TRT_DATE IS NOT NULL) OR (t1.CNTNT_ELEM_TRT_DATE IS NOT NULL AND t2.CNTNT_ELEM_TRT_DATE IS NULL)) OR (t1.CNTNT_ELEM_TRT_TXT <> t2.CNTNT_ELEM_TRT_TXT OR ( t1.CNTNT_ELEM_TRT_TXT IS NULL AND t2.CNTNT_ELEM_TRT_TXT IS NOT NULL) OR (t1.CNTNT_ELEM_TRT_TXT IS NOT NULL AND t2.CNTNT_ELEM_TRT_TXT IS NULL)) OR (t1.CNTNT_ELEM_TRT_DESC <> t2.CNTNT_ELEM_TRT_DESC OR ( t1.CNTNT_ELEM_TRT_DESC IS NULL AND t2.CNTNT_ELEM_TRT_DESC IS NOT NULL) OR (t1.CNTNT_ELEM_TRT_DESC IS NOT NULL AND t2.CNTNT_ELEM_TRT_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TRT', 'INSERT INTO NC_CNTNT_ELEM_TRT ( SCENARIO_ID,CNTNT_ELEM_ID,TRT_NBR,CNTNT_ELEM_TRT_SEQ_NBR,CNTNT_ELEM_TRT_DATE,CNTNT_ELEM_TRT_TXT,CNTNT_ELEM_TRT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_ID,t1.TRT_NBR,t1.CNTNT_ELEM_TRT_SEQ_NBR,t1.CNTNT_ELEM_TRT_DATE,t1.CNTNT_ELEM_TRT_TXT,t1.CNTNT_ELEM_TRT_DESC,''ACTIVATE'',''VALID'' FROM IN_CNTNT_ELEM_TRT t1, CNTNT_ELEM_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_ID = t2.CNTNT_ELEM_ID AND t1.CNTNT_ELEM_TRT_SEQ_NBR = t2.CNTNT_ELEM_TRT_SEQ_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TYPE', 'INSERT INTO NC_CNTNT_ELEM_TYPE ( SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_CNTNT_ELEM_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTNT_ELEM_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_TYPE_CODE = t2.CNTNT_ELEM_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TYPE', 'INSERT INTO NC_CNTNT_ELEM_TYPE ( SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM CNTNT_ELEM_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTNT_ELEM_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_TYPE_CODE = t2.CNTNT_ELEM_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTNT_ELEM_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_TYPE_CODE = t2.CNTNT_ELEM_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TYPE', 'INSERT INTO NC_CNTNT_ELEM_TYPE ( SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_TYPE_CODE,t1.CNTNT_ELEM_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_CNTNT_ELEM_TYPE t1, CNTNT_ELEM_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_TYPE_CODE = t2.CNTNT_ELEM_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTNT_ELEM_TYPE_CODE <> t2.CNTNT_ELEM_TYPE_CODE OR ( t1.CNTNT_ELEM_TYPE_CODE IS NULL AND t2.CNTNT_ELEM_TYPE_CODE IS NOT NULL) OR (t1.CNTNT_ELEM_TYPE_CODE IS NOT NULL AND t2.CNTNT_ELEM_TYPE_CODE IS NULL)) OR (t1.CNTNT_ELEM_TYPE_NAME <> t2.CNTNT_ELEM_TYPE_NAME OR ( t1.CNTNT_ELEM_TYPE_NAME IS NULL AND t2.CNTNT_ELEM_TYPE_NAME IS NOT NULL) OR (t1.CNTNT_ELEM_TYPE_NAME IS NOT NULL AND t2.CNTNT_ELEM_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTNT_ELEM_TYPE', 'INSERT INTO NC_CNTNT_ELEM_TYPE ( SCENARIO_ID,CNTNT_ELEM_TYPE_CODE,CNTNT_ELEM_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTNT_ELEM_TYPE_CODE,t1.CNTNT_ELEM_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_CNTNT_ELEM_TYPE t1, CNTNT_ELEM_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTNT_ELEM_TYPE_CODE = t2.CNTNT_ELEM_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTRY', 'INSERT INTO NC_CNTRY ( SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_CNTRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTRY', 'INSERT INTO NC_CNTRY ( SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM CNTRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTRY', 'INSERT INTO NC_CNTRY ( SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.CNTRY_NAME,t1.CNTRY_CODE_NTV,t1.CNTRY_NAME_NTV,t1.CNTRY_SHORT_NAME,t1.CNTRY_DESC,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_CODE,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_CNTRY t1, CNTRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.CNTRY_CODE_NTV <> t2.CNTRY_CODE_NTV OR ( t1.CNTRY_CODE_NTV IS NULL AND t2.CNTRY_CODE_NTV IS NOT NULL) OR (t1.CNTRY_CODE_NTV IS NOT NULL AND t2.CNTRY_CODE_NTV IS NULL)) OR (t1.CNTRY_NAME_NTV <> t2.CNTRY_NAME_NTV OR ( t1.CNTRY_NAME_NTV IS NULL AND t2.CNTRY_NAME_NTV IS NOT NULL) OR (t1.CNTRY_NAME_NTV IS NOT NULL AND t2.CNTRY_NAME_NTV IS NULL)) OR (t1.CNTRY_SHORT_NAME <> t2.CNTRY_SHORT_NAME OR ( t1.CNTRY_SHORT_NAME IS NULL AND t2.CNTRY_SHORT_NAME IS NOT NULL) OR (t1.CNTRY_SHORT_NAME IS NOT NULL AND t2.CNTRY_SHORT_NAME IS NULL)) OR (t1.CNTRY_DESC <> t2.CNTRY_DESC OR ( t1.CNTRY_DESC IS NULL AND t2.CNTRY_DESC IS NOT NULL) OR (t1.CNTRY_DESC IS NOT NULL AND t2.CNTRY_DESC IS NULL)) OR (t1.GEOC_REGN_CODE <> t2.GEOC_REGN_CODE OR ( t1.GEOC_REGN_CODE IS NULL AND t2.GEOC_REGN_CODE IS NOT NULL) OR (t1.GEOC_REGN_CODE IS NOT NULL AND t2.GEOC_REGN_CODE IS NULL)) OR (t1.GEOC_SUB_REGN_CODE <> t2.GEOC_SUB_REGN_CODE OR ( t1.GEOC_SUB_REGN_CODE IS NULL AND t2.GEOC_SUB_REGN_CODE IS NOT NULL) OR (t1.GEOC_SUB_REGN_CODE IS NOT NULL AND t2.GEOC_SUB_REGN_CODE IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTRY', 'INSERT INTO NC_CNTRY ( SCENARIO_ID,CNTRY_CODE,CNTRY_NAME,CNTRY_CODE_NTV,CNTRY_NAME_NTV,CNTRY_SHORT_NAME,CNTRY_DESC,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.CNTRY_NAME,t1.CNTRY_CODE_NTV,t1.CNTRY_NAME_NTV,t1.CNTRY_SHORT_NAME,t1.CNTRY_DESC,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_CODE,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_CNTRY t1, CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COCRM_REF_DATA_CONFIG', 'INSERT INTO NC_COCRM_REF_DATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,''INSERT'',''VALID'' FROM IN_COCRM_REF_DATA_CONFIG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM COCRM_REF_DATA_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COCRM_REF_DATA_CONFIG', 'INSERT INTO NC_COCRM_REF_DATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,''DELETE'',''VALID'' FROM COCRM_REF_DATA_CONFIG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_COCRM_REF_DATA_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_COCRM_REF_DATA_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COCRM_REF_DATA_CONFIG', 'INSERT INTO NC_COCRM_REF_DATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.ATTR_NBR,t1.ATTR_TYPE,''UPDATE'',''VALID'' FROM IN_COCRM_REF_DATA_CONFIG t1, COCRM_REF_DATA_CONFIG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.ATTR_NBR <> t2.ATTR_NBR OR ( t1.ATTR_NBR IS NULL AND t2.ATTR_NBR IS NOT NULL) OR (t1.ATTR_NBR IS NOT NULL AND t2.ATTR_NBR IS NULL)) OR (t1.ATTR_TYPE <> t2.ATTR_TYPE OR ( t1.ATTR_TYPE IS NULL AND t2.ATTR_TYPE IS NOT NULL) OR (t1.ATTR_TYPE IS NOT NULL AND t2.ATTR_TYPE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COCRM_REF_DATA_CONFIG', 'INSERT INTO NC_COCRM_REF_DATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.ATTR_NBR,t1.ATTR_TYPE,''ACTIVATE'',''VALID'' FROM IN_COCRM_REF_DATA_CONFIG t1, COCRM_REF_DATA_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COUPN_TYPE', 'INSERT INTO NC_COUPN_TYPE ( SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,''INSERT'',''VALID'' FROM IN_COUPN_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM COUPN_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.COUPN_TYPE_CODE = t2.COUPN_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COUPN_TYPE', 'INSERT INTO NC_COUPN_TYPE ( SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,''DELETE'',''VALID'' FROM COUPN_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_COUPN_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.COUPN_TYPE_CODE = t2.COUPN_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_COUPN_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.COUPN_TYPE_CODE = t2.COUPN_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COUPN_TYPE', 'INSERT INTO NC_COUPN_TYPE ( SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.COUPN_TYPE_CODE,t1.COUPN_TYPE_NAME,''UPDATE'',''VALID'' FROM IN_COUPN_TYPE t1, COUPN_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.COUPN_TYPE_CODE = t2.COUPN_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.COUPN_TYPE_CODE <> t2.COUPN_TYPE_CODE OR ( t1.COUPN_TYPE_CODE IS NULL AND t2.COUPN_TYPE_CODE IS NOT NULL) OR (t1.COUPN_TYPE_CODE IS NOT NULL AND t2.COUPN_TYPE_CODE IS NULL)) OR (t1.COUPN_TYPE_NAME <> t2.COUPN_TYPE_NAME OR ( t1.COUPN_TYPE_NAME IS NULL AND t2.COUPN_TYPE_NAME IS NOT NULL) OR (t1.COUPN_TYPE_NAME IS NOT NULL AND t2.COUPN_TYPE_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_COUPN_TYPE', 'INSERT INTO NC_COUPN_TYPE ( SCENARIO_ID,COUPN_TYPE_CODE,COUPN_TYPE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.COUPN_TYPE_CODE,t1.COUPN_TYPE_NAME,''ACTIVATE'',''VALID'' FROM IN_COUPN_TYPE t1, COUPN_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.COUPN_TYPE_CODE = t2.COUPN_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CLASSIFICATION_ERROR_MAP', 'INSERT INTO NC_CLASSIFICATION_ERROR_MAP ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,''INSERT'',''VALID'' FROM IN_CLASSIFICATION_ERROR_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CLASSIFICATION_ERROR_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.surrKey = t2.surrKey )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CLASSIFICATION_ERROR_MAP', 'INSERT INTO NC_CLASSIFICATION_ERROR_MAP ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,''DELETE'',''VALID'' FROM MST_CLASSIFICATION_ERROR_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CLASSIFICATION_ERROR_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.surrKey = t2.surrKey ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CLASSIFICATION_ERROR_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.surrKey = t2.surrKey));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CLASSIFICATION_ERROR_MAP', 'INSERT INTO NC_CLASSIFICATION_ERROR_MAP ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_CLASSIFICATION_ID,t1.SURR_KEY,t1.ERROR_MESSAGE_ID,t1.UI_ADDRESS,t1.SEVERITY,''UPDATE'',''VALID'' FROM IN_CLASSIFICATION_ERROR_MAP t1, MST_CLASSIFICATION_ERROR_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.surrKey = t2.surrKey AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.entityClassificationID <> t2.entityClassificationID OR ( t1.entityClassificationID IS NULL AND t2.entityClassificationID IS NOT NULL) OR (t1.entityClassificationID IS NOT NULL AND t2.entityClassificationID IS NULL)) OR (t1.surrKey <> t2.surrKey OR ( t1.surrKey IS NULL AND t2.surrKey IS NOT NULL) OR (t1.surrKey IS NOT NULL AND t2.surrKey IS NULL)) OR (t1.errorMessageID <> t2.errorMessageID OR ( t1.errorMessageID IS NULL AND t2.errorMessageID IS NOT NULL) OR (t1.errorMessageID IS NOT NULL AND t2.errorMessageID IS NULL)) OR (t1.uiAddress <> t2.uiAddress OR ( t1.uiAddress IS NULL AND t2.uiAddress IS NOT NULL) OR (t1.uiAddress IS NOT NULL AND t2.uiAddress IS NULL)) OR (t1.severity <> t2.severity OR ( t1.severity IS NULL AND t2.severity IS NOT NULL) OR (t1.severity IS NOT NULL AND t2.severity IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CLASSIFICATION_ERROR_MAP', 'INSERT INTO NC_CLASSIFICATION_ERROR_MAP ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,SURR_KEY,ERROR_MESSAGE_ID,UI_ADDRESS,SEVERITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_CLASSIFICATION_ID,t1.SURR_KEY,t1.ERROR_MESSAGE_ID,t1.UI_ADDRESS,t1.SEVERITY,''ACTIVATE'',''VALID'' FROM IN_CLASSIFICATION_ERROR_MAP t1, MST_CLASSIFICATION_ERROR_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.surrKey = t2.surrKey AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,''INSERT'',''VALID'' FROM IN_CODE_SET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CODE_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,''DELETE'',''VALID'' FROM MST_CODE_SET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CODE_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Description,t1.Map_Table_Name,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.IS_EDITABLE,t1.IS_PROMOTED,t1.NAME,t1.PARENT_CODE_SET_ID,t1.Is_Custom_Map_Table,t1.Values_Table_Name,t1.Reference_Desc_Table_Name,t1.SERVICE_NAME,t1.DATABASE_NAME,''UPDATE'',''VALID'' FROM IN_CODE_SET t1, MST_CODE_SET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Map_Table_Name <> t2.Map_Table_Name OR ( t1.Map_Table_Name IS NULL AND t2.Map_Table_Name IS NOT NULL) OR (t1.Map_Table_Name IS NOT NULL AND t2.Map_Table_Name IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.IS_EDITABLE <> t2.IS_EDITABLE OR ( t1.IS_EDITABLE IS NULL AND t2.IS_EDITABLE IS NOT NULL) OR (t1.IS_EDITABLE IS NOT NULL AND t2.IS_EDITABLE IS NULL)) OR (t1.IS_PROMOTED <> t2.IS_PROMOTED OR ( t1.IS_PROMOTED IS NULL AND t2.IS_PROMOTED IS NOT NULL) OR (t1.IS_PROMOTED IS NOT NULL AND t2.IS_PROMOTED IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Is_Custom_Map_Table <> t2.Is_Custom_Map_Table OR ( t1.Is_Custom_Map_Table IS NULL AND t2.Is_Custom_Map_Table IS NOT NULL) OR (t1.Is_Custom_Map_Table IS NOT NULL AND t2.Is_Custom_Map_Table IS NULL)) OR (t1.Values_Table_Name <> t2.Values_Table_Name OR ( t1.Values_Table_Name IS NULL AND t2.Values_Table_Name IS NOT NULL) OR (t1.Values_Table_Name IS NOT NULL AND t2.Values_Table_Name IS NULL)) OR (t1.Reference_Desc_Table_Name <> t2.Reference_Desc_Table_Name OR ( t1.Reference_Desc_Table_Name IS NULL AND t2.Reference_Desc_Table_Name IS NOT NULL) OR (t1.Reference_Desc_Table_Name IS NOT NULL AND t2.Reference_Desc_Table_Name IS NULL)) OR (t1.Service_Name <> t2.Service_Name OR ( t1.Service_Name IS NULL AND t2.Service_Name IS NOT NULL) OR (t1.Service_Name IS NOT NULL AND t2.Service_Name IS NULL)) OR (t1.Database_Name <> t2.Database_Name OR ( t1.Database_Name IS NULL AND t2.Database_Name IS NOT NULL) OR (t1.Database_Name IS NOT NULL AND t2.Database_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Description,t1.Map_Table_Name,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.IS_EDITABLE,t1.IS_PROMOTED,t1.NAME,t1.PARENT_CODE_SET_ID,t1.Is_Custom_Map_Table,t1.Values_Table_Name,t1.Reference_Desc_Table_Name,t1.SERVICE_NAME,t1.DATABASE_NAME,''ACTIVATE'',''VALID'' FROM IN_CODE_SET t1, MST_CODE_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,''INSERT'',''VALID'' FROM IN_CODE_SET_STATS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CODE_SET_STATS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,''DELETE'',''VALID'' FROM MST_CODE_SET_STATS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CODE_SET_STATS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_SET_STATS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Value_Id_Count,t1.Mapped_Source_Count,t1.Unmapped_Source_Count,''UPDATE'',''VALID'' FROM IN_CODE_SET_STATS t1, MST_CODE_SET_STATS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Value_Id_Count <> t2.Value_Id_Count OR ( t1.Value_Id_Count IS NULL AND t2.Value_Id_Count IS NOT NULL) OR (t1.Value_Id_Count IS NOT NULL AND t2.Value_Id_Count IS NULL)) OR (t1.Mapped_Source_Count <> t2.Mapped_Source_Count OR ( t1.Mapped_Source_Count IS NULL AND t2.Mapped_Source_Count IS NOT NULL) OR (t1.Mapped_Source_Count IS NOT NULL AND t2.Mapped_Source_Count IS NULL)) OR (t1.Unmapped_Source_Count <> t2.Unmapped_Source_Count OR ( t1.Unmapped_Source_Count IS NULL AND t2.Unmapped_Source_Count IS NOT NULL) OR (t1.Unmapped_Source_Count IS NOT NULL AND t2.Unmapped_Source_Count IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Value_Id_Count,t1.Mapped_Source_Count,t1.Unmapped_Source_Count,''ACTIVATE'',''VALID'' FROM IN_CODE_SET_STATS t1, MST_CODE_SET_STATS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,''INSERT'',''VALID'' FROM IN_XREF_REL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_XREF_REL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,''DELETE'',''VALID'' FROM MST_XREF_REL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_XREF_REL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_XREF_REL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.ROM_ID,t1.PARENT_MATCH_COL_LIST,t1.CHILD_MATCH_COL_LIST,''UPDATE'',''VALID'' FROM IN_XREF_REL t1, MST_XREF_REL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.XRefId <> t2.XRefId OR ( t1.XRefId IS NULL AND t2.XRefId IS NOT NULL) OR (t1.XRefId IS NOT NULL AND t2.XRefId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.ParentMatchColumnList <> t2.ParentMatchColumnList OR ( t1.ParentMatchColumnList IS NULL AND t2.ParentMatchColumnList IS NOT NULL) OR (t1.ParentMatchColumnList IS NOT NULL AND t2.ParentMatchColumnList IS NULL)) OR (t1.ChildMatchColumnList <> t2.ChildMatchColumnList OR ( t1.ChildMatchColumnList IS NULL AND t2.ChildMatchColumnList IS NOT NULL) OR (t1.ChildMatchColumnList IS NOT NULL AND t2.ChildMatchColumnList IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.ROM_ID,t1.PARENT_MATCH_COL_LIST,t1.CHILD_MATCH_COL_LIST,''ACTIVATE'',''VALID'' FROM IN_XREF_REL t1, MST_XREF_REL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,''INSERT'',''VALID'' FROM IN_CROSS_REFERENCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CROSS_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,''DELETE'',''VALID'' FROM MST_CROSS_REFERENCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CROSS_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CROSS_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.XREF_NAME,t1.GOLDEN_RO_ID,t1.XREF_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_CROSS_REFERENCE t1, MST_CROSS_REFERENCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.XRefId <> t2.XRefId OR ( t1.XRefId IS NULL AND t2.XRefId IS NOT NULL) OR (t1.XRefId IS NOT NULL AND t2.XRefId IS NULL)) OR (t1.XRefName <> t2.XRefName OR ( t1.XRefName IS NULL AND t2.XRefName IS NOT NULL) OR (t1.XRefName IS NOT NULL AND t2.XRefName IS NULL)) OR (t1.GoldenRelObjId <> t2.GoldenRelObjId OR ( t1.GoldenRelObjId IS NULL AND t2.GoldenRelObjId IS NOT NULL) OR (t1.GoldenRelObjId IS NOT NULL AND t2.GoldenRelObjId IS NULL)) OR (t1.XRefDecription <> t2.XRefDecription OR ( t1.XRefDecription IS NULL AND t2.XRefDecription IS NOT NULL) OR (t1.XRefDecription IS NOT NULL AND t2.XRefDecription IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.XREF_NAME,t1.GOLDEN_RO_ID,t1.XREF_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_CROSS_REFERENCE t1, MST_CROSS_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,''INSERT'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CUSTOM_CODE_SET_CLM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,''DELETE'',''VALID'' FROM MST_CUSTOM_CODE_SET_CLM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUSTOM_CODE_SET_CLM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CUSTOM_CODE_SET_CLM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Column_Type,t1.Logical_Column_Name,t1.Physical_Column_Name,t1.Column_Sequence,''UPDATE'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1, MST_CUSTOM_CODE_SET_CLM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Column_Type <> t2.Column_Type OR ( t1.Column_Type IS NULL AND t2.Column_Type IS NOT NULL) OR (t1.Column_Type IS NOT NULL AND t2.Column_Type IS NULL)) OR (t1.Logical_Column_Name <> t2.Logical_Column_Name OR ( t1.Logical_Column_Name IS NULL AND t2.Logical_Column_Name IS NOT NULL) OR (t1.Logical_Column_Name IS NOT NULL AND t2.Logical_Column_Name IS NULL)) OR (t1.Physical_Column_Name <> t2.Physical_Column_Name OR ( t1.Physical_Column_Name IS NULL AND t2.Physical_Column_Name IS NOT NULL) OR (t1.Physical_Column_Name IS NOT NULL AND t2.Physical_Column_Name IS NULL)) OR (t1.Column_Sequence <> t2.Column_Sequence OR ( t1.Column_Sequence IS NULL AND t2.Column_Sequence IS NOT NULL) OR (t1.Column_Sequence IS NOT NULL AND t2.Column_Sequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Column_Type,t1.Logical_Column_Name,t1.Physical_Column_Name,t1.Column_Sequence,''ACTIVATE'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1, MST_CUSTOM_CODE_SET_CLM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_CLCTN_TYPE', 'INSERT INTO NC_DATA_CLCTN_TYPE ( SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_DATA_CLCTN_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_CLCTN_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_CLCTN_TYPE_CD = t2.DATA_CLCTN_TYPE_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_CLCTN_TYPE', 'INSERT INTO NC_DATA_CLCTN_TYPE ( SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM DATA_CLCTN_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_CLCTN_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_CLCTN_TYPE_CD = t2.DATA_CLCTN_TYPE_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_CLCTN_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_CLCTN_TYPE_CD = t2.DATA_CLCTN_TYPE_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_CLCTN_TYPE', 'INSERT INTO NC_DATA_CLCTN_TYPE ( SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_CLCTN_TYPE_CD,t1.DATA_CLCTN_TYPE_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_DATA_CLCTN_TYPE t1, DATA_CLCTN_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_CLCTN_TYPE_CD = t2.DATA_CLCTN_TYPE_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DATA_CLCTN_TYPE_CD <> t2.DATA_CLCTN_TYPE_CD OR ( t1.DATA_CLCTN_TYPE_CD IS NULL AND t2.DATA_CLCTN_TYPE_CD IS NOT NULL) OR (t1.DATA_CLCTN_TYPE_CD IS NOT NULL AND t2.DATA_CLCTN_TYPE_CD IS NULL)) OR (t1.DATA_CLCTN_TYPE_NM <> t2.DATA_CLCTN_TYPE_NM OR ( t1.DATA_CLCTN_TYPE_NM IS NULL AND t2.DATA_CLCTN_TYPE_NM IS NOT NULL) OR (t1.DATA_CLCTN_TYPE_NM IS NOT NULL AND t2.DATA_CLCTN_TYPE_NM IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_CLCTN_TYPE', 'INSERT INTO NC_DATA_CLCTN_TYPE ( SCENARIO_ID,DATA_CLCTN_TYPE_CD,DATA_CLCTN_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_CLCTN_TYPE_CD,t1.DATA_CLCTN_TYPE_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_DATA_CLCTN_TYPE t1, DATA_CLCTN_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_CLCTN_TYPE_CD = t2.DATA_CLCTN_TYPE_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE', 'INSERT INTO NC_DATA_SRCE ( SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,''INSERT'',''VALID'' FROM IN_DATA_SRCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE', 'INSERT INTO NC_DATA_SRCE ( SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,''DELETE'',''VALID'' FROM DATA_SRCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE', 'INSERT INTO NC_DATA_SRCE ( SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.DATA_SRCE_NAME,t1.DATA_SUPLR_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.DATA_SOURCE_DESC,t1.DATA_SOURCE_TYPE,t1.SRC_BUS_NM,t1.PII_DATA_IND,''UPDATE'',''VALID'' FROM IN_DATA_SRCE t1, DATA_SRCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.DATA_SRCE_NAME <> t2.DATA_SRCE_NAME OR ( t1.DATA_SRCE_NAME IS NULL AND t2.DATA_SRCE_NAME IS NOT NULL) OR (t1.DATA_SRCE_NAME IS NOT NULL AND t2.DATA_SRCE_NAME IS NULL)) OR (t1.DATA_SUPLR_NBR <> t2.DATA_SUPLR_NBR OR ( t1.DATA_SUPLR_NBR IS NULL AND t2.DATA_SUPLR_NBR IS NOT NULL) OR (t1.DATA_SUPLR_NBR IS NOT NULL AND t2.DATA_SUPLR_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.DATA_SOURCE_DESC <> t2.DATA_SOURCE_DESC OR ( t1.DATA_SOURCE_DESC IS NULL AND t2.DATA_SOURCE_DESC IS NOT NULL) OR (t1.DATA_SOURCE_DESC IS NOT NULL AND t2.DATA_SOURCE_DESC IS NULL)) OR (t1.DATA_SOURCE_TYPE <> t2.DATA_SOURCE_TYPE OR ( t1.DATA_SOURCE_TYPE IS NULL AND t2.DATA_SOURCE_TYPE IS NOT NULL) OR (t1.DATA_SOURCE_TYPE IS NOT NULL AND t2.DATA_SOURCE_TYPE IS NULL)) OR (t1.SRC_BUS_NM <> t2.SRC_BUS_NM OR ( t1.SRC_BUS_NM IS NULL AND t2.SRC_BUS_NM IS NOT NULL) OR (t1.SRC_BUS_NM IS NOT NULL AND t2.SRC_BUS_NM IS NULL)) OR (t1.PII_DATA_IND <> t2.PII_DATA_IND OR ( t1.PII_DATA_IND IS NULL AND t2.PII_DATA_IND IS NOT NULL) OR (t1.PII_DATA_IND IS NOT NULL AND t2.PII_DATA_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE', 'INSERT INTO NC_DATA_SRCE ( SCENARIO_ID,DATA_SRCE_NBR,DATA_SRCE_NAME,DATA_SUPLR_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,DATA_SOURCE_DESC,DATA_SOURCE_TYPE,SRC_BUS_NM,PII_DATA_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.DATA_SRCE_NAME,t1.DATA_SUPLR_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.DATA_SOURCE_DESC,t1.DATA_SOURCE_TYPE,t1.SRC_BUS_NM,t1.PII_DATA_IND,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE t1, DATA_SRCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_MKTNG_PGM', 'INSERT INTO NC_DATA_SRCE_MKTNG_PGM ( SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,''INSERT'',''VALID'' FROM IN_DATA_SRCE_MKTNG_PGM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE_MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_MKTNG_PGM', 'INSERT INTO NC_DATA_SRCE_MKTNG_PGM ( SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,''DELETE'',''VALID'' FROM DATA_SRCE_MKTNG_PGM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_MKTNG_PGM', 'INSERT INTO NC_DATA_SRCE_MKTNG_PGM ( SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.MKTNG_PGM_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.PREF_SRC_IND,t1.WEBSITE_REGIS_IND,t1.DTC_REGIS_PRIOR_IND,''UPDATE'',''VALID'' FROM IN_DATA_SRCE_MKTNG_PGM t1, DATA_SRCE_MKTNG_PGM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.PREF_SRC_IND <> t2.PREF_SRC_IND OR ( t1.PREF_SRC_IND IS NULL AND t2.PREF_SRC_IND IS NOT NULL) OR (t1.PREF_SRC_IND IS NOT NULL AND t2.PREF_SRC_IND IS NULL)) OR (t1.WEBSITE_REGIS_IND <> t2.WEBSITE_REGIS_IND OR ( t1.WEBSITE_REGIS_IND IS NULL AND t2.WEBSITE_REGIS_IND IS NOT NULL) OR (t1.WEBSITE_REGIS_IND IS NOT NULL AND t2.WEBSITE_REGIS_IND IS NULL)) OR (t1.DTC_REGIS_PRIOR_IND <> t2.DTC_REGIS_PRIOR_IND OR ( t1.DTC_REGIS_PRIOR_IND IS NULL AND t2.DTC_REGIS_PRIOR_IND IS NOT NULL) OR (t1.DTC_REGIS_PRIOR_IND IS NOT NULL AND t2.DTC_REGIS_PRIOR_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_MKTNG_PGM', 'INSERT INTO NC_DATA_SRCE_MKTNG_PGM ( SCENARIO_ID,DATA_SRCE_NBR,MKTNG_PGM_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,PREF_SRC_IND,WEBSITE_REGIS_IND,DTC_REGIS_PRIOR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.MKTNG_PGM_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.PREF_SRC_IND,t1.WEBSITE_REGIS_IND,t1.DTC_REGIS_PRIOR_IND,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE_MKTNG_PGM t1, DATA_SRCE_MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,''INSERT'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE_SUBS_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,''DELETE'',''VALID'' FROM DATA_SRCE_SUBS_OPT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE_SUBS_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE_SUBS_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.SUBSCRPTN_VERSION_NBR,t1.PARNTL_CNSNT_IND,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,''UPDATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT t1, DATA_SRCE_SUBS_OPT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) OR (t1.SUBSCRPTN_VERSION_NBR <> t2.SUBSCRPTN_VERSION_NBR OR ( t1.SUBSCRPTN_VERSION_NBR IS NULL AND t2.SUBSCRPTN_VERSION_NBR IS NOT NULL) OR (t1.SUBSCRPTN_VERSION_NBR IS NOT NULL AND t2.SUBSCRPTN_VERSION_NBR IS NULL)) OR (t1.PARNTL_CNSNT_IND <> t2.PARNTL_CNSNT_IND OR ( t1.PARNTL_CNSNT_IND IS NULL AND t2.PARNTL_CNSNT_IND IS NOT NULL) OR (t1.PARNTL_CNSNT_IND IS NOT NULL AND t2.PARNTL_CNSNT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_START_DATE <> t2.SUBSCRPTN_OPT_START_DATE OR ( t1.SUBSCRPTN_OPT_START_DATE IS NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_START_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NULL)) OR (t1.SUBSCRPTN_OPT_END_DATE <> t2.SUBSCRPTN_OPT_END_DATE OR ( t1.SUBSCRPTN_OPT_END_DATE IS NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_END_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SUBSCRPTN_VERSION_NBR,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.SUBSCRPTN_VERSION_NBR,t1.PARNTL_CNSNT_IND,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT t1, DATA_SRCE_SUBS_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,''INSERT'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE_SUBS_OPT_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.IN_id = t2.IN_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,''DELETE'',''VALID'' FROM DATA_SRCE_SUBS_OPT_IN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE_SUBS_OPT_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.IN_id = t2.IN_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE_SUBS_OPT_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.IN_id = t2.IN_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.CR_NUM,t1.CR_DESC,t1.ENG_TXT,t1.LOCAL_TXT,t1.BRAND_CODE,t1.COMMENTS,t1.STATUS,t1.SUBSCRPTN_VERSION_NBR,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.IN_id,''UPDATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN t1, DATA_SRCE_SUBS_OPT_IN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.IN_id = t2.IN_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.CR_NUM <> t2.CR_NUM OR ( t1.CR_NUM IS NULL AND t2.CR_NUM IS NOT NULL) OR (t1.CR_NUM IS NOT NULL AND t2.CR_NUM IS NULL)) OR (t1.CR_DESC <> t2.CR_DESC OR ( t1.CR_DESC IS NULL AND t2.CR_DESC IS NOT NULL) OR (t1.CR_DESC IS NOT NULL AND t2.CR_DESC IS NULL)) OR (t1.ENG_TXT <> t2.ENG_TXT OR ( t1.ENG_TXT IS NULL AND t2.ENG_TXT IS NOT NULL) OR (t1.ENG_TXT IS NOT NULL AND t2.ENG_TXT IS NULL)) OR (t1.LOCAL_TXT <> t2.LOCAL_TXT OR ( t1.LOCAL_TXT IS NULL AND t2.LOCAL_TXT IS NOT NULL) OR (t1.LOCAL_TXT IS NOT NULL AND t2.LOCAL_TXT IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.COMMENTS <> t2.COMMENTS OR ( t1.COMMENTS IS NULL AND t2.COMMENTS IS NOT NULL) OR (t1.COMMENTS IS NOT NULL AND t2.COMMENTS IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) OR (t1.SUBSCRPTN_VERSION_NBR <> t2.SUBSCRPTN_VERSION_NBR OR ( t1.SUBSCRPTN_VERSION_NBR IS NULL AND t2.SUBSCRPTN_VERSION_NBR IS NOT NULL) OR (t1.SUBSCRPTN_VERSION_NBR IS NOT NULL AND t2.SUBSCRPTN_VERSION_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_START_DATE <> t2.SUBSCRPTN_OPT_START_DATE OR ( t1.SUBSCRPTN_OPT_START_DATE IS NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_START_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NULL)) OR (t1.SUBSCRPTN_OPT_END_DATE <> t2.SUBSCRPTN_OPT_END_DATE OR ( t1.SUBSCRPTN_OPT_END_DATE IS NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_END_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NULL)) OR (t1.CNTCT_CHANL_TYPE_CODE <> t2.CNTCT_CHANL_TYPE_CODE OR ( t1.CNTCT_CHANL_TYPE_CODE IS NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_CODE IS NOT NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_FREQ_TXT <> t2.SUBSCRPTN_OPT_FREQ_TXT OR ( t1.SUBSCRPTN_OPT_FREQ_TXT IS NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) OR (t1.IN_id <> t2.IN_id OR ( t1.IN_id IS NULL AND t2.IN_id IS NOT NULL) OR (t1.IN_id IS NOT NULL AND t2.IN_id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,IN_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.CR_NUM,t1.CR_DESC,t1.ENG_TXT,t1.LOCAL_TXT,t1.BRAND_CODE,t1.COMMENTS,t1.STATUS,t1.SUBSCRPTN_VERSION_NBR,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.IN_id,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN t1, DATA_SRCE_SUBS_OPT_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.IN_id = t2.IN_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN_DMY', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN_DMY ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,''INSERT'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN_DMY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE_SUBS_OPT_IN_DMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.DMY_id = t2.DMY_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN_DMY', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN_DMY ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,''DELETE'',''VALID'' FROM DATA_SRCE_SUBS_OPT_IN_DMY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE_SUBS_OPT_IN_DMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.DMY_id = t2.DMY_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE_SUBS_OPT_IN_DMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.DMY_id = t2.DMY_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN_DMY', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN_DMY ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.CR_NUM,t1.CR_DESC,t1.ENG_TXT,t1.LOCAL_TXT,t1.BRAND_CODE,t1.COMMENTS,t1.STATUS,t1.SUBSCRPTN_VERSION_NBR,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.DMY_id,''UPDATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN_DMY t1, DATA_SRCE_SUBS_OPT_IN_DMY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.DMY_id = t2.DMY_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.CR_NUM <> t2.CR_NUM OR ( t1.CR_NUM IS NULL AND t2.CR_NUM IS NOT NULL) OR (t1.CR_NUM IS NOT NULL AND t2.CR_NUM IS NULL)) OR (t1.CR_DESC <> t2.CR_DESC OR ( t1.CR_DESC IS NULL AND t2.CR_DESC IS NOT NULL) OR (t1.CR_DESC IS NOT NULL AND t2.CR_DESC IS NULL)) OR (t1.ENG_TXT <> t2.ENG_TXT OR ( t1.ENG_TXT IS NULL AND t2.ENG_TXT IS NOT NULL) OR (t1.ENG_TXT IS NOT NULL AND t2.ENG_TXT IS NULL)) OR (t1.LOCAL_TXT <> t2.LOCAL_TXT OR ( t1.LOCAL_TXT IS NULL AND t2.LOCAL_TXT IS NOT NULL) OR (t1.LOCAL_TXT IS NOT NULL AND t2.LOCAL_TXT IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.COMMENTS <> t2.COMMENTS OR ( t1.COMMENTS IS NULL AND t2.COMMENTS IS NOT NULL) OR (t1.COMMENTS IS NOT NULL AND t2.COMMENTS IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) OR (t1.SUBSCRPTN_VERSION_NBR <> t2.SUBSCRPTN_VERSION_NBR OR ( t1.SUBSCRPTN_VERSION_NBR IS NULL AND t2.SUBSCRPTN_VERSION_NBR IS NOT NULL) OR (t1.SUBSCRPTN_VERSION_NBR IS NOT NULL AND t2.SUBSCRPTN_VERSION_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_START_DATE <> t2.SUBSCRPTN_OPT_START_DATE OR ( t1.SUBSCRPTN_OPT_START_DATE IS NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_START_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_START_DATE IS NULL)) OR (t1.SUBSCRPTN_OPT_END_DATE <> t2.SUBSCRPTN_OPT_END_DATE OR ( t1.SUBSCRPTN_OPT_END_DATE IS NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NOT NULL) OR (t1.SUBSCRPTN_OPT_END_DATE IS NOT NULL AND t2.SUBSCRPTN_OPT_END_DATE IS NULL)) OR (t1.CNTCT_CHANL_TYPE_CODE <> t2.CNTCT_CHANL_TYPE_CODE OR ( t1.CNTCT_CHANL_TYPE_CODE IS NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_CODE IS NOT NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_FREQ_TXT <> t2.SUBSCRPTN_OPT_FREQ_TXT OR ( t1.SUBSCRPTN_OPT_FREQ_TXT IS NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) OR (t1.DMY_id <> t2.DMY_id OR ( t1.DMY_id IS NULL AND t2.DMY_id IS NOT NULL) OR (t1.DMY_id IS NOT NULL AND t2.DMY_id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_IN_DMY', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_IN_DMY ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,CR_NUM,CR_DESC,ENG_TXT,LOCAL_TXT,BRAND_CODE,COMMENTS,STATUS,SUBSCRPTN_VERSION_NBR,SUBSCRPTN_OPT_START_DATE,SUBSCRPTN_OPT_END_DATE,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,DMY_id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.CR_NUM,t1.CR_DESC,t1.ENG_TXT,t1.LOCAL_TXT,t1.BRAND_CODE,t1.COMMENTS,t1.STATUS,t1.SUBSCRPTN_VERSION_NBR,t1.SUBSCRPTN_OPT_START_DATE,t1.SUBSCRPTN_OPT_END_DATE,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,t1.DMY_id,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_IN_DMY t1, DATA_SRCE_SUBS_OPT_IN_DMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.DMY_id = t2.DMY_id AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_TYPE', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_TYPE ( SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,''INSERT'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DATA_SRCE_SUBS_OPT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_TYPE', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_TYPE ( SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,''DELETE'',''VALID'' FROM DATA_SRCE_SUBS_OPT_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DATA_SRCE_SUBS_OPT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DATA_SRCE_SUBS_OPT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_TYPE', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_TYPE ( SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,''UPDATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_TYPE t1, DATA_SRCE_SUBS_OPT_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNTCT_CHANL_TYPE_CODE <> t2.CNTCT_CHANL_TYPE_CODE OR ( t1.CNTCT_CHANL_TYPE_CODE IS NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_CODE IS NOT NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_FREQ_TXT <> t2.SUBSCRPTN_OPT_FREQ_TXT OR ( t1.SUBSCRPTN_OPT_FREQ_TXT IS NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DATA_SRCE_SUBS_OPT_TYPE', 'INSERT INTO NC_DATA_SRCE_SUBS_OPT_TYPE ( SCENARIO_ID,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_CHANL_TYPE_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_FREQ_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTCT_CHANL_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_FREQ_TXT,''ACTIVATE'',''VALID'' FROM IN_DATA_SRCE_SUBS_OPT_TYPE t1, DATA_SRCE_SUBS_OPT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DELETE_REGIS_RUN_LOG_HIST', 'INSERT INTO NC_DELETE_REGIS_RUN_LOG_HIST ( SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,''INSERT'',''VALID'' FROM IN_DELETE_REGIS_RUN_LOG_HIST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DELETE_REGIS_RUN_LOG_HIST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DELETE_REGIS_RUN_LOG_HIST', 'INSERT INTO NC_DELETE_REGIS_RUN_LOG_HIST ( SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,''DELETE'',''VALID'' FROM DELETE_REGIS_RUN_LOG_HIST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DELETE_REGIS_RUN_LOG_HIST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DELETE_REGIS_RUN_LOG_HIST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DELETE_REGIS_RUN_LOG_HIST', 'INSERT INTO NC_DELETE_REGIS_RUN_LOG_HIST ( SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_SOURCE_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.REGIS_CNSMR_ID_VAL,t1.SOURCE_ID,t1.SR_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.LYLTY_PGM_NBR,t1.LYLTY_ACCT_NUM,t1.GDPR_CASE_ID,''UPDATE'',''VALID'' FROM IN_DELETE_REGIS_RUN_LOG_HIST t1, DELETE_REGIS_RUN_LOG_HIST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.SOURCE_ID <> t2.SOURCE_ID OR ( t1.SOURCE_ID IS NULL AND t2.SOURCE_ID IS NOT NULL) OR (t1.SOURCE_ID IS NOT NULL AND t2.SOURCE_ID IS NULL)) OR (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) OR (t1.LYLTY_PGM_NBR <> t2.LYLTY_PGM_NBR OR ( t1.LYLTY_PGM_NBR IS NULL AND t2.LYLTY_PGM_NBR IS NOT NULL) OR (t1.LYLTY_PGM_NBR IS NOT NULL AND t2.LYLTY_PGM_NBR IS NULL)) OR (t1.LYLTY_ACCT_NUM <> t2.LYLTY_ACCT_NUM OR ( t1.LYLTY_ACCT_NUM IS NULL AND t2.LYLTY_ACCT_NUM IS NOT NULL) OR (t1.LYLTY_ACCT_NUM IS NOT NULL AND t2.LYLTY_ACCT_NUM IS NULL)) OR (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DELETE_REGIS_RUN_LOG_HIST', 'INSERT INTO NC_DELETE_REGIS_RUN_LOG_HIST ( SCENARIO_ID,LOG_SOURCE_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SR_NBR,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,LYLTY_PGM_NBR,LYLTY_ACCT_NUM,GDPR_CASE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_SOURCE_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.REGIS_CNSMR_ID_VAL,t1.SOURCE_ID,t1.SR_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.LYLTY_PGM_NBR,t1.LYLTY_ACCT_NUM,t1.GDPR_CASE_ID,''ACTIVATE'',''VALID'' FROM IN_DELETE_REGIS_RUN_LOG_HIST t1, DELETE_REGIS_RUN_LOG_HIST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND', 'INSERT INTO NC_DPEND ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,''INSERT'',''VALID'' FROM IN_DPEND t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DPEND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND', 'INSERT INTO NC_DPEND ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,''DELETE'',''VALID'' FROM DPEND t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DPEND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DPEND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND', 'INSERT INTO NC_DPEND ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.DPEND_NAME,t1.DPEND_TYPE_CODE,t1.DPEND_SEQ_NBR,t1.DPEND_BRTH_DATE,t1.DPEND_AGE_NBR,t1.DPEND_GENDR_IND,t1.MKTNG_PGM_NBR,t1.DECEASED_IND,t1.LEGAL_ENT_NBR,t1.OPTED_DPEND_IND,''UPDATE'',''VALID'' FROM IN_DPEND t1, DPEND t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.DPEND_NAME <> t2.DPEND_NAME OR ( t1.DPEND_NAME IS NULL AND t2.DPEND_NAME IS NOT NULL) OR (t1.DPEND_NAME IS NOT NULL AND t2.DPEND_NAME IS NULL)) OR (t1.DPEND_TYPE_CODE <> t2.DPEND_TYPE_CODE OR ( t1.DPEND_TYPE_CODE IS NULL AND t2.DPEND_TYPE_CODE IS NOT NULL) OR (t1.DPEND_TYPE_CODE IS NOT NULL AND t2.DPEND_TYPE_CODE IS NULL)) OR (t1.DPEND_SEQ_NBR <> t2.DPEND_SEQ_NBR OR ( t1.DPEND_SEQ_NBR IS NULL AND t2.DPEND_SEQ_NBR IS NOT NULL) OR (t1.DPEND_SEQ_NBR IS NOT NULL AND t2.DPEND_SEQ_NBR IS NULL)) OR (t1.DPEND_BRTH_DATE <> t2.DPEND_BRTH_DATE OR ( t1.DPEND_BRTH_DATE IS NULL AND t2.DPEND_BRTH_DATE IS NOT NULL) OR (t1.DPEND_BRTH_DATE IS NOT NULL AND t2.DPEND_BRTH_DATE IS NULL)) OR (t1.DPEND_AGE_NBR <> t2.DPEND_AGE_NBR OR ( t1.DPEND_AGE_NBR IS NULL AND t2.DPEND_AGE_NBR IS NOT NULL) OR (t1.DPEND_AGE_NBR IS NOT NULL AND t2.DPEND_AGE_NBR IS NULL)) OR (t1.DPEND_GENDR_IND <> t2.DPEND_GENDR_IND OR ( t1.DPEND_GENDR_IND IS NULL AND t2.DPEND_GENDR_IND IS NOT NULL) OR (t1.DPEND_GENDR_IND IS NOT NULL AND t2.DPEND_GENDR_IND IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.DECEASED_IND <> t2.DECEASED_IND OR ( t1.DECEASED_IND IS NULL AND t2.DECEASED_IND IS NOT NULL) OR (t1.DECEASED_IND IS NOT NULL AND t2.DECEASED_IND IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.OPTED_DPEND_IND <> t2.OPTED_DPEND_IND OR ( t1.OPTED_DPEND_IND IS NULL AND t2.OPTED_DPEND_IND IS NOT NULL) OR (t1.OPTED_DPEND_IND IS NOT NULL AND t2.OPTED_DPEND_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND', 'INSERT INTO NC_DPEND ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_NAME,DPEND_TYPE_CODE,DPEND_SEQ_NBR,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,OPTED_DPEND_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.DPEND_NAME,t1.DPEND_TYPE_CODE,t1.DPEND_SEQ_NBR,t1.DPEND_BRTH_DATE,t1.DPEND_AGE_NBR,t1.DPEND_GENDR_IND,t1.MKTNG_PGM_NBR,t1.DECEASED_IND,t1.LEGAL_ENT_NBR,t1.OPTED_DPEND_IND,''ACTIVATE'',''VALID'' FROM IN_DPEND t1, DPEND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_STG', 'INSERT INTO NC_DPEND_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_DPEND_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DPEND_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_STG', 'INSERT INTO NC_DPEND_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''DELETE'',''VALID'' FROM DPEND_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DPEND_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DPEND_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_STG', 'INSERT INTO NC_DPEND_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DPEND_SEQ_NBR,t1.DPEND_NAME,t1.DPEND_GENDR_IND,t1.DPEND_BRTH_DATE,t1.DPEND_AGE_NBR,t1.DPEND_TYPE_CODE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_DPEND_STG t1, DPEND_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DPEND_SEQ_NBR <> t2.DPEND_SEQ_NBR OR ( t1.DPEND_SEQ_NBR IS NULL AND t2.DPEND_SEQ_NBR IS NOT NULL) OR (t1.DPEND_SEQ_NBR IS NOT NULL AND t2.DPEND_SEQ_NBR IS NULL)) OR (t1.DPEND_NAME <> t2.DPEND_NAME OR ( t1.DPEND_NAME IS NULL AND t2.DPEND_NAME IS NOT NULL) OR (t1.DPEND_NAME IS NOT NULL AND t2.DPEND_NAME IS NULL)) OR (t1.DPEND_GENDR_IND <> t2.DPEND_GENDR_IND OR ( t1.DPEND_GENDR_IND IS NULL AND t2.DPEND_GENDR_IND IS NOT NULL) OR (t1.DPEND_GENDR_IND IS NOT NULL AND t2.DPEND_GENDR_IND IS NULL)) OR (t1.DPEND_BRTH_DATE <> t2.DPEND_BRTH_DATE OR ( t1.DPEND_BRTH_DATE IS NULL AND t2.DPEND_BRTH_DATE IS NOT NULL) OR (t1.DPEND_BRTH_DATE IS NOT NULL AND t2.DPEND_BRTH_DATE IS NULL)) OR (t1.DPEND_AGE_NBR <> t2.DPEND_AGE_NBR OR ( t1.DPEND_AGE_NBR IS NULL AND t2.DPEND_AGE_NBR IS NOT NULL) OR (t1.DPEND_AGE_NBR IS NOT NULL AND t2.DPEND_AGE_NBR IS NULL)) OR (t1.DPEND_TYPE_CODE <> t2.DPEND_TYPE_CODE OR ( t1.DPEND_TYPE_CODE IS NULL AND t2.DPEND_TYPE_CODE IS NOT NULL) OR (t1.DPEND_TYPE_CODE IS NOT NULL AND t2.DPEND_TYPE_CODE IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_STG', 'INSERT INTO NC_DPEND_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,DPEND_NAME,DPEND_GENDR_IND,DPEND_BRTH_DATE,DPEND_AGE_NBR,DPEND_TYPE_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DPEND_SEQ_NBR,t1.DPEND_NAME,t1.DPEND_GENDR_IND,t1.DPEND_BRTH_DATE,t1.DPEND_AGE_NBR,t1.DPEND_TYPE_CODE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_DPEND_STG t1, DPEND_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT', 'INSERT INTO NC_DPEND_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_DPEND_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DPEND_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT', 'INSERT INTO NC_DPEND_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM DPEND_TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DPEND_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DPEND_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT', 'INSERT INTO NC_DPEND_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.DPEND_SEQ_NBR,t1.TRT_NBR,t1.DPEND_TRT_DATE,t1.DPEND_TRT_TXT,t1.DPEND_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_DPEND_TRT t1, DPEND_TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.DPEND_SEQ_NBR <> t2.DPEND_SEQ_NBR OR ( t1.DPEND_SEQ_NBR IS NULL AND t2.DPEND_SEQ_NBR IS NOT NULL) OR (t1.DPEND_SEQ_NBR IS NOT NULL AND t2.DPEND_SEQ_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.DPEND_TRT_DATE <> t2.DPEND_TRT_DATE OR ( t1.DPEND_TRT_DATE IS NULL AND t2.DPEND_TRT_DATE IS NOT NULL) OR (t1.DPEND_TRT_DATE IS NOT NULL AND t2.DPEND_TRT_DATE IS NULL)) OR (t1.DPEND_TRT_TXT <> t2.DPEND_TRT_TXT OR ( t1.DPEND_TRT_TXT IS NULL AND t2.DPEND_TRT_TXT IS NOT NULL) OR (t1.DPEND_TRT_TXT IS NOT NULL AND t2.DPEND_TRT_TXT IS NULL)) OR (t1.DPEND_TRT_SEQ_NBR <> t2.DPEND_TRT_SEQ_NBR OR ( t1.DPEND_TRT_SEQ_NBR IS NULL AND t2.DPEND_TRT_SEQ_NBR IS NOT NULL) OR (t1.DPEND_TRT_SEQ_NBR IS NOT NULL AND t2.DPEND_TRT_SEQ_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT', 'INSERT INTO NC_DPEND_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.DPEND_SEQ_NBR,t1.TRT_NBR,t1.DPEND_TRT_DATE,t1.DPEND_TRT_TXT,t1.DPEND_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_DPEND_TRT t1, DPEND_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT_STG', 'INSERT INTO NC_DPEND_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_DPEND_TRT_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DPEND_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT_STG', 'INSERT INTO NC_DPEND_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''DELETE'',''VALID'' FROM DPEND_TRT_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DPEND_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DPEND_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT_STG', 'INSERT INTO NC_DPEND_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DPEND_SEQ_NBR,t1.TRT_NBR,t1.DPEND_TRT_DATE,t1.DPEND_TRT_INTEGER,t1.DPEND_TRT_TXT,t1.DPEND_TRT_SEQ_NBR,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_DPEND_TRT_STG t1, DPEND_TRT_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DPEND_SEQ_NBR <> t2.DPEND_SEQ_NBR OR ( t1.DPEND_SEQ_NBR IS NULL AND t2.DPEND_SEQ_NBR IS NOT NULL) OR (t1.DPEND_SEQ_NBR IS NOT NULL AND t2.DPEND_SEQ_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.DPEND_TRT_DATE <> t2.DPEND_TRT_DATE OR ( t1.DPEND_TRT_DATE IS NULL AND t2.DPEND_TRT_DATE IS NOT NULL) OR (t1.DPEND_TRT_DATE IS NOT NULL AND t2.DPEND_TRT_DATE IS NULL)) OR (t1.DPEND_TRT_INTEGER <> t2.DPEND_TRT_INTEGER OR ( t1.DPEND_TRT_INTEGER IS NULL AND t2.DPEND_TRT_INTEGER IS NOT NULL) OR (t1.DPEND_TRT_INTEGER IS NOT NULL AND t2.DPEND_TRT_INTEGER IS NULL)) OR (t1.DPEND_TRT_TXT <> t2.DPEND_TRT_TXT OR ( t1.DPEND_TRT_TXT IS NULL AND t2.DPEND_TRT_TXT IS NOT NULL) OR (t1.DPEND_TRT_TXT IS NOT NULL AND t2.DPEND_TRT_TXT IS NULL)) OR (t1.DPEND_TRT_SEQ_NBR <> t2.DPEND_TRT_SEQ_NBR OR ( t1.DPEND_TRT_SEQ_NBR IS NULL AND t2.DPEND_TRT_SEQ_NBR IS NOT NULL) OR (t1.DPEND_TRT_SEQ_NBR IS NOT NULL AND t2.DPEND_TRT_SEQ_NBR IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TRT_STG', 'INSERT INTO NC_DPEND_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DPEND_SEQ_NBR,TRT_NBR,DPEND_TRT_DATE,DPEND_TRT_INTEGER,DPEND_TRT_TXT,DPEND_TRT_SEQ_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DPEND_SEQ_NBR,t1.TRT_NBR,t1.DPEND_TRT_DATE,t1.DPEND_TRT_INTEGER,t1.DPEND_TRT_TXT,t1.DPEND_TRT_SEQ_NBR,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_DPEND_TRT_STG t1, DPEND_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TYPE', 'INSERT INTO NC_DPEND_TYPE ( SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_DPEND_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DPEND_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DPEND_TYPE_CODE = t2.DPEND_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TYPE', 'INSERT INTO NC_DPEND_TYPE ( SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM DPEND_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DPEND_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DPEND_TYPE_CODE = t2.DPEND_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DPEND_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DPEND_TYPE_CODE = t2.DPEND_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TYPE', 'INSERT INTO NC_DPEND_TYPE ( SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DPEND_TYPE_CODE,t1.DPEND_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_DPEND_TYPE t1, DPEND_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DPEND_TYPE_CODE = t2.DPEND_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DPEND_TYPE_CODE <> t2.DPEND_TYPE_CODE OR ( t1.DPEND_TYPE_CODE IS NULL AND t2.DPEND_TYPE_CODE IS NOT NULL) OR (t1.DPEND_TYPE_CODE IS NOT NULL AND t2.DPEND_TYPE_CODE IS NULL)) OR (t1.DPEND_TYPE_NAME <> t2.DPEND_TYPE_NAME OR ( t1.DPEND_TYPE_NAME IS NULL AND t2.DPEND_TYPE_NAME IS NOT NULL) OR (t1.DPEND_TYPE_NAME IS NOT NULL AND t2.DPEND_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DPEND_TYPE', 'INSERT INTO NC_DPEND_TYPE ( SCENARIO_ID,DPEND_TYPE_CODE,DPEND_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DPEND_TYPE_CODE,t1.DPEND_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_DPEND_TYPE t1, DPEND_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DPEND_TYPE_CODE = t2.DPEND_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DQRM_EMAIL', 'INSERT INTO NC_DQRM_EMAIL ( SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,''INSERT'',''VALID'' FROM IN_DQRM_EMAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM DQRM_Email t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_ADDRS_TXT = t2.EMAIL_ADDRS_TXT AND t1.MAIL_TYPE = t2.MAIL_TYPE AND t1.REGION_CODE = t2.REGION_CODE AND t1.RULE_NUMBER = t2.RULE_NUMBER )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DQRM_EMAIL', 'INSERT INTO NC_DQRM_EMAIL ( SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,''DELETE'',''VALID'' FROM DQRM_Email t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DQRM_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_ADDRS_TXT = t2.EMAIL_ADDRS_TXT AND t1.MAIL_TYPE = t2.MAIL_TYPE AND t1.REGION_CODE = t2.REGION_CODE AND t1.RULE_NUMBER = t2.RULE_NUMBER ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DQRM_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_ADDRS_TXT = t2.EMAIL_ADDRS_TXT AND t1.MAIL_TYPE = t2.MAIL_TYPE AND t1.REGION_CODE = t2.REGION_CODE AND t1.RULE_NUMBER = t2.RULE_NUMBER));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DQRM_EMAIL', 'INSERT INTO NC_DQRM_EMAIL ( SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGION_CODE,t1.MAIL_TYPE,t1.EMAIL_ADDR_TXT,t1.RULE_NUMBER,''UPDATE'',''VALID'' FROM IN_DQRM_EMAIL t1, DQRM_Email t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_ADDRS_TXT = t2.EMAIL_ADDRS_TXT AND t1.MAIL_TYPE = t2.MAIL_TYPE AND t1.REGION_CODE = t2.REGION_CODE AND t1.RULE_NUMBER = t2.RULE_NUMBER AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGION_CODE <> t2.REGION_CODE OR ( t1.REGION_CODE IS NULL AND t2.REGION_CODE IS NOT NULL) OR (t1.REGION_CODE IS NOT NULL AND t2.REGION_CODE IS NULL)) OR (t1.MAIL_TYPE <> t2.MAIL_TYPE OR ( t1.MAIL_TYPE IS NULL AND t2.MAIL_TYPE IS NOT NULL) OR (t1.MAIL_TYPE IS NOT NULL AND t2.MAIL_TYPE IS NULL)) OR (t1.EMAIL_ADDRS_TXT <> t2.EMAIL_ADDRS_TXT OR ( t1.EMAIL_ADDRS_TXT IS NULL AND t2.EMAIL_ADDRS_TXT IS NOT NULL) OR (t1.EMAIL_ADDRS_TXT IS NOT NULL AND t2.EMAIL_ADDRS_TXT IS NULL)) OR (t1.RULE_NUMBER <> t2.RULE_NUMBER OR ( t1.RULE_NUMBER IS NULL AND t2.RULE_NUMBER IS NOT NULL) OR (t1.RULE_NUMBER IS NOT NULL AND t2.RULE_NUMBER IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DQRM_EMAIL', 'INSERT INTO NC_DQRM_EMAIL ( SCENARIO_ID,REGION_CODE,MAIL_TYPE,EMAIL_ADDR_TXT,RULE_NUMBER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGION_CODE,t1.MAIL_TYPE,t1.EMAIL_ADDR_TXT,t1.RULE_NUMBER,''ACTIVATE'',''VALID'' FROM IN_DQRM_EMAIL t1, DQRM_Email t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_ADDRS_TXT = t2.EMAIL_ADDRS_TXT AND t1.MAIL_TYPE = t2.MAIL_TYPE AND t1.REGION_CODE = t2.REGION_CODE AND t1.RULE_NUMBER = t2.RULE_NUMBER AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_DOMAIN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_DOMAIN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_DOMAIN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DOMAIN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DOMAIN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Domain_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_DOMAIN t1, MST_DOMAIN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Domain_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_DOMAIN t1, MST_DOMAIN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EMAIL_FORMT', 'INSERT INTO NC_EMAIL_FORMT ( SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_EMAIL_FORMT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM EMAIL_FORMT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_FORMT_CODE = t2.EMAIL_FORMT_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EMAIL_FORMT', 'INSERT INTO NC_EMAIL_FORMT ( SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM EMAIL_FORMT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_EMAIL_FORMT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_FORMT_CODE = t2.EMAIL_FORMT_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_EMAIL_FORMT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_FORMT_CODE = t2.EMAIL_FORMT_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EMAIL_FORMT', 'INSERT INTO NC_EMAIL_FORMT ( SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_FORMT_CODE,t1.EMAIL_FORMT_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_EMAIL_FORMT t1, EMAIL_FORMT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_FORMT_CODE = t2.EMAIL_FORMT_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EMAIL_FORMT_CODE <> t2.EMAIL_FORMT_CODE OR ( t1.EMAIL_FORMT_CODE IS NULL AND t2.EMAIL_FORMT_CODE IS NOT NULL) OR (t1.EMAIL_FORMT_CODE IS NOT NULL AND t2.EMAIL_FORMT_CODE IS NULL)) OR (t1.EMAIL_FORMT_NAME <> t2.EMAIL_FORMT_NAME OR ( t1.EMAIL_FORMT_NAME IS NULL AND t2.EMAIL_FORMT_NAME IS NOT NULL) OR (t1.EMAIL_FORMT_NAME IS NOT NULL AND t2.EMAIL_FORMT_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EMAIL_FORMT', 'INSERT INTO NC_EMAIL_FORMT ( SCENARIO_ID,EMAIL_FORMT_CODE,EMAIL_FORMT_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_FORMT_CODE,t1.EMAIL_FORMT_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_EMAIL_FORMT t1, EMAIL_FORMT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EMAIL_FORMT_CODE = t2.EMAIL_FORMT_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENV_NM', 'INSERT INTO NC_ENV_NM ( SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,''INSERT'',''VALID'' FROM IN_ENV_NM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ENV_NM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ENV_NM = t2.ENV_NM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENV_NM', 'INSERT INTO NC_ENV_NM ( SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,''DELETE'',''VALID'' FROM ENV_NM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ENV_NM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ENV_NM = t2.ENV_NM ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ENV_NM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ENV_NM = t2.ENV_NM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENV_NM', 'INSERT INTO NC_ENV_NM ( SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENV_NM,t1.TRILLIUM_ASIA_NM,t1.TRILLIUM_AMERICA_NM,t1.TRILLIUM_EMEA_NM,''UPDATE'',''VALID'' FROM IN_ENV_NM t1, ENV_NM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ENV_NM = t2.ENV_NM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ENV_NM <> t2.ENV_NM OR ( t1.ENV_NM IS NULL AND t2.ENV_NM IS NOT NULL) OR (t1.ENV_NM IS NOT NULL AND t2.ENV_NM IS NULL)) OR (t1.TRILLIUM_ASIA_NM <> t2.TRILLIUM_ASIA_NM OR ( t1.TRILLIUM_ASIA_NM IS NULL AND t2.TRILLIUM_ASIA_NM IS NOT NULL) OR (t1.TRILLIUM_ASIA_NM IS NOT NULL AND t2.TRILLIUM_ASIA_NM IS NULL)) OR (t1.TRILLIUM_AMERICA_NM <> t2.TRILLIUM_AMERICA_NM OR ( t1.TRILLIUM_AMERICA_NM IS NULL AND t2.TRILLIUM_AMERICA_NM IS NOT NULL) OR (t1.TRILLIUM_AMERICA_NM IS NOT NULL AND t2.TRILLIUM_AMERICA_NM IS NULL)) OR (t1.TRILLIUM_EMEA_NM <> t2.TRILLIUM_EMEA_NM OR ( t1.TRILLIUM_EMEA_NM IS NULL AND t2.TRILLIUM_EMEA_NM IS NOT NULL) OR (t1.TRILLIUM_EMEA_NM IS NOT NULL AND t2.TRILLIUM_EMEA_NM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENV_NM', 'INSERT INTO NC_ENV_NM ( SCENARIO_ID,ENV_NM,TRILLIUM_ASIA_NM,TRILLIUM_AMERICA_NM,TRILLIUM_EMEA_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENV_NM,t1.TRILLIUM_ASIA_NM,t1.TRILLIUM_AMERICA_NM,t1.TRILLIUM_EMEA_NM,''ACTIVATE'',''VALID'' FROM IN_ENV_NM t1, ENV_NM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ENV_NM = t2.ENV_NM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('ERR_CODE_DETAILS', 'INSERT INTO NC_ERR_CODE_DETAILS ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,''INSERT'',''VALID'' FROM ERR_CODE_DETAILS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ERR_CODE_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('ERR_CODE_DETAILS', 'INSERT INTO NC_ERR_CODE_DETAILS ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,''DELETE'',''VALID'' FROM ERR_CODE_DETAILS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('ERR_CODE_DETAILS', 'INSERT INTO NC_ERR_CODE_DETAILS ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.ERR_DESC,t1.ERROR_CODE_NBR,''UPDATE'',''VALID'' FROM ERR_CODE_DETAILS t1, ERR_CODE_DETAILS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.ERR_DESC <> t2.ERR_DESC OR ( t1.ERR_DESC IS NULL AND t2.ERR_DESC IS NOT NULL) OR (t1.ERR_DESC IS NOT NULL AND t2.ERR_DESC IS NULL)) OR (t1.ERROR_CODE_NBR <> t2.ERROR_CODE_NBR OR ( t1.ERROR_CODE_NBR IS NULL AND t2.ERROR_CODE_NBR IS NOT NULL) OR (t1.ERROR_CODE_NBR IS NOT NULL AND t2.ERROR_CODE_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('ERR_CODE_DETAILS', 'INSERT INTO NC_ERR_CODE_DETAILS ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,ERR_DESC,ERROR_CODE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.ERR_DESC,t1.ERROR_CODE_NBR,''ACTIVATE'',''VALID'' FROM ERR_CODE_DETAILS t1, ERR_CODE_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EXTRN_COUPN_STATUS', 'INSERT INTO NC_EXTRN_COUPN_STATUS ( SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,''INSERT'',''VALID'' FROM IN_EXTRN_COUPN_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM EXTRN_COUPN_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EXTRN_COUPN_STATUS_CD = t2.EXTRN_COUPN_STATUS_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EXTRN_COUPN_STATUS', 'INSERT INTO NC_EXTRN_COUPN_STATUS ( SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,''DELETE'',''VALID'' FROM EXTRN_COUPN_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_EXTRN_COUPN_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EXTRN_COUPN_STATUS_CD = t2.EXTRN_COUPN_STATUS_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_EXTRN_COUPN_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EXTRN_COUPN_STATUS_CD = t2.EXTRN_COUPN_STATUS_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EXTRN_COUPN_STATUS', 'INSERT INTO NC_EXTRN_COUPN_STATUS ( SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EXTRN_COUPN_STATUS_CD,t1.EXTRN_COUPN_STATUS_DESC,''UPDATE'',''VALID'' FROM IN_EXTRN_COUPN_STATUS t1, EXTRN_COUPN_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EXTRN_COUPN_STATUS_CD = t2.EXTRN_COUPN_STATUS_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EXTRN_COUPN_STATUS_CD <> t2.EXTRN_COUPN_STATUS_CD OR ( t1.EXTRN_COUPN_STATUS_CD IS NULL AND t2.EXTRN_COUPN_STATUS_CD IS NOT NULL) OR (t1.EXTRN_COUPN_STATUS_CD IS NOT NULL AND t2.EXTRN_COUPN_STATUS_CD IS NULL)) OR (t1.EXTRN_COUPN_STATUS_DESC <> t2.EXTRN_COUPN_STATUS_DESC OR ( t1.EXTRN_COUPN_STATUS_DESC IS NULL AND t2.EXTRN_COUPN_STATUS_DESC IS NOT NULL) OR (t1.EXTRN_COUPN_STATUS_DESC IS NOT NULL AND t2.EXTRN_COUPN_STATUS_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_EXTRN_COUPN_STATUS', 'INSERT INTO NC_EXTRN_COUPN_STATUS ( SCENARIO_ID,EXTRN_COUPN_STATUS_CD,EXTRN_COUPN_STATUS_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EXTRN_COUPN_STATUS_CD,t1.EXTRN_COUPN_STATUS_DESC,''ACTIVATE'',''VALID'' FROM IN_EXTRN_COUPN_STATUS t1, EXTRN_COUPN_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.EXTRN_COUPN_STATUS_CD = t2.EXTRN_COUPN_STATUS_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_CLASSIFICATION', 'INSERT INTO NC_ENTITY_CLASSIFICATION ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,''INSERT'',''VALID'' FROM IN_ENTITY_CLASSIFICATION t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_ENTITY_CLASSIFICATION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.entityClassificationID = t2.entityClassificationID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_CLASSIFICATION', 'INSERT INTO NC_ENTITY_CLASSIFICATION ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,''DELETE'',''VALID'' FROM MST_ENTITY_CLASSIFICATION t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ENTITY_CLASSIFICATION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.entityClassificationID = t2.entityClassificationID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ENTITY_CLASSIFICATION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.entityClassificationID = t2.entityClassificationID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_CLASSIFICATION', 'INSERT INTO NC_ENTITY_CLASSIFICATION ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_CLASSIFICATION_ID,t1.CLASSIFICATION,t1.SERVICE,t1.TABLENAME,t1.DOCUMENT_NAME,''UPDATE'',''VALID'' FROM IN_ENTITY_CLASSIFICATION t1, MST_ENTITY_CLASSIFICATION t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.entityClassificationID = t2.entityClassificationID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.entityClassificationID <> t2.entityClassificationID OR ( t1.entityClassificationID IS NULL AND t2.entityClassificationID IS NOT NULL) OR (t1.entityClassificationID IS NOT NULL AND t2.entityClassificationID IS NULL)) OR (t1.classification <> t2.classification OR ( t1.classification IS NULL AND t2.classification IS NOT NULL) OR (t1.classification IS NOT NULL AND t2.classification IS NULL)) OR (t1.service <> t2.service OR ( t1.service IS NULL AND t2.service IS NOT NULL) OR (t1.service IS NOT NULL AND t2.service IS NULL)) OR (t1.tablename <> t2.tablename OR ( t1.tablename IS NULL AND t2.tablename IS NOT NULL) OR (t1.tablename IS NOT NULL AND t2.tablename IS NULL)) OR (t1.documentName <> t2.documentName OR ( t1.documentName IS NULL AND t2.documentName IS NOT NULL) OR (t1.documentName IS NOT NULL AND t2.documentName IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_CLASSIFICATION', 'INSERT INTO NC_ENTITY_CLASSIFICATION ( SCENARIO_ID,ENTITY_CLASSIFICATION_ID,CLASSIFICATION,SERVICE,TABLENAME,DOCUMENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_CLASSIFICATION_ID,t1.CLASSIFICATION,t1.SERVICE,t1.TABLENAME,t1.DOCUMENT_NAME,''ACTIVATE'',''VALID'' FROM IN_ENTITY_CLASSIFICATION t1, MST_ENTITY_CLASSIFICATION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.entityClassificationID = t2.entityClassificationID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_OBJECT', 'INSERT INTO NC_ENTITY_OBJECT ( SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,''INSERT'',''VALID'' FROM IN_ENTITY_OBJECT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_ENTITY_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_OBJECT', 'INSERT INTO NC_ENTITY_OBJECT ( SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,''DELETE'',''VALID'' FROM MST_ENTITY_OBJECT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ENTITY_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ENTITY_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_OBJECT', 'INSERT INTO NC_ENTITY_OBJECT ( SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.ENTITY_NAME,t1.ENTITY_DESCRIPTION,t1.ENTITY_STATUS,t1.ENTITY_EFFECTIVE_START_DATE,t1.ENTITY_EFFECTIVE_END_DATE,''UPDATE'',''VALID'' FROM IN_ENTITY_OBJECT t1, MST_ENTITY_OBJECT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Entity_Id <> t2.Entity_Id OR ( t1.Entity_Id IS NULL AND t2.Entity_Id IS NOT NULL) OR (t1.Entity_Id IS NOT NULL AND t2.Entity_Id IS NULL)) OR (t1.Entity_Name <> t2.Entity_Name OR ( t1.Entity_Name IS NULL AND t2.Entity_Name IS NOT NULL) OR (t1.Entity_Name IS NOT NULL AND t2.Entity_Name IS NULL)) OR (t1.Entity_Description <> t2.Entity_Description OR ( t1.Entity_Description IS NULL AND t2.Entity_Description IS NOT NULL) OR (t1.Entity_Description IS NOT NULL AND t2.Entity_Description IS NULL)) OR (t1.Entity_Status <> t2.Entity_Status OR ( t1.Entity_Status IS NULL AND t2.Entity_Status IS NOT NULL) OR (t1.Entity_Status IS NOT NULL AND t2.Entity_Status IS NULL)) OR (t1.Entity_Effective_Start_date <> t2.Entity_Effective_Start_date OR ( t1.Entity_Effective_Start_date IS NULL AND t2.Entity_Effective_Start_date IS NOT NULL) OR (t1.Entity_Effective_Start_date IS NOT NULL AND t2.Entity_Effective_Start_date IS NULL)) OR (t1.Entity_Effective_End_date <> t2.Entity_Effective_End_date OR ( t1.Entity_Effective_End_date IS NULL AND t2.Entity_Effective_End_date IS NOT NULL) OR (t1.Entity_Effective_End_date IS NOT NULL AND t2.Entity_Effective_End_date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_OBJECT', 'INSERT INTO NC_ENTITY_OBJECT ( SCENARIO_ID,ENTITY_ID,ENTITY_NAME,ENTITY_DESCRIPTION,ENTITY_STATUS,ENTITY_EFFECTIVE_START_DATE,ENTITY_EFFECTIVE_END_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.ENTITY_NAME,t1.ENTITY_DESCRIPTION,t1.ENTITY_STATUS,t1.ENTITY_EFFECTIVE_START_DATE,t1.ENTITY_EFFECTIVE_END_DATE,''ACTIVATE'',''VALID'' FROM IN_ENTITY_OBJECT t1, MST_ENTITY_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_TABLES', 'INSERT INTO NC_ENTITY_TABLES ( SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,''INSERT'',''VALID'' FROM IN_ENTITY_TABLES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_ENTITY_TABLES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DbName = t2.DbName AND t1.Entity_Id = t2.Entity_Id AND t1.TableName = t2.TableName )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_TABLES', 'INSERT INTO NC_ENTITY_TABLES ( SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,''DELETE'',''VALID'' FROM MST_ENTITY_TABLES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ENTITY_TABLES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DbName = t2.DbName AND t1.Entity_Id = t2.Entity_Id AND t1.TableName = t2.TableName ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ENTITY_TABLES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DbName = t2.DbName AND t1.Entity_Id = t2.Entity_Id AND t1.TableName = t2.TableName));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_TABLES', 'INSERT INTO NC_ENTITY_TABLES ( SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.DB_NAME,t1.TABLE_NAME,t1.SERVICE_NAME,t1.TABLE_TYPE,t1.IS_SRC,''UPDATE'',''VALID'' FROM IN_ENTITY_TABLES t1, MST_ENTITY_TABLES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DbName = t2.DbName AND t1.Entity_Id = t2.Entity_Id AND t1.TableName = t2.TableName AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Entity_Id <> t2.Entity_Id OR ( t1.Entity_Id IS NULL AND t2.Entity_Id IS NOT NULL) OR (t1.Entity_Id IS NOT NULL AND t2.Entity_Id IS NULL)) OR (t1.DbName <> t2.DbName OR ( t1.DbName IS NULL AND t2.DbName IS NOT NULL) OR (t1.DbName IS NOT NULL AND t2.DbName IS NULL)) OR (t1.TableName <> t2.TableName OR ( t1.TableName IS NULL AND t2.TableName IS NOT NULL) OR (t1.TableName IS NOT NULL AND t2.TableName IS NULL)) OR (t1.ServiceName <> t2.ServiceName OR ( t1.ServiceName IS NULL AND t2.ServiceName IS NOT NULL) OR (t1.ServiceName IS NOT NULL AND t2.ServiceName IS NULL)) OR (t1.Table_Type <> t2.Table_Type OR ( t1.Table_Type IS NULL AND t2.Table_Type IS NOT NULL) OR (t1.Table_Type IS NOT NULL AND t2.Table_Type IS NULL)) OR (t1.Is_Src <> t2.Is_Src OR ( t1.Is_Src IS NULL AND t2.Is_Src IS NOT NULL) OR (t1.Is_Src IS NOT NULL AND t2.Is_Src IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_TABLES', 'INSERT INTO NC_ENTITY_TABLES ( SCENARIO_ID,ENTITY_ID,DB_NAME,TABLE_NAME,SERVICE_NAME,TABLE_TYPE,IS_SRC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.DB_NAME,t1.TABLE_NAME,t1.SERVICE_NAME,t1.TABLE_TYPE,t1.IS_SRC,''ACTIVATE'',''VALID'' FROM IN_ENTITY_TABLES t1, MST_ENTITY_TABLES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DbName = t2.DbName AND t1.Entity_Id = t2.Entity_Id AND t1.TableName = t2.TableName AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_REL_REFERENCE', 'INSERT INTO NC_ENTITY_REL_REFERENCE ( SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,''INSERT'',''VALID'' FROM IN_ENTITY_REL_REFERENCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_ENTITY_REL_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND t1.Rel_Entity_Id = t2.Rel_Entity_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_REL_REFERENCE', 'INSERT INTO NC_ENTITY_REL_REFERENCE ( SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,''DELETE'',''VALID'' FROM MST_ENTITY_REL_REFERENCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ENTITY_REL_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND t1.Rel_Entity_Id = t2.Rel_Entity_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ENTITY_REL_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND t1.Rel_Entity_Id = t2.Rel_Entity_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_REL_REFERENCE', 'INSERT INTO NC_ENTITY_REL_REFERENCE ( SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.REL_ENTITY_ID,''UPDATE'',''VALID'' FROM IN_ENTITY_REL_REFERENCE t1, MST_ENTITY_REL_REFERENCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND t1.Rel_Entity_Id = t2.Rel_Entity_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Entity_Id <> t2.Entity_Id OR ( t1.Entity_Id IS NULL AND t2.Entity_Id IS NOT NULL) OR (t1.Entity_Id IS NOT NULL AND t2.Entity_Id IS NULL)) OR (t1.Rel_Entity_Id <> t2.Rel_Entity_Id OR ( t1.Rel_Entity_Id IS NULL AND t2.Rel_Entity_Id IS NOT NULL) OR (t1.Rel_Entity_Id IS NOT NULL AND t2.Rel_Entity_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ENTITY_REL_REFERENCE', 'INSERT INTO NC_ENTITY_REL_REFERENCE ( SCENARIO_ID,ENTITY_ID,REL_ENTITY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ENTITY_ID,t1.REL_ENTITY_ID,''ACTIVATE'',''VALID'' FROM IN_ENTITY_REL_REFERENCE t1, MST_ENTITY_REL_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Entity_Id = t2.Entity_Id AND t1.Rel_Entity_Id = t2.Rel_Entity_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ERROR_MASTER', 'INSERT INTO NC_ERROR_MASTER ( SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,''INSERT'',''VALID'' FROM IN_ERROR_MASTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_ERROR_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.errorMessageID = t2.errorMessageID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ERROR_MASTER', 'INSERT INTO NC_ERROR_MASTER ( SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,''DELETE'',''VALID'' FROM MST_ERROR_MASTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ERROR_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.errorMessageID = t2.errorMessageID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_ERROR_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.errorMessageID = t2.errorMessageID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ERROR_MASTER', 'INSERT INTO NC_ERROR_MASTER ( SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ERROR_MESSAGE_ID,t1.ERROR_MESSAGE_TEXT,''UPDATE'',''VALID'' FROM IN_ERROR_MASTER t1, MST_ERROR_MASTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.errorMessageID = t2.errorMessageID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.errorMessageID <> t2.errorMessageID OR ( t1.errorMessageID IS NULL AND t2.errorMessageID IS NOT NULL) OR (t1.errorMessageID IS NOT NULL AND t2.errorMessageID IS NULL)) OR (t1.errorMessageText <> t2.errorMessageText OR ( t1.errorMessageText IS NULL AND t2.errorMessageText IS NOT NULL) OR (t1.errorMessageText IS NOT NULL AND t2.errorMessageText IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ERROR_MASTER', 'INSERT INTO NC_ERROR_MASTER ( SCENARIO_ID,ERROR_MESSAGE_ID,ERROR_MESSAGE_TEXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ERROR_MESSAGE_ID,t1.ERROR_MESSAGE_TEXT,''ACTIVATE'',''VALID'' FROM IN_ERROR_MASTER t1, MST_ERROR_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.errorMessageID = t2.errorMessageID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_AUTMTN_RULESET', 'INSERT INTO NC_GDPR_AUTMTN_RULESET ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,''INSERT'',''VALID'' FROM IN_GDPR_AUTMTN_RULESET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_AUTMTN_RULESET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND t1.GRADE = t2.GRADE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_AUTMTN_RULESET', 'INSERT INTO NC_GDPR_AUTMTN_RULESET ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,''DELETE'',''VALID'' FROM GDPR_AUTMTN_RULESET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_AUTMTN_RULESET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND t1.GRADE = t2.GRADE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_AUTMTN_RULESET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND t1.GRADE = t2.GRADE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_AUTMTN_RULESET', 'INSERT INTO NC_GDPR_AUTMTN_RULESET ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_SRCH_TYPE_CODE,t1.NON_CORP_MIN,t1.NON_CORP_MAX,t1.CORP_MIN,t1.CORP_MAX,t1.GRADE,t1.CNTRY_CODE,t1.GDPR_RQST_TYPE_CD,''UPDATE'',''VALID'' FROM IN_GDPR_AUTMTN_RULESET t1, GDPR_AUTMTN_RULESET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND t1.GRADE = t2.GRADE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_SRCH_TYPE_CODE <> t2.GDPR_SRCH_TYPE_CODE OR ( t1.GDPR_SRCH_TYPE_CODE IS NULL AND t2.GDPR_SRCH_TYPE_CODE IS NOT NULL) OR (t1.GDPR_SRCH_TYPE_CODE IS NOT NULL AND t2.GDPR_SRCH_TYPE_CODE IS NULL)) OR (t1.NON_CORP_MIN <> t2.NON_CORP_MIN OR ( t1.NON_CORP_MIN IS NULL AND t2.NON_CORP_MIN IS NOT NULL) OR (t1.NON_CORP_MIN IS NOT NULL AND t2.NON_CORP_MIN IS NULL)) OR (t1.NON_CORP_MAX <> t2.NON_CORP_MAX OR ( t1.NON_CORP_MAX IS NULL AND t2.NON_CORP_MAX IS NOT NULL) OR (t1.NON_CORP_MAX IS NOT NULL AND t2.NON_CORP_MAX IS NULL)) OR (t1.CORP_MIN <> t2.CORP_MIN OR ( t1.CORP_MIN IS NULL AND t2.CORP_MIN IS NOT NULL) OR (t1.CORP_MIN IS NOT NULL AND t2.CORP_MIN IS NULL)) OR (t1.CORP_MAX <> t2.CORP_MAX OR ( t1.CORP_MAX IS NULL AND t2.CORP_MAX IS NOT NULL) OR (t1.CORP_MAX IS NOT NULL AND t2.CORP_MAX IS NULL)) OR (t1.GRADE <> t2.GRADE OR ( t1.GRADE IS NULL AND t2.GRADE IS NOT NULL) OR (t1.GRADE IS NOT NULL AND t2.GRADE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_AUTMTN_RULESET', 'INSERT INTO NC_GDPR_AUTMTN_RULESET ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_MIN,NON_CORP_MAX,CORP_MIN,CORP_MAX,GRADE,CNTRY_CODE,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_SRCH_TYPE_CODE,t1.NON_CORP_MIN,t1.NON_CORP_MAX,t1.CORP_MIN,t1.CORP_MAX,t1.GRADE,t1.CNTRY_CODE,t1.GDPR_RQST_TYPE_CD,''ACTIVATE'',''VALID'' FROM IN_GDPR_AUTMTN_RULESET t1, GDPR_AUTMTN_RULESET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND t1.GRADE = t2.GRADE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_CNTCT_NOTIF', 'INSERT INTO NC_GDPR_CNTCT_NOTIF ( SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,''INSERT'',''VALID'' FROM IN_GDPR_CNTCT_NOTIF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_CNTCT_NOTIF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_CNTCT_NOTIF', 'INSERT INTO NC_GDPR_CNTCT_NOTIF ( SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,''DELETE'',''VALID'' FROM GDPR_CNTCT_NOTIF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_CNTCT_NOTIF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_CNTCT_NOTIF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_CNTCT_NOTIF', 'INSERT INTO NC_GDPR_CNTCT_NOTIF ( SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_TYPE_CD,t1.CNTRY_CODE,t1.CNTCT_NBR,''UPDATE'',''VALID'' FROM IN_GDPR_CNTCT_NOTIF t1, GDPR_CNTCT_NOTIF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_CNTCT_NOTIF', 'INSERT INTO NC_GDPR_CNTCT_NOTIF ( SCENARIO_ID,GDPR_RQST_TYPE_CD,CNTRY_CODE,CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_TYPE_CD,t1.CNTRY_CODE,t1.CNTCT_NBR,''ACTIVATE'',''VALID'' FROM IN_GDPR_CNTCT_NOTIF t1, GDPR_CNTCT_NOTIF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HANDLER', 'INSERT INTO NC_GDPR_HANDLER ( SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,''INSERT'',''VALID'' FROM IN_GDPR_HANDLER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_HANDLER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HANDLER_NM = t2.HANDLER_NM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HANDLER', 'INSERT INTO NC_GDPR_HANDLER ( SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,''DELETE'',''VALID'' FROM GDPR_HANDLER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_HANDLER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HANDLER_NM = t2.HANDLER_NM ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_HANDLER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HANDLER_NM = t2.HANDLER_NM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HANDLER', 'INSERT INTO NC_GDPR_HANDLER ( SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.EMAIL_ADDR_TXT,t1.HANDLER_NM,t1.BUS_IND,t1.BUS_SFTP_DIR,t1.GDPR_RQST_TYPE_CD,''UPDATE'',''VALID'' FROM IN_GDPR_HANDLER t1, GDPR_HANDLER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HANDLER_NM = t2.HANDLER_NM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.HANDLER_NM <> t2.HANDLER_NM OR ( t1.HANDLER_NM IS NULL AND t2.HANDLER_NM IS NOT NULL) OR (t1.HANDLER_NM IS NOT NULL AND t2.HANDLER_NM IS NULL)) OR (t1.BUS_IND <> t2.BUS_IND OR ( t1.BUS_IND IS NULL AND t2.BUS_IND IS NOT NULL) OR (t1.BUS_IND IS NOT NULL AND t2.BUS_IND IS NULL)) OR (t1.BUS_SFTP_DIR <> t2.BUS_SFTP_DIR OR ( t1.BUS_SFTP_DIR IS NULL AND t2.BUS_SFTP_DIR IS NOT NULL) OR (t1.BUS_SFTP_DIR IS NOT NULL AND t2.BUS_SFTP_DIR IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HANDLER', 'INSERT INTO NC_GDPR_HANDLER ( SCENARIO_ID,CNTRY_CODE,EMAIL_ADDR_TXT,HANDLER_NM,BUS_IND,BUS_SFTP_DIR,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.EMAIL_ADDR_TXT,t1.HANDLER_NM,t1.BUS_IND,t1.BUS_SFTP_DIR,t1.GDPR_RQST_TYPE_CD,''ACTIVATE'',''VALID'' FROM IN_GDPR_HANDLER t1, GDPR_HANDLER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HANDLER_NM = t2.HANDLER_NM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR', 'INSERT INTO NC_GDPR_HNDLR ( SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,''INSERT'',''VALID'' FROM IN_GDPR_HNDLR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_HNDLR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HNDLR_ID = t2.HNDLR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR', 'INSERT INTO NC_GDPR_HNDLR ( SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,''DELETE'',''VALID'' FROM GDPR_HNDLR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_HNDLR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HNDLR_ID = t2.HNDLR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_HNDLR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HNDLR_ID = t2.HNDLR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR', 'INSERT INTO NC_GDPR_HNDLR ( SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.HNDLR_NM,t1.BUS_IND,t1.BUS_SFTP_DIR,t1.HNDLR_ID,''UPDATE'',''VALID'' FROM IN_GDPR_HNDLR t1, GDPR_HNDLR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HNDLR_ID = t2.HNDLR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.HNDLR_NM <> t2.HNDLR_NM OR ( t1.HNDLR_NM IS NULL AND t2.HNDLR_NM IS NOT NULL) OR (t1.HNDLR_NM IS NOT NULL AND t2.HNDLR_NM IS NULL)) OR (t1.BUS_IND <> t2.BUS_IND OR ( t1.BUS_IND IS NULL AND t2.BUS_IND IS NOT NULL) OR (t1.BUS_IND IS NOT NULL AND t2.BUS_IND IS NULL)) OR (t1.BUS_SFTP_DIR <> t2.BUS_SFTP_DIR OR ( t1.BUS_SFTP_DIR IS NULL AND t2.BUS_SFTP_DIR IS NOT NULL) OR (t1.BUS_SFTP_DIR IS NOT NULL AND t2.BUS_SFTP_DIR IS NULL)) OR (t1.HNDLR_ID <> t2.HNDLR_ID OR ( t1.HNDLR_ID IS NULL AND t2.HNDLR_ID IS NOT NULL) OR (t1.HNDLR_ID IS NOT NULL AND t2.HNDLR_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR', 'INSERT INTO NC_GDPR_HNDLR ( SCENARIO_ID,HNDLR_NM,BUS_IND,BUS_SFTP_DIR,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.HNDLR_NM,t1.BUS_IND,t1.BUS_SFTP_DIR,t1.HNDLR_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_HNDLR t1, GDPR_HNDLR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HNDLR_ID = t2.HNDLR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY', 'INSERT INTO NC_GDPR_HNDLR_CNTRY ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,HNDLR_ID,''INSERT'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_HNDLR_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY', 'INSERT INTO NC_GDPR_HNDLR_CNTRY ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,HNDLR_ID,''DELETE'',''VALID'' FROM GDPR_HNDLR_CNTRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_HNDLR_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_HNDLR_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY', 'INSERT INTO NC_GDPR_HNDLR_CNTRY ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.HNDLR_ID,''UPDATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY t1, GDPR_HNDLR_CNTRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.HNDLR_ID <> t2.HNDLR_ID OR ( t1.HNDLR_ID IS NULL AND t2.HNDLR_ID IS NOT NULL) OR (t1.HNDLR_ID IS NOT NULL AND t2.HNDLR_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY', 'INSERT INTO NC_GDPR_HNDLR_CNTRY ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.HNDLR_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY t1, GDPR_HNDLR_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_CNTCT', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_CNTCT ( SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,''INSERT'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_CNTCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_HNDLR_CNTRY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_CNTCT', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_CNTCT ( SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,''DELETE'',''VALID'' FROM GDPR_HNDLR_CNTRY_CNTCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_HNDLR_CNTRY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_HNDLR_CNTRY_CNTCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_CNTCT', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_CNTCT ( SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.CNTRY_CODE,t1.HNDLR_ID,''UPDATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_CNTCT t1, GDPR_HNDLR_CNTRY_CNTCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_NBR <> t2.CNTCT_NBR OR ( t1.CNTCT_NBR IS NULL AND t2.CNTCT_NBR IS NOT NULL) OR (t1.CNTCT_NBR IS NOT NULL AND t2.CNTCT_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.HNDLR_ID <> t2.HNDLR_ID OR ( t1.HNDLR_ID IS NULL AND t2.HNDLR_ID IS NOT NULL) OR (t1.HNDLR_ID IS NOT NULL AND t2.HNDLR_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_CNTCT', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_CNTCT ( SCENARIO_ID,CNTCT_NBR,CNTRY_CODE,HNDLR_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_NBR,t1.CNTRY_CODE,t1.HNDLR_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_CNTCT t1, GDPR_HNDLR_CNTRY_CNTCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_NBR = t2.CNTCT_NBR AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.HNDLR_ID = t2.HNDLR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_RQST_AUTH', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_RQST_AUTH ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,''INSERT'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_RQST_AUTH t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_HNDLR_CNTRY_RQST_AUTH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.HNDLR_ID = t2.HNDLR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_RQST_AUTH', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_RQST_AUTH ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,''DELETE'',''VALID'' FROM GDPR_HNDLR_CNTRY_RQST_AUTH t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_HNDLR_CNTRY_RQST_AUTH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.HNDLR_ID = t2.HNDLR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_HNDLR_CNTRY_RQST_AUTH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.HNDLR_ID = t2.HNDLR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_RQST_AUTH', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_RQST_AUTH ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.HNDLR_ID,t1.GDPR_RQST_TYPE_CD,''UPDATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_RQST_AUTH t1, GDPR_HNDLR_CNTRY_RQST_AUTH t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.HNDLR_ID = t2.HNDLR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.HNDLR_ID <> t2.HNDLR_ID OR ( t1.HNDLR_ID IS NULL AND t2.HNDLR_ID IS NOT NULL) OR (t1.HNDLR_ID IS NOT NULL AND t2.HNDLR_ID IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_HNDLR_CNTRY_RQST_AUTH', 'INSERT INTO NC_GDPR_HNDLR_CNTRY_RQST_AUTH ( SCENARIO_ID,CNTRY_CODE,HNDLR_ID,GDPR_RQST_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_CODE,t1.HNDLR_ID,t1.GDPR_RQST_TYPE_CD,''ACTIVATE'',''VALID'' FROM IN_GDPR_HNDLR_CNTRY_RQST_AUTH t1, GDPR_HNDLR_CNTRY_RQST_AUTH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND t1.HNDLR_ID = t2.HNDLR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST', 'INSERT INTO NC_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,''INSERT'',''VALID'' FROM IN_GDPR_RQST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST', 'INSERT INTO NC_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,''DELETE'',''VALID'' FROM GDPR_RQST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST', 'INSERT INTO NC_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_STATUS_CD,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_CASE_OWNR_CNTCT_NBR,t1.TEMPORAL_TIME,''UPDATE'',''VALID'' FROM IN_GDPR_RQST t1, GDPR_RQST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) OR (t1.GDPR_RQST_STATUS_CD <> t2.GDPR_RQST_STATUS_CD OR ( t1.GDPR_RQST_STATUS_CD IS NULL AND t2.GDPR_RQST_STATUS_CD IS NOT NULL) OR (t1.GDPR_RQST_STATUS_CD IS NOT NULL AND t2.GDPR_RQST_STATUS_CD IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.GDPR_RQST_FULFLMT_DATETM <> t2.GDPR_RQST_FULFLMT_DATETM OR ( t1.GDPR_RQST_FULFLMT_DATETM IS NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NOT NULL) OR (t1.GDPR_RQST_FULFLMT_DATETM IS NOT NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NULL)) OR (t1.GDPR_RQST_CRTN_DATETM <> t2.GDPR_RQST_CRTN_DATETM OR ( t1.GDPR_RQST_CRTN_DATETM IS NULL AND t2.GDPR_RQST_CRTN_DATETM IS NOT NULL) OR (t1.GDPR_RQST_CRTN_DATETM IS NOT NULL AND t2.GDPR_RQST_CRTN_DATETM IS NULL)) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM <> t2.GDPR_RQST_IDNTY_VFYD_DATETM OR ( t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL)) OR (t1.GDPR_CASE_OWNR_CNTCT_NBR <> t2.GDPR_CASE_OWNR_CNTCT_NBR OR ( t1.GDPR_CASE_OWNR_CNTCT_NBR IS NULL AND t2.GDPR_CASE_OWNR_CNTCT_NBR IS NOT NULL) OR (t1.GDPR_CASE_OWNR_CNTCT_NBR IS NOT NULL AND t2.GDPR_CASE_OWNR_CNTCT_NBR IS NULL)) OR (t1.TEMPORAL_TIME <> t2.TEMPORAL_TIME OR ( t1.TEMPORAL_TIME IS NULL AND t2.TEMPORAL_TIME IS NOT NULL) OR (t1.TEMPORAL_TIME IS NOT NULL AND t2.TEMPORAL_TIME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST', 'INSERT INTO NC_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_CASE_OWNR_CNTCT_NBR,TEMPORAL_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_STATUS_CD,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_CASE_OWNR_CNTCT_NBR,t1.TEMPORAL_TIME,''ACTIVATE'',''VALID'' FROM IN_GDPR_RQST t1, GDPR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_STATUS', 'INSERT INTO NC_GDPR_RQST_STATUS ( SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_GDPR_RQST_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_RQST_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_STATUS_CD = t2.GDPR_RQST_STATUS_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_STATUS', 'INSERT INTO NC_GDPR_RQST_STATUS ( SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM GDPR_RQST_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_RQST_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_STATUS_CD = t2.GDPR_RQST_STATUS_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_RQST_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_STATUS_CD = t2.GDPR_RQST_STATUS_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_STATUS', 'INSERT INTO NC_GDPR_RQST_STATUS ( SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_STATUS_CD,t1.GDPR_RQST_STATUS_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_GDPR_RQST_STATUS t1, GDPR_RQST_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_STATUS_CD = t2.GDPR_RQST_STATUS_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_RQST_STATUS_CD <> t2.GDPR_RQST_STATUS_CD OR ( t1.GDPR_RQST_STATUS_CD IS NULL AND t2.GDPR_RQST_STATUS_CD IS NOT NULL) OR (t1.GDPR_RQST_STATUS_CD IS NOT NULL AND t2.GDPR_RQST_STATUS_CD IS NULL)) OR (t1.GDPR_RQST_STATUS_NAME <> t2.GDPR_RQST_STATUS_NAME OR ( t1.GDPR_RQST_STATUS_NAME IS NULL AND t2.GDPR_RQST_STATUS_NAME IS NOT NULL) OR (t1.GDPR_RQST_STATUS_NAME IS NOT NULL AND t2.GDPR_RQST_STATUS_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_STATUS', 'INSERT INTO NC_GDPR_RQST_STATUS ( SCENARIO_ID,GDPR_RQST_STATUS_CD,GDPR_RQST_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_STATUS_CD,t1.GDPR_RQST_STATUS_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_RQST_STATUS t1, GDPR_RQST_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_STATUS_CD = t2.GDPR_RQST_STATUS_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_TYPE', 'INSERT INTO NC_GDPR_RQST_TYPE ( SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_GDPR_RQST_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_RQST_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_TYPE', 'INSERT INTO NC_GDPR_RQST_TYPE ( SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM GDPR_RQST_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_RQST_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_RQST_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_TYPE', 'INSERT INTO NC_GDPR_RQST_TYPE ( SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_GDPR_RQST_TYPE t1, GDPR_RQST_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) OR (t1.GDPR_RQST_TYPE_NAME <> t2.GDPR_RQST_TYPE_NAME OR ( t1.GDPR_RQST_TYPE_NAME IS NULL AND t2.GDPR_RQST_TYPE_NAME IS NOT NULL) OR (t1.GDPR_RQST_TYPE_NAME IS NOT NULL AND t2.GDPR_RQST_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_RQST_TYPE', 'INSERT INTO NC_GDPR_RQST_TYPE ( SCENARIO_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_RQST_TYPE t1, GDPR_RQST_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_RQST_TYPE_CD = t2.GDPR_RQST_TYPE_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_RSLT', 'INSERT INTO NC_GDPR_SRCH_RSLT ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,''INSERT'',''VALID'' FROM IN_GDPR_SRCH_RSLT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_SRCH_RSLT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_RSLT', 'INSERT INTO NC_GDPR_SRCH_RSLT ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,''DELETE'',''VALID'' FROM GDPR_SRCH_RSLT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_SRCH_RSLT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_SRCH_RSLT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_RSLT', 'INSERT INTO NC_GDPR_SRCH_RSLT ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_SRCH_TYPE_CODE,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.PROC_IND,''UPDATE'',''VALID'' FROM IN_GDPR_SRCH_RSLT t1, GDPR_SRCH_RSLT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GDPR_SRCH_TYPE_CODE <> t2.GDPR_SRCH_TYPE_CODE OR ( t1.GDPR_SRCH_TYPE_CODE IS NULL AND t2.GDPR_SRCH_TYPE_CODE IS NOT NULL) OR (t1.GDPR_SRCH_TYPE_CODE IS NOT NULL AND t2.GDPR_SRCH_TYPE_CODE IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.PROC_IND <> t2.PROC_IND OR ( t1.PROC_IND IS NULL AND t2.PROC_IND IS NOT NULL) OR (t1.PROC_IND IS NOT NULL AND t2.PROC_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_RSLT', 'INSERT INTO NC_GDPR_SRCH_RSLT ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,REGIS_PRSNA_ID,MKTNG_PGM_NBR,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,PROC_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_SRCH_TYPE_CODE,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.PROC_IND,''ACTIVATE'',''VALID'' FROM IN_GDPR_SRCH_RSLT t1, GDPR_SRCH_RSLT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_SMRY', 'INSERT INTO NC_GDPR_SRCH_SMRY ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_GDPR_SRCH_SMRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_SRCH_SMRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_SMRY', 'INSERT INTO NC_GDPR_SRCH_SMRY ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM GDPR_SRCH_SMRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_SRCH_SMRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_SRCH_SMRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_SMRY', 'INSERT INTO NC_GDPR_SRCH_SMRY ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_SRCH_TYPE_CODE,t1.NON_CORP_CNT,t1.CORP_CNT,t1.GDPR_SRCH_GRADE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_GDPR_SRCH_SMRY t1, GDPR_SRCH_SMRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GDPR_SRCH_TYPE_CODE <> t2.GDPR_SRCH_TYPE_CODE OR ( t1.GDPR_SRCH_TYPE_CODE IS NULL AND t2.GDPR_SRCH_TYPE_CODE IS NOT NULL) OR (t1.GDPR_SRCH_TYPE_CODE IS NOT NULL AND t2.GDPR_SRCH_TYPE_CODE IS NULL)) OR (t1.NON_CORP_CNT <> t2.NON_CORP_CNT OR ( t1.NON_CORP_CNT IS NULL AND t2.NON_CORP_CNT IS NOT NULL) OR (t1.NON_CORP_CNT IS NOT NULL AND t2.NON_CORP_CNT IS NULL)) OR (t1.CORP_CNT <> t2.CORP_CNT OR ( t1.CORP_CNT IS NULL AND t2.CORP_CNT IS NOT NULL) OR (t1.CORP_CNT IS NOT NULL AND t2.CORP_CNT IS NULL)) OR (t1.GDPR_SRCH_GRADE <> t2.GDPR_SRCH_GRADE OR ( t1.GDPR_SRCH_GRADE IS NULL AND t2.GDPR_SRCH_GRADE IS NOT NULL) OR (t1.GDPR_SRCH_GRADE IS NOT NULL AND t2.GDPR_SRCH_GRADE IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_SMRY', 'INSERT INTO NC_GDPR_SRCH_SMRY ( SCENARIO_ID,GDPR_CASE_ID,GDPR_SRCH_TYPE_CODE,NON_CORP_CNT,CORP_CNT,GDPR_SRCH_GRADE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_SRCH_TYPE_CODE,t1.NON_CORP_CNT,t1.CORP_CNT,t1.GDPR_SRCH_GRADE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_SRCH_SMRY t1, GDPR_SRCH_SMRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_TYPE', 'INSERT INTO NC_GDPR_SRCH_TYPE ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_GDPR_SRCH_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GDPR_SRCH_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_TYPE', 'INSERT INTO NC_GDPR_SRCH_TYPE ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM GDPR_SRCH_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GDPR_SRCH_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GDPR_SRCH_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_TYPE', 'INSERT INTO NC_GDPR_SRCH_TYPE ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_SRCH_TYPE_CODE,t1.GDPR_SRCH_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_GDPR_SRCH_TYPE t1, GDPR_SRCH_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_SRCH_TYPE_CODE <> t2.GDPR_SRCH_TYPE_CODE OR ( t1.GDPR_SRCH_TYPE_CODE IS NULL AND t2.GDPR_SRCH_TYPE_CODE IS NOT NULL) OR (t1.GDPR_SRCH_TYPE_CODE IS NOT NULL AND t2.GDPR_SRCH_TYPE_CODE IS NULL)) OR (t1.GDPR_SRCH_TYPE_NAME <> t2.GDPR_SRCH_TYPE_NAME OR ( t1.GDPR_SRCH_TYPE_NAME IS NULL AND t2.GDPR_SRCH_TYPE_NAME IS NOT NULL) OR (t1.GDPR_SRCH_TYPE_NAME IS NOT NULL AND t2.GDPR_SRCH_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GDPR_SRCH_TYPE', 'INSERT INTO NC_GDPR_SRCH_TYPE ( SCENARIO_ID,GDPR_SRCH_TYPE_CODE,GDPR_SRCH_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_SRCH_TYPE_CODE,t1.GDPR_SRCH_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_GDPR_SRCH_TYPE t1, GDPR_SRCH_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_SRCH_TYPE_CODE = t2.GDPR_SRCH_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_AREA_TYPE', 'INSERT INTO NC_GEOC_AREA_TYPE ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_GEOC_AREA_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GEOC_AREA_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_AREA_TYPE_CODE = t2.GEOC_AREA_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_AREA_TYPE', 'INSERT INTO NC_GEOC_AREA_TYPE ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM GEOC_AREA_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GEOC_AREA_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_AREA_TYPE_CODE = t2.GEOC_AREA_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GEOC_AREA_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_AREA_TYPE_CODE = t2.GEOC_AREA_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_AREA_TYPE', 'INSERT INTO NC_GEOC_AREA_TYPE ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_GEOC_AREA_TYPE t1, GEOC_AREA_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_AREA_TYPE_CODE = t2.GEOC_AREA_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GEOC_AREA_TYPE_CODE <> t2.GEOC_AREA_TYPE_CODE OR ( t1.GEOC_AREA_TYPE_CODE IS NULL AND t2.GEOC_AREA_TYPE_CODE IS NOT NULL) OR (t1.GEOC_AREA_TYPE_CODE IS NOT NULL AND t2.GEOC_AREA_TYPE_CODE IS NULL)) OR (t1.GEOC_AREA_TYPE_NAME <> t2.GEOC_AREA_TYPE_NAME OR ( t1.GEOC_AREA_TYPE_NAME IS NULL AND t2.GEOC_AREA_TYPE_NAME IS NOT NULL) OR (t1.GEOC_AREA_TYPE_NAME IS NOT NULL AND t2.GEOC_AREA_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_AREA_TYPE', 'INSERT INTO NC_GEOC_AREA_TYPE ( SCENARIO_ID,GEOC_AREA_TYPE_CODE,GEOC_AREA_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_GEOC_AREA_TYPE t1, GEOC_AREA_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_AREA_TYPE_CODE = t2.GEOC_AREA_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_REGN', 'INSERT INTO NC_GEOC_REGN ( SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,''INSERT'',''VALID'' FROM IN_GEOC_REGN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GEOC_REGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_REGN', 'INSERT INTO NC_GEOC_REGN ( SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,''DELETE'',''VALID'' FROM GEOC_REGN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GEOC_REGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GEOC_REGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_REGN', 'INSERT INTO NC_GEOC_REGN ( SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_REGN_CODE,t1.GEOC_REGN_NAME,t1.GEOC_REGN_NAME_NTV,t1.GEOC_REGN_SHORT_NAME,t1.GEOC_REGN_DESC,''UPDATE'',''VALID'' FROM IN_GEOC_REGN t1, GEOC_REGN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GEOC_REGN_CODE <> t2.GEOC_REGN_CODE OR ( t1.GEOC_REGN_CODE IS NULL AND t2.GEOC_REGN_CODE IS NOT NULL) OR (t1.GEOC_REGN_CODE IS NOT NULL AND t2.GEOC_REGN_CODE IS NULL)) OR (t1.GEOC_REGN_NAME <> t2.GEOC_REGN_NAME OR ( t1.GEOC_REGN_NAME IS NULL AND t2.GEOC_REGN_NAME IS NOT NULL) OR (t1.GEOC_REGN_NAME IS NOT NULL AND t2.GEOC_REGN_NAME IS NULL)) OR (t1.GEOC_REGN_NAME_NTV <> t2.GEOC_REGN_NAME_NTV OR ( t1.GEOC_REGN_NAME_NTV IS NULL AND t2.GEOC_REGN_NAME_NTV IS NOT NULL) OR (t1.GEOC_REGN_NAME_NTV IS NOT NULL AND t2.GEOC_REGN_NAME_NTV IS NULL)) OR (t1.GEOC_REGN_SHORT_NAME <> t2.GEOC_REGN_SHORT_NAME OR ( t1.GEOC_REGN_SHORT_NAME IS NULL AND t2.GEOC_REGN_SHORT_NAME IS NOT NULL) OR (t1.GEOC_REGN_SHORT_NAME IS NOT NULL AND t2.GEOC_REGN_SHORT_NAME IS NULL)) OR (t1.GEOC_REGN_DESC <> t2.GEOC_REGN_DESC OR ( t1.GEOC_REGN_DESC IS NULL AND t2.GEOC_REGN_DESC IS NOT NULL) OR (t1.GEOC_REGN_DESC IS NOT NULL AND t2.GEOC_REGN_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_REGN', 'INSERT INTO NC_GEOC_REGN ( SCENARIO_ID,GEOC_REGN_CODE,GEOC_REGN_NAME,GEOC_REGN_NAME_NTV,GEOC_REGN_SHORT_NAME,GEOC_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_REGN_CODE,t1.GEOC_REGN_NAME,t1.GEOC_REGN_NAME_NTV,t1.GEOC_REGN_SHORT_NAME,t1.GEOC_REGN_DESC,''ACTIVATE'',''VALID'' FROM IN_GEOC_REGN t1, GEOC_REGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_SUB_REGN', 'INSERT INTO NC_GEOC_SUB_REGN ( SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,''INSERT'',''VALID'' FROM IN_GEOC_SUB_REGN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GEOC_SUB_REGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND t1.GEOC_SUB_REGN_CODE = t2.GEOC_SUB_REGN_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_SUB_REGN', 'INSERT INTO NC_GEOC_SUB_REGN ( SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,''DELETE'',''VALID'' FROM GEOC_SUB_REGN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GEOC_SUB_REGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND t1.GEOC_SUB_REGN_CODE = t2.GEOC_SUB_REGN_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GEOC_SUB_REGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND t1.GEOC_SUB_REGN_CODE = t2.GEOC_SUB_REGN_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_SUB_REGN', 'INSERT INTO NC_GEOC_SUB_REGN ( SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_SUB_REGN_CODE,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_NAME,t1.GEOC_SUB_REGN_NAME_NTV,t1.GEOC_SUB_REGN_SHORT_NAME,t1.GEOC_SUB_REGN_DESC,''UPDATE'',''VALID'' FROM IN_GEOC_SUB_REGN t1, GEOC_SUB_REGN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND t1.GEOC_SUB_REGN_CODE = t2.GEOC_SUB_REGN_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GEOC_SUB_REGN_CODE <> t2.GEOC_SUB_REGN_CODE OR ( t1.GEOC_SUB_REGN_CODE IS NULL AND t2.GEOC_SUB_REGN_CODE IS NOT NULL) OR (t1.GEOC_SUB_REGN_CODE IS NOT NULL AND t2.GEOC_SUB_REGN_CODE IS NULL)) OR (t1.GEOC_REGN_CODE <> t2.GEOC_REGN_CODE OR ( t1.GEOC_REGN_CODE IS NULL AND t2.GEOC_REGN_CODE IS NOT NULL) OR (t1.GEOC_REGN_CODE IS NOT NULL AND t2.GEOC_REGN_CODE IS NULL)) OR (t1.GEOC_SUB_REGN_NAME <> t2.GEOC_SUB_REGN_NAME OR ( t1.GEOC_SUB_REGN_NAME IS NULL AND t2.GEOC_SUB_REGN_NAME IS NOT NULL) OR (t1.GEOC_SUB_REGN_NAME IS NOT NULL AND t2.GEOC_SUB_REGN_NAME IS NULL)) OR (t1.GEOC_SUB_REGN_NAME_NTV <> t2.GEOC_SUB_REGN_NAME_NTV OR ( t1.GEOC_SUB_REGN_NAME_NTV IS NULL AND t2.GEOC_SUB_REGN_NAME_NTV IS NOT NULL) OR (t1.GEOC_SUB_REGN_NAME_NTV IS NOT NULL AND t2.GEOC_SUB_REGN_NAME_NTV IS NULL)) OR (t1.GEOC_SUB_REGN_SHORT_NAME <> t2.GEOC_SUB_REGN_SHORT_NAME OR ( t1.GEOC_SUB_REGN_SHORT_NAME IS NULL AND t2.GEOC_SUB_REGN_SHORT_NAME IS NOT NULL) OR (t1.GEOC_SUB_REGN_SHORT_NAME IS NOT NULL AND t2.GEOC_SUB_REGN_SHORT_NAME IS NULL)) OR (t1.GEOC_SUB_REGN_DESC <> t2.GEOC_SUB_REGN_DESC OR ( t1.GEOC_SUB_REGN_DESC IS NULL AND t2.GEOC_SUB_REGN_DESC IS NOT NULL) OR (t1.GEOC_SUB_REGN_DESC IS NOT NULL AND t2.GEOC_SUB_REGN_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GEOC_SUB_REGN', 'INSERT INTO NC_GEOC_SUB_REGN ( SCENARIO_ID,GEOC_SUB_REGN_CODE,GEOC_REGN_CODE,GEOC_SUB_REGN_NAME,GEOC_SUB_REGN_NAME_NTV,GEOC_SUB_REGN_SHORT_NAME,GEOC_SUB_REGN_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GEOC_SUB_REGN_CODE,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_NAME,t1.GEOC_SUB_REGN_NAME_NTV,t1.GEOC_SUB_REGN_SHORT_NAME,t1.GEOC_SUB_REGN_DESC,''ACTIVATE'',''VALID'' FROM IN_GEOC_SUB_REGN t1, GEOC_SUB_REGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GEOC_REGN_CODE = t2.GEOC_REGN_CODE AND t1.GEOC_SUB_REGN_CODE = t2.GEOC_SUB_REGN_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''INSERT'',''VALID'' FROM IN_GRP_ATTR_VAL_INST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_ATTR_VAL_INST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''DELETE'',''VALID'' FROM MST_GRP_ATTR_VAL_INST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_ATTR_VAL_INST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_ATTR_VAL_INST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''UPDATE'',''VALID'' FROM IN_GRP_ATTR_VAL_INST t1, MST_GRP_ATTR_VAL_INST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Log_Id <> t2.Log_Id OR ( t1.Log_Id IS NULL AND t2.Log_Id IS NOT NULL) OR (t1.Log_Id IS NOT NULL AND t2.Log_Id IS NULL)) OR (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) OR (t1.Updt_Col_Value <> t2.Updt_Col_Value OR ( t1.Updt_Col_Value IS NULL AND t2.Updt_Col_Value IS NOT NULL) OR (t1.Updt_Col_Value IS NOT NULL AND t2.Updt_Col_Value IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''ACTIVATE'',''VALID'' FROM IN_GRP_ATTR_VAL_INST t1, MST_GRP_ATTR_VAL_INST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''INSERT'',''VALID'' FROM IN_GRP_ATTR_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_ATTR_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''DELETE'',''VALID'' FROM MST_GRP_ATTR_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_ATTR_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_ATTR_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''UPDATE'',''VALID'' FROM IN_GRP_ATTR_VAL t1, MST_GRP_ATTR_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) OR (t1.Updt_Col_Value <> t2.Updt_Col_Value OR ( t1.Updt_Col_Value IS NULL AND t2.Updt_Col_Value IS NOT NULL) OR (t1.Updt_Col_Value IS NOT NULL AND t2.Updt_Col_Value IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''ACTIVATE'',''VALID'' FROM IN_GRP_ATTR_VAL t1, MST_GRP_ATTR_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,''INSERT'',''VALID'' FROM IN_GRP_CLASS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_CLASS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,''DELETE'',''VALID'' FROM MST_GRP_CLASS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_CLASS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_CLASS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_CLASS_ID,t1.CLASS_NAME,t1.CLASS_DESCRIPTION,t1.PHY_TBL_NAME,t1.LOG_TBL_NAME,''UPDATE'',''VALID'' FROM IN_GRP_CLASS t1, MST_GRP_CLASS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Class_Name <> t2.Class_Name OR ( t1.Class_Name IS NULL AND t2.Class_Name IS NOT NULL) OR (t1.Class_Name IS NOT NULL AND t2.Class_Name IS NULL)) OR (t1.Class_Description <> t2.Class_Description OR ( t1.Class_Description IS NULL AND t2.Class_Description IS NOT NULL) OR (t1.Class_Description IS NOT NULL AND t2.Class_Description IS NULL)) OR (t1.Phy_Tbl_Name <> t2.Phy_Tbl_Name OR ( t1.Phy_Tbl_Name IS NULL AND t2.Phy_Tbl_Name IS NOT NULL) OR (t1.Phy_Tbl_Name IS NOT NULL AND t2.Phy_Tbl_Name IS NULL)) OR (t1.Log_Tbl_Name <> t2.Log_Tbl_Name OR ( t1.Log_Tbl_Name IS NULL AND t2.Log_Tbl_Name IS NOT NULL) OR (t1.Log_Tbl_Name IS NOT NULL AND t2.Log_Tbl_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_CLASS_ID,t1.CLASS_NAME,t1.CLASS_DESCRIPTION,t1.PHY_TBL_NAME,t1.LOG_TBL_NAME,''ACTIVATE'',''VALID'' FROM IN_GRP_CLASS t1, MST_GRP_CLASS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,''INSERT'',''VALID'' FROM IN_GRP_EXEC_LOG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_EXEC_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,''DELETE'',''VALID'' FROM MST_GRP_EXEC_LOG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_EXEC_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_EXEC_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.GROUP_ID,t1.EXECUTION_STATUS,t1.EXECUTION_TIME,t1.GROUP_NAME,t1.ATTRIBUTE_SET_NAME,t1.EXECUTION_RESPONSE,''UPDATE'',''VALID'' FROM IN_GRP_EXEC_LOG t1, MST_GRP_EXEC_LOG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Log_Id <> t2.Log_Id OR ( t1.Log_Id IS NULL AND t2.Log_Id IS NOT NULL) OR (t1.Log_Id IS NOT NULL AND t2.Log_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Execution_Status <> t2.Execution_Status OR ( t1.Execution_Status IS NULL AND t2.Execution_Status IS NOT NULL) OR (t1.Execution_Status IS NOT NULL AND t2.Execution_Status IS NULL)) OR (t1.Execution_Time <> t2.Execution_Time OR ( t1.Execution_Time IS NULL AND t2.Execution_Time IS NOT NULL) OR (t1.Execution_Time IS NOT NULL AND t2.Execution_Time IS NULL)) OR (t1.Group_Name <> t2.Group_Name OR ( t1.Group_Name IS NULL AND t2.Group_Name IS NOT NULL) OR (t1.Group_Name IS NOT NULL AND t2.Group_Name IS NULL)) OR (t1.Attribute_Set_Name <> t2.Attribute_Set_Name OR ( t1.Attribute_Set_Name IS NULL AND t2.Attribute_Set_Name IS NOT NULL) OR (t1.Attribute_Set_Name IS NOT NULL AND t2.Attribute_Set_Name IS NULL)) OR (t1.Execution_Response <> t2.Execution_Response OR ( t1.Execution_Response IS NULL AND t2.Execution_Response IS NOT NULL) OR (t1.Execution_Response IS NOT NULL AND t2.Execution_Response IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.GROUP_ID,t1.EXECUTION_STATUS,t1.EXECUTION_TIME,t1.GROUP_NAME,t1.ATTRIBUTE_SET_NAME,t1.EXECUTION_RESPONSE,''ACTIVATE'',''VALID'' FROM IN_GRP_EXEC_LOG t1, MST_GRP_EXEC_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,''INSERT'',''VALID'' FROM IN_GRP_MASTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,''DELETE'',''VALID'' FROM MST_GRP_MASTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NAME,t1.GROUP_DESCRIPTION,t1.GROUP_CLASS_ID,t1.GROUP_RULE_ID,t1.GROUP_PRECENDENCE,''UPDATE'',''VALID'' FROM IN_GRP_MASTER t1, MST_GRP_MASTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Group_Name <> t2.Group_Name OR ( t1.Group_Name IS NULL AND t2.Group_Name IS NOT NULL) OR (t1.Group_Name IS NOT NULL AND t2.Group_Name IS NULL)) OR (t1.Group_Description <> t2.Group_Description OR ( t1.Group_Description IS NULL AND t2.Group_Description IS NOT NULL) OR (t1.Group_Description IS NOT NULL AND t2.Group_Description IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Group_Rule_Id <> t2.Group_Rule_Id OR ( t1.Group_Rule_Id IS NULL AND t2.Group_Rule_Id IS NOT NULL) OR (t1.Group_Rule_Id IS NOT NULL AND t2.Group_Rule_Id IS NULL)) OR (t1.Group_Precedence <> t2.Group_Precedence OR ( t1.Group_Precedence IS NULL AND t2.Group_Precedence IS NOT NULL) OR (t1.Group_Precedence IS NOT NULL AND t2.Group_Precedence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NAME,t1.GROUP_DESCRIPTION,t1.GROUP_CLASS_ID,t1.GROUP_RULE_ID,t1.GROUP_PRECENDENCE,''ACTIVATE'',''VALID'' FROM IN_GRP_MASTER t1, MST_GRP_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,''INSERT'',''VALID'' FROM IN_GRP_MEMBER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_GRP_MEMBER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,''DELETE'',''VALID'' FROM MST_GRP_MEMBER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GRP_MEMBER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_GRP_MEMBER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MEMBER_ID,t1.GROUP_CLASS_ID,t1.GROUP_ID,t1.PK_COL_VAL1,t1.PK_COL_VAL2,t1.PK_COL_VAL3,t1.PK_COL_VAL4,t1.PK_COL_VAL5,t1.PK_COL_VAL6,t1.PK_COL_VAL7,t1.PK_COL_VAL8,t1.PK_COL_VAL9,t1.PK_COL_VAL10,''UPDATE'',''VALID'' FROM IN_GRP_MEMBER t1, MST_GRP_MEMBER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Member_Id <> t2.Member_Id OR ( t1.Member_Id IS NULL AND t2.Member_Id IS NOT NULL) OR (t1.Member_Id IS NOT NULL AND t2.Member_Id IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Pk_Col_Val1 <> t2.Pk_Col_Val1 OR ( t1.Pk_Col_Val1 IS NULL AND t2.Pk_Col_Val1 IS NOT NULL) OR (t1.Pk_Col_Val1 IS NOT NULL AND t2.Pk_Col_Val1 IS NULL)) OR (t1.Pk_Col_Val2 <> t2.Pk_Col_Val2 OR ( t1.Pk_Col_Val2 IS NULL AND t2.Pk_Col_Val2 IS NOT NULL) OR (t1.Pk_Col_Val2 IS NOT NULL AND t2.Pk_Col_Val2 IS NULL)) OR (t1.Pk_Col_Val3 <> t2.Pk_Col_Val3 OR ( t1.Pk_Col_Val3 IS NULL AND t2.Pk_Col_Val3 IS NOT NULL) OR (t1.Pk_Col_Val3 IS NOT NULL AND t2.Pk_Col_Val3 IS NULL)) OR (t1.Pk_Col_Val4 <> t2.Pk_Col_Val4 OR ( t1.Pk_Col_Val4 IS NULL AND t2.Pk_Col_Val4 IS NOT NULL) OR (t1.Pk_Col_Val4 IS NOT NULL AND t2.Pk_Col_Val4 IS NULL)) OR (t1.Pk_Col_Val5 <> t2.Pk_Col_Val5 OR ( t1.Pk_Col_Val5 IS NULL AND t2.Pk_Col_Val5 IS NOT NULL) OR (t1.Pk_Col_Val5 IS NOT NULL AND t2.Pk_Col_Val5 IS NULL)) OR (t1.Pk_Col_Val6 <> t2.Pk_Col_Val6 OR ( t1.Pk_Col_Val6 IS NULL AND t2.Pk_Col_Val6 IS NOT NULL) OR (t1.Pk_Col_Val6 IS NOT NULL AND t2.Pk_Col_Val6 IS NULL)) OR (t1.Pk_Col_Val7 <> t2.Pk_Col_Val7 OR ( t1.Pk_Col_Val7 IS NULL AND t2.Pk_Col_Val7 IS NOT NULL) OR (t1.Pk_Col_Val7 IS NOT NULL AND t2.Pk_Col_Val7 IS NULL)) OR (t1.Pk_Col_Val8 <> t2.Pk_Col_Val8 OR ( t1.Pk_Col_Val8 IS NULL AND t2.Pk_Col_Val8 IS NOT NULL) OR (t1.Pk_Col_Val8 IS NOT NULL AND t2.Pk_Col_Val8 IS NULL)) OR (t1.Pk_Col_Val9 <> t2.Pk_Col_Val9 OR ( t1.Pk_Col_Val9 IS NULL AND t2.Pk_Col_Val9 IS NOT NULL) OR (t1.Pk_Col_Val9 IS NOT NULL AND t2.Pk_Col_Val9 IS NULL)) OR (t1.Pk_Col_Val10 <> t2.Pk_Col_Val10 OR ( t1.Pk_Col_Val10 IS NULL AND t2.Pk_Col_Val10 IS NOT NULL) OR (t1.Pk_Col_Val10 IS NOT NULL AND t2.Pk_Col_Val10 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MEMBER_ID,t1.GROUP_CLASS_ID,t1.GROUP_ID,t1.PK_COL_VAL1,t1.PK_COL_VAL2,t1.PK_COL_VAL3,t1.PK_COL_VAL4,t1.PK_COL_VAL5,t1.PK_COL_VAL6,t1.PK_COL_VAL7,t1.PK_COL_VAL8,t1.PK_COL_VAL9,t1.PK_COL_VAL10,''ACTIVATE'',''VALID'' FROM IN_GRP_MEMBER t1, MST_GRP_MEMBER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_HSHLD_PRSNA', 'INSERT INTO NC_HSHLD_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,''INSERT'',''VALID'' FROM IN_HSHLD_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HSHLD_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HSHLD_PRSNA_ID = t2.HSHLD_PRSNA_ID AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_HSHLD_PRSNA', 'INSERT INTO NC_HSHLD_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,''DELETE'',''VALID'' FROM HSHLD_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_HSHLD_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HSHLD_PRSNA_ID = t2.HSHLD_PRSNA_ID AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_HSHLD_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HSHLD_PRSNA_ID = t2.HSHLD_PRSNA_ID AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_HSHLD_PRSNA', 'INSERT INTO NC_HSHLD_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.HSHLD_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.UNIVERSAL_OPT_OUT,t1.FAMLY_NAME,t1.NOTE_TXT,''UPDATE'',''VALID'' FROM IN_HSHLD_PRSNA t1, HSHLD_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HSHLD_PRSNA_ID = t2.HSHLD_PRSNA_ID AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.UNIVERSAL_OPT_OUT <> t2.UNIVERSAL_OPT_OUT OR ( t1.UNIVERSAL_OPT_OUT IS NULL AND t2.UNIVERSAL_OPT_OUT IS NOT NULL) OR (t1.UNIVERSAL_OPT_OUT IS NOT NULL AND t2.UNIVERSAL_OPT_OUT IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NOTE_TXT <> t2.NOTE_TXT OR ( t1.NOTE_TXT IS NULL AND t2.NOTE_TXT IS NOT NULL) OR (t1.NOTE_TXT IS NOT NULL AND t2.NOTE_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_HSHLD_PRSNA', 'INSERT INTO NC_HSHLD_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,HSHLD_PRSNA_ID,LEGAL_ENT_NBR,UNIVERSAL_OPT_OUT,FAMLY_NAME,NOTE_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.HSHLD_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.UNIVERSAL_OPT_OUT,t1.FAMLY_NAME,t1.NOTE_TXT,''ACTIVATE'',''VALID'' FROM IN_HSHLD_PRSNA t1, HSHLD_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.HSHLD_PRSNA_ID = t2.HSHLD_PRSNA_ID AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV', 'INSERT INTO NC_INCTV ( SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,''INSERT'',''VALID'' FROM IN_INCTV t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM INCTV t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_NBR = t2.INCTV_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV', 'INSERT INTO NC_INCTV ( SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,''DELETE'',''VALID'' FROM INCTV t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_INCTV t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_NBR = t2.INCTV_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_INCTV t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_NBR = t2.INCTV_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV', 'INSERT INTO NC_INCTV ( SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INCTV_NBR,t1.MKTNG_PGM_NBR,t1.INCTV_NAME,t1.INCTV_DESC,t1.INCTV_VAL_AMT,t1.INCTV_VAL_PCT,t1.INCTV_START_DATE,t1.INCTV_END_DATE,t1.INCTV_EXPRN_DATETM,t1.INCTV_EXPRN_DAY_CNT,t1.INCTV_CRTN_DATE,t1.INCTV_STATUS_CODE,t1.INCTV_TYPE_CODE,t1.BRAND_NAME,t1.COUPN_TYPE_CODE,t1.ALT_SYS_INCTV_ID,t1.BUNDLE_PACK_IND,t1.PREMARKET_OFFER_IND,t1.EXT_INCTV_CD,t1.COUPN_EXT_CD,t1.INCTV_UOM_CD,t1.TGT_DST_QTY,t1.CLRNG_HS_CD,t1.EXTRN_COUPN_DATA_SRCE_NBR,t1.COUPN_UNIQUE_IND,''UPDATE'',''VALID'' FROM IN_INCTV t1, INCTV t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_NBR = t2.INCTV_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.INCTV_NAME <> t2.INCTV_NAME OR ( t1.INCTV_NAME IS NULL AND t2.INCTV_NAME IS NOT NULL) OR (t1.INCTV_NAME IS NOT NULL AND t2.INCTV_NAME IS NULL)) OR (t1.INCTV_DESC <> t2.INCTV_DESC OR ( t1.INCTV_DESC IS NULL AND t2.INCTV_DESC IS NOT NULL) OR (t1.INCTV_DESC IS NOT NULL AND t2.INCTV_DESC IS NULL)) OR (t1.INCTV_VAL_AMT <> t2.INCTV_VAL_AMT OR ( t1.INCTV_VAL_AMT IS NULL AND t2.INCTV_VAL_AMT IS NOT NULL) OR (t1.INCTV_VAL_AMT IS NOT NULL AND t2.INCTV_VAL_AMT IS NULL)) OR (t1.INCTV_VAL_PCT <> t2.INCTV_VAL_PCT OR ( t1.INCTV_VAL_PCT IS NULL AND t2.INCTV_VAL_PCT IS NOT NULL) OR (t1.INCTV_VAL_PCT IS NOT NULL AND t2.INCTV_VAL_PCT IS NULL)) OR (t1.INCTV_START_DATE <> t2.INCTV_START_DATE OR ( t1.INCTV_START_DATE IS NULL AND t2.INCTV_START_DATE IS NOT NULL) OR (t1.INCTV_START_DATE IS NOT NULL AND t2.INCTV_START_DATE IS NULL)) OR (t1.INCTV_END_DATE <> t2.INCTV_END_DATE OR ( t1.INCTV_END_DATE IS NULL AND t2.INCTV_END_DATE IS NOT NULL) OR (t1.INCTV_END_DATE IS NOT NULL AND t2.INCTV_END_DATE IS NULL)) OR (t1.INCTV_EXPRN_DATETM <> t2.INCTV_EXPRN_DATETM OR ( t1.INCTV_EXPRN_DATETM IS NULL AND t2.INCTV_EXPRN_DATETM IS NOT NULL) OR (t1.INCTV_EXPRN_DATETM IS NOT NULL AND t2.INCTV_EXPRN_DATETM IS NULL)) OR (t1.INCTV_EXPRN_DAY_CNT <> t2.INCTV_EXPRN_DAY_CNT OR ( t1.INCTV_EXPRN_DAY_CNT IS NULL AND t2.INCTV_EXPRN_DAY_CNT IS NOT NULL) OR (t1.INCTV_EXPRN_DAY_CNT IS NOT NULL AND t2.INCTV_EXPRN_DAY_CNT IS NULL)) OR (t1.INCTV_CRTN_DATE <> t2.INCTV_CRTN_DATE OR ( t1.INCTV_CRTN_DATE IS NULL AND t2.INCTV_CRTN_DATE IS NOT NULL) OR (t1.INCTV_CRTN_DATE IS NOT NULL AND t2.INCTV_CRTN_DATE IS NULL)) OR (t1.INCTV_STATUS_CODE <> t2.INCTV_STATUS_CODE OR ( t1.INCTV_STATUS_CODE IS NULL AND t2.INCTV_STATUS_CODE IS NOT NULL) OR (t1.INCTV_STATUS_CODE IS NOT NULL AND t2.INCTV_STATUS_CODE IS NULL)) OR (t1.INCTV_TYPE_CODE <> t2.INCTV_TYPE_CODE OR ( t1.INCTV_TYPE_CODE IS NULL AND t2.INCTV_TYPE_CODE IS NOT NULL) OR (t1.INCTV_TYPE_CODE IS NOT NULL AND t2.INCTV_TYPE_CODE IS NULL)) OR (t1.BRAND_NAME <> t2.BRAND_NAME OR ( t1.BRAND_NAME IS NULL AND t2.BRAND_NAME IS NOT NULL) OR (t1.BRAND_NAME IS NOT NULL AND t2.BRAND_NAME IS NULL)) OR (t1.COUPN_TYPE_CODE <> t2.COUPN_TYPE_CODE OR ( t1.COUPN_TYPE_CODE IS NULL AND t2.COUPN_TYPE_CODE IS NOT NULL) OR (t1.COUPN_TYPE_CODE IS NOT NULL AND t2.COUPN_TYPE_CODE IS NULL)) OR (t1.ALT_SYS_INCTV_ID <> t2.ALT_SYS_INCTV_ID OR ( t1.ALT_SYS_INCTV_ID IS NULL AND t2.ALT_SYS_INCTV_ID IS NOT NULL) OR (t1.ALT_SYS_INCTV_ID IS NOT NULL AND t2.ALT_SYS_INCTV_ID IS NULL)) OR (t1.BUNDLE_PACK_IND <> t2.BUNDLE_PACK_IND OR ( t1.BUNDLE_PACK_IND IS NULL AND t2.BUNDLE_PACK_IND IS NOT NULL) OR (t1.BUNDLE_PACK_IND IS NOT NULL AND t2.BUNDLE_PACK_IND IS NULL)) OR (t1.PREMARKET_OFFER_IND <> t2.PREMARKET_OFFER_IND OR ( t1.PREMARKET_OFFER_IND IS NULL AND t2.PREMARKET_OFFER_IND IS NOT NULL) OR (t1.PREMARKET_OFFER_IND IS NOT NULL AND t2.PREMARKET_OFFER_IND IS NULL)) OR (t1.EXT_INCTV_CD <> t2.EXT_INCTV_CD OR ( t1.EXT_INCTV_CD IS NULL AND t2.EXT_INCTV_CD IS NOT NULL) OR (t1.EXT_INCTV_CD IS NOT NULL AND t2.EXT_INCTV_CD IS NULL)) OR (t1.COUPN_EXT_CD <> t2.COUPN_EXT_CD OR ( t1.COUPN_EXT_CD IS NULL AND t2.COUPN_EXT_CD IS NOT NULL) OR (t1.COUPN_EXT_CD IS NOT NULL AND t2.COUPN_EXT_CD IS NULL)) OR (t1.INCTV_UOM_CD <> t2.INCTV_UOM_CD OR ( t1.INCTV_UOM_CD IS NULL AND t2.INCTV_UOM_CD IS NOT NULL) OR (t1.INCTV_UOM_CD IS NOT NULL AND t2.INCTV_UOM_CD IS NULL)) OR (t1.TGT_DST_QTY <> t2.TGT_DST_QTY OR ( t1.TGT_DST_QTY IS NULL AND t2.TGT_DST_QTY IS NOT NULL) OR (t1.TGT_DST_QTY IS NOT NULL AND t2.TGT_DST_QTY IS NULL)) OR (t1.CLRNG_HS_CD <> t2.CLRNG_HS_CD OR ( t1.CLRNG_HS_CD IS NULL AND t2.CLRNG_HS_CD IS NOT NULL) OR (t1.CLRNG_HS_CD IS NOT NULL AND t2.CLRNG_HS_CD IS NULL)) OR (t1.EXTRN_COUPN_DATA_SRCE_NBR <> t2.EXTRN_COUPN_DATA_SRCE_NBR OR ( t1.EXTRN_COUPN_DATA_SRCE_NBR IS NULL AND t2.EXTRN_COUPN_DATA_SRCE_NBR IS NOT NULL) OR (t1.EXTRN_COUPN_DATA_SRCE_NBR IS NOT NULL AND t2.EXTRN_COUPN_DATA_SRCE_NBR IS NULL)) OR (t1.COUPN_UNIQUE_IND <> t2.COUPN_UNIQUE_IND OR ( t1.COUPN_UNIQUE_IND IS NULL AND t2.COUPN_UNIQUE_IND IS NOT NULL) OR (t1.COUPN_UNIQUE_IND IS NOT NULL AND t2.COUPN_UNIQUE_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV', 'INSERT INTO NC_INCTV ( SCENARIO_ID,INCTV_NBR,MKTNG_PGM_NBR,INCTV_NAME,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_START_DATE,INCTV_END_DATE,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,BRAND_NAME,COUPN_TYPE_CODE,ALT_SYS_INCTV_ID,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INCTV_NBR,t1.MKTNG_PGM_NBR,t1.INCTV_NAME,t1.INCTV_DESC,t1.INCTV_VAL_AMT,t1.INCTV_VAL_PCT,t1.INCTV_START_DATE,t1.INCTV_END_DATE,t1.INCTV_EXPRN_DATETM,t1.INCTV_EXPRN_DAY_CNT,t1.INCTV_CRTN_DATE,t1.INCTV_STATUS_CODE,t1.INCTV_TYPE_CODE,t1.BRAND_NAME,t1.COUPN_TYPE_CODE,t1.ALT_SYS_INCTV_ID,t1.BUNDLE_PACK_IND,t1.PREMARKET_OFFER_IND,t1.EXT_INCTV_CD,t1.COUPN_EXT_CD,t1.INCTV_UOM_CD,t1.TGT_DST_QTY,t1.CLRNG_HS_CD,t1.EXTRN_COUPN_DATA_SRCE_NBR,t1.COUPN_UNIQUE_IND,''ACTIVATE'',''VALID'' FROM IN_INCTV t1, INCTV t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_NBR = t2.INCTV_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV_ITEM', 'INSERT INTO NC_INCTV_ITEM ( SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,''INSERT'',''VALID'' FROM IN_INCTV_ITEM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM INCTV_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_ITEM_NBR = t2.INCTV_ITEM_NBR AND t1.INCTV_NBR = t2.INCTV_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV_ITEM', 'INSERT INTO NC_INCTV_ITEM ( SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,''DELETE'',''VALID'' FROM INCTV_ITEM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_INCTV_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_ITEM_NBR = t2.INCTV_ITEM_NBR AND t1.INCTV_NBR = t2.INCTV_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_INCTV_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_ITEM_NBR = t2.INCTV_ITEM_NBR AND t1.INCTV_NBR = t2.INCTV_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV_ITEM', 'INSERT INTO NC_INCTV_ITEM ( SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INCTV_NBR,t1.INCTV_ITEM_QTY,t1.INCTV_ITEM_DESC,t1.INCTV_ITEM_NAME,t1.INCTV_ITEM_NBR,t1.PROD_ITEM_UPC,t1.CATEG_CODE,t1.SEG_CODE,t1.BRAND_CODE,t1.SUB_BRAND_CODE,t1.ITEM_VERS_CODE,t1.BRAND_FAMLY_ID,t1.PROD_FAMLY_ID,t1.GLOBAL_FORM_CODE,''UPDATE'',''VALID'' FROM IN_INCTV_ITEM t1, INCTV_ITEM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_ITEM_NBR = t2.INCTV_ITEM_NBR AND t1.INCTV_NBR = t2.INCTV_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.INCTV_ITEM_QTY <> t2.INCTV_ITEM_QTY OR ( t1.INCTV_ITEM_QTY IS NULL AND t2.INCTV_ITEM_QTY IS NOT NULL) OR (t1.INCTV_ITEM_QTY IS NOT NULL AND t2.INCTV_ITEM_QTY IS NULL)) OR (t1.INCTV_ITEM_DESC <> t2.INCTV_ITEM_DESC OR ( t1.INCTV_ITEM_DESC IS NULL AND t2.INCTV_ITEM_DESC IS NOT NULL) OR (t1.INCTV_ITEM_DESC IS NOT NULL AND t2.INCTV_ITEM_DESC IS NULL)) OR (t1.INCTV_ITEM_NAME <> t2.INCTV_ITEM_NAME OR ( t1.INCTV_ITEM_NAME IS NULL AND t2.INCTV_ITEM_NAME IS NOT NULL) OR (t1.INCTV_ITEM_NAME IS NOT NULL AND t2.INCTV_ITEM_NAME IS NULL)) OR (t1.INCTV_ITEM_NBR <> t2.INCTV_ITEM_NBR OR ( t1.INCTV_ITEM_NBR IS NULL AND t2.INCTV_ITEM_NBR IS NOT NULL) OR (t1.INCTV_ITEM_NBR IS NOT NULL AND t2.INCTV_ITEM_NBR IS NULL)) OR (t1.PROD_ITEM_UPC <> t2.PROD_ITEM_UPC OR ( t1.PROD_ITEM_UPC IS NULL AND t2.PROD_ITEM_UPC IS NOT NULL) OR (t1.PROD_ITEM_UPC IS NOT NULL AND t2.PROD_ITEM_UPC IS NULL)) OR (t1.CATEG_CODE <> t2.CATEG_CODE OR ( t1.CATEG_CODE IS NULL AND t2.CATEG_CODE IS NOT NULL) OR (t1.CATEG_CODE IS NOT NULL AND t2.CATEG_CODE IS NULL)) OR (t1.SEG_CODE <> t2.SEG_CODE OR ( t1.SEG_CODE IS NULL AND t2.SEG_CODE IS NOT NULL) OR (t1.SEG_CODE IS NOT NULL AND t2.SEG_CODE IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.SUB_BRAND_CODE <> t2.SUB_BRAND_CODE OR ( t1.SUB_BRAND_CODE IS NULL AND t2.SUB_BRAND_CODE IS NOT NULL) OR (t1.SUB_BRAND_CODE IS NOT NULL AND t2.SUB_BRAND_CODE IS NULL)) OR (t1.ITEM_VERS_CODE <> t2.ITEM_VERS_CODE OR ( t1.ITEM_VERS_CODE IS NULL AND t2.ITEM_VERS_CODE IS NOT NULL) OR (t1.ITEM_VERS_CODE IS NOT NULL AND t2.ITEM_VERS_CODE IS NULL)) OR (t1.BRAND_FAMLY_ID <> t2.BRAND_FAMLY_ID OR ( t1.BRAND_FAMLY_ID IS NULL AND t2.BRAND_FAMLY_ID IS NOT NULL) OR (t1.BRAND_FAMLY_ID IS NOT NULL AND t2.BRAND_FAMLY_ID IS NULL)) OR (t1.PROD_FAMLY_ID <> t2.PROD_FAMLY_ID OR ( t1.PROD_FAMLY_ID IS NULL AND t2.PROD_FAMLY_ID IS NOT NULL) OR (t1.PROD_FAMLY_ID IS NOT NULL AND t2.PROD_FAMLY_ID IS NULL)) OR (t1.GLOBAL_FORM_CODE <> t2.GLOBAL_FORM_CODE OR ( t1.GLOBAL_FORM_CODE IS NULL AND t2.GLOBAL_FORM_CODE IS NOT NULL) OR (t1.GLOBAL_FORM_CODE IS NOT NULL AND t2.GLOBAL_FORM_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INCTV_ITEM', 'INSERT INTO NC_INCTV_ITEM ( SCENARIO_ID,INCTV_NBR,INCTV_ITEM_QTY,INCTV_ITEM_DESC,INCTV_ITEM_NAME,INCTV_ITEM_NBR,PROD_ITEM_UPC,CATEG_CODE,SEG_CODE,BRAND_CODE,SUB_BRAND_CODE,ITEM_VERS_CODE,BRAND_FAMLY_ID,PROD_FAMLY_ID,GLOBAL_FORM_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INCTV_NBR,t1.INCTV_ITEM_QTY,t1.INCTV_ITEM_DESC,t1.INCTV_ITEM_NAME,t1.INCTV_ITEM_NBR,t1.PROD_ITEM_UPC,t1.CATEG_CODE,t1.SEG_CODE,t1.BRAND_CODE,t1.SUB_BRAND_CODE,t1.ITEM_VERS_CODE,t1.BRAND_FAMLY_ID,t1.PROD_FAMLY_ID,t1.GLOBAL_FORM_CODE,''ACTIVATE'',''VALID'' FROM IN_INCTV_ITEM t1, INCTV_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INCTV_ITEM_NBR = t2.INCTV_ITEM_NBR AND t1.INCTV_NBR = t2.INCTV_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC', 'INSERT INTO NC_INTRFC ( SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,''INSERT'',''VALID'' FROM IN_INTRFC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM INTRFC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_NBR = t2.INTRFC_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC', 'INSERT INTO NC_INTRFC ( SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,''DELETE'',''VALID'' FROM INTRFC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_INTRFC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_NBR = t2.INTRFC_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_INTRFC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_NBR = t2.INTRFC_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC', 'INSERT INTO NC_INTRFC ( SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_NBR,t1.INTRFC_NM,t1.INTRFC_DESC,t1.INTRFC_TYPE_CD,t1.FILE_DELIMITER,t1.FILE_NAMING,t1.FILE_TYPE,t1.INTRFC_CNTCT_NBR,''UPDATE'',''VALID'' FROM IN_INTRFC t1, INTRFC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_NBR = t2.INTRFC_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.INTRFC_NBR <> t2.INTRFC_NBR OR ( t1.INTRFC_NBR IS NULL AND t2.INTRFC_NBR IS NOT NULL) OR (t1.INTRFC_NBR IS NOT NULL AND t2.INTRFC_NBR IS NULL)) OR (t1.INTRFC_NM <> t2.INTRFC_NM OR ( t1.INTRFC_NM IS NULL AND t2.INTRFC_NM IS NOT NULL) OR (t1.INTRFC_NM IS NOT NULL AND t2.INTRFC_NM IS NULL)) OR (t1.INTRFC_DESC <> t2.INTRFC_DESC OR ( t1.INTRFC_DESC IS NULL AND t2.INTRFC_DESC IS NOT NULL) OR (t1.INTRFC_DESC IS NOT NULL AND t2.INTRFC_DESC IS NULL)) OR (t1.INTRFC_TYPE_CD <> t2.INTRFC_TYPE_CD OR ( t1.INTRFC_TYPE_CD IS NULL AND t2.INTRFC_TYPE_CD IS NOT NULL) OR (t1.INTRFC_TYPE_CD IS NOT NULL AND t2.INTRFC_TYPE_CD IS NULL)) OR (t1.FILE_DELIMITER <> t2.FILE_DELIMITER OR ( t1.FILE_DELIMITER IS NULL AND t2.FILE_DELIMITER IS NOT NULL) OR (t1.FILE_DELIMITER IS NOT NULL AND t2.FILE_DELIMITER IS NULL)) OR (t1.FILE_NAMING <> t2.FILE_NAMING OR ( t1.FILE_NAMING IS NULL AND t2.FILE_NAMING IS NOT NULL) OR (t1.FILE_NAMING IS NOT NULL AND t2.FILE_NAMING IS NULL)) OR (t1.FILE_TYPE <> t2.FILE_TYPE OR ( t1.FILE_TYPE IS NULL AND t2.FILE_TYPE IS NOT NULL) OR (t1.FILE_TYPE IS NOT NULL AND t2.FILE_TYPE IS NULL)) OR (t1.INTRFC_CNTCT_NBR <> t2.INTRFC_CNTCT_NBR OR ( t1.INTRFC_CNTCT_NBR IS NULL AND t2.INTRFC_CNTCT_NBR IS NOT NULL) OR (t1.INTRFC_CNTCT_NBR IS NOT NULL AND t2.INTRFC_CNTCT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC', 'INSERT INTO NC_INTRFC ( SCENARIO_ID,INTRFC_NBR,INTRFC_NM,INTRFC_DESC,INTRFC_TYPE_CD,FILE_DELIMITER,FILE_NAMING,FILE_TYPE,INTRFC_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_NBR,t1.INTRFC_NM,t1.INTRFC_DESC,t1.INTRFC_TYPE_CD,t1.FILE_DELIMITER,t1.FILE_NAMING,t1.FILE_TYPE,t1.INTRFC_CNTCT_NBR,''ACTIVATE'',''VALID'' FROM IN_INTRFC t1, INTRFC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_NBR = t2.INTRFC_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC_TYPE', 'INSERT INTO NC_INTRFC_TYPE ( SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_INTRFC_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM INTRFC_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_TYPE_CD = t2.INTRFC_TYPE_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC_TYPE', 'INSERT INTO NC_INTRFC_TYPE ( SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM INTRFC_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_INTRFC_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_TYPE_CD = t2.INTRFC_TYPE_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_INTRFC_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_TYPE_CD = t2.INTRFC_TYPE_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC_TYPE', 'INSERT INTO NC_INTRFC_TYPE ( SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_TYPE_CD,t1.INTRFC_TYPE_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_INTRFC_TYPE t1, INTRFC_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_TYPE_CD = t2.INTRFC_TYPE_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.INTRFC_TYPE_CD <> t2.INTRFC_TYPE_CD OR ( t1.INTRFC_TYPE_CD IS NULL AND t2.INTRFC_TYPE_CD IS NOT NULL) OR (t1.INTRFC_TYPE_CD IS NOT NULL AND t2.INTRFC_TYPE_CD IS NULL)) OR (t1.INTRFC_TYPE_NM <> t2.INTRFC_TYPE_NM OR ( t1.INTRFC_TYPE_NM IS NULL AND t2.INTRFC_TYPE_NM IS NOT NULL) OR (t1.INTRFC_TYPE_NM IS NOT NULL AND t2.INTRFC_TYPE_NM IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INTRFC_TYPE', 'INSERT INTO NC_INTRFC_TYPE ( SCENARIO_ID,INTRFC_TYPE_CD,INTRFC_TYPE_NM,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.INTRFC_TYPE_CD,t1.INTRFC_TYPE_NM,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_INTRFC_TYPE t1, INTRFC_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.INTRFC_TYPE_CD = t2.INTRFC_TYPE_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LANG', 'INSERT INTO NC_LANG ( SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_LANG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM LANG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LANG_CODE = t2.LANG_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LANG', 'INSERT INTO NC_LANG ( SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM LANG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LANG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LANG_CODE = t2.LANG_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LANG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LANG_CODE = t2.LANG_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LANG', 'INSERT INTO NC_LANG ( SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LANG_CODE,t1.LANG_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_LANG t1, LANG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LANG_CODE = t2.LANG_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.LANG_NAME <> t2.LANG_NAME OR ( t1.LANG_NAME IS NULL AND t2.LANG_NAME IS NOT NULL) OR (t1.LANG_NAME IS NOT NULL AND t2.LANG_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LANG', 'INSERT INTO NC_LANG ( SCENARIO_ID,LANG_CODE,LANG_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LANG_CODE,t1.LANG_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_LANG t1, LANG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LANG_CODE = t2.LANG_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT', 'INSERT INTO NC_LEGAL_ENT ( SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,''INSERT'',''VALID'' FROM IN_LEGAL_ENT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM LEGAL_ENT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT', 'INSERT INTO NC_LEGAL_ENT ( SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,''DELETE'',''VALID'' FROM LEGAL_ENT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LEGAL_ENT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LEGAL_ENT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT', 'INSERT INTO NC_LEGAL_ENT ( SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.LEGAL_ENT_NAME,t1.LEGAL_ENT_DESC,t1.LEGAL_ENT_SHORT_NAME,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_CODE,''UPDATE'',''VALID'' FROM IN_LEGAL_ENT t1, LEGAL_ENT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) OR (t1.LEGAL_ENT_DESC <> t2.LEGAL_ENT_DESC OR ( t1.LEGAL_ENT_DESC IS NULL AND t2.LEGAL_ENT_DESC IS NOT NULL) OR (t1.LEGAL_ENT_DESC IS NOT NULL AND t2.LEGAL_ENT_DESC IS NULL)) OR (t1.LEGAL_ENT_SHORT_NAME <> t2.LEGAL_ENT_SHORT_NAME OR ( t1.LEGAL_ENT_SHORT_NAME IS NULL AND t2.LEGAL_ENT_SHORT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_SHORT_NAME IS NOT NULL AND t2.LEGAL_ENT_SHORT_NAME IS NULL)) OR (t1.GEOC_REGN_CODE <> t2.GEOC_REGN_CODE OR ( t1.GEOC_REGN_CODE IS NULL AND t2.GEOC_REGN_CODE IS NOT NULL) OR (t1.GEOC_REGN_CODE IS NOT NULL AND t2.GEOC_REGN_CODE IS NULL)) OR (t1.GEOC_SUB_REGN_CODE <> t2.GEOC_SUB_REGN_CODE OR ( t1.GEOC_SUB_REGN_CODE IS NULL AND t2.GEOC_SUB_REGN_CODE IS NOT NULL) OR (t1.GEOC_SUB_REGN_CODE IS NOT NULL AND t2.GEOC_SUB_REGN_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT', 'INSERT INTO NC_LEGAL_ENT ( SCENARIO_ID,LEGAL_ENT_NBR,LEGAL_ENT_NAME,LEGAL_ENT_DESC,LEGAL_ENT_SHORT_NAME,GEOC_REGN_CODE,GEOC_SUB_REGN_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.LEGAL_ENT_NAME,t1.LEGAL_ENT_DESC,t1.LEGAL_ENT_SHORT_NAME,t1.GEOC_REGN_CODE,t1.GEOC_SUB_REGN_CODE,''ACTIVATE'',''VALID'' FROM IN_LEGAL_ENT t1, LEGAL_ENT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT_TRAIT_MAP', 'INSERT INTO NC_LEGAL_ENT_TRAIT_MAP ( SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,''INSERT'',''VALID'' FROM IN_LEGAL_ENT_TRAIT_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM LEGAL_ENT_TRAIT_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT_TRAIT_MAP', 'INSERT INTO NC_LEGAL_ENT_TRAIT_MAP ( SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,''DELETE'',''VALID'' FROM LEGAL_ENT_TRAIT_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LEGAL_ENT_TRAIT_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LEGAL_ENT_TRAIT_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT_TRAIT_MAP', 'INSERT INTO NC_LEGAL_ENT_TRAIT_MAP ( SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.TRT_NBR,t1.TRT_NAME,t1.TRT_DESC,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_DESC,t1.TRT_ENT_TYPE_CODE,t1.TRT_TBL,t1.TRT_COL,t1.ATTR_TBL,t1.ATTR_COL,t1.LANG_CODE,''UPDATE'',''VALID'' FROM IN_LEGAL_ENT_TRAIT_MAP t1, LEGAL_ENT_TRAIT_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.TRT_DESC <> t2.TRT_DESC OR ( t1.TRT_DESC IS NULL AND t2.TRT_DESC IS NOT NULL) OR (t1.TRT_DESC IS NOT NULL AND t2.TRT_DESC IS NULL)) OR (t1.PREDFND_TRT_VAL_NBR <> t2.PREDFND_TRT_VAL_NBR OR ( t1.PREDFND_TRT_VAL_NBR IS NULL AND t2.PREDFND_TRT_VAL_NBR IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NBR IS NOT NULL AND t2.PREDFND_TRT_VAL_NBR IS NULL)) OR (t1.PREDFND_TRT_DESC <> t2.PREDFND_TRT_DESC OR ( t1.PREDFND_TRT_DESC IS NULL AND t2.PREDFND_TRT_DESC IS NOT NULL) OR (t1.PREDFND_TRT_DESC IS NOT NULL AND t2.PREDFND_TRT_DESC IS NULL)) OR (t1.TRT_ENT_TYPE_CODE <> t2.TRT_ENT_TYPE_CODE OR ( t1.TRT_ENT_TYPE_CODE IS NULL AND t2.TRT_ENT_TYPE_CODE IS NOT NULL) OR (t1.TRT_ENT_TYPE_CODE IS NOT NULL AND t2.TRT_ENT_TYPE_CODE IS NULL)) OR (t1.TRT_TBL <> t2.TRT_TBL OR ( t1.TRT_TBL IS NULL AND t2.TRT_TBL IS NOT NULL) OR (t1.TRT_TBL IS NOT NULL AND t2.TRT_TBL IS NULL)) OR (t1.TRT_COL <> t2.TRT_COL OR ( t1.TRT_COL IS NULL AND t2.TRT_COL IS NOT NULL) OR (t1.TRT_COL IS NOT NULL AND t2.TRT_COL IS NULL)) OR (t1.ATTR_TBL <> t2.ATTR_TBL OR ( t1.ATTR_TBL IS NULL AND t2.ATTR_TBL IS NOT NULL) OR (t1.ATTR_TBL IS NOT NULL AND t2.ATTR_TBL IS NULL)) OR (t1.ATTR_COL <> t2.ATTR_COL OR ( t1.ATTR_COL IS NULL AND t2.ATTR_COL IS NOT NULL) OR (t1.ATTR_COL IS NOT NULL AND t2.ATTR_COL IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LEGAL_ENT_TRAIT_MAP', 'INSERT INTO NC_LEGAL_ENT_TRAIT_MAP ( SCENARIO_ID,LEGAL_ENT_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.TRT_NBR,t1.TRT_NAME,t1.TRT_DESC,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_DESC,t1.TRT_ENT_TYPE_CODE,t1.TRT_TBL,t1.TRT_COL,t1.ATTR_TBL,t1.ATTR_COL,t1.LANG_CODE,''ACTIVATE'',''VALID'' FROM IN_LEGAL_ENT_TRAIT_MAP t1, LEGAL_ENT_TRAIT_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('LOAD_INFO', 'INSERT INTO NC_LOAD_INFO ( SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,''INSERT'',''VALID'' FROM LOAD_INFO t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM LOAD_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('LOAD_INFO', 'INSERT INTO NC_LOAD_INFO ( SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,''DELETE'',''VALID'' FROM LOAD_INFO t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM LOAD_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM LOAD_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('LOAD_INFO', 'INSERT INTO NC_LOAD_INFO ( SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.PROCESS_NAME,t1.PROCESS_START_TIME,t1.PROCESS_END_TIME,t1.ERROR_MSG_TXT,t1.STATUS,t1.BATCH_ID,t1.NC_TYPE,t1.CNTRY_NAME,''UPDATE'',''VALID'' FROM LOAD_INFO t1, LOAD_INFO t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.PROCESS_NAME <> t2.PROCESS_NAME OR ( t1.PROCESS_NAME IS NULL AND t2.PROCESS_NAME IS NOT NULL) OR (t1.PROCESS_NAME IS NOT NULL AND t2.PROCESS_NAME IS NULL)) OR (t1.PROCESS_START_TIME <> t2.PROCESS_START_TIME OR ( t1.PROCESS_START_TIME IS NULL AND t2.PROCESS_START_TIME IS NOT NULL) OR (t1.PROCESS_START_TIME IS NOT NULL AND t2.PROCESS_START_TIME IS NULL)) OR (t1.PROCESS_END_TIME <> t2.PROCESS_END_TIME OR ( t1.PROCESS_END_TIME IS NULL AND t2.PROCESS_END_TIME IS NOT NULL) OR (t1.PROCESS_END_TIME IS NOT NULL AND t2.PROCESS_END_TIME IS NULL)) OR (t1.ERROR_MSG_TXT <> t2.ERROR_MSG_TXT OR ( t1.ERROR_MSG_TXT IS NULL AND t2.ERROR_MSG_TXT IS NOT NULL) OR (t1.ERROR_MSG_TXT IS NOT NULL AND t2.ERROR_MSG_TXT IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) OR (t1.BATCH_ID <> t2.BATCH_ID OR ( t1.BATCH_ID IS NULL AND t2.BATCH_ID IS NOT NULL) OR (t1.BATCH_ID IS NOT NULL AND t2.BATCH_ID IS NULL)) OR (t1.NC_TYPE <> t2.NC_TYPE OR ( t1.NC_TYPE IS NULL AND t2.NC_TYPE IS NOT NULL) OR (t1.NC_TYPE IS NOT NULL AND t2.NC_TYPE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('LOAD_INFO', 'INSERT INTO NC_LOAD_INFO ( SCENARIO_ID,LOAD_ID,PROCESS_NAME,PROCESS_START_TIME,PROCESS_END_TIME,ERROR_MSG_TXT,STATUS,BATCH_ID,NC_TYPE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.PROCESS_NAME,t1.PROCESS_START_TIME,t1.PROCESS_END_TIME,t1.ERROR_MSG_TXT,t1.STATUS,t1.BATCH_ID,t1.NC_TYPE,t1.CNTRY_NAME,''ACTIVATE'',''VALID'' FROM LOAD_INFO t1, LOAD_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,''INSERT'',''VALID'' FROM IN_LAST_SYNC_UP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_LAST_SYNC_UP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,''DELETE'',''VALID'' FROM MST_LAST_SYNC_UP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LAST_SYNC_UP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LAST_SYNC_UP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.APPLICATION_NAME,t1.INSTANCE_ID,t1.END_TIME,t1.OPERATION_CODE,t1.OPERATION_STATUS,t1.START_TIME,t1.SYNC_UP_DATE,t1.SYNC_UP_ID,''UPDATE'',''VALID'' FROM IN_LAST_SYNC_UP t1, MST_LAST_SYNC_UP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ApplicationName <> t2.ApplicationName OR ( t1.ApplicationName IS NULL AND t2.ApplicationName IS NOT NULL) OR (t1.ApplicationName IS NOT NULL AND t2.ApplicationName IS NULL)) OR (t1.InstanceID <> t2.InstanceID OR ( t1.InstanceID IS NULL AND t2.InstanceID IS NOT NULL) OR (t1.InstanceID IS NOT NULL AND t2.InstanceID IS NULL)) OR (t1.endTime <> t2.endTime OR ( t1.endTime IS NULL AND t2.endTime IS NOT NULL) OR (t1.endTime IS NOT NULL AND t2.endTime IS NULL)) OR (t1.operationCode <> t2.operationCode OR ( t1.operationCode IS NULL AND t2.operationCode IS NOT NULL) OR (t1.operationCode IS NOT NULL AND t2.operationCode IS NULL)) OR (t1.operationStatus <> t2.operationStatus OR ( t1.operationStatus IS NULL AND t2.operationStatus IS NOT NULL) OR (t1.operationStatus IS NOT NULL AND t2.operationStatus IS NULL)) OR (t1.startTime <> t2.startTime OR ( t1.startTime IS NULL AND t2.startTime IS NOT NULL) OR (t1.startTime IS NOT NULL AND t2.startTime IS NULL)) OR (t1.syncUpDate <> t2.syncUpDate OR ( t1.syncUpDate IS NULL AND t2.syncUpDate IS NOT NULL) OR (t1.syncUpDate IS NOT NULL AND t2.syncUpDate IS NULL)) OR (t1.syncUpID <> t2.syncUpID OR ( t1.syncUpID IS NULL AND t2.syncUpID IS NOT NULL) OR (t1.syncUpID IS NOT NULL AND t2.syncUpID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.APPLICATION_NAME,t1.INSTANCE_ID,t1.END_TIME,t1.OPERATION_CODE,t1.OPERATION_STATUS,t1.START_TIME,t1.SYNC_UP_DATE,t1.SYNC_UP_ID,''ACTIVATE'',''VALID'' FROM IN_LAST_SYNC_UP t1, MST_LAST_SYNC_UP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LOG_ERROR_DATA', 'INSERT INTO NC_LOG_ERROR_DATA ( SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,''INSERT'',''VALID'' FROM IN_LOG_ERROR_DATA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_LOG_ERROR_DATA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LOG_ERROR_DATA', 'INSERT INTO NC_LOG_ERROR_DATA ( SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,''DELETE'',''VALID'' FROM MST_LOG_ERROR_DATA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LOG_ERROR_DATA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LOG_ERROR_DATA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LOG_ERROR_DATA', 'INSERT INTO NC_LOG_ERROR_DATA ( SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ID,t1.SURR_KEY,t1.PRIMARY_KEY,t1.MARKED,''UPDATE'',''VALID'' FROM IN_LOG_ERROR_DATA t1, MST_LOG_ERROR_DATA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) OR (t1.surrKey <> t2.surrKey OR ( t1.surrKey IS NULL AND t2.surrKey IS NOT NULL) OR (t1.surrKey IS NOT NULL AND t2.surrKey IS NULL)) OR (t1.primaryKey <> t2.primaryKey OR ( t1.primaryKey IS NULL AND t2.primaryKey IS NOT NULL) OR (t1.primaryKey IS NOT NULL AND t2.primaryKey IS NULL)) OR (t1.marked <> t2.marked OR ( t1.marked IS NULL AND t2.marked IS NOT NULL) OR (t1.marked IS NOT NULL AND t2.marked IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LOG_ERROR_DATA', 'INSERT INTO NC_LOG_ERROR_DATA ( SCENARIO_ID,ID,SURR_KEY,PRIMARY_KEY,MARKED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ID,t1.SURR_KEY,t1.PRIMARY_KEY,t1.MARKED,''ACTIVATE'',''VALID'' FROM IN_LOG_ERROR_DATA t1, MST_LOG_ERROR_DATA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MASTER_MKTNG_PGM_ASSOC', 'INSERT INTO NC_MASTER_MKTNG_PGM_ASSOC ( SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,''INSERT'',''VALID'' FROM IN_MASTER_MKTNG_PGM_ASSOC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MASTER_MKTNG_PGM_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MASTER_MKTNG_PGM_NBR = t2.MASTER_MKTNG_PGM_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MASTER_MKTNG_PGM_ASSOC', 'INSERT INTO NC_MASTER_MKTNG_PGM_ASSOC ( SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,''DELETE'',''VALID'' FROM MASTER_MKTNG_PGM_ASSOC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MASTER_MKTNG_PGM_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MASTER_MKTNG_PGM_NBR = t2.MASTER_MKTNG_PGM_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MASTER_MKTNG_PGM_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MASTER_MKTNG_PGM_NBR = t2.MASTER_MKTNG_PGM_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MASTER_MKTNG_PGM_ASSOC', 'INSERT INTO NC_MASTER_MKTNG_PGM_ASSOC ( SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MASTER_MKTNG_PGM_NBR,t1.MKTNG_PGM_NBR,''UPDATE'',''VALID'' FROM IN_MASTER_MKTNG_PGM_ASSOC t1, MASTER_MKTNG_PGM_ASSOC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MASTER_MKTNG_PGM_NBR = t2.MASTER_MKTNG_PGM_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MASTER_MKTNG_PGM_NBR <> t2.MASTER_MKTNG_PGM_NBR OR ( t1.MASTER_MKTNG_PGM_NBR IS NULL AND t2.MASTER_MKTNG_PGM_NBR IS NOT NULL) OR (t1.MASTER_MKTNG_PGM_NBR IS NOT NULL AND t2.MASTER_MKTNG_PGM_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MASTER_MKTNG_PGM_ASSOC', 'INSERT INTO NC_MASTER_MKTNG_PGM_ASSOC ( SCENARIO_ID,MASTER_MKTNG_PGM_NBR,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MASTER_MKTNG_PGM_NBR,t1.MKTNG_PGM_NBR,''ACTIVATE'',''VALID'' FROM IN_MASTER_MKTNG_PGM_ASSOC t1, MASTER_MKTNG_PGM_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MASTER_MKTNG_PGM_NBR = t2.MASTER_MKTNG_PGM_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_EMAIL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_EMAIL_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_EMAIL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_EMAIL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM MATCHD_CNSMR_EMAIL_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_EMAIL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_EMAIL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_EMAIL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_EMAIL_ADDR t1, MATCHD_CNSMR_EMAIL_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.EMAIL_FORMT_CODE <> t2.EMAIL_FORMT_CODE OR ( t1.EMAIL_FORMT_CODE IS NULL AND t2.EMAIL_FORMT_CODE IS NOT NULL) OR (t1.EMAIL_FORMT_CODE IS NOT NULL AND t2.EMAIL_FORMT_CODE IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_EMAIL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_EMAIL_ADDR t1, MATCHD_CNSMR_EMAIL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PHONE', 'INSERT INTO NC_MATCHD_CNSMR_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_PHONE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PHONE', 'INSERT INTO NC_MATCHD_CNSMR_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM MATCHD_CNSMR_PHONE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PHONE', 'INSERT INTO NC_MATCHD_CNSMR_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PHONE_EXTSN_NUM,t1.SMS_PREFR_IND,t1.FULL_PHONE_NUM,t1.PHONE_LINE_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_CNTRY_NBR,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_PHONE t1, MATCHD_CNSMR_PHONE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PHONE_EXTSN_NUM <> t2.PHONE_EXTSN_NUM OR ( t1.PHONE_EXTSN_NUM IS NULL AND t2.PHONE_EXTSN_NUM IS NOT NULL) OR (t1.PHONE_EXTSN_NUM IS NOT NULL AND t2.PHONE_EXTSN_NUM IS NULL)) OR (t1.SMS_PREFR_IND <> t2.SMS_PREFR_IND OR ( t1.SMS_PREFR_IND IS NULL AND t2.SMS_PREFR_IND IS NOT NULL) OR (t1.SMS_PREFR_IND IS NOT NULL AND t2.SMS_PREFR_IND IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.PHONE_LINE_NBR <> t2.PHONE_LINE_NBR OR ( t1.PHONE_LINE_NBR IS NULL AND t2.PHONE_LINE_NBR IS NOT NULL) OR (t1.PHONE_LINE_NBR IS NOT NULL AND t2.PHONE_LINE_NBR IS NULL)) OR (t1.PHONE_AREA_NBR <> t2.PHONE_AREA_NBR OR ( t1.PHONE_AREA_NBR IS NULL AND t2.PHONE_AREA_NBR IS NOT NULL) OR (t1.PHONE_AREA_NBR IS NOT NULL AND t2.PHONE_AREA_NBR IS NULL)) OR (t1.PHONE_EXCHG_NBR <> t2.PHONE_EXCHG_NBR OR ( t1.PHONE_EXCHG_NBR IS NULL AND t2.PHONE_EXCHG_NBR IS NOT NULL) OR (t1.PHONE_EXCHG_NBR IS NOT NULL AND t2.PHONE_EXCHG_NBR IS NULL)) OR (t1.PHONE_CNTRY_NBR <> t2.PHONE_CNTRY_NBR OR ( t1.PHONE_CNTRY_NBR IS NULL AND t2.PHONE_CNTRY_NBR IS NOT NULL) OR (t1.PHONE_CNTRY_NBR IS NOT NULL AND t2.PHONE_CNTRY_NBR IS NULL)) OR (t1.SMS_AVAIL_START_TIME <> t2.SMS_AVAIL_START_TIME OR ( t1.SMS_AVAIL_START_TIME IS NULL AND t2.SMS_AVAIL_START_TIME IS NOT NULL) OR (t1.SMS_AVAIL_START_TIME IS NOT NULL AND t2.SMS_AVAIL_START_TIME IS NULL)) OR (t1.SMS_AVAIL_END_TIME <> t2.SMS_AVAIL_END_TIME OR ( t1.SMS_AVAIL_END_TIME IS NULL AND t2.SMS_AVAIL_END_TIME IS NOT NULL) OR (t1.SMS_AVAIL_END_TIME IS NOT NULL AND t2.SMS_AVAIL_END_TIME IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PHONE', 'INSERT INTO NC_MATCHD_CNSMR_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PHONE_EXTSN_NUM,t1.SMS_PREFR_IND,t1.FULL_PHONE_NUM,t1.PHONE_LINE_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_CNTRY_NBR,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_PHONE t1, MATCHD_CNSMR_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_POSTL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_POSTL_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_POSTL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_POSTL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,''DELETE'',''VALID'' FROM MATCHD_CNSMR_POSTL_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_POSTL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_POSTL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_POSTL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.LAT_MEAS,t1.LONG_MEAS,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.CNTRY_CODE,t1.TERR_CODE,t1.CITY_CODE,t1.TERR_NAME,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_POSTL_ADDR t1, MATCHD_CNSMR_POSTL_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LONG_MEAS <> t2.LONG_MEAS OR ( t1.LONG_MEAS IS NULL AND t2.LONG_MEAS IS NOT NULL) OR (t1.LONG_MEAS IS NOT NULL AND t2.LONG_MEAS IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.CITY_CODE <> t2.CITY_CODE OR ( t1.CITY_CODE IS NULL AND t2.CITY_CODE IS NOT NULL) OR (t1.CITY_CODE IS NOT NULL AND t2.CITY_CODE IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_POSTL_ADDR', 'INSERT INTO NC_MATCHD_CNSMR_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,CNTRY_CODE,TERR_CODE,CITY_CODE,TERR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.LAT_MEAS,t1.LONG_MEAS,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,t1.CNTRY_CODE,t1.TERR_CODE,t1.CITY_CODE,t1.TERR_NAME,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_POSTL_ADDR t1, MATCHD_CNSMR_POSTL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,''DELETE'',''VALID'' FROM MATCHD_CNSMR_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.BRTH_DATE,t1.GENDR_IND,t1.LATST_ACTVY_DATE,t1.NOTE_TXT,t1.CNSMR_USER_NAME,t1.REGIS_DATETM,t1.MATCHD_CNSMR_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.UNIVERSAL_OPT_OUT,t1.LEGAL_ENT_NBR,t1.HEAD_OF_HSHLD_IND,t1.LANG_CODE,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_PRSNA t1, MATCHD_CNSMR_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.NAME_PREFX_TXT <> t2.NAME_PREFX_TXT OR ( t1.NAME_PREFX_TXT IS NULL AND t2.NAME_PREFX_TXT IS NOT NULL) OR (t1.NAME_PREFX_TXT IS NOT NULL AND t2.NAME_PREFX_TXT IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.LATST_ACTVY_DATE <> t2.LATST_ACTVY_DATE OR ( t1.LATST_ACTVY_DATE IS NULL AND t2.LATST_ACTVY_DATE IS NOT NULL) OR (t1.LATST_ACTVY_DATE IS NOT NULL AND t2.LATST_ACTVY_DATE IS NULL)) OR (t1.NOTE_TXT <> t2.NOTE_TXT OR ( t1.NOTE_TXT IS NULL AND t2.NOTE_TXT IS NOT NULL) OR (t1.NOTE_TXT IS NOT NULL AND t2.NOTE_TXT IS NULL)) OR (t1.CNSMR_USER_NAME <> t2.CNSMR_USER_NAME OR ( t1.CNSMR_USER_NAME IS NULL AND t2.CNSMR_USER_NAME IS NOT NULL) OR (t1.CNSMR_USER_NAME IS NOT NULL AND t2.CNSMR_USER_NAME IS NULL)) OR (t1.REGIS_DATETM <> t2.REGIS_DATETM OR ( t1.REGIS_DATETM IS NULL AND t2.REGIS_DATETM IS NOT NULL) OR (t1.REGIS_DATETM IS NOT NULL AND t2.REGIS_DATETM IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) OR (t1.UNIVERSAL_OPT_OUT <> t2.UNIVERSAL_OPT_OUT OR ( t1.UNIVERSAL_OPT_OUT IS NULL AND t2.UNIVERSAL_OPT_OUT IS NOT NULL) OR (t1.UNIVERSAL_OPT_OUT IS NOT NULL AND t2.UNIVERSAL_OPT_OUT IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.HEAD_OF_HSHLD_IND <> t2.HEAD_OF_HSHLD_IND OR ( t1.HEAD_OF_HSHLD_IND IS NULL AND t2.HEAD_OF_HSHLD_IND IS NOT NULL) OR (t1.HEAD_OF_HSHLD_IND IS NOT NULL AND t2.HEAD_OF_HSHLD_IND IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,PRSNA_STATUS_CODE,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LATST_ACTVY_DATE,NOTE_TXT,CNSMR_USER_NAME,REGIS_DATETM,MATCHD_CNSMR_PRSNA_ID,HSHLD_PRSNA_ID,UNIVERSAL_OPT_OUT,LEGAL_ENT_NBR,HEAD_OF_HSHLD_IND,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.BRTH_DATE,t1.GENDR_IND,t1.LATST_ACTVY_DATE,t1.NOTE_TXT,t1.CNSMR_USER_NAME,t1.REGIS_DATETM,t1.MATCHD_CNSMR_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.UNIVERSAL_OPT_OUT,t1.LEGAL_ENT_NBR,t1.HEAD_OF_HSHLD_IND,t1.LANG_CODE,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_PRSNA t1, MATCHD_CNSMR_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_SOC_NETK_ACT', 'INSERT INTO NC_MATCHD_CNSMR_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_SOC_NETK_ACT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_SOC_NETK_ACT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_SOC_NETK_ACT', 'INSERT INTO NC_MATCHD_CNSMR_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM MATCHD_CNSMR_SOC_NETK_ACT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_SOC_NETK_ACT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_SOC_NETK_ACT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_SOC_NETK_ACT', 'INSERT INTO NC_MATCHD_CNSMR_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_SOC_NETK_ACT t1, MATCHD_CNSMR_SOC_NETK_ACT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOCIAL_NETWK_ACCT_ID_VAL <> t2.SOCIAL_NETWK_ACCT_ID_VAL OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_SOC_NETK_ACT', 'INSERT INTO NC_MATCHD_CNSMR_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,CNTCT_POINT_CATEG_CODE,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_SOC_NETK_ACT t1, MATCHD_CNSMR_SOC_NETK_ACT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_TRT_REF', 'INSERT INTO NC_MATCHD_CNSMR_TRT_REF ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_TRT_REF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_TRT_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_TRT_REF', 'INSERT INTO NC_MATCHD_CNSMR_TRT_REF ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,''DELETE'',''VALID'' FROM MATCHD_CNSMR_TRT_REF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_TRT_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_TRT_REF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_TRT_REF', 'INSERT INTO NC_MATCHD_CNSMR_TRT_REF ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.TRT_NBR,t1.DATA_SRCE_NBR,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_TRT_REF t1, MATCHD_CNSMR_TRT_REF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_TRT_REF', 'INSERT INTO NC_MATCHD_CNSMR_TRT_REF ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,TRT_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.TRT_NBR,t1.DATA_SRCE_NBR,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_TRT_REF t1, MATCHD_CNSMR_TRT_REF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_WF_USAGE_LOG', 'INSERT INTO NC_MATCHD_CNSMR_WF_USAGE_LOG ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,''INSERT'',''VALID'' FROM IN_MATCHD_CNSMR_WF_USAGE_LOG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MATCHD_CNSMR_WF_USAGE_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCESSED_BY = t2.ACCESSED_BY AND t1.ACCESSED_DATE = t2.ACCESSED_DATE AND t1.LEGAL_ENT_NAME = t2.LEGAL_ENT_NAME AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_WF_USAGE_LOG', 'INSERT INTO NC_MATCHD_CNSMR_WF_USAGE_LOG ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,''DELETE'',''VALID'' FROM MATCHD_CNSMR_WF_USAGE_LOG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MATCHD_CNSMR_WF_USAGE_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCESSED_BY = t2.ACCESSED_BY AND t1.ACCESSED_DATE = t2.ACCESSED_DATE AND t1.LEGAL_ENT_NAME = t2.LEGAL_ENT_NAME AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MATCHD_CNSMR_WF_USAGE_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCESSED_BY = t2.ACCESSED_BY AND t1.ACCESSED_DATE = t2.ACCESSED_DATE AND t1.LEGAL_ENT_NAME = t2.LEGAL_ENT_NAME AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_WF_USAGE_LOG', 'INSERT INTO NC_MATCHD_CNSMR_WF_USAGE_LOG ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NAME,t1.ACCESSED_DATE,t1.ACCESSED_BY,''UPDATE'',''VALID'' FROM IN_MATCHD_CNSMR_WF_USAGE_LOG t1, MATCHD_CNSMR_WF_USAGE_LOG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCESSED_BY = t2.ACCESSED_BY AND t1.ACCESSED_DATE = t2.ACCESSED_DATE AND t1.LEGAL_ENT_NAME = t2.LEGAL_ENT_NAME AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) OR (t1.ACCESSED_DATE <> t2.ACCESSED_DATE OR ( t1.ACCESSED_DATE IS NULL AND t2.ACCESSED_DATE IS NOT NULL) OR (t1.ACCESSED_DATE IS NOT NULL AND t2.ACCESSED_DATE IS NULL)) OR (t1.ACCESSED_BY <> t2.ACCESSED_BY OR ( t1.ACCESSED_BY IS NULL AND t2.ACCESSED_BY IS NOT NULL) OR (t1.ACCESSED_BY IS NOT NULL AND t2.ACCESSED_BY IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MATCHD_CNSMR_WF_USAGE_LOG', 'INSERT INTO NC_MATCHD_CNSMR_WF_USAGE_LOG ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,LEGAL_ENT_NAME,ACCESSED_DATE,ACCESSED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.LEGAL_ENT_NAME,t1.ACCESSED_DATE,t1.ACCESSED_BY,''ACTIVATE'',''VALID'' FROM IN_MATCHD_CNSMR_WF_USAGE_LOG t1, MATCHD_CNSMR_WF_USAGE_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCESSED_BY = t2.ACCESSED_BY AND t1.ACCESSED_DATE = t2.ACCESSED_DATE AND t1.LEGAL_ENT_NAME = t2.LEGAL_ENT_NAME AND t1.MATCHD_CNSMR_PRSNA_ID = t2.MATCHD_CNSMR_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM', 'INSERT INTO NC_MKTNG_PGM ( SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,''INSERT'',''VALID'' FROM IN_MKTNG_PGM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM', 'INSERT INTO NC_MKTNG_PGM ( SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,''DELETE'',''VALID'' FROM MKTNG_PGM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MKTNG_PGM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM', 'INSERT INTO NC_MKTNG_PGM ( SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NAME,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_DESC,t1.MKTNG_PGM_SHORT_NAME,t1.MKTNG_PGM_STATUS,t1.MKTNG_PGM_BUSN_NAME,''UPDATE'',''VALID'' FROM IN_MKTNG_PGM t1, MKTNG_PGM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_DESC <> t2.MKTNG_PGM_DESC OR ( t1.MKTNG_PGM_DESC IS NULL AND t2.MKTNG_PGM_DESC IS NOT NULL) OR (t1.MKTNG_PGM_DESC IS NOT NULL AND t2.MKTNG_PGM_DESC IS NULL)) OR (t1.MKTNG_PGM_SHORT_NAME <> t2.MKTNG_PGM_SHORT_NAME OR ( t1.MKTNG_PGM_SHORT_NAME IS NULL AND t2.MKTNG_PGM_SHORT_NAME IS NOT NULL) OR (t1.MKTNG_PGM_SHORT_NAME IS NOT NULL AND t2.MKTNG_PGM_SHORT_NAME IS NULL)) OR (t1.MKTNG_PGM_STATUS <> t2.MKTNG_PGM_STATUS OR ( t1.MKTNG_PGM_STATUS IS NULL AND t2.MKTNG_PGM_STATUS IS NOT NULL) OR (t1.MKTNG_PGM_STATUS IS NOT NULL AND t2.MKTNG_PGM_STATUS IS NULL)) OR (t1.MKTNG_PGM_BUSN_NAME <> t2.MKTNG_PGM_BUSN_NAME OR ( t1.MKTNG_PGM_BUSN_NAME IS NULL AND t2.MKTNG_PGM_BUSN_NAME IS NOT NULL) OR (t1.MKTNG_PGM_BUSN_NAME IS NOT NULL AND t2.MKTNG_PGM_BUSN_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM', 'INSERT INTO NC_MKTNG_PGM ( SCENARIO_ID,MKTNG_PGM_NAME,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MKTNG_PGM_DESC,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NAME,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_DESC,t1.MKTNG_PGM_SHORT_NAME,t1.MKTNG_PGM_STATUS,t1.MKTNG_PGM_BUSN_NAME,''ACTIVATE'',''VALID'' FROM IN_MKTNG_PGM t1, MKTNG_PGM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_CNTRY_BRAND', 'INSERT INTO NC_MKTNG_PGM_CNTRY_BRAND ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,''INSERT'',''VALID'' FROM IN_MKTNG_PGM_CNTRY_BRAND t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MKTNG_PGM_CNTRY_BRAND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_CNTRY_BRAND', 'INSERT INTO NC_MKTNG_PGM_CNTRY_BRAND ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,''DELETE'',''VALID'' FROM MKTNG_PGM_CNTRY_BRAND t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MKTNG_PGM_CNTRY_BRAND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MKTNG_PGM_CNTRY_BRAND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_CNTRY_BRAND', 'INSERT INTO NC_MKTNG_PGM_CNTRY_BRAND ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTRY_CODE,t1.BRAND_CODE,''UPDATE'',''VALID'' FROM IN_MKTNG_PGM_CNTRY_BRAND t1, MKTNG_PGM_CNTRY_BRAND t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_CNTRY_BRAND', 'INSERT INTO NC_MKTNG_PGM_CNTRY_BRAND ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTRY_CODE,BRAND_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTRY_CODE,t1.BRAND_CODE,''ACTIVATE'',''VALID'' FROM IN_MKTNG_PGM_CNTRY_BRAND t1, MKTNG_PGM_CNTRY_BRAND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BRAND_CODE = t2.BRAND_CODE AND t1.CNTRY_CODE = t2.CNTRY_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_TRAIT_MAP', 'INSERT INTO NC_MKTNG_PGM_TRAIT_MAP ( SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,''INSERT'',''VALID'' FROM IN_MKTNG_PGM_TRAIT_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MKTNG_PGM_TRAIT_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_TRAIT_MAP', 'INSERT INTO NC_MKTNG_PGM_TRAIT_MAP ( SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,''DELETE'',''VALID'' FROM MKTNG_PGM_TRAIT_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MKTNG_PGM_TRAIT_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MKTNG_PGM_TRAIT_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_TRAIT_MAP', 'INSERT INTO NC_MKTNG_PGM_TRAIT_MAP ( SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.TRT_NBR,t1.TRT_NAME,t1.TRT_DESC,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_DESC,t1.TRT_ENT_TYPE_CODE,t1.LANG_CODE,t1.TRT_TBL,t1.TRT_COL,t1.ATTR_TBL,t1.ATTR_COL,t1.CNSMR_CLCT_IND,''UPDATE'',''VALID'' FROM IN_MKTNG_PGM_TRAIT_MAP t1, MKTNG_PGM_TRAIT_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.TRT_DESC <> t2.TRT_DESC OR ( t1.TRT_DESC IS NULL AND t2.TRT_DESC IS NOT NULL) OR (t1.TRT_DESC IS NOT NULL AND t2.TRT_DESC IS NULL)) OR (t1.PREDFND_TRT_VAL_NBR <> t2.PREDFND_TRT_VAL_NBR OR ( t1.PREDFND_TRT_VAL_NBR IS NULL AND t2.PREDFND_TRT_VAL_NBR IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NBR IS NOT NULL AND t2.PREDFND_TRT_VAL_NBR IS NULL)) OR (t1.PREDFND_TRT_DESC <> t2.PREDFND_TRT_DESC OR ( t1.PREDFND_TRT_DESC IS NULL AND t2.PREDFND_TRT_DESC IS NOT NULL) OR (t1.PREDFND_TRT_DESC IS NOT NULL AND t2.PREDFND_TRT_DESC IS NULL)) OR (t1.TRT_ENT_TYPE_CODE <> t2.TRT_ENT_TYPE_CODE OR ( t1.TRT_ENT_TYPE_CODE IS NULL AND t2.TRT_ENT_TYPE_CODE IS NOT NULL) OR (t1.TRT_ENT_TYPE_CODE IS NOT NULL AND t2.TRT_ENT_TYPE_CODE IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.TRT_TBL <> t2.TRT_TBL OR ( t1.TRT_TBL IS NULL AND t2.TRT_TBL IS NOT NULL) OR (t1.TRT_TBL IS NOT NULL AND t2.TRT_TBL IS NULL)) OR (t1.TRT_COL <> t2.TRT_COL OR ( t1.TRT_COL IS NULL AND t2.TRT_COL IS NOT NULL) OR (t1.TRT_COL IS NOT NULL AND t2.TRT_COL IS NULL)) OR (t1.ATTR_TBL <> t2.ATTR_TBL OR ( t1.ATTR_TBL IS NULL AND t2.ATTR_TBL IS NOT NULL) OR (t1.ATTR_TBL IS NOT NULL AND t2.ATTR_TBL IS NULL)) OR (t1.ATTR_COL <> t2.ATTR_COL OR ( t1.ATTR_COL IS NULL AND t2.ATTR_COL IS NOT NULL) OR (t1.ATTR_COL IS NOT NULL AND t2.ATTR_COL IS NULL)) OR (t1.CNSMR_CLCT_IND <> t2.CNSMR_CLCT_IND OR ( t1.CNSMR_CLCT_IND IS NULL AND t2.CNSMR_CLCT_IND IS NOT NULL) OR (t1.CNSMR_CLCT_IND IS NOT NULL AND t2.CNSMR_CLCT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MKTNG_PGM_TRAIT_MAP', 'INSERT INTO NC_MKTNG_PGM_TRAIT_MAP ( SCENARIO_ID,MKTNG_PGM_NBR,TRT_NBR,TRT_NAME,TRT_DESC,PREDFND_TRT_VAL_NBR,PREDFND_TRT_DESC,TRT_ENT_TYPE_CODE,LANG_CODE,TRT_TBL,TRT_COL,ATTR_TBL,ATTR_COL,CNSMR_CLCT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.TRT_NBR,t1.TRT_NAME,t1.TRT_DESC,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_DESC,t1.TRT_ENT_TYPE_CODE,t1.LANG_CODE,t1.TRT_TBL,t1.TRT_COL,t1.ATTR_TBL,t1.ATTR_COL,t1.CNSMR_CLCT_IND,''ACTIVATE'',''VALID'' FROM IN_MKTNG_PGM_TRAIT_MAP t1, MKTNG_PGM_TRAIT_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MTCHD_CNSMR_SCR_DMN_MAP', 'INSERT INTO NC_MTCHD_CNSMR_SCR_DMN_MAP ( SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_MTCHD_CNSMR_SCR_DMN_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MTCHD_CNSMR_SCR_DMN_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MTCHD_CNSMR_SCR_DMN_MAP', 'INSERT INTO NC_MTCHD_CNSMR_SCR_DMN_MAP ( SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM MTCHD_CNSMR_SCR_DMN_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MTCHD_CNSMR_SCR_DMN_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MTCHD_CNSMR_SCR_DMN_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MTCHD_CNSMR_SCR_DMN_MAP', 'INSERT INTO NC_MTCHD_CNSMR_SCR_DMN_MAP ( SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_SCORE_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_MTCHD_CNSMR_SCR_DMN_MAP t1, MTCHD_CNSMR_SCR_DMN_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNSMR_SCORE_NBR <> t2.CNSMR_SCORE_NBR OR ( t1.CNSMR_SCORE_NBR IS NULL AND t2.CNSMR_SCORE_NBR IS NOT NULL) OR (t1.CNSMR_SCORE_NBR IS NOT NULL AND t2.CNSMR_SCORE_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MTCHD_CNSMR_SCR_DMN_MAP', 'INSERT INTO NC_MTCHD_CNSMR_SCR_DMN_MAP ( SCENARIO_ID,CNSMR_SCORE_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNSMR_SCORE_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_MTCHD_CNSMR_SCR_DMN_MAP t1, MTCHD_CNSMR_SCR_DMN_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNSMR_SCORE_NBR = t2.CNSMR_SCORE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,''INSERT'',''VALID'' FROM IN_MULTITABLE_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_MULTITABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,''DELETE'',''VALID'' FROM MST_MULTITABLE_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MULTITABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MULTITABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MAP_TABLE_NAME,t1.TABLE_TYPE,t1.IS_USED,t1.START_DATE,t1.END_DATE,t1.ID,''UPDATE'',''VALID'' FROM IN_MULTITABLE_MAP t1, MST_MULTITABLE_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Map_Table_Name <> t2.Map_Table_Name OR ( t1.Map_Table_Name IS NULL AND t2.Map_Table_Name IS NOT NULL) OR (t1.Map_Table_Name IS NOT NULL AND t2.Map_Table_Name IS NULL)) OR (t1.Table_Type <> t2.Table_Type OR ( t1.Table_Type IS NULL AND t2.Table_Type IS NOT NULL) OR (t1.Table_Type IS NOT NULL AND t2.Table_Type IS NULL)) OR (t1.IS_USED <> t2.IS_USED OR ( t1.IS_USED IS NULL AND t2.IS_USED IS NOT NULL) OR (t1.IS_USED IS NOT NULL AND t2.IS_USED IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Id <> t2.Id OR ( t1.Id IS NULL AND t2.Id IS NOT NULL) OR (t1.Id IS NOT NULL AND t2.Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MAP_TABLE_NAME,t1.TABLE_TYPE,t1.IS_USED,t1.START_DATE,t1.END_DATE,t1.ID,''ACTIVATE'',''VALID'' FROM IN_MULTITABLE_MAP t1, MST_MULTITABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND', 'INSERT INTO NC_OPT_OUT_NOT_FOUND ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,''INSERT'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM OPT_OUT_NOT_FOUND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND', 'INSERT INTO NC_OPT_OUT_NOT_FOUND ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,''DELETE'',''VALID'' FROM OPT_OUT_NOT_FOUND t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_OPT_OUT_NOT_FOUND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_OPT_OUT_NOT_FOUND t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND', 'INSERT INTO NC_OPT_OUT_NOT_FOUND ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.TERR_NAME,t1.CNTRY_NAME,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_POSTAL_AREA_CODE,t1.SRC_TERR_NAME,t1.SRC_CNTRY_NAME,t1.MATCH_FLG,t1.LEGAL_ENT_NBR,t1.NATIONAL_ID_NBR,''UPDATE'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND t1, OPT_OUT_NOT_FOUND t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.SRC_ADDR_LINE_1_TXT <> t2.SRC_ADDR_LINE_1_TXT OR ( t1.SRC_ADDR_LINE_1_TXT IS NULL AND t2.SRC_ADDR_LINE_1_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_1_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_1_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_2_TXT <> t2.SRC_ADDR_LINE_2_TXT OR ( t1.SRC_ADDR_LINE_2_TXT IS NULL AND t2.SRC_ADDR_LINE_2_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_2_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_2_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_3_TXT <> t2.SRC_ADDR_LINE_3_TXT OR ( t1.SRC_ADDR_LINE_3_TXT IS NULL AND t2.SRC_ADDR_LINE_3_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_3_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_3_TXT IS NULL)) OR (t1.SRC_CITY_NAME <> t2.SRC_CITY_NAME OR ( t1.SRC_CITY_NAME IS NULL AND t2.SRC_CITY_NAME IS NOT NULL) OR (t1.SRC_CITY_NAME IS NOT NULL AND t2.SRC_CITY_NAME IS NULL)) OR (t1.SRC_POSTAL_AREA_CODE <> t2.SRC_POSTAL_AREA_CODE OR ( t1.SRC_POSTAL_AREA_CODE IS NULL AND t2.SRC_POSTAL_AREA_CODE IS NOT NULL) OR (t1.SRC_POSTAL_AREA_CODE IS NOT NULL AND t2.SRC_POSTAL_AREA_CODE IS NULL)) OR (t1.SRC_TERR_NAME <> t2.SRC_TERR_NAME OR ( t1.SRC_TERR_NAME IS NULL AND t2.SRC_TERR_NAME IS NOT NULL) OR (t1.SRC_TERR_NAME IS NOT NULL AND t2.SRC_TERR_NAME IS NULL)) OR (t1.SRC_CNTRY_NAME <> t2.SRC_CNTRY_NAME OR ( t1.SRC_CNTRY_NAME IS NULL AND t2.SRC_CNTRY_NAME IS NOT NULL) OR (t1.SRC_CNTRY_NAME IS NOT NULL AND t2.SRC_CNTRY_NAME IS NULL)) OR (t1.MATCH_FLG <> t2.MATCH_FLG OR ( t1.MATCH_FLG IS NULL AND t2.MATCH_FLG IS NOT NULL) OR (t1.MATCH_FLG IS NOT NULL AND t2.MATCH_FLG IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND', 'INSERT INTO NC_OPT_OUT_NOT_FOUND ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,POSTL_AREA_CODE,TERR_NAME,CNTRY_NAME,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_POSTAL_AREA_CODE,SRC_TERR_NAME,SRC_CNTRY_NAME,MATCH_FLG,LEGAL_ENT_NBR,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.TERR_NAME,t1.CNTRY_NAME,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_POSTAL_AREA_CODE,t1.SRC_TERR_NAME,t1.SRC_CNTRY_NAME,t1.MATCH_FLG,t1.LEGAL_ENT_NBR,t1.NATIONAL_ID_NBR,''ACTIVATE'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND t1, OPT_OUT_NOT_FOUND t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND_XREF', 'INSERT INTO NC_OPT_OUT_NOT_FOUND_XREF ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,''INSERT'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND_XREF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM OPT_OUT_NOT_FOUND_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND_XREF', 'INSERT INTO NC_OPT_OUT_NOT_FOUND_XREF ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,''DELETE'',''VALID'' FROM OPT_OUT_NOT_FOUND_XREF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_OPT_OUT_NOT_FOUND_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_OPT_OUT_NOT_FOUND_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND_XREF', 'INSERT INTO NC_OPT_OUT_NOT_FOUND_XREF ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.REGIS_PRSNA_ID,''UPDATE'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND_XREF t1, OPT_OUT_NOT_FOUND_XREF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_OPT_OUT_NOT_FOUND_XREF', 'INSERT INTO NC_OPT_OUT_NOT_FOUND_XREF ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.REGIS_PRSNA_ID,''ACTIVATE'',''VALID'' FROM IN_OPT_OUT_NOT_FOUND_XREF t1, OPT_OUT_NOT_FOUND_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_ENRICHDATA_CONFIG', 'INSERT INTO NC_PC_ENRICHDATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,''INSERT'',''VALID'' FROM IN_PC_ENRICHDATA_CONFIG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PC_ENRICHDATA_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_ENRICHDATA_CONFIG', 'INSERT INTO NC_PC_ENRICHDATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,''DELETE'',''VALID'' FROM PC_ENRICHDATA_CONFIG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PC_ENRICHDATA_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PC_ENRICHDATA_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_ENRICHDATA_CONFIG', 'INSERT INTO NC_PC_ENRICHDATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.ATTR_NBR,t1.ATTR_TYPE,''UPDATE'',''VALID'' FROM IN_PC_ENRICHDATA_CONFIG t1, PC_ENRICHDATA_CONFIG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.ATTR_NBR <> t2.ATTR_NBR OR ( t1.ATTR_NBR IS NULL AND t2.ATTR_NBR IS NOT NULL) OR (t1.ATTR_NBR IS NOT NULL AND t2.ATTR_NBR IS NULL)) OR (t1.ATTR_TYPE <> t2.ATTR_TYPE OR ( t1.ATTR_TYPE IS NULL AND t2.ATTR_TYPE IS NOT NULL) OR (t1.ATTR_TYPE IS NOT NULL AND t2.ATTR_TYPE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_ENRICHDATA_CONFIG', 'INSERT INTO NC_PC_ENRICHDATA_CONFIG ( SCENARIO_ID,LEGAL_ENT_NBR,ATTR_NBR,ATTR_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.ATTR_NBR,t1.ATTR_TYPE,''ACTIVATE'',''VALID'' FROM IN_PC_ENRICHDATA_CONFIG t1, PC_ENRICHDATA_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ATTR_NBR = t2.ATTR_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_SOURCE_CONFIG', 'INSERT INTO NC_PC_SOURCE_CONFIG ( SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,''INSERT'',''VALID'' FROM IN_PC_SOURCE_CONFIG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PC_SOURCE_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREF_CNTR_APPL_ID = t2.PREF_CNTR_APPL_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_SOURCE_CONFIG', 'INSERT INTO NC_PC_SOURCE_CONFIG ( SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,''DELETE'',''VALID'' FROM PC_SOURCE_CONFIG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PC_SOURCE_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREF_CNTR_APPL_ID = t2.PREF_CNTR_APPL_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PC_SOURCE_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREF_CNTR_APPL_ID = t2.PREF_CNTR_APPL_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_SOURCE_CONFIG', 'INSERT INTO NC_PC_SOURCE_CONFIG ( SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PREF_CNTR_APPL_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.DATA_SRCE_NBR,''UPDATE'',''VALID'' FROM IN_PC_SOURCE_CONFIG t1, PC_SOURCE_CONFIG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREF_CNTR_APPL_ID = t2.PREF_CNTR_APPL_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PREF_CNTR_APPL_ID <> t2.PREF_CNTR_APPL_ID OR ( t1.PREF_CNTR_APPL_ID IS NULL AND t2.PREF_CNTR_APPL_ID IS NOT NULL) OR (t1.PREF_CNTR_APPL_ID IS NOT NULL AND t2.PREF_CNTR_APPL_ID IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PC_SOURCE_CONFIG', 'INSERT INTO NC_PC_SOURCE_CONFIG ( SCENARIO_ID,PREF_CNTR_APPL_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PREF_CNTR_APPL_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.DATA_SRCE_NBR,''ACTIVATE'',''VALID'' FROM IN_PC_SOURCE_CONFIG t1, PC_SOURCE_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.PREF_CNTR_APPL_ID = t2.PREF_CNTR_APPL_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET', 'INSERT INTO NC_PET ( SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,''INSERT'',''VALID'' FROM IN_PET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET', 'INSERT INTO NC_PET ( SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,''DELETE'',''VALID'' FROM PET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET', 'INSERT INTO NC_PET ( SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_NAME,t1.REGIS_PRSNA_ID,t1.PET_SEQ_NBR,t1.PET_BRTH_DATE,t1.PET_AGE_NBR,t1.PET_GENDR_IND,t1.MKTNG_PGM_NBR,t1.DECEASED_IND,t1.LEGAL_ENT_NBR,t1.PET_TYPE_CODE,t1.PET_BREED_CODE,t1.PREF_PET_IND,''UPDATE'',''VALID'' FROM IN_PET t1, PET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PET_NAME <> t2.PET_NAME OR ( t1.PET_NAME IS NULL AND t2.PET_NAME IS NOT NULL) OR (t1.PET_NAME IS NOT NULL AND t2.PET_NAME IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.PET_SEQ_NBR <> t2.PET_SEQ_NBR OR ( t1.PET_SEQ_NBR IS NULL AND t2.PET_SEQ_NBR IS NOT NULL) OR (t1.PET_SEQ_NBR IS NOT NULL AND t2.PET_SEQ_NBR IS NULL)) OR (t1.PET_BRTH_DATE <> t2.PET_BRTH_DATE OR ( t1.PET_BRTH_DATE IS NULL AND t2.PET_BRTH_DATE IS NOT NULL) OR (t1.PET_BRTH_DATE IS NOT NULL AND t2.PET_BRTH_DATE IS NULL)) OR (t1.PET_AGE_NBR <> t2.PET_AGE_NBR OR ( t1.PET_AGE_NBR IS NULL AND t2.PET_AGE_NBR IS NOT NULL) OR (t1.PET_AGE_NBR IS NOT NULL AND t2.PET_AGE_NBR IS NULL)) OR (t1.PET_GENDR_IND <> t2.PET_GENDR_IND OR ( t1.PET_GENDR_IND IS NULL AND t2.PET_GENDR_IND IS NOT NULL) OR (t1.PET_GENDR_IND IS NOT NULL AND t2.PET_GENDR_IND IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.DECEASED_IND <> t2.DECEASED_IND OR ( t1.DECEASED_IND IS NULL AND t2.DECEASED_IND IS NOT NULL) OR (t1.DECEASED_IND IS NOT NULL AND t2.DECEASED_IND IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.PET_TYPE_CODE <> t2.PET_TYPE_CODE OR ( t1.PET_TYPE_CODE IS NULL AND t2.PET_TYPE_CODE IS NOT NULL) OR (t1.PET_TYPE_CODE IS NOT NULL AND t2.PET_TYPE_CODE IS NULL)) OR (t1.PET_BREED_CODE <> t2.PET_BREED_CODE OR ( t1.PET_BREED_CODE IS NULL AND t2.PET_BREED_CODE IS NOT NULL) OR (t1.PET_BREED_CODE IS NOT NULL AND t2.PET_BREED_CODE IS NULL)) OR (t1.PREF_PET_IND <> t2.PREF_PET_IND OR ( t1.PREF_PET_IND IS NULL AND t2.PREF_PET_IND IS NOT NULL) OR (t1.PREF_PET_IND IS NOT NULL AND t2.PREF_PET_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET', 'INSERT INTO NC_PET ( SCENARIO_ID,PET_NAME,REGIS_PRSNA_ID,PET_SEQ_NBR,PET_BRTH_DATE,PET_AGE_NBR,PET_GENDR_IND,MKTNG_PGM_NBR,DECEASED_IND,LEGAL_ENT_NBR,PET_TYPE_CODE,PET_BREED_CODE,PREF_PET_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_NAME,t1.REGIS_PRSNA_ID,t1.PET_SEQ_NBR,t1.PET_BRTH_DATE,t1.PET_AGE_NBR,t1.PET_GENDR_IND,t1.MKTNG_PGM_NBR,t1.DECEASED_IND,t1.LEGAL_ENT_NBR,t1.PET_TYPE_CODE,t1.PET_BREED_CODE,t1.PREF_PET_IND,''ACTIVATE'',''VALID'' FROM IN_PET t1, PET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED', 'INSERT INTO NC_PET_BREED ( SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_PET_BREED t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_BREED t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_BREED_CODE = t2.PET_BREED_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED', 'INSERT INTO NC_PET_BREED ( SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM PET_BREED t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_BREED t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_BREED_CODE = t2.PET_BREED_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_BREED t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_BREED_CODE = t2.PET_BREED_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED', 'INSERT INTO NC_PET_BREED ( SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_BREED_CODE,t1.PET_BREED_NAME,t1.PET_TYPE_CODE,t1.BREED_SIZE_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_PET_BREED t1, PET_BREED t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_BREED_CODE = t2.PET_BREED_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PET_BREED_CODE <> t2.PET_BREED_CODE OR ( t1.PET_BREED_CODE IS NULL AND t2.PET_BREED_CODE IS NOT NULL) OR (t1.PET_BREED_CODE IS NOT NULL AND t2.PET_BREED_CODE IS NULL)) OR (t1.PET_BREED_NAME <> t2.PET_BREED_NAME OR ( t1.PET_BREED_NAME IS NULL AND t2.PET_BREED_NAME IS NOT NULL) OR (t1.PET_BREED_NAME IS NOT NULL AND t2.PET_BREED_NAME IS NULL)) OR (t1.PET_TYPE_CODE <> t2.PET_TYPE_CODE OR ( t1.PET_TYPE_CODE IS NULL AND t2.PET_TYPE_CODE IS NOT NULL) OR (t1.PET_TYPE_CODE IS NOT NULL AND t2.PET_TYPE_CODE IS NULL)) OR (t1.BREED_SIZE_CODE <> t2.BREED_SIZE_CODE OR ( t1.BREED_SIZE_CODE IS NULL AND t2.BREED_SIZE_CODE IS NOT NULL) OR (t1.BREED_SIZE_CODE IS NOT NULL AND t2.BREED_SIZE_CODE IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED', 'INSERT INTO NC_PET_BREED ( SCENARIO_ID,PET_BREED_CODE,PET_BREED_NAME,PET_TYPE_CODE,BREED_SIZE_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_BREED_CODE,t1.PET_BREED_NAME,t1.PET_TYPE_CODE,t1.BREED_SIZE_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_PET_BREED t1, PET_BREED t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_BREED_CODE = t2.PET_BREED_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED_SIZE', 'INSERT INTO NC_PET_BREED_SIZE ( SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_PET_BREED_SIZE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_BREED_SIZE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED_SIZE', 'INSERT INTO NC_PET_BREED_SIZE ( SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM PET_BREED_SIZE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_BREED_SIZE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_BREED_SIZE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED_SIZE', 'INSERT INTO NC_PET_BREED_SIZE ( SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BREED_SIZE_CODE,t1.BREED_SIZE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_PET_BREED_SIZE t1, PET_BREED_SIZE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.BREED_SIZE_CODE <> t2.BREED_SIZE_CODE OR ( t1.BREED_SIZE_CODE IS NULL AND t2.BREED_SIZE_CODE IS NOT NULL) OR (t1.BREED_SIZE_CODE IS NOT NULL AND t2.BREED_SIZE_CODE IS NULL)) OR (t1.BREED_SIZE_NAME <> t2.BREED_SIZE_NAME OR ( t1.BREED_SIZE_NAME IS NULL AND t2.BREED_SIZE_NAME IS NOT NULL) OR (t1.BREED_SIZE_NAME IS NOT NULL AND t2.BREED_SIZE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_BREED_SIZE', 'INSERT INTO NC_PET_BREED_SIZE ( SCENARIO_ID,BREED_SIZE_CODE,BREED_SIZE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BREED_SIZE_CODE,t1.BREED_SIZE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_PET_BREED_SIZE t1, PET_BREED_SIZE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_LIFE_STAGE', 'INSERT INTO NC_PET_LIFE_STAGE ( SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_PET_LIFE_STAGE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_LIFE_STAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_LIFE_STAGE', 'INSERT INTO NC_PET_LIFE_STAGE ( SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM PET_LIFE_STAGE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_LIFE_STAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_LIFE_STAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_LIFE_STAGE', 'INSERT INTO NC_PET_LIFE_STAGE ( SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BREED_SIZE_CODE,t1.PET_TYPE_CODE,t1.LOWER_AGE_LIMIT,t1.UPPER_AGE_LIMIT,t1.PET_LIFE_STAGE_NAME,t1.PET_LIFE_STAGE_DESC,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_PET_LIFE_STAGE t1, PET_LIFE_STAGE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.BREED_SIZE_CODE <> t2.BREED_SIZE_CODE OR ( t1.BREED_SIZE_CODE IS NULL AND t2.BREED_SIZE_CODE IS NOT NULL) OR (t1.BREED_SIZE_CODE IS NOT NULL AND t2.BREED_SIZE_CODE IS NULL)) OR (t1.PET_TYPE_CODE <> t2.PET_TYPE_CODE OR ( t1.PET_TYPE_CODE IS NULL AND t2.PET_TYPE_CODE IS NOT NULL) OR (t1.PET_TYPE_CODE IS NOT NULL AND t2.PET_TYPE_CODE IS NULL)) OR (t1.LOWER_AGE_LIMIT <> t2.LOWER_AGE_LIMIT OR ( t1.LOWER_AGE_LIMIT IS NULL AND t2.LOWER_AGE_LIMIT IS NOT NULL) OR (t1.LOWER_AGE_LIMIT IS NOT NULL AND t2.LOWER_AGE_LIMIT IS NULL)) OR (t1.UPPER_AGE_LIMIT <> t2.UPPER_AGE_LIMIT OR ( t1.UPPER_AGE_LIMIT IS NULL AND t2.UPPER_AGE_LIMIT IS NOT NULL) OR (t1.UPPER_AGE_LIMIT IS NOT NULL AND t2.UPPER_AGE_LIMIT IS NULL)) OR (t1.PET_LIFE_STAGE_NAME <> t2.PET_LIFE_STAGE_NAME OR ( t1.PET_LIFE_STAGE_NAME IS NULL AND t2.PET_LIFE_STAGE_NAME IS NOT NULL) OR (t1.PET_LIFE_STAGE_NAME IS NOT NULL AND t2.PET_LIFE_STAGE_NAME IS NULL)) OR (t1.PET_LIFE_STAGE_DESC <> t2.PET_LIFE_STAGE_DESC OR ( t1.PET_LIFE_STAGE_DESC IS NULL AND t2.PET_LIFE_STAGE_DESC IS NOT NULL) OR (t1.PET_LIFE_STAGE_DESC IS NOT NULL AND t2.PET_LIFE_STAGE_DESC IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_LIFE_STAGE', 'INSERT INTO NC_PET_LIFE_STAGE ( SCENARIO_ID,BREED_SIZE_CODE,PET_TYPE_CODE,LOWER_AGE_LIMIT,UPPER_AGE_LIMIT,PET_LIFE_STAGE_NAME,PET_LIFE_STAGE_DESC,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.BREED_SIZE_CODE,t1.PET_TYPE_CODE,t1.LOWER_AGE_LIMIT,t1.UPPER_AGE_LIMIT,t1.PET_LIFE_STAGE_NAME,t1.PET_LIFE_STAGE_DESC,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_PET_LIFE_STAGE t1, PET_LIFE_STAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.BREED_SIZE_CODE = t2.BREED_SIZE_CODE AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_STG', 'INSERT INTO NC_PET_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_PET_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_STG', 'INSERT INTO NC_PET_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''DELETE'',''VALID'' FROM PET_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_STG', 'INSERT INTO NC_PET_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.PET_SEQ_NBR,t1.PET_NAME,t1.PET_GENDR_IND,t1.PET_BRTH_DATE,t1.PET_AGE_NBR,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_PET_STG t1, PET_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.PET_SEQ_NBR <> t2.PET_SEQ_NBR OR ( t1.PET_SEQ_NBR IS NULL AND t2.PET_SEQ_NBR IS NOT NULL) OR (t1.PET_SEQ_NBR IS NOT NULL AND t2.PET_SEQ_NBR IS NULL)) OR (t1.PET_NAME <> t2.PET_NAME OR ( t1.PET_NAME IS NULL AND t2.PET_NAME IS NOT NULL) OR (t1.PET_NAME IS NOT NULL AND t2.PET_NAME IS NULL)) OR (t1.PET_GENDR_IND <> t2.PET_GENDR_IND OR ( t1.PET_GENDR_IND IS NULL AND t2.PET_GENDR_IND IS NOT NULL) OR (t1.PET_GENDR_IND IS NOT NULL AND t2.PET_GENDR_IND IS NULL)) OR (t1.PET_BRTH_DATE <> t2.PET_BRTH_DATE OR ( t1.PET_BRTH_DATE IS NULL AND t2.PET_BRTH_DATE IS NOT NULL) OR (t1.PET_BRTH_DATE IS NOT NULL AND t2.PET_BRTH_DATE IS NULL)) OR (t1.PET_AGE_NBR <> t2.PET_AGE_NBR OR ( t1.PET_AGE_NBR IS NULL AND t2.PET_AGE_NBR IS NOT NULL) OR (t1.PET_AGE_NBR IS NOT NULL AND t2.PET_AGE_NBR IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_STG', 'INSERT INTO NC_PET_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,PET_NAME,PET_GENDR_IND,PET_BRTH_DATE,PET_AGE_NBR,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.PET_SEQ_NBR,t1.PET_NAME,t1.PET_GENDR_IND,t1.PET_BRTH_DATE,t1.PET_AGE_NBR,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_PET_STG t1, PET_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT', 'INSERT INTO NC_PET_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_PET_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT', 'INSERT INTO NC_PET_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM PET_TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT', 'INSERT INTO NC_PET_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.PET_SEQ_NBR,t1.TRT_NBR,t1.PET_TRT_DATE,t1.PET_TRT_TXT,t1.PET_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_PET_TRT t1, PET_TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.PET_SEQ_NBR <> t2.PET_SEQ_NBR OR ( t1.PET_SEQ_NBR IS NULL AND t2.PET_SEQ_NBR IS NOT NULL) OR (t1.PET_SEQ_NBR IS NOT NULL AND t2.PET_SEQ_NBR IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.PET_TRT_DATE <> t2.PET_TRT_DATE OR ( t1.PET_TRT_DATE IS NULL AND t2.PET_TRT_DATE IS NOT NULL) OR (t1.PET_TRT_DATE IS NOT NULL AND t2.PET_TRT_DATE IS NULL)) OR (t1.PET_TRT_TXT <> t2.PET_TRT_TXT OR ( t1.PET_TRT_TXT IS NULL AND t2.PET_TRT_TXT IS NOT NULL) OR (t1.PET_TRT_TXT IS NOT NULL AND t2.PET_TRT_TXT IS NULL)) OR (t1.PET_TRT_SEQ_NBR <> t2.PET_TRT_SEQ_NBR OR ( t1.PET_TRT_SEQ_NBR IS NULL AND t2.PET_TRT_SEQ_NBR IS NOT NULL) OR (t1.PET_TRT_SEQ_NBR IS NOT NULL AND t2.PET_TRT_SEQ_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT', 'INSERT INTO NC_PET_TRT ( SCENARIO_ID,REGIS_PRSNA_ID,PET_SEQ_NBR,TRT_NBR,PET_TRT_DATE,PET_TRT_TXT,PET_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.PET_SEQ_NBR,t1.TRT_NBR,t1.PET_TRT_DATE,t1.PET_TRT_TXT,t1.PET_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_PET_TRT t1, PET_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT_STG', 'INSERT INTO NC_PET_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_PET_TRT_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT_STG', 'INSERT INTO NC_PET_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,''DELETE'',''VALID'' FROM PET_TRT_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT_STG', 'INSERT INTO NC_PET_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.PET_SEQ_NBR,t1.TRT_ID,t1.PET_TRT_DATE,t1.PET_TRT_INTEGRE,t1.PET_TRT_TXT,t1.PET_TRT_SEQ_NBR,t1.RECORD_IND,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_PET_TRT_STG t1, PET_TRT_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.PET_SEQ_NBR <> t2.PET_SEQ_NBR OR ( t1.PET_SEQ_NBR IS NULL AND t2.PET_SEQ_NBR IS NOT NULL) OR (t1.PET_SEQ_NBR IS NOT NULL AND t2.PET_SEQ_NBR IS NULL)) OR (t1.TRT_ID <> t2.TRT_ID OR ( t1.TRT_ID IS NULL AND t2.TRT_ID IS NOT NULL) OR (t1.TRT_ID IS NOT NULL AND t2.TRT_ID IS NULL)) OR (t1.PET_TRT_DATE <> t2.PET_TRT_DATE OR ( t1.PET_TRT_DATE IS NULL AND t2.PET_TRT_DATE IS NOT NULL) OR (t1.PET_TRT_DATE IS NOT NULL AND t2.PET_TRT_DATE IS NULL)) OR (t1.PET_TRT_INTEGRE <> t2.PET_TRT_INTEGRE OR ( t1.PET_TRT_INTEGRE IS NULL AND t2.PET_TRT_INTEGRE IS NOT NULL) OR (t1.PET_TRT_INTEGRE IS NOT NULL AND t2.PET_TRT_INTEGRE IS NULL)) OR (t1.PET_TRT_TXT <> t2.PET_TRT_TXT OR ( t1.PET_TRT_TXT IS NULL AND t2.PET_TRT_TXT IS NOT NULL) OR (t1.PET_TRT_TXT IS NOT NULL AND t2.PET_TRT_TXT IS NULL)) OR (t1.PET_TRT_SEQ_NBR <> t2.PET_TRT_SEQ_NBR OR ( t1.PET_TRT_SEQ_NBR IS NULL AND t2.PET_TRT_SEQ_NBR IS NOT NULL) OR (t1.PET_TRT_SEQ_NBR IS NOT NULL AND t2.PET_TRT_SEQ_NBR IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TRT_STG', 'INSERT INTO NC_PET_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,PET_SEQ_NBR,TRT_ID,PET_TRT_DATE,PET_TRT_INTEGRE,PET_TRT_TXT,PET_TRT_SEQ_NBR,RECORD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.PET_SEQ_NBR,t1.TRT_ID,t1.PET_TRT_DATE,t1.PET_TRT_INTEGRE,t1.PET_TRT_TXT,t1.PET_TRT_SEQ_NBR,t1.RECORD_IND,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_PET_TRT_STG t1, PET_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TYPE', 'INSERT INTO NC_PET_TYPE ( SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_PET_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PET_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TYPE', 'INSERT INTO NC_PET_TYPE ( SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM PET_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PET_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PET_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TYPE', 'INSERT INTO NC_PET_TYPE ( SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_TYPE_CODE,t1.PET_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_PET_TYPE t1, PET_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PET_TYPE_CODE <> t2.PET_TYPE_CODE OR ( t1.PET_TYPE_CODE IS NULL AND t2.PET_TYPE_CODE IS NOT NULL) OR (t1.PET_TYPE_CODE IS NOT NULL AND t2.PET_TYPE_CODE IS NULL)) OR (t1.PET_TYPE_NAME <> t2.PET_TYPE_NAME OR ( t1.PET_TYPE_NAME IS NULL AND t2.PET_TYPE_NAME IS NOT NULL) OR (t1.PET_TYPE_NAME IS NOT NULL AND t2.PET_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PET_TYPE', 'INSERT INTO NC_PET_TYPE ( SCENARIO_ID,PET_TYPE_CODE,PET_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PET_TYPE_CODE,t1.PET_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_PET_TYPE t1, PET_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PET_TYPE_CODE = t2.PET_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PE_OPT_OUT', 'INSERT INTO NC_PE_OPT_OUT ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,''INSERT'',''VALID'' FROM IN_PE_OPT_OUT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PE_OPT_OUT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PE_OPT_OUT', 'INSERT INTO NC_PE_OPT_OUT ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,''DELETE'',''VALID'' FROM PE_OPT_OUT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PE_OPT_OUT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PE_OPT_OUT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PE_OPT_OUT', 'INSERT INTO NC_PE_OPT_OUT ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.REGIS_PRSNA_ID,t1.OPT_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRIPTION_NBR,t1.FIRST_NAME,t1.LAST_NAME,t1.EMAIL_ADDR_TEXT,t1.CONTACT_PHONE_NBR,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_STATE,t1.SRC_ZIP,t1.SRC_CNTRY_NAME,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.OPT_IND,t1.OPT_TIME,t1.OPT_REASN_TXT,t1.LAST_ACTIVITY_TM,t1.NATIONAL_ID_NBR,t1.CHANNEL_IND,t1.OPT_LEVEL_IND,t1.POSTL_ADDR_ID,t1.STATUS_FLG,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.MID_NAME,''UPDATE'',''VALID'' FROM IN_PE_OPT_OUT t1, PE_OPT_OUT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.OPT_TYPE_CODE <> t2.OPT_TYPE_CODE OR ( t1.OPT_TYPE_CODE IS NULL AND t2.OPT_TYPE_CODE IS NOT NULL) OR (t1.OPT_TYPE_CODE IS NOT NULL AND t2.OPT_TYPE_CODE IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.SUBSCRIPTION_NBR <> t2.SUBSCRIPTION_NBR OR ( t1.SUBSCRIPTION_NBR IS NULL AND t2.SUBSCRIPTION_NBR IS NOT NULL) OR (t1.SUBSCRIPTION_NBR IS NOT NULL AND t2.SUBSCRIPTION_NBR IS NULL)) OR (t1.FIRST_NAME <> t2.FIRST_NAME OR ( t1.FIRST_NAME IS NULL AND t2.FIRST_NAME IS NOT NULL) OR (t1.FIRST_NAME IS NOT NULL AND t2.FIRST_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.EMAIL_ADDR_TEXT <> t2.EMAIL_ADDR_TEXT OR ( t1.EMAIL_ADDR_TEXT IS NULL AND t2.EMAIL_ADDR_TEXT IS NOT NULL) OR (t1.EMAIL_ADDR_TEXT IS NOT NULL AND t2.EMAIL_ADDR_TEXT IS NULL)) OR (t1.CONTACT_PHONE_NBR <> t2.CONTACT_PHONE_NBR OR ( t1.CONTACT_PHONE_NBR IS NULL AND t2.CONTACT_PHONE_NBR IS NOT NULL) OR (t1.CONTACT_PHONE_NBR IS NOT NULL AND t2.CONTACT_PHONE_NBR IS NULL)) OR (t1.SRC_ADDR_LINE_1_TXT <> t2.SRC_ADDR_LINE_1_TXT OR ( t1.SRC_ADDR_LINE_1_TXT IS NULL AND t2.SRC_ADDR_LINE_1_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_1_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_1_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_2_TXT <> t2.SRC_ADDR_LINE_2_TXT OR ( t1.SRC_ADDR_LINE_2_TXT IS NULL AND t2.SRC_ADDR_LINE_2_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_2_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_2_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_3_TXT <> t2.SRC_ADDR_LINE_3_TXT OR ( t1.SRC_ADDR_LINE_3_TXT IS NULL AND t2.SRC_ADDR_LINE_3_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_3_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_3_TXT IS NULL)) OR (t1.SRC_CITY_NAME <> t2.SRC_CITY_NAME OR ( t1.SRC_CITY_NAME IS NULL AND t2.SRC_CITY_NAME IS NOT NULL) OR (t1.SRC_CITY_NAME IS NOT NULL AND t2.SRC_CITY_NAME IS NULL)) OR (t1.SRC_STATE <> t2.SRC_STATE OR ( t1.SRC_STATE IS NULL AND t2.SRC_STATE IS NOT NULL) OR (t1.SRC_STATE IS NOT NULL AND t2.SRC_STATE IS NULL)) OR (t1.SRC_ZIP <> t2.SRC_ZIP OR ( t1.SRC_ZIP IS NULL AND t2.SRC_ZIP IS NOT NULL) OR (t1.SRC_ZIP IS NOT NULL AND t2.SRC_ZIP IS NULL)) OR (t1.SRC_CNTRY_NAME <> t2.SRC_CNTRY_NAME OR ( t1.SRC_CNTRY_NAME IS NULL AND t2.SRC_CNTRY_NAME IS NOT NULL) OR (t1.SRC_CNTRY_NAME IS NOT NULL AND t2.SRC_CNTRY_NAME IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.OPT_IND <> t2.OPT_IND OR ( t1.OPT_IND IS NULL AND t2.OPT_IND IS NOT NULL) OR (t1.OPT_IND IS NOT NULL AND t2.OPT_IND IS NULL)) OR (t1.OPT_TIME <> t2.OPT_TIME OR ( t1.OPT_TIME IS NULL AND t2.OPT_TIME IS NOT NULL) OR (t1.OPT_TIME IS NOT NULL AND t2.OPT_TIME IS NULL)) OR (t1.OPT_REASN_TXT <> t2.OPT_REASN_TXT OR ( t1.OPT_REASN_TXT IS NULL AND t2.OPT_REASN_TXT IS NOT NULL) OR (t1.OPT_REASN_TXT IS NOT NULL AND t2.OPT_REASN_TXT IS NULL)) OR (t1.LAST_ACTIVITY_TM <> t2.LAST_ACTIVITY_TM OR ( t1.LAST_ACTIVITY_TM IS NULL AND t2.LAST_ACTIVITY_TM IS NOT NULL) OR (t1.LAST_ACTIVITY_TM IS NOT NULL AND t2.LAST_ACTIVITY_TM IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.CHANNEL_IND <> t2.CHANNEL_IND OR ( t1.CHANNEL_IND IS NULL AND t2.CHANNEL_IND IS NOT NULL) OR (t1.CHANNEL_IND IS NOT NULL AND t2.CHANNEL_IND IS NULL)) OR (t1.OPT_LEVEL_IND <> t2.OPT_LEVEL_IND OR ( t1.OPT_LEVEL_IND IS NULL AND t2.OPT_LEVEL_IND IS NOT NULL) OR (t1.OPT_LEVEL_IND IS NOT NULL AND t2.OPT_LEVEL_IND IS NULL)) OR (t1.POSTL_ADDR_ID <> t2.POSTL_ADDR_ID OR ( t1.POSTL_ADDR_ID IS NULL AND t2.POSTL_ADDR_ID IS NOT NULL) OR (t1.POSTL_ADDR_ID IS NOT NULL AND t2.POSTL_ADDR_ID IS NULL)) OR (t1.STATUS_FLG <> t2.STATUS_FLG OR ( t1.STATUS_FLG IS NULL AND t2.STATUS_FLG IS NOT NULL) OR (t1.STATUS_FLG IS NOT NULL AND t2.STATUS_FLG IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PE_OPT_OUT', 'INSERT INTO NC_PE_OPT_OUT ( SCENARIO_ID,PE_OPTOUT_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRIPTION_NBR,FIRST_NAME,LAST_NAME,EMAIL_ADDR_TEXT,CONTACT_PHONE_NBR,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_STATE,SRC_ZIP,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,POSTL_ADDR_ID,STATUS_FLG,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,MID_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.REGIS_PRSNA_ID,t1.OPT_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRIPTION_NBR,t1.FIRST_NAME,t1.LAST_NAME,t1.EMAIL_ADDR_TEXT,t1.CONTACT_PHONE_NBR,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_STATE,t1.SRC_ZIP,t1.SRC_CNTRY_NAME,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.OPT_IND,t1.OPT_TIME,t1.OPT_REASN_TXT,t1.LAST_ACTIVITY_TM,t1.NATIONAL_ID_NBR,t1.CHANNEL_IND,t1.OPT_LEVEL_IND,t1.POSTL_ADDR_ID,t1.STATUS_FLG,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.MID_NAME,''ACTIVATE'',''VALID'' FROM IN_PE_OPT_OUT t1, PE_OPT_OUT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PE_OPTOUT_ID = t2.PE_OPTOUT_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL', 'INSERT INTO NC_PREDFND_TRT_VAL ( SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,''INSERT'',''VALID'' FROM IN_PREDFND_TRT_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PREDFND_TRT_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL', 'INSERT INTO NC_PREDFND_TRT_VAL ( SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,''DELETE'',''VALID'' FROM PREDFND_TRT_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PREDFND_TRT_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PREDFND_TRT_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL', 'INSERT INTO NC_PREDFND_TRT_VAL ( SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PREDFND_TRT_DATE,t1.PREDFND_TRT_VAL_NAME,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.TRT_NBR,t1.PREDFND_TRT_DESC,t1.LANG_CODE,''UPDATE'',''VALID'' FROM IN_PREDFND_TRT_VAL t1, PREDFND_TRT_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PREDFND_TRT_DATE <> t2.PREDFND_TRT_DATE OR ( t1.PREDFND_TRT_DATE IS NULL AND t2.PREDFND_TRT_DATE IS NOT NULL) OR (t1.PREDFND_TRT_DATE IS NOT NULL AND t2.PREDFND_TRT_DATE IS NULL)) OR (t1.PREDFND_TRT_VAL_NAME <> t2.PREDFND_TRT_VAL_NAME OR ( t1.PREDFND_TRT_VAL_NAME IS NULL AND t2.PREDFND_TRT_VAL_NAME IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NAME IS NOT NULL AND t2.PREDFND_TRT_VAL_NAME IS NULL)) OR (t1.PREDFND_TRT_VAL_NBR <> t2.PREDFND_TRT_VAL_NBR OR ( t1.PREDFND_TRT_VAL_NBR IS NULL AND t2.PREDFND_TRT_VAL_NBR IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NBR IS NOT NULL AND t2.PREDFND_TRT_VAL_NBR IS NULL)) OR (t1.PREDFND_TRT_TXT <> t2.PREDFND_TRT_TXT OR ( t1.PREDFND_TRT_TXT IS NULL AND t2.PREDFND_TRT_TXT IS NOT NULL) OR (t1.PREDFND_TRT_TXT IS NOT NULL AND t2.PREDFND_TRT_TXT IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.PREDFND_TRT_DESC <> t2.PREDFND_TRT_DESC OR ( t1.PREDFND_TRT_DESC IS NULL AND t2.PREDFND_TRT_DESC IS NOT NULL) OR (t1.PREDFND_TRT_DESC IS NOT NULL AND t2.PREDFND_TRT_DESC IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL', 'INSERT INTO NC_PREDFND_TRT_VAL ( SCENARIO_ID,PREDFND_TRT_DATE,PREDFND_TRT_VAL_NAME,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,TRT_NBR,PREDFND_TRT_DESC,LANG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PREDFND_TRT_DATE,t1.PREDFND_TRT_VAL_NAME,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.TRT_NBR,t1.PREDFND_TRT_DESC,t1.LANG_CODE,''ACTIVATE'',''VALID'' FROM IN_PREDFND_TRT_VAL t1, PREDFND_TRT_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PREDFND_TRT_VAL_NBR = t2.PREDFND_TRT_VAL_NBR AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN', 'INSERT INTO NC_PREDFND_TRT_VAL_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,''INSERT'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PREDFND_TRT_VAL_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN', 'INSERT INTO NC_PREDFND_TRT_VAL_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,''DELETE'',''VALID'' FROM PREDFND_TRT_VAL_IN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PREDFND_TRT_VAL_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PREDFND_TRT_VAL_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN', 'INSERT INTO NC_PREDFND_TRT_VAL_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.PREDFND_TRT_TXT_LOCAL,t1.ID,''UPDATE'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN t1, PREDFND_TRT_VAL_IN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PREDFND_TRT_VAL_NBR <> t2.PREDFND_TRT_VAL_NBR OR ( t1.PREDFND_TRT_VAL_NBR IS NULL AND t2.PREDFND_TRT_VAL_NBR IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NBR IS NOT NULL AND t2.PREDFND_TRT_VAL_NBR IS NULL)) OR (t1.PREDFND_TRT_TXT <> t2.PREDFND_TRT_TXT OR ( t1.PREDFND_TRT_TXT IS NULL AND t2.PREDFND_TRT_TXT IS NOT NULL) OR (t1.PREDFND_TRT_TXT IS NOT NULL AND t2.PREDFND_TRT_TXT IS NULL)) OR (t1.PREDFND_TRT_TXT_LOCAL <> t2.PREDFND_TRT_TXT_LOCAL OR ( t1.PREDFND_TRT_TXT_LOCAL IS NULL AND t2.PREDFND_TRT_TXT_LOCAL IS NOT NULL) OR (t1.PREDFND_TRT_TXT_LOCAL IS NOT NULL AND t2.PREDFND_TRT_TXT_LOCAL IS NULL)) OR (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN', 'INSERT INTO NC_PREDFND_TRT_VAL_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.PREDFND_TRT_TXT_LOCAL,t1.ID,''ACTIVATE'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN t1, PREDFND_TRT_VAL_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN_DUMMY', 'INSERT INTO NC_PREDFND_TRT_VAL_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,''INSERT'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN_DUMMY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PREDFND_TRT_VAL_IN_DUMMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN_DUMMY', 'INSERT INTO NC_PREDFND_TRT_VAL_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,''DELETE'',''VALID'' FROM PREDFND_TRT_VAL_IN_DUMMY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PREDFND_TRT_VAL_IN_DUMMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PREDFND_TRT_VAL_IN_DUMMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN_DUMMY', 'INSERT INTO NC_PREDFND_TRT_VAL_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.STATUS,t1.PREDFND_TRT_TXT_LOCAL,t1.ID,''UPDATE'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN_DUMMY t1, PREDFND_TRT_VAL_IN_DUMMY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PREDFND_TRT_VAL_NBR <> t2.PREDFND_TRT_VAL_NBR OR ( t1.PREDFND_TRT_VAL_NBR IS NULL AND t2.PREDFND_TRT_VAL_NBR IS NOT NULL) OR (t1.PREDFND_TRT_VAL_NBR IS NOT NULL AND t2.PREDFND_TRT_VAL_NBR IS NULL)) OR (t1.PREDFND_TRT_TXT <> t2.PREDFND_TRT_TXT OR ( t1.PREDFND_TRT_TXT IS NULL AND t2.PREDFND_TRT_TXT IS NOT NULL) OR (t1.PREDFND_TRT_TXT IS NOT NULL AND t2.PREDFND_TRT_TXT IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) OR (t1.PREDFND_TRT_TXT_LOCAL <> t2.PREDFND_TRT_TXT_LOCAL OR ( t1.PREDFND_TRT_TXT_LOCAL IS NULL AND t2.PREDFND_TRT_TXT_LOCAL IS NOT NULL) OR (t1.PREDFND_TRT_TXT_LOCAL IS NOT NULL AND t2.PREDFND_TRT_TXT_LOCAL IS NULL)) OR (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PREDFND_TRT_VAL_IN_DUMMY', 'INSERT INTO NC_PREDFND_TRT_VAL_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,PREDFND_TRT_VAL_NBR,PREDFND_TRT_TXT,STATUS,PREDFND_TRT_TXT_LOCAL,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.PREDFND_TRT_VAL_NBR,t1.PREDFND_TRT_TXT,t1.STATUS,t1.PREDFND_TRT_TXT_LOCAL,t1.ID,''ACTIVATE'',''VALID'' FROM IN_PREDFND_TRT_VAL_IN_DUMMY t1, PREDFND_TRT_VAL_IN_DUMMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_EMAIL_ADDR_STG', 'INSERT INTO NC_PRSNA_EMAIL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,''INSERT'',''VALID'' FROM IN_PRSNA_EMAIL_ADDR_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_EMAIL_ADDR_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_EMAIL_ADDR_STG', 'INSERT INTO NC_PRSNA_EMAIL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,''DELETE'',''VALID'' FROM PRSNA_EMAIL_ADDR_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_EMAIL_ADDR_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_EMAIL_ADDR_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_EMAIL_ADDR_STG', 'INSERT INTO NC_PRSNA_EMAIL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.CNTCT_OPTN_NBR,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''UPDATE'',''VALID'' FROM IN_PRSNA_EMAIL_ADDR_STG t1, PRSNA_EMAIL_ADDR_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.EMAIL_FORMT_CODE <> t2.EMAIL_FORMT_CODE OR ( t1.EMAIL_FORMT_CODE IS NULL AND t2.EMAIL_FORMT_CODE IS NOT NULL) OR (t1.EMAIL_FORMT_CODE IS NOT NULL AND t2.EMAIL_FORMT_CODE IS NULL)) OR (t1.CNTCT_OPTN_NBR <> t2.CNTCT_OPTN_NBR OR ( t1.CNTCT_OPTN_NBR IS NULL AND t2.CNTCT_OPTN_NBR IS NOT NULL) OR (t1.CNTCT_OPTN_NBR IS NOT NULL AND t2.CNTCT_OPTN_NBR IS NULL)) OR (t1.CNTCT_OPTN_IND <> t2.CNTCT_OPTN_IND OR ( t1.CNTCT_OPTN_IND IS NULL AND t2.CNTCT_OPTN_IND IS NOT NULL) OR (t1.CNTCT_OPTN_IND IS NOT NULL AND t2.CNTCT_OPTN_IND IS NULL)) OR (t1.PREFR_IND <> t2.PREFR_IND OR ( t1.PREFR_IND IS NULL AND t2.PREFR_IND IS NOT NULL) OR (t1.PREFR_IND IS NOT NULL AND t2.PREFR_IND IS NULL)) OR (t1.VALID_IND <> t2.VALID_IND OR ( t1.VALID_IND IS NULL AND t2.VALID_IND IS NOT NULL) OR (t1.VALID_IND IS NOT NULL AND t2.VALID_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_EMAIL_ADDR_STG', 'INSERT INTO NC_PRSNA_EMAIL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.CNTCT_OPTN_NBR,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''ACTIVATE'',''VALID'' FROM IN_PRSNA_EMAIL_ADDR_STG t1, PRSNA_EMAIL_ADDR_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PHONE_STG', 'INSERT INTO NC_PRSNA_PHONE_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''INSERT'',''VALID'' FROM IN_PRSNA_PHONE_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_PHONE_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PHONE_STG', 'INSERT INTO NC_PRSNA_PHONE_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''DELETE'',''VALID'' FROM PRSNA_PHONE_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_PHONE_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_PHONE_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PHONE_STG', 'INSERT INTO NC_PRSNA_PHONE_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.PHONE_CNTRY_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_LINE_NBR,t1.PHONE_EXTSN_NUM,t1.FULL_PHONE_NUM,t1.SMS_PREFR_IND,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''UPDATE'',''VALID'' FROM IN_PRSNA_PHONE_STG t1, PRSNA_PHONE_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.PHONE_CNTRY_NBR <> t2.PHONE_CNTRY_NBR OR ( t1.PHONE_CNTRY_NBR IS NULL AND t2.PHONE_CNTRY_NBR IS NOT NULL) OR (t1.PHONE_CNTRY_NBR IS NOT NULL AND t2.PHONE_CNTRY_NBR IS NULL)) OR (t1.PHONE_AREA_NBR <> t2.PHONE_AREA_NBR OR ( t1.PHONE_AREA_NBR IS NULL AND t2.PHONE_AREA_NBR IS NOT NULL) OR (t1.PHONE_AREA_NBR IS NOT NULL AND t2.PHONE_AREA_NBR IS NULL)) OR (t1.PHONE_EXCHG_NBR <> t2.PHONE_EXCHG_NBR OR ( t1.PHONE_EXCHG_NBR IS NULL AND t2.PHONE_EXCHG_NBR IS NOT NULL) OR (t1.PHONE_EXCHG_NBR IS NOT NULL AND t2.PHONE_EXCHG_NBR IS NULL)) OR (t1.PHONE_LINE_NBR <> t2.PHONE_LINE_NBR OR ( t1.PHONE_LINE_NBR IS NULL AND t2.PHONE_LINE_NBR IS NOT NULL) OR (t1.PHONE_LINE_NBR IS NOT NULL AND t2.PHONE_LINE_NBR IS NULL)) OR (t1.PHONE_EXTSN_NUM <> t2.PHONE_EXTSN_NUM OR ( t1.PHONE_EXTSN_NUM IS NULL AND t2.PHONE_EXTSN_NUM IS NOT NULL) OR (t1.PHONE_EXTSN_NUM IS NOT NULL AND t2.PHONE_EXTSN_NUM IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.SMS_PREFR_IND <> t2.SMS_PREFR_IND OR ( t1.SMS_PREFR_IND IS NULL AND t2.SMS_PREFR_IND IS NOT NULL) OR (t1.SMS_PREFR_IND IS NOT NULL AND t2.SMS_PREFR_IND IS NULL)) OR (t1.SMS_AVAIL_START_TIME <> t2.SMS_AVAIL_START_TIME OR ( t1.SMS_AVAIL_START_TIME IS NULL AND t2.SMS_AVAIL_START_TIME IS NOT NULL) OR (t1.SMS_AVAIL_START_TIME IS NOT NULL AND t2.SMS_AVAIL_START_TIME IS NULL)) OR (t1.SMS_AVAIL_END_TIME <> t2.SMS_AVAIL_END_TIME OR ( t1.SMS_AVAIL_END_TIME IS NULL AND t2.SMS_AVAIL_END_TIME IS NOT NULL) OR (t1.SMS_AVAIL_END_TIME IS NOT NULL AND t2.SMS_AVAIL_END_TIME IS NULL)) OR (t1.CNTCT_OPTN_IND <> t2.CNTCT_OPTN_IND OR ( t1.CNTCT_OPTN_IND IS NULL AND t2.CNTCT_OPTN_IND IS NOT NULL) OR (t1.CNTCT_OPTN_IND IS NOT NULL AND t2.CNTCT_OPTN_IND IS NULL)) OR (t1.PREFR_IND <> t2.PREFR_IND OR ( t1.PREFR_IND IS NULL AND t2.PREFR_IND IS NOT NULL) OR (t1.PREFR_IND IS NOT NULL AND t2.PREFR_IND IS NULL)) OR (t1.VALID_IND <> t2.VALID_IND OR ( t1.VALID_IND IS NULL AND t2.VALID_IND IS NOT NULL) OR (t1.VALID_IND IS NOT NULL AND t2.VALID_IND IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) OR (t1.CNTCT_OPTN_NBR <> t2.CNTCT_OPTN_NBR OR ( t1.CNTCT_OPTN_NBR IS NULL AND t2.CNTCT_OPTN_NBR IS NOT NULL) OR (t1.CNTCT_OPTN_NBR IS NOT NULL AND t2.CNTCT_OPTN_NBR IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PHONE_STG', 'INSERT INTO NC_PRSNA_PHONE_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,PHONE_CNTRY_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_LINE_NBR,PHONE_EXTSN_NUM,FULL_PHONE_NUM,SMS_PREFR_IND,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.PHONE_CNTRY_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_LINE_NBR,t1.PHONE_EXTSN_NUM,t1.FULL_PHONE_NUM,t1.SMS_PREFR_IND,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''ACTIVATE'',''VALID'' FROM IN_PRSNA_PHONE_STG t1, PRSNA_PHONE_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_ORIG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_ORIG ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,''INSERT'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_ORIG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_POSTL_ADDR_ORIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_ORIG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_ORIG ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,''DELETE'',''VALID'' FROM PRSNA_POSTL_ADDR_ORIG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_POSTL_ADDR_ORIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_POSTL_ADDR_ORIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_ORIG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_ORIG ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.REGIS_CNSMR_ID_VAL,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.TERR_CODE,t1.CNTRY_CODE,''UPDATE'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_ORIG t1, PRSNA_POSTL_ADDR_ORIG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_ORIG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_ORIG ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,TERR_CODE,CNTRY_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.REGIS_CNSMR_ID_VAL,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.TERR_CODE,t1.CNTRY_CODE,''ACTIVATE'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_ORIG t1, PRSNA_POSTL_ADDR_ORIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_STG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''INSERT'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_POSTL_ADDR_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_STG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''DELETE'',''VALID'' FROM PRSNA_POSTL_ADDR_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_POSTL_ADDR_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_POSTL_ADDR_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_STG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_NAME,t1.CNTRY_NAME,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''UPDATE'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_STG t1, PRSNA_POSTL_ADDR_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.GEOC_AREA_TYPE_CODE <> t2.GEOC_AREA_TYPE_CODE OR ( t1.GEOC_AREA_TYPE_CODE IS NULL AND t2.GEOC_AREA_TYPE_CODE IS NOT NULL) OR (t1.GEOC_AREA_TYPE_CODE IS NOT NULL AND t2.GEOC_AREA_TYPE_CODE IS NULL)) OR (t1.GEOC_AREA_NAME <> t2.GEOC_AREA_NAME OR ( t1.GEOC_AREA_NAME IS NULL AND t2.GEOC_AREA_NAME IS NOT NULL) OR (t1.GEOC_AREA_NAME IS NOT NULL AND t2.GEOC_AREA_NAME IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.CNTCT_OPTN_IND <> t2.CNTCT_OPTN_IND OR ( t1.CNTCT_OPTN_IND IS NULL AND t2.CNTCT_OPTN_IND IS NOT NULL) OR (t1.CNTCT_OPTN_IND IS NOT NULL AND t2.CNTCT_OPTN_IND IS NULL)) OR (t1.PREFR_IND <> t2.PREFR_IND OR ( t1.PREFR_IND IS NULL AND t2.PREFR_IND IS NOT NULL) OR (t1.PREFR_IND IS NOT NULL AND t2.PREFR_IND IS NULL)) OR (t1.VALID_IND <> t2.VALID_IND OR ( t1.VALID_IND IS NULL AND t2.VALID_IND IS NOT NULL) OR (t1.VALID_IND IS NOT NULL AND t2.VALID_IND IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.NC_STATUS <> t2.NC_STATUS OR ( t1.NC_STATUS IS NULL AND t2.NC_STATUS IS NOT NULL) OR (t1.NC_STATUS IS NOT NULL AND t2.NC_STATUS IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) OR (t1.CNTCT_OPTN_NBR <> t2.CNTCT_OPTN_NBR OR ( t1.CNTCT_OPTN_NBR IS NULL AND t2.CNTCT_OPTN_NBR IS NOT NULL) OR (t1.CNTCT_OPTN_NBR IS NOT NULL AND t2.CNTCT_OPTN_NBR IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_POSTL_ADDR_STG', 'INSERT INTO NC_PRSNA_POSTL_ADDR_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,GEOC_AREA_TYPE_CODE,GEOC_AREA_NAME,CNTRY_NAME,CNTCT_OPTN_IND,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.GEOC_AREA_TYPE_CODE,t1.GEOC_AREA_NAME,t1.CNTRY_NAME,t1.CNTCT_OPTN_IND,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''ACTIVATE'',''VALID'' FROM IN_PRSNA_POSTL_ADDR_STG t1, PRSNA_POSTL_ADDR_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SOC_NETWK_ACCT_STG', 'INSERT INTO NC_PRSNA_SOC_NETWK_ACCT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''INSERT'',''VALID'' FROM IN_PRSNA_SOC_NETWK_ACCT_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_SOC_NETWK_ACCT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SOC_NETWK_ACCT_STG', 'INSERT INTO NC_PRSNA_SOC_NETWK_ACCT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,''DELETE'',''VALID'' FROM PRSNA_SOC_NETWK_ACCT_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_SOC_NETWK_ACCT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_SOC_NETWK_ACCT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SOC_NETWK_ACCT_STG', 'INSERT INTO NC_PRSNA_SOC_NETWK_ACCT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNTCT_OPTN_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''UPDATE'',''VALID'' FROM IN_PRSNA_SOC_NETWK_ACCT_STG t1, PRSNA_SOC_NETWK_ACCT_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL <> t2.SOCIAL_NETWK_ACCT_ID_VAL OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NULL)) OR (t1.PREFR_IND <> t2.PREFR_IND OR ( t1.PREFR_IND IS NULL AND t2.PREFR_IND IS NOT NULL) OR (t1.PREFR_IND IS NOT NULL AND t2.PREFR_IND IS NULL)) OR (t1.VALID_IND <> t2.VALID_IND OR ( t1.VALID_IND IS NULL AND t2.VALID_IND IS NOT NULL) OR (t1.VALID_IND IS NOT NULL AND t2.VALID_IND IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.NC_STATUS <> t2.NC_STATUS OR ( t1.NC_STATUS IS NULL AND t2.NC_STATUS IS NOT NULL) OR (t1.NC_STATUS IS NOT NULL AND t2.NC_STATUS IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) OR (t1.CNTCT_OPTN_NBR <> t2.CNTCT_OPTN_NBR OR ( t1.CNTCT_OPTN_NBR IS NULL AND t2.CNTCT_OPTN_NBR IS NOT NULL) OR (t1.CNTCT_OPTN_NBR IS NOT NULL AND t2.CNTCT_OPTN_NBR IS NULL)) OR (t1.CNTCT_OPTN_IND <> t2.CNTCT_OPTN_IND OR ( t1.CNTCT_OPTN_IND IS NULL AND t2.CNTCT_OPTN_IND IS NOT NULL) OR (t1.CNTCT_OPTN_IND IS NOT NULL AND t2.CNTCT_OPTN_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SOC_NETWK_ACCT_STG', 'INSERT INTO NC_PRSNA_SOC_NETWK_ACCT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,CNTCT_POINT_CATEG_CODE,SOCIAL_NETWK_ACCT_ID_VAL,PREFR_IND,VALID_IND,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,NC_STATUS,SYNC_STATUS,CNTCT_OPTN_NBR,CNTCT_OPTN_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.CNTCT_POINT_CATEG_CODE,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.PREFR_IND,t1.VALID_IND,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.NC_STATUS,t1.SYNC_STATUS,t1.CNTCT_OPTN_NBR,t1.CNTCT_OPTN_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,''ACTIVATE'',''VALID'' FROM IN_PRSNA_SOC_NETWK_ACCT_STG t1, PRSNA_SOC_NETWK_ACCT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STATUS', 'INSERT INTO NC_PRSNA_STATUS ( SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_PRSNA_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_STATUS_CODE = t2.PRSNA_STATUS_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STATUS', 'INSERT INTO NC_PRSNA_STATUS ( SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM PRSNA_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_STATUS_CODE = t2.PRSNA_STATUS_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_STATUS_CODE = t2.PRSNA_STATUS_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STATUS', 'INSERT INTO NC_PRSNA_STATUS ( SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.PRSNA_STATUS_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_PRSNA_STATUS t1, PRSNA_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_STATUS_CODE = t2.PRSNA_STATUS_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.PRSNA_STATUS_NAME <> t2.PRSNA_STATUS_NAME OR ( t1.PRSNA_STATUS_NAME IS NULL AND t2.PRSNA_STATUS_NAME IS NOT NULL) OR (t1.PRSNA_STATUS_NAME IS NOT NULL AND t2.PRSNA_STATUS_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STATUS', 'INSERT INTO NC_PRSNA_STATUS ( SCENARIO_ID,PRSNA_STATUS_CODE,PRSNA_STATUS_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_STATUS_CODE,t1.PRSNA_STATUS_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_PRSNA_STATUS t1, PRSNA_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_STATUS_CODE = t2.PRSNA_STATUS_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STG', 'INSERT INTO NC_PRSNA_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,''INSERT'',''VALID'' FROM IN_PRSNA_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STG', 'INSERT INTO NC_PRSNA_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,''DELETE'',''VALID'' FROM PRSNA_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STG', 'INSERT INTO NC_PRSNA_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.USER_NAME,t1.PRSNA_REG_DT,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.GENDR_IND,t1.BRTH_DATE,t1.LANG_CODE,t1.PRSNA_STTUS_CODE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.WIN_KEY,t1.SYNC_STATUS,t1.CNTRY_CODE,t1.LOYALTY_ACCT_ID,t1.LYLTY_ACCT_NUM,t1.LYLTY_PGM_NBR,''UPDATE'',''VALID'' FROM IN_PRSNA_STG t1, PRSNA_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.USER_NAME <> t2.USER_NAME OR ( t1.USER_NAME IS NULL AND t2.USER_NAME IS NOT NULL) OR (t1.USER_NAME IS NOT NULL AND t2.USER_NAME IS NULL)) OR (t1.PRSNA_REG_DT <> t2.PRSNA_REG_DT OR ( t1.PRSNA_REG_DT IS NULL AND t2.PRSNA_REG_DT IS NOT NULL) OR (t1.PRSNA_REG_DT IS NOT NULL AND t2.PRSNA_REG_DT IS NULL)) OR (t1.NAME_PREFX_TXT <> t2.NAME_PREFX_TXT OR ( t1.NAME_PREFX_TXT IS NULL AND t2.NAME_PREFX_TXT IS NOT NULL) OR (t1.NAME_PREFX_TXT IS NOT NULL AND t2.NAME_PREFX_TXT IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.PRSNA_STTUS_CODE <> t2.PRSNA_STTUS_CODE OR ( t1.PRSNA_STTUS_CODE IS NULL AND t2.PRSNA_STTUS_CODE IS NOT NULL) OR (t1.PRSNA_STTUS_CODE IS NOT NULL AND t2.PRSNA_STTUS_CODE IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.WIN_KEY <> t2.WIN_KEY OR ( t1.WIN_KEY IS NULL AND t2.WIN_KEY IS NOT NULL) OR (t1.WIN_KEY IS NOT NULL AND t2.WIN_KEY IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.LOYALTY_ACCT_ID <> t2.LOYALTY_ACCT_ID OR ( t1.LOYALTY_ACCT_ID IS NULL AND t2.LOYALTY_ACCT_ID IS NOT NULL) OR (t1.LOYALTY_ACCT_ID IS NOT NULL AND t2.LOYALTY_ACCT_ID IS NULL)) OR (t1.LYLTY_ACCT_NUM <> t2.LYLTY_ACCT_NUM OR ( t1.LYLTY_ACCT_NUM IS NULL AND t2.LYLTY_ACCT_NUM IS NOT NULL) OR (t1.LYLTY_ACCT_NUM IS NOT NULL AND t2.LYLTY_ACCT_NUM IS NULL)) OR (t1.LYLTY_PGM_NBR <> t2.LYLTY_PGM_NBR OR ( t1.LYLTY_PGM_NBR IS NULL AND t2.LYLTY_PGM_NBR IS NOT NULL) OR (t1.LYLTY_PGM_NBR IS NOT NULL AND t2.LYLTY_PGM_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_STG', 'INSERT INTO NC_PRSNA_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,USER_NAME,PRSNA_REG_DT,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,GENDR_IND,BRTH_DATE,LANG_CODE,PRSNA_STTUS_CODE,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,WIN_KEY,SYNC_STATUS,CNTRY_CODE,LOYALTY_ACCT_ID,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.USER_NAME,t1.PRSNA_REG_DT,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.GENDR_IND,t1.BRTH_DATE,t1.LANG_CODE,t1.PRSNA_STTUS_CODE,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.WIN_KEY,t1.SYNC_STATUS,t1.CNTRY_CODE,t1.LOYALTY_ACCT_ID,t1.LYLTY_ACCT_NUM,t1.LYLTY_PGM_NBR,''ACTIVATE'',''VALID'' FROM IN_PRSNA_STG t1, PRSNA_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT', 'INSERT INTO NC_PRSNA_TRT ( SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_PRSNA_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT', 'INSERT INTO NC_PRSNA_TRT ( SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM PRSNA_TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT', 'INSERT INTO NC_PRSNA_TRT ( SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_TRT_DATE,t1.REGIS_PRSNA_ID,t1.PRSNA_TRT_TXT,t1.TRT_NBR,t1.PRSNA_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_PRSNA_TRT t1, PRSNA_TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_TRT_DATE <> t2.PRSNA_TRT_DATE OR ( t1.PRSNA_TRT_DATE IS NULL AND t2.PRSNA_TRT_DATE IS NOT NULL) OR (t1.PRSNA_TRT_DATE IS NOT NULL AND t2.PRSNA_TRT_DATE IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.PRSNA_TRT_TXT <> t2.PRSNA_TRT_TXT OR ( t1.PRSNA_TRT_TXT IS NULL AND t2.PRSNA_TRT_TXT IS NOT NULL) OR (t1.PRSNA_TRT_TXT IS NOT NULL AND t2.PRSNA_TRT_TXT IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.PRSNA_TRT_SEQ_NBR <> t2.PRSNA_TRT_SEQ_NBR OR ( t1.PRSNA_TRT_SEQ_NBR IS NULL AND t2.PRSNA_TRT_SEQ_NBR IS NOT NULL) OR (t1.PRSNA_TRT_SEQ_NBR IS NOT NULL AND t2.PRSNA_TRT_SEQ_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT', 'INSERT INTO NC_PRSNA_TRT ( SCENARIO_ID,PRSNA_TRT_DATE,REGIS_PRSNA_ID,PRSNA_TRT_TXT,TRT_NBR,PRSNA_TRT_SEQ_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_TRT_DATE,t1.REGIS_PRSNA_ID,t1.PRSNA_TRT_TXT,t1.TRT_NBR,t1.PRSNA_TRT_SEQ_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_PRSNA_TRT t1, PRSNA_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT_STG', 'INSERT INTO NC_PRSNA_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''INSERT'',''VALID'' FROM IN_PRSNA_TRT_STG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT_STG', 'INSERT INTO NC_PRSNA_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,''DELETE'',''VALID'' FROM PRSNA_TRT_STG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PRSNA_TRT_STG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT_STG', 'INSERT INTO NC_PRSNA_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.TRT_NBR,t1.PRSNA_TRT_SEQ_NBR,t1.PRSNA_TRT_DATE,t1.PRSNA_TRT_INTEGER,t1.PRSNA_TRT_TXT,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''UPDATE'',''VALID'' FROM IN_PRSNA_TRT_STG t1, PRSNA_TRT_STG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.PRSNA_TRT_SEQ_NBR <> t2.PRSNA_TRT_SEQ_NBR OR ( t1.PRSNA_TRT_SEQ_NBR IS NULL AND t2.PRSNA_TRT_SEQ_NBR IS NOT NULL) OR (t1.PRSNA_TRT_SEQ_NBR IS NOT NULL AND t2.PRSNA_TRT_SEQ_NBR IS NULL)) OR (t1.PRSNA_TRT_DATE <> t2.PRSNA_TRT_DATE OR ( t1.PRSNA_TRT_DATE IS NULL AND t2.PRSNA_TRT_DATE IS NOT NULL) OR (t1.PRSNA_TRT_DATE IS NOT NULL AND t2.PRSNA_TRT_DATE IS NULL)) OR (t1.PRSNA_TRT_INTEGER <> t2.PRSNA_TRT_INTEGER OR ( t1.PRSNA_TRT_INTEGER IS NULL AND t2.PRSNA_TRT_INTEGER IS NOT NULL) OR (t1.PRSNA_TRT_INTEGER IS NOT NULL AND t2.PRSNA_TRT_INTEGER IS NULL)) OR (t1.PRSNA_TRT_TXT <> t2.PRSNA_TRT_TXT OR ( t1.PRSNA_TRT_TXT IS NULL AND t2.PRSNA_TRT_TXT IS NOT NULL) OR (t1.PRSNA_TRT_TXT IS NOT NULL AND t2.PRSNA_TRT_TXT IS NULL)) OR (t1.RECORD_IND <> t2.RECORD_IND OR ( t1.RECORD_IND IS NULL AND t2.RECORD_IND IS NOT NULL) OR (t1.RECORD_IND IS NOT NULL AND t2.RECORD_IND IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.LOAD_TS <> t2.LOAD_TS OR ( t1.LOAD_TS IS NULL AND t2.LOAD_TS IS NOT NULL) OR (t1.LOAD_TS IS NOT NULL AND t2.LOAD_TS IS NULL)) OR (t1.MDM_LOAD_IND <> t2.MDM_LOAD_IND OR ( t1.MDM_LOAD_IND IS NULL AND t2.MDM_LOAD_IND IS NOT NULL) OR (t1.MDM_LOAD_IND IS NOT NULL AND t2.MDM_LOAD_IND IS NULL)) OR (t1.SYNC_STATUS <> t2.SYNC_STATUS OR ( t1.SYNC_STATUS IS NULL AND t2.SYNC_STATUS IS NOT NULL) OR (t1.SYNC_STATUS IS NOT NULL AND t2.SYNC_STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRT_STG', 'INSERT INTO NC_PRSNA_TRT_STG ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,TRT_NBR,PRSNA_TRT_SEQ_NBR,PRSNA_TRT_DATE,PRSNA_TRT_INTEGER,PRSNA_TRT_TXT,RECORD_IND,LOAD_ID,LOAD_TS,MDM_LOAD_IND,SYNC_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.TRT_NBR,t1.PRSNA_TRT_SEQ_NBR,t1.PRSNA_TRT_DATE,t1.PRSNA_TRT_INTEGER,t1.PRSNA_TRT_TXT,t1.RECORD_IND,t1.LOAD_ID,t1.LOAD_TS,t1.MDM_LOAD_IND,t1.SYNC_STATUS,''ACTIVATE'',''VALID'' FROM IN_PRSNA_TRT_STG t1, PRSNA_TRT_STG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSET_PARAMS', 'INSERT INTO NC_PSET_PARAMS ( SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,''INSERT'',''VALID'' FROM IN_PSET_PARAMS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_PSET_PARAMS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.pName = t2.pName )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSET_PARAMS', 'INSERT INTO NC_PSET_PARAMS ( SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,''DELETE'',''VALID'' FROM MST_PSET_PARAMS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PSET_PARAMS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.pName = t2.pName ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PSET_PARAMS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.pName = t2.pName));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSET_PARAMS', 'INSERT INTO NC_PSET_PARAMS ( SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.P_NAME,t1.P_DESC,t1.P_DISPLAYNAME,t1.P_Value,t1.P_VALUE_TYPE,t1.P_ISLOOKUP,t1.Code_Name,t1.P_PRECISION,''UPDATE'',''VALID'' FROM IN_PSET_PARAMS t1, MST_PSET_PARAMS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.pName = t2.pName AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.pName <> t2.pName OR ( t1.pName IS NULL AND t2.pName IS NOT NULL) OR (t1.pName IS NOT NULL AND t2.pName IS NULL)) OR (t1.pDesc <> t2.pDesc OR ( t1.pDesc IS NULL AND t2.pDesc IS NOT NULL) OR (t1.pDesc IS NOT NULL AND t2.pDesc IS NULL)) OR (t1.pDisplayName <> t2.pDisplayName OR ( t1.pDisplayName IS NULL AND t2.pDisplayName IS NOT NULL) OR (t1.pDisplayName IS NOT NULL AND t2.pDisplayName IS NULL)) OR (t1.pValue <> t2.pValue OR ( t1.pValue IS NULL AND t2.pValue IS NOT NULL) OR (t1.pValue IS NOT NULL AND t2.pValue IS NULL)) OR (t1.pValueType <> t2.pValueType OR ( t1.pValueType IS NULL AND t2.pValueType IS NOT NULL) OR (t1.pValueType IS NOT NULL AND t2.pValueType IS NULL)) OR (t1.IsLookUp <> t2.IsLookUp OR ( t1.IsLookUp IS NULL AND t2.IsLookUp IS NOT NULL) OR (t1.IsLookUp IS NOT NULL AND t2.IsLookUp IS NULL)) OR (t1.codeSetName <> t2.codeSetName OR ( t1.codeSetName IS NULL AND t2.codeSetName IS NOT NULL) OR (t1.codeSetName IS NOT NULL AND t2.codeSetName IS NULL)) OR (t1.pPrecision <> t2.pPrecision OR ( t1.pPrecision IS NULL AND t2.pPrecision IS NOT NULL) OR (t1.pPrecision IS NOT NULL AND t2.pPrecision IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSET_PARAMS', 'INSERT INTO NC_PSET_PARAMS ( SCENARIO_ID,P_NAME,P_DESC,P_DISPLAYNAME,P_Value,P_VALUE_TYPE,P_ISLOOKUP,Code_Name,P_PRECISION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.P_NAME,t1.P_DESC,t1.P_DISPLAYNAME,t1.P_Value,t1.P_VALUE_TYPE,t1.P_ISLOOKUP,t1.Code_Name,t1.P_PRECISION,''ACTIVATE'',''VALID'' FROM IN_PSET_PARAMS t1, MST_PSET_PARAMS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.pName = t2.pName AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALHDR', 'INSERT INTO NC_PSETVALHDR ( SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,''INSERT'',''VALID'' FROM IN_PSETVALHDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_PSET_VAL_HDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALHDR', 'INSERT INTO NC_PSETVALHDR ( SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,''DELETE'',''VALID'' FROM MST_PSET_VAL_HDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PSETVALHDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PSETVALHDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALHDR', 'INSERT INTO NC_PSETVALHDR ( SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VH_ID,t1.VH_NAME,t1.VH_DESC,''UPDATE'',''VALID'' FROM IN_PSETVALHDR t1, MST_PSET_VAL_HDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.vhId <> t2.vhId OR ( t1.vhId IS NULL AND t2.vhId IS NOT NULL) OR (t1.vhId IS NOT NULL AND t2.vhId IS NULL)) OR (t1.vhName <> t2.vhName OR ( t1.vhName IS NULL AND t2.vhName IS NOT NULL) OR (t1.vhName IS NOT NULL AND t2.vhName IS NULL)) OR (t1.vhDesc <> t2.vhDesc OR ( t1.vhDesc IS NULL AND t2.vhDesc IS NOT NULL) OR (t1.vhDesc IS NOT NULL AND t2.vhDesc IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALHDR', 'INSERT INTO NC_PSETVALHDR ( SCENARIO_ID,VH_ID,VH_NAME,VH_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VH_ID,t1.VH_NAME,t1.VH_DESC,''ACTIVATE'',''VALID'' FROM IN_PSETVALHDR t1, MST_PSET_VAL_HDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALUES', 'INSERT INTO NC_PSETVALUES ( SCENARIO_ID,VH_ID,P_NAME,P_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VH_ID,P_NAME,P_VALUE,''INSERT'',''VALID'' FROM IN_PSETVALUES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_PSET_VALUES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND t1.pName = t2.pName )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALUES', 'INSERT INTO NC_PSETVALUES ( SCENARIO_ID,VH_ID,P_NAME,P_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VH_ID,P_NAME,P_VALUE,''DELETE'',''VALID'' FROM MST_PSET_VALUES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PSETVALUES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND t1.pName = t2.pName ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_PSETVALUES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND t1.pName = t2.pName));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALUES', 'INSERT INTO NC_PSETVALUES ( SCENARIO_ID,VH_ID,P_NAME,P_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VH_ID,t1.P_NAME,t1.P_VALUE,''UPDATE'',''VALID'' FROM IN_PSETVALUES t1, MST_PSET_VALUES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND t1.pName = t2.pName AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.vhId <> t2.vhId OR ( t1.vhId IS NULL AND t2.vhId IS NOT NULL) OR (t1.vhId IS NOT NULL AND t2.vhId IS NULL)) OR (t1.pName <> t2.pName OR ( t1.pName IS NULL AND t2.pName IS NOT NULL) OR (t1.pName IS NOT NULL AND t2.pName IS NULL)) OR (t1.pValue <> t2.pValue OR ( t1.pValue IS NULL AND t2.pValue IS NOT NULL) OR (t1.pValue IS NOT NULL AND t2.pValue IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PSETVALUES', 'INSERT INTO NC_PSETVALUES ( SCENARIO_ID,VH_ID,P_NAME,P_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VH_ID,t1.P_NAME,t1.P_VALUE,''ACTIVATE'',''VALID'' FROM IN_PSETVALUES t1, MST_PSET_VALUES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.vhId = t2.vhId AND t1.pName = t2.pName AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_EXECUTION_LOG', 'INSERT INTO NC_QUERY_EXECUTION_LOG ( SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,''INSERT'',''VALID'' FROM IN_QUERY_EXECUTION_LOG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM QUERY_EXECUTION_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.executedBy = t2.executedBy AND t1.runDateTime = t2.runDateTime )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_EXECUTION_LOG', 'INSERT INTO NC_QUERY_EXECUTION_LOG ( SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,''DELETE'',''VALID'' FROM QUERY_EXECUTION_LOG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_QUERY_EXECUTION_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.executedBy = t2.executedBy AND t1.runDateTime = t2.runDateTime ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_QUERY_EXECUTION_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.executedBy = t2.executedBy AND t1.runDateTime = t2.runDateTime));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_EXECUTION_LOG', 'INSERT INTO NC_QUERY_EXECUTION_LOG ( SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.EXECUTED_BY,t1.RUN_DATETIME,t1.QUERY_RESULT,t1.NUMBER_OF_RECORDS,t1.ERROR_MESSAGE,t1.RUN_TIME,''UPDATE'',''VALID'' FROM IN_QUERY_EXECUTION_LOG t1, QUERY_EXECUTION_LOG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.executedBy = t2.executedBy AND t1.runDateTime = t2.runDateTime AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.queryID <> t2.queryID OR ( t1.queryID IS NULL AND t2.queryID IS NOT NULL) OR (t1.queryID IS NOT NULL AND t2.queryID IS NULL)) OR (t1.executedBy <> t2.executedBy OR ( t1.executedBy IS NULL AND t2.executedBy IS NOT NULL) OR (t1.executedBy IS NOT NULL AND t2.executedBy IS NULL)) OR (t1.runDateTime <> t2.runDateTime OR ( t1.runDateTime IS NULL AND t2.runDateTime IS NOT NULL) OR (t1.runDateTime IS NOT NULL AND t2.runDateTime IS NULL)) OR (t1.result <> t2.result OR ( t1.result IS NULL AND t2.result IS NOT NULL) OR (t1.result IS NOT NULL AND t2.result IS NULL)) OR (t1.numberOfRecord <> t2.numberOfRecord OR ( t1.numberOfRecord IS NULL AND t2.numberOfRecord IS NOT NULL) OR (t1.numberOfRecord IS NOT NULL AND t2.numberOfRecord IS NULL)) OR (t1.errorMessage <> t2.errorMessage OR ( t1.errorMessage IS NULL AND t2.errorMessage IS NOT NULL) OR (t1.errorMessage IS NOT NULL AND t2.errorMessage IS NULL)) OR (t1.runTime <> t2.runTime OR ( t1.runTime IS NULL AND t2.runTime IS NOT NULL) OR (t1.runTime IS NOT NULL AND t2.runTime IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_EXECUTION_LOG', 'INSERT INTO NC_QUERY_EXECUTION_LOG ( SCENARIO_ID,QUERY_ID,EXECUTED_BY,RUN_DATETIME,QUERY_RESULT,NUMBER_OF_RECORDS,ERROR_MESSAGE,RUN_TIME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.EXECUTED_BY,t1.RUN_DATETIME,t1.QUERY_RESULT,t1.NUMBER_OF_RECORDS,t1.ERROR_MESSAGE,t1.RUN_TIME,''ACTIVATE'',''VALID'' FROM IN_QUERY_EXECUTION_LOG t1, QUERY_EXECUTION_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.executedBy = t2.executedBy AND t1.runDateTime = t2.runDateTime AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_MASTER', 'INSERT INTO NC_QUERY_MASTER ( SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,''INSERT'',''VALID'' FROM IN_QUERY_MASTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM QUERY_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_MASTER', 'INSERT INTO NC_QUERY_MASTER ( SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,''DELETE'',''VALID'' FROM QUERY_MASTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_QUERY_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_QUERY_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_MASTER', 'INSERT INTO NC_QUERY_MASTER ( SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.QUERY_NAME,t1.LAST_EXECUTED_BY,t1.LAST_RESULT,t1.NUMBER_OF_RUNS,t1.LAST_RUN_DATETIME,t1.QUERY_STRING,t1.LAST_RUN_TIME,t1.SECONDARY_CONNECTION,''UPDATE'',''VALID'' FROM IN_QUERY_MASTER t1, QUERY_MASTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.queryID <> t2.queryID OR ( t1.queryID IS NULL AND t2.queryID IS NOT NULL) OR (t1.queryID IS NOT NULL AND t2.queryID IS NULL)) OR (t1.queryName <> t2.queryName OR ( t1.queryName IS NULL AND t2.queryName IS NOT NULL) OR (t1.queryName IS NOT NULL AND t2.queryName IS NULL)) OR (t1.lastExecutedBy <> t2.lastExecutedBy OR ( t1.lastExecutedBy IS NULL AND t2.lastExecutedBy IS NOT NULL) OR (t1.lastExecutedBy IS NOT NULL AND t2.lastExecutedBy IS NULL)) OR (t1.lastResult <> t2.lastResult OR ( t1.lastResult IS NULL AND t2.lastResult IS NOT NULL) OR (t1.lastResult IS NOT NULL AND t2.lastResult IS NULL)) OR (t1.numberOfRuns <> t2.numberOfRuns OR ( t1.numberOfRuns IS NULL AND t2.numberOfRuns IS NOT NULL) OR (t1.numberOfRuns IS NOT NULL AND t2.numberOfRuns IS NULL)) OR (t1.lastRunDateTime <> t2.lastRunDateTime OR ( t1.lastRunDateTime IS NULL AND t2.lastRunDateTime IS NOT NULL) OR (t1.lastRunDateTime IS NOT NULL AND t2.lastRunDateTime IS NULL)) OR (t1.queryString <> t2.queryString OR ( t1.queryString IS NULL AND t2.queryString IS NOT NULL) OR (t1.queryString IS NOT NULL AND t2.queryString IS NULL)) OR (t1.lastRunTime <> t2.lastRunTime OR ( t1.lastRunTime IS NULL AND t2.lastRunTime IS NOT NULL) OR (t1.lastRunTime IS NOT NULL AND t2.lastRunTime IS NULL)) OR (t1.SecondaryConnection <> t2.SecondaryConnection OR ( t1.SecondaryConnection IS NULL AND t2.SecondaryConnection IS NOT NULL) OR (t1.SecondaryConnection IS NOT NULL AND t2.SecondaryConnection IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_MASTER', 'INSERT INTO NC_QUERY_MASTER ( SCENARIO_ID,QUERY_ID,QUERY_NAME,LAST_EXECUTED_BY,LAST_RESULT,NUMBER_OF_RUNS,LAST_RUN_DATETIME,QUERY_STRING,LAST_RUN_TIME,SECONDARY_CONNECTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.QUERY_NAME,t1.LAST_EXECUTED_BY,t1.LAST_RESULT,t1.NUMBER_OF_RUNS,t1.LAST_RUN_DATETIME,t1.QUERY_STRING,t1.LAST_RUN_TIME,t1.SECONDARY_CONNECTION,''ACTIVATE'',''VALID'' FROM IN_QUERY_MASTER t1, QUERY_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_PARAM', 'INSERT INTO NC_QUERY_PARAM ( SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,''INSERT'',''VALID'' FROM IN_QUERY_PARAM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM QUERY_PARAM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.parameter = t2.parameter )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_PARAM', 'INSERT INTO NC_QUERY_PARAM ( SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,''DELETE'',''VALID'' FROM QUERY_PARAM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_QUERY_PARAM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.parameter = t2.parameter ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_QUERY_PARAM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.parameter = t2.parameter));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_PARAM', 'INSERT INTO NC_QUERY_PARAM ( SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.PARAMETER_NAME,t1.DESCRIPTION,t1.DATA_TYPE,t1.PARAMETER_VALUE,t1.SEQUENCE,''UPDATE'',''VALID'' FROM IN_QUERY_PARAM t1, QUERY_PARAM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.parameter = t2.parameter AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.queryID <> t2.queryID OR ( t1.queryID IS NULL AND t2.queryID IS NOT NULL) OR (t1.queryID IS NOT NULL AND t2.queryID IS NULL)) OR (t1.parameter <> t2.parameter OR ( t1.parameter IS NULL AND t2.parameter IS NOT NULL) OR (t1.parameter IS NOT NULL AND t2.parameter IS NULL)) OR (t1.description <> t2.description OR ( t1.description IS NULL AND t2.description IS NOT NULL) OR (t1.description IS NOT NULL AND t2.description IS NULL)) OR (t1.dataType <> t2.dataType OR ( t1.dataType IS NULL AND t2.dataType IS NOT NULL) OR (t1.dataType IS NOT NULL AND t2.dataType IS NULL)) OR (t1.paramValue <> t2.paramValue OR ( t1.paramValue IS NULL AND t2.paramValue IS NOT NULL) OR (t1.paramValue IS NOT NULL AND t2.paramValue IS NULL)) OR (t1.sequence <> t2.sequence OR ( t1.sequence IS NULL AND t2.sequence IS NOT NULL) OR (t1.sequence IS NOT NULL AND t2.sequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_QUERY_PARAM', 'INSERT INTO NC_QUERY_PARAM ( SCENARIO_ID,QUERY_ID,PARAMETER_NAME,DESCRIPTION,DATA_TYPE,PARAMETER_VALUE,SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.QUERY_ID,t1.PARAMETER_NAME,t1.DESCRIPTION,t1.DATA_TYPE,t1.PARAMETER_VALUE,t1.SEQUENCE,''ACTIVATE'',''VALID'' FROM IN_QUERY_PARAM t1, QUERY_PARAM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.queryID = t2.queryID AND t1.parameter = t2.parameter AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA', 'INSERT INTO NC_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA', 'INSERT INTO NC_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,''DELETE'',''VALID'' FROM REGIS_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA', 'INSERT INTO NC_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.BRTH_DATE,t1.GENDR_IND,t1.LANG_CODE,t1.LATST_ACTVY_DATE,t1.EMAIL_SUPRSN_IND,t1.PHONE_SUPRSN_IND,t1.POSTL_SUPRSN_IND,t1.CNSMR_SENTIMENT,t1.REGIS_CNSMR_ID_VAL,t1.CNSMR_USER_NAME,t1.REGIS_DATE,t1.SOCL_NETWK_SUPRSN_IND,t1.REFERAL_MKTNG_PGM_NBR,t1.TRM_LEAD_KEY,t1.PRSNA_STATUS_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.CNTRY_CODE,t1.LYLTY_ACCT_NUM,t1.LYLTY_PGM_NBR,t1.NATIONAL_ID_NBR,t1.DATA_ORIGIN_SRCE_NBR,t1.DATA_OP_SRCE_NAME,t1.DATA_SRCE_NBR,t1.PII_DATA_MINIMIZE_DATETM,t1.GVN_NAME_ALIAS,t1.FAMLY_NAME_ALIAS,t1.REGIS_LAST_MODIFIED_DATETM,t1.CNSMR_HASH_ID,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA t1, REGIS_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.NAME_PREFX_TXT <> t2.NAME_PREFX_TXT OR ( t1.NAME_PREFX_TXT IS NULL AND t2.NAME_PREFX_TXT IS NOT NULL) OR (t1.NAME_PREFX_TXT IS NOT NULL AND t2.NAME_PREFX_TXT IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.LATST_ACTVY_DATE <> t2.LATST_ACTVY_DATE OR ( t1.LATST_ACTVY_DATE IS NULL AND t2.LATST_ACTVY_DATE IS NOT NULL) OR (t1.LATST_ACTVY_DATE IS NOT NULL AND t2.LATST_ACTVY_DATE IS NULL)) OR (t1.EMAIL_SUPRSN_IND <> t2.EMAIL_SUPRSN_IND OR ( t1.EMAIL_SUPRSN_IND IS NULL AND t2.EMAIL_SUPRSN_IND IS NOT NULL) OR (t1.EMAIL_SUPRSN_IND IS NOT NULL AND t2.EMAIL_SUPRSN_IND IS NULL)) OR (t1.PHONE_SUPRSN_IND <> t2.PHONE_SUPRSN_IND OR ( t1.PHONE_SUPRSN_IND IS NULL AND t2.PHONE_SUPRSN_IND IS NOT NULL) OR (t1.PHONE_SUPRSN_IND IS NOT NULL AND t2.PHONE_SUPRSN_IND IS NULL)) OR (t1.POSTL_SUPRSN_IND <> t2.POSTL_SUPRSN_IND OR ( t1.POSTL_SUPRSN_IND IS NULL AND t2.POSTL_SUPRSN_IND IS NOT NULL) OR (t1.POSTL_SUPRSN_IND IS NOT NULL AND t2.POSTL_SUPRSN_IND IS NULL)) OR (t1.CNSMR_SENTIMENT <> t2.CNSMR_SENTIMENT OR ( t1.CNSMR_SENTIMENT IS NULL AND t2.CNSMR_SENTIMENT IS NOT NULL) OR (t1.CNSMR_SENTIMENT IS NOT NULL AND t2.CNSMR_SENTIMENT IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.CNSMR_USER_NAME <> t2.CNSMR_USER_NAME OR ( t1.CNSMR_USER_NAME IS NULL AND t2.CNSMR_USER_NAME IS NOT NULL) OR (t1.CNSMR_USER_NAME IS NOT NULL AND t2.CNSMR_USER_NAME IS NULL)) OR (t1.REGIS_DATE <> t2.REGIS_DATE OR ( t1.REGIS_DATE IS NULL AND t2.REGIS_DATE IS NOT NULL) OR (t1.REGIS_DATE IS NOT NULL AND t2.REGIS_DATE IS NULL)) OR (t1.SOCL_NETWK_SUPRSN_IND <> t2.SOCL_NETWK_SUPRSN_IND OR ( t1.SOCL_NETWK_SUPRSN_IND IS NULL AND t2.SOCL_NETWK_SUPRSN_IND IS NOT NULL) OR (t1.SOCL_NETWK_SUPRSN_IND IS NOT NULL AND t2.SOCL_NETWK_SUPRSN_IND IS NULL)) OR (t1.REFERAL_MKTNG_PGM_NBR <> t2.REFERAL_MKTNG_PGM_NBR OR ( t1.REFERAL_MKTNG_PGM_NBR IS NULL AND t2.REFERAL_MKTNG_PGM_NBR IS NOT NULL) OR (t1.REFERAL_MKTNG_PGM_NBR IS NOT NULL AND t2.REFERAL_MKTNG_PGM_NBR IS NULL)) OR (t1.TRM_LEAD_KEY <> t2.TRM_LEAD_KEY OR ( t1.TRM_LEAD_KEY IS NULL AND t2.TRM_LEAD_KEY IS NOT NULL) OR (t1.TRM_LEAD_KEY IS NOT NULL AND t2.TRM_LEAD_KEY IS NULL)) OR (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.LYLTY_ACCT_NUM <> t2.LYLTY_ACCT_NUM OR ( t1.LYLTY_ACCT_NUM IS NULL AND t2.LYLTY_ACCT_NUM IS NOT NULL) OR (t1.LYLTY_ACCT_NUM IS NOT NULL AND t2.LYLTY_ACCT_NUM IS NULL)) OR (t1.LYLTY_PGM_NBR <> t2.LYLTY_PGM_NBR OR ( t1.LYLTY_PGM_NBR IS NULL AND t2.LYLTY_PGM_NBR IS NOT NULL) OR (t1.LYLTY_PGM_NBR IS NOT NULL AND t2.LYLTY_PGM_NBR IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.DATA_ORIGIN_SRCE_NBR <> t2.DATA_ORIGIN_SRCE_NBR OR ( t1.DATA_ORIGIN_SRCE_NBR IS NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NOT NULL) OR (t1.DATA_ORIGIN_SRCE_NBR IS NOT NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NULL)) OR (t1.DATA_OP_SRCE_NAME <> t2.DATA_OP_SRCE_NAME OR ( t1.DATA_OP_SRCE_NAME IS NULL AND t2.DATA_OP_SRCE_NAME IS NOT NULL) OR (t1.DATA_OP_SRCE_NAME IS NOT NULL AND t2.DATA_OP_SRCE_NAME IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.PII_DATA_MINIMIZE_DATETM <> t2.PII_DATA_MINIMIZE_DATETM OR ( t1.PII_DATA_MINIMIZE_DATETM IS NULL AND t2.PII_DATA_MINIMIZE_DATETM IS NOT NULL) OR (t1.PII_DATA_MINIMIZE_DATETM IS NOT NULL AND t2.PII_DATA_MINIMIZE_DATETM IS NULL)) OR (t1.GVN_NAME_ALIAS <> t2.GVN_NAME_ALIAS OR ( t1.GVN_NAME_ALIAS IS NULL AND t2.GVN_NAME_ALIAS IS NOT NULL) OR (t1.GVN_NAME_ALIAS IS NOT NULL AND t2.GVN_NAME_ALIAS IS NULL)) OR (t1.FAMLY_NAME_ALIAS <> t2.FAMLY_NAME_ALIAS OR ( t1.FAMLY_NAME_ALIAS IS NULL AND t2.FAMLY_NAME_ALIAS IS NOT NULL) OR (t1.FAMLY_NAME_ALIAS IS NOT NULL AND t2.FAMLY_NAME_ALIAS IS NULL)) OR (t1.REGIS_LAST_MODIFIED_DATETM <> t2.REGIS_LAST_MODIFIED_DATETM OR ( t1.REGIS_LAST_MODIFIED_DATETM IS NULL AND t2.REGIS_LAST_MODIFIED_DATETM IS NOT NULL) OR (t1.REGIS_LAST_MODIFIED_DATETM IS NOT NULL AND t2.REGIS_LAST_MODIFIED_DATETM IS NULL)) OR (t1.CNSMR_HASH_ID <> t2.CNSMR_HASH_ID OR ( t1.CNSMR_HASH_ID IS NULL AND t2.CNSMR_HASH_ID IS NOT NULL) OR (t1.CNSMR_HASH_ID IS NOT NULL AND t2.CNSMR_HASH_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA', 'INSERT INTO NC_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,NAME_PREFX_TXT,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,BRTH_DATE,GENDR_IND,LANG_CODE,LATST_ACTVY_DATE,EMAIL_SUPRSN_IND,PHONE_SUPRSN_IND,POSTL_SUPRSN_IND,CNSMR_SENTIMENT,REGIS_CNSMR_ID_VAL,CNSMR_USER_NAME,REGIS_DATE,SOCL_NETWK_SUPRSN_IND,REFERAL_MKTNG_PGM_NBR,TRM_LEAD_KEY,PRSNA_STATUS_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,CNTRY_CODE,LYLTY_ACCT_NUM,LYLTY_PGM_NBR,NATIONAL_ID_NBR,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,DATA_SRCE_NBR,PII_DATA_MINIMIZE_DATETM,GVN_NAME_ALIAS,FAMLY_NAME_ALIAS,REGIS_LAST_MODIFIED_DATETM,CNSMR_HASH_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.NAME_PREFX_TXT,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.BRTH_DATE,t1.GENDR_IND,t1.LANG_CODE,t1.LATST_ACTVY_DATE,t1.EMAIL_SUPRSN_IND,t1.PHONE_SUPRSN_IND,t1.POSTL_SUPRSN_IND,t1.CNSMR_SENTIMENT,t1.REGIS_CNSMR_ID_VAL,t1.CNSMR_USER_NAME,t1.REGIS_DATE,t1.SOCL_NETWK_SUPRSN_IND,t1.REFERAL_MKTNG_PGM_NBR,t1.TRM_LEAD_KEY,t1.PRSNA_STATUS_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.CNTRY_CODE,t1.LYLTY_ACCT_NUM,t1.LYLTY_PGM_NBR,t1.NATIONAL_ID_NBR,t1.DATA_ORIGIN_SRCE_NBR,t1.DATA_OP_SRCE_NAME,t1.DATA_SRCE_NBR,t1.PII_DATA_MINIMIZE_DATETM,t1.GVN_NAME_ALIAS,t1.FAMLY_NAME_ALIAS,t1.REGIS_LAST_MODIFIED_DATETM,t1.CNSMR_HASH_ID,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA t1, REGIS_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_EMAIL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_EMAIL_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_EMAIL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_EMAIL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,''DELETE'',''VALID'' FROM REGIS_PRSNA_EMAIL_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_EMAIL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_EMAIL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_EMAIL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.EMAIL_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.EMAIL_ADDR_TXT_HASH,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_EMAIL_ADDR t1, REGIS_PRSNA_EMAIL_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.EMAIL_FORMT_CODE <> t2.EMAIL_FORMT_CODE OR ( t1.EMAIL_FORMT_CODE IS NULL AND t2.EMAIL_FORMT_CODE IS NOT NULL) OR (t1.EMAIL_FORMT_CODE IS NOT NULL AND t2.EMAIL_FORMT_CODE IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.EMAIL_STATUS_CODE <> t2.EMAIL_STATUS_CODE OR ( t1.EMAIL_STATUS_CODE IS NULL AND t2.EMAIL_STATUS_CODE IS NOT NULL) OR (t1.EMAIL_STATUS_CODE IS NOT NULL AND t2.EMAIL_STATUS_CODE IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LAST_RTN_DATETM <> t2.LAST_RTN_DATETM OR ( t1.LAST_RTN_DATETM IS NULL AND t2.LAST_RTN_DATETM IS NOT NULL) OR (t1.LAST_RTN_DATETM IS NOT NULL AND t2.LAST_RTN_DATETM IS NULL)) OR (t1.EMAIL_ADDR_TXT_HASH <> t2.EMAIL_ADDR_TXT_HASH OR ( t1.EMAIL_ADDR_TXT_HASH IS NULL AND t2.EMAIL_ADDR_TXT_HASH IS NOT NULL) OR (t1.EMAIL_ADDR_TXT_HASH IS NOT NULL AND t2.EMAIL_ADDR_TXT_HASH IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_EMAIL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_EMAIL_ADDR ( SCENARIO_ID,EMAIL_ADDR_TXT,EMAIL_FORMT_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EMAIL_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,EMAIL_ADDR_TXT_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.EMAIL_FORMT_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.EMAIL_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.EMAIL_ADDR_TXT_HASH,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_EMAIL_ADDR t1, REGIS_PRSNA_EMAIL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_OPT_HIST', 'INSERT INTO NC_REGIS_PRSNA_OPT_HIST ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_OPT_HIST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_OPT_HIST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPT_OUT_DRCTV_ID = t2.OPT_OUT_DRCTV_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_OPT_HIST', 'INSERT INTO NC_REGIS_PRSNA_OPT_HIST ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,''DELETE'',''VALID'' FROM REGIS_PRSNA_OPT_HIST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_OPT_HIST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPT_OUT_DRCTV_ID = t2.OPT_OUT_DRCTV_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_OPT_HIST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPT_OUT_DRCTV_ID = t2.OPT_OUT_DRCTV_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_OPT_HIST', 'INSERT INTO NC_REGIS_PRSNA_OPT_HIST ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.OPT_OUT_DRCTV_ID,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_OPT_HIST t1, REGIS_PRSNA_OPT_HIST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPT_OUT_DRCTV_ID = t2.OPT_OUT_DRCTV_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.OPT_OUT_DRCTV_ID <> t2.OPT_OUT_DRCTV_ID OR ( t1.OPT_OUT_DRCTV_ID IS NULL AND t2.OPT_OUT_DRCTV_ID IS NOT NULL) OR (t1.OPT_OUT_DRCTV_ID IS NOT NULL AND t2.OPT_OUT_DRCTV_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_OPT_HIST', 'INSERT INTO NC_REGIS_PRSNA_OPT_HIST ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,OPT_OUT_DRCTV_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.OPT_OUT_DRCTV_ID,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_OPT_HIST t1, REGIS_PRSNA_OPT_HIST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.OPT_OUT_DRCTV_ID = t2.OPT_OUT_DRCTV_ID AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_PHONE', 'INSERT INTO NC_REGIS_PRSNA_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_PHONE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_PHONE', 'INSERT INTO NC_REGIS_PRSNA_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,''DELETE'',''VALID'' FROM REGIS_PRSNA_PHONE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_PHONE', 'INSERT INTO NC_REGIS_PRSNA_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PHONE_EXTSN_NUM,t1.SMS_PREFR_IND,t1.FULL_PHONE_NUM,t1.PHONE_LINE_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_CNTRY_NBR,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.PHONE_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.FULL_PHONE_NUM_HASH,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_PHONE t1, REGIS_PRSNA_PHONE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PHONE_EXTSN_NUM <> t2.PHONE_EXTSN_NUM OR ( t1.PHONE_EXTSN_NUM IS NULL AND t2.PHONE_EXTSN_NUM IS NOT NULL) OR (t1.PHONE_EXTSN_NUM IS NOT NULL AND t2.PHONE_EXTSN_NUM IS NULL)) OR (t1.SMS_PREFR_IND <> t2.SMS_PREFR_IND OR ( t1.SMS_PREFR_IND IS NULL AND t2.SMS_PREFR_IND IS NOT NULL) OR (t1.SMS_PREFR_IND IS NOT NULL AND t2.SMS_PREFR_IND IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.PHONE_LINE_NBR <> t2.PHONE_LINE_NBR OR ( t1.PHONE_LINE_NBR IS NULL AND t2.PHONE_LINE_NBR IS NOT NULL) OR (t1.PHONE_LINE_NBR IS NOT NULL AND t2.PHONE_LINE_NBR IS NULL)) OR (t1.PHONE_AREA_NBR <> t2.PHONE_AREA_NBR OR ( t1.PHONE_AREA_NBR IS NULL AND t2.PHONE_AREA_NBR IS NOT NULL) OR (t1.PHONE_AREA_NBR IS NOT NULL AND t2.PHONE_AREA_NBR IS NULL)) OR (t1.PHONE_EXCHG_NBR <> t2.PHONE_EXCHG_NBR OR ( t1.PHONE_EXCHG_NBR IS NULL AND t2.PHONE_EXCHG_NBR IS NOT NULL) OR (t1.PHONE_EXCHG_NBR IS NOT NULL AND t2.PHONE_EXCHG_NBR IS NULL)) OR (t1.PHONE_CNTRY_NBR <> t2.PHONE_CNTRY_NBR OR ( t1.PHONE_CNTRY_NBR IS NULL AND t2.PHONE_CNTRY_NBR IS NOT NULL) OR (t1.PHONE_CNTRY_NBR IS NOT NULL AND t2.PHONE_CNTRY_NBR IS NULL)) OR (t1.SMS_AVAIL_START_TIME <> t2.SMS_AVAIL_START_TIME OR ( t1.SMS_AVAIL_START_TIME IS NULL AND t2.SMS_AVAIL_START_TIME IS NOT NULL) OR (t1.SMS_AVAIL_START_TIME IS NOT NULL AND t2.SMS_AVAIL_START_TIME IS NULL)) OR (t1.SMS_AVAIL_END_TIME <> t2.SMS_AVAIL_END_TIME OR ( t1.SMS_AVAIL_END_TIME IS NULL AND t2.SMS_AVAIL_END_TIME IS NOT NULL) OR (t1.SMS_AVAIL_END_TIME IS NOT NULL AND t2.SMS_AVAIL_END_TIME IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.PHONE_STATUS_CODE <> t2.PHONE_STATUS_CODE OR ( t1.PHONE_STATUS_CODE IS NULL AND t2.PHONE_STATUS_CODE IS NOT NULL) OR (t1.PHONE_STATUS_CODE IS NOT NULL AND t2.PHONE_STATUS_CODE IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LAST_RTN_DATETM <> t2.LAST_RTN_DATETM OR ( t1.LAST_RTN_DATETM IS NULL AND t2.LAST_RTN_DATETM IS NOT NULL) OR (t1.LAST_RTN_DATETM IS NOT NULL AND t2.LAST_RTN_DATETM IS NULL)) OR (t1.FULL_PHONE_NUM_HASH <> t2.FULL_PHONE_NUM_HASH OR ( t1.FULL_PHONE_NUM_HASH IS NULL AND t2.FULL_PHONE_NUM_HASH IS NOT NULL) OR (t1.FULL_PHONE_NUM_HASH IS NOT NULL AND t2.FULL_PHONE_NUM_HASH IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_PHONE', 'INSERT INTO NC_REGIS_PRSNA_PHONE ( SCENARIO_ID,PHONE_EXTSN_NUM,SMS_PREFR_IND,FULL_PHONE_NUM,PHONE_LINE_NBR,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR,SMS_AVAIL_START_TIME,SMS_AVAIL_END_TIME,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PHONE_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,FULL_PHONE_NUM_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PHONE_EXTSN_NUM,t1.SMS_PREFR_IND,t1.FULL_PHONE_NUM,t1.PHONE_LINE_NBR,t1.PHONE_AREA_NBR,t1.PHONE_EXCHG_NBR,t1.PHONE_CNTRY_NBR,t1.SMS_AVAIL_START_TIME,t1.SMS_AVAIL_END_TIME,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.PHONE_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.FULL_PHONE_NUM_HASH,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_PHONE t1, REGIS_PRSNA_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_POSTL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_POSTL_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_POSTL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_POSTL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,''DELETE'',''VALID'' FROM REGIS_PRSNA_POSTL_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_POSTL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_POSTL_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_POSTL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.LAT_MEAS,t1.LONG_MEAS,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.WIN_KEY,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.CNTRY_CODE,t1.TERR_CODE,t1.LEGAL_ENT_NBR,t1.PR_GEOCODE_FAIL,t1.TQ_GOUT_MATCH_LEVEL,t1.PR_REV_GROUP,t1.POSTL_STATUS_CODE,t1.TERR_NAME,t1.CITY_CODE,t1.GL_ACCURACY,t1.GL_MATCH_FLG,t1.DR_CLEANSE_LVL,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_POSTL_ADDR t1, REGIS_PRSNA_POSTL_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LONG_MEAS <> t2.LONG_MEAS OR ( t1.LONG_MEAS IS NULL AND t2.LONG_MEAS IS NOT NULL) OR (t1.LONG_MEAS IS NOT NULL AND t2.LONG_MEAS IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.WIN_KEY <> t2.WIN_KEY OR ( t1.WIN_KEY IS NULL AND t2.WIN_KEY IS NOT NULL) OR (t1.WIN_KEY IS NOT NULL AND t2.WIN_KEY IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.PR_GEOCODE_FAIL <> t2.PR_GEOCODE_FAIL OR ( t1.PR_GEOCODE_FAIL IS NULL AND t2.PR_GEOCODE_FAIL IS NOT NULL) OR (t1.PR_GEOCODE_FAIL IS NOT NULL AND t2.PR_GEOCODE_FAIL IS NULL)) OR (t1.TQ_GOUT_MATCH_LEVEL <> t2.TQ_GOUT_MATCH_LEVEL OR ( t1.TQ_GOUT_MATCH_LEVEL IS NULL AND t2.TQ_GOUT_MATCH_LEVEL IS NOT NULL) OR (t1.TQ_GOUT_MATCH_LEVEL IS NOT NULL AND t2.TQ_GOUT_MATCH_LEVEL IS NULL)) OR (t1.PR_REV_GROUP <> t2.PR_REV_GROUP OR ( t1.PR_REV_GROUP IS NULL AND t2.PR_REV_GROUP IS NOT NULL) OR (t1.PR_REV_GROUP IS NOT NULL AND t2.PR_REV_GROUP IS NULL)) OR (t1.POSTL_STATUS_CODE <> t2.POSTL_STATUS_CODE OR ( t1.POSTL_STATUS_CODE IS NULL AND t2.POSTL_STATUS_CODE IS NOT NULL) OR (t1.POSTL_STATUS_CODE IS NOT NULL AND t2.POSTL_STATUS_CODE IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.CITY_CODE <> t2.CITY_CODE OR ( t1.CITY_CODE IS NULL AND t2.CITY_CODE IS NOT NULL) OR (t1.CITY_CODE IS NOT NULL AND t2.CITY_CODE IS NULL)) OR (t1.GL_ACCURACY <> t2.GL_ACCURACY OR ( t1.GL_ACCURACY IS NULL AND t2.GL_ACCURACY IS NOT NULL) OR (t1.GL_ACCURACY IS NOT NULL AND t2.GL_ACCURACY IS NULL)) OR (t1.GL_MATCH_FLG <> t2.GL_MATCH_FLG OR ( t1.GL_MATCH_FLG IS NULL AND t2.GL_MATCH_FLG IS NOT NULL) OR (t1.GL_MATCH_FLG IS NOT NULL AND t2.GL_MATCH_FLG IS NULL)) OR (t1.DR_CLEANSE_LVL <> t2.DR_CLEANSE_LVL OR ( t1.DR_CLEANSE_LVL IS NULL AND t2.DR_CLEANSE_LVL IS NOT NULL) OR (t1.DR_CLEANSE_LVL IS NOT NULL AND t2.DR_CLEANSE_LVL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LAST_RTN_DATETM <> t2.LAST_RTN_DATETM OR ( t1.LAST_RTN_DATETM IS NULL AND t2.LAST_RTN_DATETM IS NOT NULL) OR (t1.LAST_RTN_DATETM IS NOT NULL AND t2.LAST_RTN_DATETM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_POSTL_ADDR', 'INSERT INTO NC_REGIS_PRSNA_POSTL_ADDR ( SCENARIO_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,LAT_MEAS,LONG_MEAS,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,WIN_KEY,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,CNTRY_CODE,TERR_CODE,LEGAL_ENT_NBR,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,POSTL_STATUS_CODE,TERR_NAME,CITY_CODE,GL_ACCURACY,GL_MATCH_FLG,DR_CLEANSE_LVL,DATA_SRCE_NBR,LAST_RTN_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.LAT_MEAS,t1.LONG_MEAS,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.WIN_KEY,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.CNTRY_CODE,t1.TERR_CODE,t1.LEGAL_ENT_NBR,t1.PR_GEOCODE_FAIL,t1.TQ_GOUT_MATCH_LEVEL,t1.PR_REV_GROUP,t1.POSTL_STATUS_CODE,t1.TERR_NAME,t1.CITY_CODE,t1.GL_ACCURACY,t1.GL_MATCH_FLG,t1.DR_CLEANSE_LVL,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_POSTL_ADDR t1, REGIS_PRSNA_POSTL_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NETK_ACT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NETK_ACT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_SOC_NETK_ACT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NETK_ACT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,''DELETE'',''VALID'' FROM REGIS_PRSNA_SOC_NETK_ACT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_SOC_NETK_ACT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_SOC_NETK_ACT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NETK_ACT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOC_NET_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NETK_ACT t1, REGIS_PRSNA_SOC_NETK_ACT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOCIAL_NETWK_ACCT_ID_VAL <> t2.SOCIAL_NETWK_ACCT_ID_VAL OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SOC_NET_STATUS_CODE <> t2.SOC_NET_STATUS_CODE OR ( t1.SOC_NET_STATUS_CODE IS NULL AND t2.SOC_NET_STATUS_CODE IS NOT NULL) OR (t1.SOC_NET_STATUS_CODE IS NOT NULL AND t2.SOC_NET_STATUS_CODE IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LAST_RTN_DATETM <> t2.LAST_RTN_DATETM OR ( t1.LAST_RTN_DATETM IS NULL AND t2.LAST_RTN_DATETM IS NOT NULL) OR (t1.LAST_RTN_DATETM IS NOT NULL AND t2.LAST_RTN_DATETM IS NULL)) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH <> t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NETK_ACT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NETK_ACT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOC_NET_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NETK_ACT t1, REGIS_PRSNA_SOC_NETK_ACT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NET_ACCT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NET_ACCT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,''INSERT'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NET_ACCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REGIS_PRSNA_SOC_NET_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NET_ACCT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NET_ACCT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,''DELETE'',''VALID'' FROM REGIS_PRSNA_SOC_NET_ACCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REGIS_PRSNA_SOC_NET_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REGIS_PRSNA_SOC_NET_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NET_ACCT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NET_ACCT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOC_NET_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH,''UPDATE'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NET_ACCT t1, REGIS_PRSNA_SOC_NET_ACCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOCIAL_NETWK_ACCT_ID_VAL <> t2.SOCIAL_NETWK_ACCT_ID_VAL OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.GUARDN_NAME <> t2.GUARDN_NAME OR ( t1.GUARDN_NAME IS NULL AND t2.GUARDN_NAME IS NOT NULL) OR (t1.GUARDN_NAME IS NOT NULL AND t2.GUARDN_NAME IS NULL)) OR (t1.GUARDN_EMAIL_ADDR_TXT <> t2.GUARDN_EMAIL_ADDR_TXT OR ( t1.GUARDN_EMAIL_ADDR_TXT IS NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.GUARDN_EMAIL_ADDR_TXT IS NOT NULL AND t2.GUARDN_EMAIL_ADDR_TXT IS NULL)) OR (t1.GUARDN_CNSNT_IND <> t2.GUARDN_CNSNT_IND OR ( t1.GUARDN_CNSNT_IND IS NULL AND t2.GUARDN_CNSNT_IND IS NOT NULL) OR (t1.GUARDN_CNSNT_IND IS NOT NULL AND t2.GUARDN_CNSNT_IND IS NULL)) OR (t1.ACNLGMT_DATE <> t2.ACNLGMT_DATE OR ( t1.ACNLGMT_DATE IS NULL AND t2.ACNLGMT_DATE IS NOT NULL) OR (t1.ACNLGMT_DATE IS NOT NULL AND t2.ACNLGMT_DATE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SOC_NET_STATUS_CODE <> t2.SOC_NET_STATUS_CODE OR ( t1.SOC_NET_STATUS_CODE IS NULL AND t2.SOC_NET_STATUS_CODE IS NOT NULL) OR (t1.SOC_NET_STATUS_CODE IS NOT NULL AND t2.SOC_NET_STATUS_CODE IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LAST_RTN_DATETM <> t2.LAST_RTN_DATETM OR ( t1.LAST_RTN_DATETM IS NULL AND t2.LAST_RTN_DATETM IS NOT NULL) OR (t1.LAST_RTN_DATETM IS NOT NULL AND t2.LAST_RTN_DATETM IS NULL)) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH <> t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL_HASH IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REGIS_PRSNA_SOC_NET_ACCT', 'INSERT INTO NC_REGIS_PRSNA_SOC_NET_ACCT ( SCENARIO_ID,SOCIAL_NETWK_ACCT_ID_VAL,VALID_CNTCT_POINT_IND,PREF_CNTCT_POINT_IND,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,GUARDN_NAME,GUARDN_EMAIL_ADDR_TXT,GUARDN_CNSNT_IND,ACNLGMT_DATE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOC_NET_STATUS_CODE,DATA_SRCE_NBR,LAST_RTN_DATETM,SOCIAL_NETWK_ACCT_ID_VAL_HASH,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.VALID_CNTCT_POINT_IND,t1.PREF_CNTCT_POINT_IND,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.GUARDN_NAME,t1.GUARDN_EMAIL_ADDR_TXT,t1.GUARDN_CNSNT_IND,t1.ACNLGMT_DATE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOC_NET_STATUS_CODE,t1.DATA_SRCE_NBR,t1.LAST_RTN_DATETM,t1.SOCIAL_NETWK_ACCT_ID_VAL_HASH,''ACTIVATE'',''VALID'' FROM IN_REGIS_PRSNA_SOC_NET_ACCT t1, REGIS_PRSNA_SOC_NET_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_PRSNA_ID = t2.REGIS_PRSNA_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REJECT_STRING', 'INSERT INTO NC_REJECT_STRING ( SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,''INSERT'',''VALID'' FROM IN_REJECT_STRING t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REJECT_STRING t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.REJECT_STRING_ID = t2.REJECT_STRING_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REJECT_STRING', 'INSERT INTO NC_REJECT_STRING ( SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,''DELETE'',''VALID'' FROM REJECT_STRING t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REJECT_STRING t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.REJECT_STRING_ID = t2.REJECT_STRING_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REJECT_STRING t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.REJECT_STRING_ID = t2.REJECT_STRING_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REJECT_STRING', 'INSERT INTO NC_REJECT_STRING ( SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REJECT_STRING_ID,t1.CNTRY_CODE,t1.REJECT_STRING,t1.REJECT_REASON,t1.REJECT_TYPE,t1.MATCH_TYPE,''UPDATE'',''VALID'' FROM IN_REJECT_STRING t1, REJECT_STRING t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.REJECT_STRING_ID = t2.REJECT_STRING_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REJECT_STRING_ID <> t2.REJECT_STRING_ID OR ( t1.REJECT_STRING_ID IS NULL AND t2.REJECT_STRING_ID IS NOT NULL) OR (t1.REJECT_STRING_ID IS NOT NULL AND t2.REJECT_STRING_ID IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.REJECT_STRING <> t2.REJECT_STRING OR ( t1.REJECT_STRING IS NULL AND t2.REJECT_STRING IS NOT NULL) OR (t1.REJECT_STRING IS NOT NULL AND t2.REJECT_STRING IS NULL)) OR (t1.REJECT_REASON <> t2.REJECT_REASON OR ( t1.REJECT_REASON IS NULL AND t2.REJECT_REASON IS NOT NULL) OR (t1.REJECT_REASON IS NOT NULL AND t2.REJECT_REASON IS NULL)) OR (t1.REJECT_TYPE <> t2.REJECT_TYPE OR ( t1.REJECT_TYPE IS NULL AND t2.REJECT_TYPE IS NOT NULL) OR (t1.REJECT_TYPE IS NOT NULL AND t2.REJECT_TYPE IS NULL)) OR (t1.MATCH_TYPE <> t2.MATCH_TYPE OR ( t1.MATCH_TYPE IS NULL AND t2.MATCH_TYPE IS NOT NULL) OR (t1.MATCH_TYPE IS NOT NULL AND t2.MATCH_TYPE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REJECT_STRING', 'INSERT INTO NC_REJECT_STRING ( SCENARIO_ID,REJECT_STRING_ID,CNTRY_CODE,REJECT_STRING,REJECT_REASON,REJECT_TYPE,MATCH_TYPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REJECT_STRING_ID,t1.CNTRY_CODE,t1.REJECT_STRING,t1.REJECT_REASON,t1.REJECT_TYPE,t1.MATCH_TYPE,''ACTIVATE'',''VALID'' FROM IN_REJECT_STRING t1, REJECT_STRING t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.REJECT_STRING_ID = t2.REJECT_STRING_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR', 'INSERT INTO NC_RETLR ( SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,''INSERT'',''VALID'' FROM IN_RETLR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RETLR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_NBR = t2.RETLR_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR', 'INSERT INTO NC_RETLR ( SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,''DELETE'',''VALID'' FROM RETLR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RETLR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_NBR = t2.RETLR_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RETLR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_NBR = t2.RETLR_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR', 'INSERT INTO NC_RETLR ( SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RETLR_NBR,t1.PARENT_RETLR_NBR,t1.RETLR_TYPE_CD,t1.RETLR_NAME,t1.DATA_SRCE_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.RETLR_NAME_NTV,''UPDATE'',''VALID'' FROM IN_RETLR t1, RETLR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_NBR = t2.RETLR_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RETLR_NBR <> t2.RETLR_NBR OR ( t1.RETLR_NBR IS NULL AND t2.RETLR_NBR IS NOT NULL) OR (t1.RETLR_NBR IS NOT NULL AND t2.RETLR_NBR IS NULL)) OR (t1.PARENT_RETLR_NBR <> t2.PARENT_RETLR_NBR OR ( t1.PARENT_RETLR_NBR IS NULL AND t2.PARENT_RETLR_NBR IS NOT NULL) OR (t1.PARENT_RETLR_NBR IS NOT NULL AND t2.PARENT_RETLR_NBR IS NULL)) OR (t1.RETLR_TYPE_CD <> t2.RETLR_TYPE_CD OR ( t1.RETLR_TYPE_CD IS NULL AND t2.RETLR_TYPE_CD IS NOT NULL) OR (t1.RETLR_TYPE_CD IS NOT NULL AND t2.RETLR_TYPE_CD IS NULL)) OR (t1.RETLR_NAME <> t2.RETLR_NAME OR ( t1.RETLR_NAME IS NULL AND t2.RETLR_NAME IS NOT NULL) OR (t1.RETLR_NAME IS NOT NULL AND t2.RETLR_NAME IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.RETLR_NAME_NTV <> t2.RETLR_NAME_NTV OR ( t1.RETLR_NAME_NTV IS NULL AND t2.RETLR_NAME_NTV IS NOT NULL) OR (t1.RETLR_NAME_NTV IS NOT NULL AND t2.RETLR_NAME_NTV IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR', 'INSERT INTO NC_RETLR ( SCENARIO_ID,RETLR_NBR,PARENT_RETLR_NBR,RETLR_TYPE_CD,RETLR_NAME,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,RETLR_NAME_NTV,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RETLR_NBR,t1.PARENT_RETLR_NBR,t1.RETLR_TYPE_CD,t1.RETLR_NAME,t1.DATA_SRCE_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.RETLR_NAME_NTV,''ACTIVATE'',''VALID'' FROM IN_RETLR t1, RETLR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_NBR = t2.RETLR_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR_TYPE', 'INSERT INTO NC_RETLR_TYPE ( SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_RETLR_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RETLR_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_TYPE_CD = t2.RETLR_TYPE_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR_TYPE', 'INSERT INTO NC_RETLR_TYPE ( SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM RETLR_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RETLR_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_TYPE_CD = t2.RETLR_TYPE_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RETLR_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_TYPE_CD = t2.RETLR_TYPE_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR_TYPE', 'INSERT INTO NC_RETLR_TYPE ( SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RETLR_TYPE_CD,t1.RETLR_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_RETLR_TYPE t1, RETLR_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_TYPE_CD = t2.RETLR_TYPE_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RETLR_TYPE_CD <> t2.RETLR_TYPE_CD OR ( t1.RETLR_TYPE_CD IS NULL AND t2.RETLR_TYPE_CD IS NOT NULL) OR (t1.RETLR_TYPE_CD IS NOT NULL AND t2.RETLR_TYPE_CD IS NULL)) OR (t1.RETLR_TYPE_NAME <> t2.RETLR_TYPE_NAME OR ( t1.RETLR_TYPE_NAME IS NULL AND t2.RETLR_TYPE_NAME IS NOT NULL) OR (t1.RETLR_TYPE_NAME IS NOT NULL AND t2.RETLR_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RETLR_TYPE', 'INSERT INTO NC_RETLR_TYPE ( SCENARIO_ID,RETLR_TYPE_CD,RETLR_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RETLR_TYPE_CD,t1.RETLR_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_RETLR_TYPE t1, RETLR_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RETLR_TYPE_CD = t2.RETLR_TYPE_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PLAN', 'INSERT INTO NC_RPLNSH_PLAN ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,''INSERT'',''VALID'' FROM IN_RPLNSH_PLAN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPLNSH_PLAN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PLAN', 'INSERT INTO NC_RPLNSH_PLAN ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,''DELETE'',''VALID'' FROM RPLNSH_PLAN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPLNSH_PLAN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPLNSH_PLAN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PLAN', 'INSERT INTO NC_RPLNSH_PLAN ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RPLNSH_ID,t1.MKTNG_PGM_NBR,t1.DATA_SRCE_NBR,t1.BUNDLE_PROD_ITEM_UPC,t1.RPLNSH_NAME,''UPDATE'',''VALID'' FROM IN_RPLNSH_PLAN t1, RPLNSH_PLAN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RPLNSH_ID <> t2.RPLNSH_ID OR ( t1.RPLNSH_ID IS NULL AND t2.RPLNSH_ID IS NOT NULL) OR (t1.RPLNSH_ID IS NOT NULL AND t2.RPLNSH_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.BUNDLE_PROD_ITEM_UPC <> t2.BUNDLE_PROD_ITEM_UPC OR ( t1.BUNDLE_PROD_ITEM_UPC IS NULL AND t2.BUNDLE_PROD_ITEM_UPC IS NOT NULL) OR (t1.BUNDLE_PROD_ITEM_UPC IS NOT NULL AND t2.BUNDLE_PROD_ITEM_UPC IS NULL)) OR (t1.RPLNSH_NAME <> t2.RPLNSH_NAME OR ( t1.RPLNSH_NAME IS NULL AND t2.RPLNSH_NAME IS NOT NULL) OR (t1.RPLNSH_NAME IS NOT NULL AND t2.RPLNSH_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PLAN', 'INSERT INTO NC_RPLNSH_PLAN ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,DATA_SRCE_NBR,BUNDLE_PROD_ITEM_UPC,RPLNSH_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RPLNSH_ID,t1.MKTNG_PGM_NBR,t1.DATA_SRCE_NBR,t1.BUNDLE_PROD_ITEM_UPC,t1.RPLNSH_NAME,''ACTIVATE'',''VALID'' FROM IN_RPLNSH_PLAN t1, RPLNSH_PLAN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DATA_SRCE_NBR = t2.DATA_SRCE_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PROD_ITEM', 'INSERT INTO NC_RPLNSH_PROD_ITEM ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,''INSERT'',''VALID'' FROM IN_RPLNSH_PROD_ITEM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPLNSH_PROD_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PROD_ITEM', 'INSERT INTO NC_RPLNSH_PROD_ITEM ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,''DELETE'',''VALID'' FROM RPLNSH_PROD_ITEM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPLNSH_PROD_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPLNSH_PROD_ITEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PROD_ITEM', 'INSERT INTO NC_RPLNSH_PROD_ITEM ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RPLNSH_ID,t1.MKTNG_PGM_NBR,t1.PROD_ITEM_UPC,t1.DATA_SRCE_NBR,''UPDATE'',''VALID'' FROM IN_RPLNSH_PROD_ITEM t1, RPLNSH_PROD_ITEM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RPLNSH_ID <> t2.RPLNSH_ID OR ( t1.RPLNSH_ID IS NULL AND t2.RPLNSH_ID IS NOT NULL) OR (t1.RPLNSH_ID IS NOT NULL AND t2.RPLNSH_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.PROD_ITEM_UPC <> t2.PROD_ITEM_UPC OR ( t1.PROD_ITEM_UPC IS NULL AND t2.PROD_ITEM_UPC IS NOT NULL) OR (t1.PROD_ITEM_UPC IS NOT NULL AND t2.PROD_ITEM_UPC IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPLNSH_PROD_ITEM', 'INSERT INTO NC_RPLNSH_PROD_ITEM ( SCENARIO_ID,RPLNSH_ID,MKTNG_PGM_NBR,PROD_ITEM_UPC,DATA_SRCE_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RPLNSH_ID,t1.MKTNG_PGM_NBR,t1.PROD_ITEM_UPC,t1.DATA_SRCE_NBR,''ACTIVATE'',''VALID'' FROM IN_RPLNSH_PROD_ITEM t1, RPLNSH_PROD_ITEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RPLNSH_ID = t2.RPLNSH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_ADDR_QLTY', 'INSERT INTO NC_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,''INSERT'',''VALID'' FROM IN_RPT_ADDR_QLTY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPT_ADDR_QLTY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_ADDR_QLTY', 'INSERT INTO NC_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,''DELETE'',''VALID'' FROM RPT_ADDR_QLTY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPT_ADDR_QLTY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPT_ADDR_QLTY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_ADDR_QLTY', 'INSERT INTO NC_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.ACTV_RGSTRTN_CNT,t1.SUCCESS_PCT,t1.LCLTY_FAIL_PCT,t1.UNK_ADDR_PCT,t1.CITY_TERR_FAIL_PCT,t1.STREET_NAME_FAIL_PCT,t1.HOUSE_NO_FAIL_PCT,t1.STREET_COMPT_FAIL_PCT,t1.MULTIPLE_STREET_ADDR_PCT,t1.MULTIPLE_ADDR_MATCH_PCT,''UPDATE'',''VALID'' FROM IN_RPT_ADDR_QLTY t1, RPT_ADDR_QLTY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.ACTV_RGSTRTN_CNT <> t2.ACTV_RGSTRTN_CNT OR ( t1.ACTV_RGSTRTN_CNT IS NULL AND t2.ACTV_RGSTRTN_CNT IS NOT NULL) OR (t1.ACTV_RGSTRTN_CNT IS NOT NULL AND t2.ACTV_RGSTRTN_CNT IS NULL)) OR (t1.SUCCESS_PCT <> t2.SUCCESS_PCT OR ( t1.SUCCESS_PCT IS NULL AND t2.SUCCESS_PCT IS NOT NULL) OR (t1.SUCCESS_PCT IS NOT NULL AND t2.SUCCESS_PCT IS NULL)) OR (t1.LCLTY_FAIL_PCT <> t2.LCLTY_FAIL_PCT OR ( t1.LCLTY_FAIL_PCT IS NULL AND t2.LCLTY_FAIL_PCT IS NOT NULL) OR (t1.LCLTY_FAIL_PCT IS NOT NULL AND t2.LCLTY_FAIL_PCT IS NULL)) OR (t1.UNK_ADDR_PCT <> t2.UNK_ADDR_PCT OR ( t1.UNK_ADDR_PCT IS NULL AND t2.UNK_ADDR_PCT IS NOT NULL) OR (t1.UNK_ADDR_PCT IS NOT NULL AND t2.UNK_ADDR_PCT IS NULL)) OR (t1.CITY_TERR_FAIL_PCT <> t2.CITY_TERR_FAIL_PCT OR ( t1.CITY_TERR_FAIL_PCT IS NULL AND t2.CITY_TERR_FAIL_PCT IS NOT NULL) OR (t1.CITY_TERR_FAIL_PCT IS NOT NULL AND t2.CITY_TERR_FAIL_PCT IS NULL)) OR (t1.STREET_NAME_FAIL_PCT <> t2.STREET_NAME_FAIL_PCT OR ( t1.STREET_NAME_FAIL_PCT IS NULL AND t2.STREET_NAME_FAIL_PCT IS NOT NULL) OR (t1.STREET_NAME_FAIL_PCT IS NOT NULL AND t2.STREET_NAME_FAIL_PCT IS NULL)) OR (t1.HOUSE_NO_FAIL_PCT <> t2.HOUSE_NO_FAIL_PCT OR ( t1.HOUSE_NO_FAIL_PCT IS NULL AND t2.HOUSE_NO_FAIL_PCT IS NOT NULL) OR (t1.HOUSE_NO_FAIL_PCT IS NOT NULL AND t2.HOUSE_NO_FAIL_PCT IS NULL)) OR (t1.STREET_COMPT_FAIL_PCT <> t2.STREET_COMPT_FAIL_PCT OR ( t1.STREET_COMPT_FAIL_PCT IS NULL AND t2.STREET_COMPT_FAIL_PCT IS NOT NULL) OR (t1.STREET_COMPT_FAIL_PCT IS NOT NULL AND t2.STREET_COMPT_FAIL_PCT IS NULL)) OR (t1.MULTIPLE_STREET_ADDR_PCT <> t2.MULTIPLE_STREET_ADDR_PCT OR ( t1.MULTIPLE_STREET_ADDR_PCT IS NULL AND t2.MULTIPLE_STREET_ADDR_PCT IS NOT NULL) OR (t1.MULTIPLE_STREET_ADDR_PCT IS NOT NULL AND t2.MULTIPLE_STREET_ADDR_PCT IS NULL)) OR (t1.MULTIPLE_ADDR_MATCH_PCT <> t2.MULTIPLE_ADDR_MATCH_PCT OR ( t1.MULTIPLE_ADDR_MATCH_PCT IS NULL AND t2.MULTIPLE_ADDR_MATCH_PCT IS NOT NULL) OR (t1.MULTIPLE_ADDR_MATCH_PCT IS NOT NULL AND t2.MULTIPLE_ADDR_MATCH_PCT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_ADDR_QLTY', 'INSERT INTO NC_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.ACTV_RGSTRTN_CNT,t1.SUCCESS_PCT,t1.LCLTY_FAIL_PCT,t1.UNK_ADDR_PCT,t1.CITY_TERR_FAIL_PCT,t1.STREET_NAME_FAIL_PCT,t1.HOUSE_NO_FAIL_PCT,t1.STREET_COMPT_FAIL_PCT,t1.MULTIPLE_STREET_ADDR_PCT,t1.MULTIPLE_ADDR_MATCH_PCT,''ACTIVATE'',''VALID'' FROM IN_RPT_ADDR_QLTY t1, RPT_ADDR_QLTY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_CNSMR_NBR', 'INSERT INTO NC_RPT_CNSMR_NBR ( SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,''INSERT'',''VALID'' FROM IN_RPT_CNSMR_NBR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPT_CNSMR_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_CNSMR_NBR', 'INSERT INTO NC_RPT_CNSMR_NBR ( SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,''DELETE'',''VALID'' FROM RPT_CNSMR_NBR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPT_CNSMR_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPT_CNSMR_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_CNSMR_NBR', 'INSERT INTO NC_RPT_CNSMR_NBR ( SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,''UPDATE'',''VALID'' FROM IN_RPT_CNSMR_NBR t1, RPT_CNSMR_NBR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MTCHD_CNSMR_NBR <> t2.MTCHD_CNSMR_NBR OR ( t1.MTCHD_CNSMR_NBR IS NULL AND t2.MTCHD_CNSMR_NBR IS NOT NULL) OR (t1.MTCHD_CNSMR_NBR IS NOT NULL AND t2.MTCHD_CNSMR_NBR IS NULL)) OR (t1.HSHLD_NBR <> t2.HSHLD_NBR OR ( t1.HSHLD_NBR IS NULL AND t2.HSHLD_NBR IS NOT NULL) OR (t1.HSHLD_NBR IS NOT NULL AND t2.HSHLD_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_CNSMR_NBR', 'INSERT INTO NC_RPT_CNSMR_NBR ( SCENARIO_ID,LEGAL_ENT_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,''ACTIVATE'',''VALID'' FROM IN_RPT_CNSMR_NBR t1, RPT_CNSMR_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_DATA_NBR', 'INSERT INTO NC_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,''INSERT'',''VALID'' FROM IN_RPT_DATA_NBR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPT_DATA_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_DATA_NBR', 'INSERT INTO NC_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,''DELETE'',''VALID'' FROM RPT_DATA_NBR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPT_DATA_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPT_DATA_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_DATA_NBR', 'INSERT INTO NC_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,''UPDATE'',''VALID'' FROM IN_RPT_DATA_NBR t1, RPT_DATA_NBR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.STAGING_NBR <> t2.STAGING_NBR OR ( t1.STAGING_NBR IS NULL AND t2.STAGING_NBR IS NOT NULL) OR (t1.STAGING_NBR IS NOT NULL AND t2.STAGING_NBR IS NULL)) OR (t1.ERROR_NBR <> t2.ERROR_NBR OR ( t1.ERROR_NBR IS NULL AND t2.ERROR_NBR IS NOT NULL) OR (t1.ERROR_NBR IS NOT NULL AND t2.ERROR_NBR IS NULL)) OR (t1.ACTIVE_NBR <> t2.ACTIVE_NBR OR ( t1.ACTIVE_NBR IS NULL AND t2.ACTIVE_NBR IS NOT NULL) OR (t1.ACTIVE_NBR IS NOT NULL AND t2.ACTIVE_NBR IS NULL)) OR (t1.DUPLICATE_NBR <> t2.DUPLICATE_NBR OR ( t1.DUPLICATE_NBR IS NULL AND t2.DUPLICATE_NBR IS NOT NULL) OR (t1.DUPLICATE_NBR IS NOT NULL AND t2.DUPLICATE_NBR IS NULL)) OR (t1.PHONE_OPT_IN <> t2.PHONE_OPT_IN OR ( t1.PHONE_OPT_IN IS NULL AND t2.PHONE_OPT_IN IS NOT NULL) OR (t1.PHONE_OPT_IN IS NOT NULL AND t2.PHONE_OPT_IN IS NULL)) OR (t1.PHONE_OPT_OUT <> t2.PHONE_OPT_OUT OR ( t1.PHONE_OPT_OUT IS NULL AND t2.PHONE_OPT_OUT IS NOT NULL) OR (t1.PHONE_OPT_OUT IS NOT NULL AND t2.PHONE_OPT_OUT IS NULL)) OR (t1.EMAIL_OPT_IN <> t2.EMAIL_OPT_IN OR ( t1.EMAIL_OPT_IN IS NULL AND t2.EMAIL_OPT_IN IS NOT NULL) OR (t1.EMAIL_OPT_IN IS NOT NULL AND t2.EMAIL_OPT_IN IS NULL)) OR (t1.EMAIL_OPT_OUT <> t2.EMAIL_OPT_OUT OR ( t1.EMAIL_OPT_OUT IS NULL AND t2.EMAIL_OPT_OUT IS NOT NULL) OR (t1.EMAIL_OPT_OUT IS NOT NULL AND t2.EMAIL_OPT_OUT IS NULL)) OR (t1.POSTAL_OPT_IN <> t2.POSTAL_OPT_IN OR ( t1.POSTAL_OPT_IN IS NULL AND t2.POSTAL_OPT_IN IS NOT NULL) OR (t1.POSTAL_OPT_IN IS NOT NULL AND t2.POSTAL_OPT_IN IS NULL)) OR (t1.POSTAL_OPT_OUT <> t2.POSTAL_OPT_OUT OR ( t1.POSTAL_OPT_OUT IS NULL AND t2.POSTAL_OPT_OUT IS NOT NULL) OR (t1.POSTAL_OPT_OUT IS NOT NULL AND t2.POSTAL_OPT_OUT IS NULL)) OR (t1.SOCIAL_OPT_IN <> t2.SOCIAL_OPT_IN OR ( t1.SOCIAL_OPT_IN IS NULL AND t2.SOCIAL_OPT_IN IS NOT NULL) OR (t1.SOCIAL_OPT_IN IS NOT NULL AND t2.SOCIAL_OPT_IN IS NULL)) OR (t1.SOCIAL_OPT_OUT <> t2.SOCIAL_OPT_OUT OR ( t1.SOCIAL_OPT_OUT IS NULL AND t2.SOCIAL_OPT_OUT IS NOT NULL) OR (t1.SOCIAL_OPT_OUT IS NOT NULL AND t2.SOCIAL_OPT_OUT IS NULL)) OR (t1.MTCHD_CNSMR_NBR <> t2.MTCHD_CNSMR_NBR OR ( t1.MTCHD_CNSMR_NBR IS NULL AND t2.MTCHD_CNSMR_NBR IS NOT NULL) OR (t1.MTCHD_CNSMR_NBR IS NOT NULL AND t2.MTCHD_CNSMR_NBR IS NULL)) OR (t1.HSHLD_NBR <> t2.HSHLD_NBR OR ( t1.HSHLD_NBR IS NULL AND t2.HSHLD_NBR IS NOT NULL) OR (t1.HSHLD_NBR IS NOT NULL AND t2.HSHLD_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_DATA_NBR', 'INSERT INTO NC_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MTCHD_CNSMR_NBR,HSHLD_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,''ACTIVATE'',''VALID'' FROM IN_RPT_DATA_NBR t1, RPT_DATA_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_LOAD_NBR', 'INSERT INTO NC_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,''INSERT'',''VALID'' FROM IN_RPT_LOAD_NBR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RPT_LOAD_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.LOAD_ID = t2.LOAD_ID AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_LOAD_NBR', 'INSERT INTO NC_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,''DELETE'',''VALID'' FROM RPT_LOAD_NBR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RPT_LOAD_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.LOAD_ID = t2.LOAD_ID AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RPT_LOAD_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.LOAD_ID = t2.LOAD_ID AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_LOAD_NBR', 'INSERT INTO NC_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,''UPDATE'',''VALID'' FROM IN_RPT_LOAD_NBR t1, RPT_LOAD_NBR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.LOAD_ID = t2.LOAD_ID AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.STAGING_NBR <> t2.STAGING_NBR OR ( t1.STAGING_NBR IS NULL AND t2.STAGING_NBR IS NOT NULL) OR (t1.STAGING_NBR IS NOT NULL AND t2.STAGING_NBR IS NULL)) OR (t1.ERROR_NBR <> t2.ERROR_NBR OR ( t1.ERROR_NBR IS NULL AND t2.ERROR_NBR IS NOT NULL) OR (t1.ERROR_NBR IS NOT NULL AND t2.ERROR_NBR IS NULL)) OR (t1.ACTIVE_NBR <> t2.ACTIVE_NBR OR ( t1.ACTIVE_NBR IS NULL AND t2.ACTIVE_NBR IS NOT NULL) OR (t1.ACTIVE_NBR IS NOT NULL AND t2.ACTIVE_NBR IS NULL)) OR (t1.DUPLICATE_NBR <> t2.DUPLICATE_NBR OR ( t1.DUPLICATE_NBR IS NULL AND t2.DUPLICATE_NBR IS NOT NULL) OR (t1.DUPLICATE_NBR IS NOT NULL AND t2.DUPLICATE_NBR IS NULL)) OR (t1.PHONE_OPT_IN <> t2.PHONE_OPT_IN OR ( t1.PHONE_OPT_IN IS NULL AND t2.PHONE_OPT_IN IS NOT NULL) OR (t1.PHONE_OPT_IN IS NOT NULL AND t2.PHONE_OPT_IN IS NULL)) OR (t1.PHONE_OPT_OUT <> t2.PHONE_OPT_OUT OR ( t1.PHONE_OPT_OUT IS NULL AND t2.PHONE_OPT_OUT IS NOT NULL) OR (t1.PHONE_OPT_OUT IS NOT NULL AND t2.PHONE_OPT_OUT IS NULL)) OR (t1.EMAIL_OPT_IN <> t2.EMAIL_OPT_IN OR ( t1.EMAIL_OPT_IN IS NULL AND t2.EMAIL_OPT_IN IS NOT NULL) OR (t1.EMAIL_OPT_IN IS NOT NULL AND t2.EMAIL_OPT_IN IS NULL)) OR (t1.EMAIL_OPT_OUT <> t2.EMAIL_OPT_OUT OR ( t1.EMAIL_OPT_OUT IS NULL AND t2.EMAIL_OPT_OUT IS NOT NULL) OR (t1.EMAIL_OPT_OUT IS NOT NULL AND t2.EMAIL_OPT_OUT IS NULL)) OR (t1.POSTAL_OPT_IN <> t2.POSTAL_OPT_IN OR ( t1.POSTAL_OPT_IN IS NULL AND t2.POSTAL_OPT_IN IS NOT NULL) OR (t1.POSTAL_OPT_IN IS NOT NULL AND t2.POSTAL_OPT_IN IS NULL)) OR (t1.POSTAL_OPT_OUT <> t2.POSTAL_OPT_OUT OR ( t1.POSTAL_OPT_OUT IS NULL AND t2.POSTAL_OPT_OUT IS NOT NULL) OR (t1.POSTAL_OPT_OUT IS NOT NULL AND t2.POSTAL_OPT_OUT IS NULL)) OR (t1.SOCIAL_OPT_IN <> t2.SOCIAL_OPT_IN OR ( t1.SOCIAL_OPT_IN IS NULL AND t2.SOCIAL_OPT_IN IS NOT NULL) OR (t1.SOCIAL_OPT_IN IS NOT NULL AND t2.SOCIAL_OPT_IN IS NULL)) OR (t1.SOCIAL_OPT_OUT <> t2.SOCIAL_OPT_OUT OR ( t1.SOCIAL_OPT_OUT IS NULL AND t2.SOCIAL_OPT_OUT IS NOT NULL) OR (t1.SOCIAL_OPT_OUT IS NOT NULL AND t2.SOCIAL_OPT_OUT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RPT_LOAD_NBR', 'INSERT INTO NC_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,''ACTIVATE'',''VALID'' FROM IN_RPT_LOAD_NBR t1, RPT_LOAD_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.LOAD_ID = t2.LOAD_ID AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_EXTR_CONFIG', 'INSERT INTO NC_RTN_EXTR_CONFIG ( SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,''INSERT'',''VALID'' FROM IN_RTN_EXTR_CONFIG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RTN_EXTR_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_EXTR_CONFIG', 'INSERT INTO NC_RTN_EXTR_CONFIG ( SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,''DELETE'',''VALID'' FROM RTN_EXTR_CONFIG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RTN_EXTR_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RTN_EXTR_CONFIG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_EXTR_CONFIG', 'INSERT INTO NC_RTN_EXTR_CONFIG ( SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.FULL_EXTR_IND,''UPDATE'',''VALID'' FROM IN_RTN_EXTR_CONFIG t1, RTN_EXTR_CONFIG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.FULL_EXTR_IND <> t2.FULL_EXTR_IND OR ( t1.FULL_EXTR_IND IS NULL AND t2.FULL_EXTR_IND IS NOT NULL) OR (t1.FULL_EXTR_IND IS NOT NULL AND t2.FULL_EXTR_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_EXTR_CONFIG', 'INSERT INTO NC_RTN_EXTR_CONFIG ( SCENARIO_ID,MKTNG_PGM_NBR,FULL_EXTR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.FULL_EXTR_IND,''ACTIVATE'',''VALID'' FROM IN_RTN_EXTR_CONFIG t1, RTN_EXTR_CONFIG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES', 'INSERT INTO NC_RTN_RULES ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,''INSERT'',''VALID'' FROM IN_RTN_RULES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RTN_RULES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_ID = t2.RTN_RULE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES', 'INSERT INTO NC_RTN_RULES ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,''DELETE'',''VALID'' FROM RTN_RULES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RTN_RULES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_ID = t2.RTN_RULE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RTN_RULES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_ID = t2.RTN_RULE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES', 'INSERT INTO NC_RTN_RULES ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RTN_RULE_ID,t1.RTN_RULE_NAME,''UPDATE'',''VALID'' FROM IN_RTN_RULES t1, RTN_RULES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_ID = t2.RTN_RULE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RTN_RULE_ID <> t2.RTN_RULE_ID OR ( t1.RTN_RULE_ID IS NULL AND t2.RTN_RULE_ID IS NOT NULL) OR (t1.RTN_RULE_ID IS NOT NULL AND t2.RTN_RULE_ID IS NULL)) OR (t1.RTN_RULE_NAME <> t2.RTN_RULE_NAME OR ( t1.RTN_RULE_NAME IS NULL AND t2.RTN_RULE_NAME IS NOT NULL) OR (t1.RTN_RULE_NAME IS NOT NULL AND t2.RTN_RULE_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES', 'INSERT INTO NC_RTN_RULES ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RTN_RULE_ID,t1.RTN_RULE_NAME,''ACTIVATE'',''VALID'' FROM IN_RTN_RULES t1, RTN_RULES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_ID = t2.RTN_RULE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES_DTL', 'INSERT INTO NC_RTN_RULES_DTL ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,''INSERT'',''VALID'' FROM IN_RTN_RULES_DTL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM RTN_RULES_DTL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_DTL_NBR = t2.RTN_RULE_DTL_NBR AND t1.RTN_RULE_ID = t2.RTN_RULE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES_DTL', 'INSERT INTO NC_RTN_RULES_DTL ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,''DELETE'',''VALID'' FROM RTN_RULES_DTL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RTN_RULES_DTL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_DTL_NBR = t2.RTN_RULE_DTL_NBR AND t1.RTN_RULE_ID = t2.RTN_RULE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RTN_RULES_DTL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_DTL_NBR = t2.RTN_RULE_DTL_NBR AND t1.RTN_RULE_ID = t2.RTN_RULE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES_DTL', 'INSERT INTO NC_RTN_RULES_DTL ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RTN_RULE_ID,t1.RTN_RULE_DTL_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.EXEC_RPT_ONLY,t1.CHNL_OPT_NBR_DAYS,t1.TRN_NBR_DAYS,t1.STAT_NBR_DAYS,t1.GROUP_ID,''UPDATE'',''VALID'' FROM IN_RTN_RULES_DTL t1, RTN_RULES_DTL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_DTL_NBR = t2.RTN_RULE_DTL_NBR AND t1.RTN_RULE_ID = t2.RTN_RULE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RTN_RULE_ID <> t2.RTN_RULE_ID OR ( t1.RTN_RULE_ID IS NULL AND t2.RTN_RULE_ID IS NOT NULL) OR (t1.RTN_RULE_ID IS NOT NULL AND t2.RTN_RULE_ID IS NULL)) OR (t1.RTN_RULE_DTL_NBR <> t2.RTN_RULE_DTL_NBR OR ( t1.RTN_RULE_DTL_NBR IS NULL AND t2.RTN_RULE_DTL_NBR IS NOT NULL) OR (t1.RTN_RULE_DTL_NBR IS NOT NULL AND t2.RTN_RULE_DTL_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.EXEC_RPT_ONLY <> t2.EXEC_RPT_ONLY OR ( t1.EXEC_RPT_ONLY IS NULL AND t2.EXEC_RPT_ONLY IS NOT NULL) OR (t1.EXEC_RPT_ONLY IS NOT NULL AND t2.EXEC_RPT_ONLY IS NULL)) OR (t1.CHNL_OPT_NBR_DAYS <> t2.CHNL_OPT_NBR_DAYS OR ( t1.CHNL_OPT_NBR_DAYS IS NULL AND t2.CHNL_OPT_NBR_DAYS IS NOT NULL) OR (t1.CHNL_OPT_NBR_DAYS IS NOT NULL AND t2.CHNL_OPT_NBR_DAYS IS NULL)) OR (t1.TRN_NBR_DAYS <> t2.TRN_NBR_DAYS OR ( t1.TRN_NBR_DAYS IS NULL AND t2.TRN_NBR_DAYS IS NOT NULL) OR (t1.TRN_NBR_DAYS IS NOT NULL AND t2.TRN_NBR_DAYS IS NULL)) OR (t1.STAT_NBR_DAYS <> t2.STAT_NBR_DAYS OR ( t1.STAT_NBR_DAYS IS NULL AND t2.STAT_NBR_DAYS IS NOT NULL) OR (t1.STAT_NBR_DAYS IS NOT NULL AND t2.STAT_NBR_DAYS IS NULL)) OR (t1.GROUP_ID <> t2.GROUP_ID OR ( t1.GROUP_ID IS NULL AND t2.GROUP_ID IS NOT NULL) OR (t1.GROUP_ID IS NOT NULL AND t2.GROUP_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RTN_RULES_DTL', 'INSERT INTO NC_RTN_RULES_DTL ( SCENARIO_ID,RTN_RULE_ID,RTN_RULE_DTL_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,EXEC_RPT_ONLY,CHNL_OPT_NBR_DAYS,TRN_NBR_DAYS,STAT_NBR_DAYS,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RTN_RULE_ID,t1.RTN_RULE_DTL_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.EXEC_RPT_ONLY,t1.CHNL_OPT_NBR_DAYS,t1.TRN_NBR_DAYS,t1.STAT_NBR_DAYS,t1.GROUP_ID,''ACTIVATE'',''VALID'' FROM IN_RTN_RULES_DTL t1, RTN_RULES_DTL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RTN_RULE_DTL_NBR = t2.RTN_RULE_DTL_NBR AND t1.RTN_RULE_ID = t2.RTN_RULE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_CODE', 'INSERT INTO NC_REFERENCE_0001_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0001_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0001_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_CODE', 'INSERT INTO NC_REFERENCE_0001_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0001_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0001_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0001_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_CODE', 'INSERT INTO NC_REFERENCE_0001_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0001_CODE t1, MST_REFERENCE_0001_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_CODE', 'INSERT INTO NC_REFERENCE_0001_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0001_CODE t1, MST_REFERENCE_0001_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_DESC', 'INSERT INTO NC_REFERENCE_0001_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0001_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0001_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_DESC', 'INSERT INTO NC_REFERENCE_0001_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0001_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0001_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0001_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_DESC', 'INSERT INTO NC_REFERENCE_0001_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0001_DESC t1, MST_REFERENCE_0001_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0001_DESC', 'INSERT INTO NC_REFERENCE_0001_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0001_DESC t1, MST_REFERENCE_0001_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_CODE', 'INSERT INTO NC_REFERENCE_0002_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0002_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0002_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_CODE', 'INSERT INTO NC_REFERENCE_0002_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0002_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0002_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0002_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_CODE', 'INSERT INTO NC_REFERENCE_0002_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0002_CODE t1, MST_REFERENCE_0002_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_CODE', 'INSERT INTO NC_REFERENCE_0002_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0002_CODE t1, MST_REFERENCE_0002_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_DESC', 'INSERT INTO NC_REFERENCE_0002_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0002_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0002_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_DESC', 'INSERT INTO NC_REFERENCE_0002_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0002_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0002_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0002_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_DESC', 'INSERT INTO NC_REFERENCE_0002_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0002_DESC t1, MST_REFERENCE_0002_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0002_DESC', 'INSERT INTO NC_REFERENCE_0002_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0002_DESC t1, MST_REFERENCE_0002_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_CODE', 'INSERT INTO NC_REFERENCE_0003_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0003_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0003_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_CODE', 'INSERT INTO NC_REFERENCE_0003_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0003_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0003_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0003_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_CODE', 'INSERT INTO NC_REFERENCE_0003_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0003_CODE t1, MST_REFERENCE_0003_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_CODE', 'INSERT INTO NC_REFERENCE_0003_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0003_CODE t1, MST_REFERENCE_0003_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_DESC', 'INSERT INTO NC_REFERENCE_0003_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0003_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0003_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_DESC', 'INSERT INTO NC_REFERENCE_0003_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0003_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0003_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0003_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_DESC', 'INSERT INTO NC_REFERENCE_0003_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0003_DESC t1, MST_REFERENCE_0003_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0003_DESC', 'INSERT INTO NC_REFERENCE_0003_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0003_DESC t1, MST_REFERENCE_0003_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_CODE', 'INSERT INTO NC_REFERENCE_0004_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0004_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0004_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_CODE', 'INSERT INTO NC_REFERENCE_0004_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0004_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0004_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0004_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_CODE', 'INSERT INTO NC_REFERENCE_0004_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0004_CODE t1, MST_REFERENCE_0004_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_CODE', 'INSERT INTO NC_REFERENCE_0004_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0004_CODE t1, MST_REFERENCE_0004_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_DESC', 'INSERT INTO NC_REFERENCE_0004_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0004_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0004_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_DESC', 'INSERT INTO NC_REFERENCE_0004_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0004_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0004_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0004_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_DESC', 'INSERT INTO NC_REFERENCE_0004_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0004_DESC t1, MST_REFERENCE_0004_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0004_DESC', 'INSERT INTO NC_REFERENCE_0004_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0004_DESC t1, MST_REFERENCE_0004_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_CODE', 'INSERT INTO NC_REFERENCE_0005_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0005_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0005_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_CODE', 'INSERT INTO NC_REFERENCE_0005_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0005_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0005_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0005_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_CODE', 'INSERT INTO NC_REFERENCE_0005_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0005_CODE t1, MST_REFERENCE_0005_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_CODE', 'INSERT INTO NC_REFERENCE_0005_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0005_CODE t1, MST_REFERENCE_0005_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_DESC', 'INSERT INTO NC_REFERENCE_0005_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0005_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0005_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_DESC', 'INSERT INTO NC_REFERENCE_0005_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0005_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0005_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0005_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_DESC', 'INSERT INTO NC_REFERENCE_0005_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0005_DESC t1, MST_REFERENCE_0005_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0005_DESC', 'INSERT INTO NC_REFERENCE_0005_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0005_DESC t1, MST_REFERENCE_0005_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_CODE', 'INSERT INTO NC_REFERENCE_0006_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0006_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0006_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_CODE', 'INSERT INTO NC_REFERENCE_0006_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0006_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0006_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0006_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_CODE', 'INSERT INTO NC_REFERENCE_0006_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0006_CODE t1, MST_REFERENCE_0006_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_CODE', 'INSERT INTO NC_REFERENCE_0006_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0006_CODE t1, MST_REFERENCE_0006_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_DESC', 'INSERT INTO NC_REFERENCE_0006_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0006_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0006_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_DESC', 'INSERT INTO NC_REFERENCE_0006_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0006_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0006_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0006_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_DESC', 'INSERT INTO NC_REFERENCE_0006_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0006_DESC t1, MST_REFERENCE_0006_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0006_DESC', 'INSERT INTO NC_REFERENCE_0006_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0006_DESC t1, MST_REFERENCE_0006_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_CODE', 'INSERT INTO NC_REFERENCE_0007_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0007_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0007_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_CODE', 'INSERT INTO NC_REFERENCE_0007_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0007_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0007_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0007_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_CODE', 'INSERT INTO NC_REFERENCE_0007_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0007_CODE t1, MST_REFERENCE_0007_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_CODE', 'INSERT INTO NC_REFERENCE_0007_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0007_CODE t1, MST_REFERENCE_0007_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_DESC', 'INSERT INTO NC_REFERENCE_0007_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0007_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0007_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_DESC', 'INSERT INTO NC_REFERENCE_0007_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0007_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0007_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0007_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_DESC', 'INSERT INTO NC_REFERENCE_0007_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0007_DESC t1, MST_REFERENCE_0007_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0007_DESC', 'INSERT INTO NC_REFERENCE_0007_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0007_DESC t1, MST_REFERENCE_0007_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_CODE', 'INSERT INTO NC_REFERENCE_0008_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0008_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0008_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_CODE', 'INSERT INTO NC_REFERENCE_0008_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0008_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0008_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0008_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_CODE', 'INSERT INTO NC_REFERENCE_0008_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0008_CODE t1, MST_REFERENCE_0008_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_CODE', 'INSERT INTO NC_REFERENCE_0008_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0008_CODE t1, MST_REFERENCE_0008_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_DESC', 'INSERT INTO NC_REFERENCE_0008_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0008_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0008_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_DESC', 'INSERT INTO NC_REFERENCE_0008_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0008_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0008_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0008_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_DESC', 'INSERT INTO NC_REFERENCE_0008_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0008_DESC t1, MST_REFERENCE_0008_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0008_DESC', 'INSERT INTO NC_REFERENCE_0008_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0008_DESC t1, MST_REFERENCE_0008_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_CODE', 'INSERT INTO NC_REFERENCE_0009_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_0009_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0009_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_CODE', 'INSERT INTO NC_REFERENCE_0009_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_0009_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0009_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0009_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_CODE', 'INSERT INTO NC_REFERENCE_0009_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_0009_CODE t1, MST_REFERENCE_0009_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_CODE', 'INSERT INTO NC_REFERENCE_0009_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0009_CODE t1, MST_REFERENCE_0009_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_DESC', 'INSERT INTO NC_REFERENCE_0009_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_0009_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_0009_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_DESC', 'INSERT INTO NC_REFERENCE_0009_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_0009_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_0009_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_0009_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_DESC', 'INSERT INTO NC_REFERENCE_0009_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_0009_DESC t1, MST_REFERENCE_0009_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_0009_DESC', 'INSERT INTO NC_REFERENCE_0009_DESC ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_0009_DESC t1, MST_REFERENCE_0009_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''INSERT'',''VALID'' FROM IN_REFERENCE_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,''DELETE'',''VALID'' FROM MST_REFERENCE_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''UPDATE'',''VALID'' FROM IN_REFERENCE_CODE t1, MST_REFERENCE_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_CODE t1, MST_REFERENCE_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_DESCRIPTION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_DESCRIPTION t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_DESCRIPTION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_DESCRIPTION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1, MST_REFERENCE_DESCRIPTION t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1, MST_REFERENCE_DESCRIPTION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,''INSERT'',''VALID'' FROM IN_REL_OBJ_KEY_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_OBJ_KEY_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,''DELETE'',''VALID'' FROM MST_REL_OBJ_KEY_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_OBJ_KEY_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_OBJ_KEY_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKD_ID,t1.ROKT_ID,t1.KEY_COL_LOG_NAME,t1.KEY_COL_PHY_NAME,t1.KEY_DATA_TYPE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.KEY_COL_SEQUENCE,''UPDATE'',''VALID'' FROM IN_REL_OBJ_KEY_DESC t1, MST_REL_OBJ_KEY_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RokdId <> t2.RokdId OR ( t1.RokdId IS NULL AND t2.RokdId IS NOT NULL) OR (t1.RokdId IS NOT NULL AND t2.RokdId IS NULL)) OR (t1.RoktId <> t2.RoktId OR ( t1.RoktId IS NULL AND t2.RoktId IS NOT NULL) OR (t1.RoktId IS NOT NULL AND t2.RoktId IS NULL)) OR (t1.KeyColumnLogicalName <> t2.KeyColumnLogicalName OR ( t1.KeyColumnLogicalName IS NULL AND t2.KeyColumnLogicalName IS NOT NULL) OR (t1.KeyColumnLogicalName IS NOT NULL AND t2.KeyColumnLogicalName IS NULL)) OR (t1.KeyColumnPhysicalName <> t2.KeyColumnPhysicalName OR ( t1.KeyColumnPhysicalName IS NULL AND t2.KeyColumnPhysicalName IS NOT NULL) OR (t1.KeyColumnPhysicalName IS NOT NULL AND t2.KeyColumnPhysicalName IS NULL)) OR (t1.KeyDataType <> t2.KeyDataType OR ( t1.KeyDataType IS NULL AND t2.KeyDataType IS NOT NULL) OR (t1.KeyDataType IS NOT NULL AND t2.KeyDataType IS NULL)) OR (t1.DataTypeLength <> t2.DataTypeLength OR ( t1.DataTypeLength IS NULL AND t2.DataTypeLength IS NOT NULL) OR (t1.DataTypeLength IS NOT NULL AND t2.DataTypeLength IS NULL)) OR (t1.DataTypePrecision <> t2.DataTypePrecision OR ( t1.DataTypePrecision IS NULL AND t2.DataTypePrecision IS NOT NULL) OR (t1.DataTypePrecision IS NOT NULL AND t2.DataTypePrecision IS NULL)) OR (t1.KeyColumnSequence <> t2.KeyColumnSequence OR ( t1.KeyColumnSequence IS NULL AND t2.KeyColumnSequence IS NOT NULL) OR (t1.KeyColumnSequence IS NOT NULL AND t2.KeyColumnSequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKD_ID,t1.ROKT_ID,t1.KEY_COL_LOG_NAME,t1.KEY_COL_PHY_NAME,t1.KEY_DATA_TYPE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.KEY_COL_SEQUENCE,''ACTIVATE'',''VALID'' FROM IN_REL_OBJ_KEY_DESC t1, MST_REL_OBJ_KEY_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,''INSERT'',''VALID'' FROM IN_REL_OBJ_PROPERTIES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_OBJ_PROPERTIES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,''DELETE'',''VALID'' FROM MST_REL_OBJ_PROPERTIES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_OBJ_PROPERTIES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_OBJ_PROPERTIES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROP_ID,t1.ROM_ID,t1.NAME,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.NULLABLE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.RODV_COL_NAME,t1.DEFAULT_VALUE,''UPDATE'',''VALID'' FROM IN_REL_OBJ_PROPERTIES t1, MST_REL_OBJ_PROPERTIES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RopId <> t2.RopId OR ( t1.RopId IS NULL AND t2.RopId IS NOT NULL) OR (t1.RopId IS NOT NULL AND t2.RopId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.Name <> t2.Name OR ( t1.Name IS NULL AND t2.Name IS NOT NULL) OR (t1.Name IS NOT NULL AND t2.Name IS NULL)) OR (t1.DisplayName <> t2.DisplayName OR ( t1.DisplayName IS NULL AND t2.DisplayName IS NOT NULL) OR (t1.DisplayName IS NOT NULL AND t2.DisplayName IS NULL)) OR (t1.DataType <> t2.DataType OR ( t1.DataType IS NULL AND t2.DataType IS NOT NULL) OR (t1.DataType IS NOT NULL AND t2.DataType IS NULL)) OR (t1.Nullable <> t2.Nullable OR ( t1.Nullable IS NULL AND t2.Nullable IS NOT NULL) OR (t1.Nullable IS NOT NULL AND t2.Nullable IS NULL)) OR (t1.DataTypeLength <> t2.DataTypeLength OR ( t1.DataTypeLength IS NULL AND t2.DataTypeLength IS NOT NULL) OR (t1.DataTypeLength IS NOT NULL AND t2.DataTypeLength IS NULL)) OR (t1.DataTypePrecision <> t2.DataTypePrecision OR ( t1.DataTypePrecision IS NULL AND t2.DataTypePrecision IS NOT NULL) OR (t1.DataTypePrecision IS NOT NULL AND t2.DataTypePrecision IS NULL)) OR (t1.RelObjDataValColName <> t2.RelObjDataValColName OR ( t1.RelObjDataValColName IS NULL AND t2.RelObjDataValColName IS NOT NULL) OR (t1.RelObjDataValColName IS NOT NULL AND t2.RelObjDataValColName IS NULL)) OR (t1.DefaultValue <> t2.DefaultValue OR ( t1.DefaultValue IS NULL AND t2.DefaultValue IS NOT NULL) OR (t1.DefaultValue IS NOT NULL AND t2.DefaultValue IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROP_ID,t1.ROM_ID,t1.NAME,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.NULLABLE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.RODV_COL_NAME,t1.DEFAULT_VALUE,''ACTIVATE'',''VALID'' FROM IN_REL_OBJ_PROPERTIES t1, MST_REL_OBJ_PROPERTIES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,''INSERT'',''VALID'' FROM IN_RELATIONAL_OBJECT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_RELATIONAL_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,''DELETE'',''VALID'' FROM MST_RELATIONAL_OBJECT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RELATIONAL_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RELATIONAL_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RO_ID,t1.MST_TBL_LOG_NAME,t1.MST_TBL_PHY_NAME,t1.NAME,t1.DESCRIPTION,t1.MST_VIEW_NAME,t1.DISPLAY_NAME,t1.MASTER_DATA_URL,t1.URL_PARAMETER,t1.SORT_COLUMNS_NAME,t1.DISPLAY_COLUMNS_NAME_LOG,t1.SORT_COLUMNS_NAME_LOG,t1.DISPLAY_COL_LOG_HOVER,t1.VER_DISPLAY_NAME,t1.VER_SORT_COLUMNS_NAME,t1.VER_MASTER_DATA_URL,t1.VER_TBL_PHY_NAME,t1.VER_VIEW_NAME,t1.VER_TBL_LOG_NAME,t1.VER_DISPLAY_COL_LOG_HOVER,t1.IS_NON_MDM,t1.IS_TEMPORAL,t1.TOOLTIP_COLUMN_LOG_NAME,t1.TOOLTIP_COLUMNS,t1.VER_TOOLTIP_COLUMNS,t1.TOOLTIP_DISPLAY_NAME,t1.VER_TOOLTIP_DISPLAY_NAME,''UPDATE'',''VALID'' FROM IN_RELATIONAL_OBJECT t1, MST_RELATIONAL_OBJECT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.LogicalTableName <> t2.LogicalTableName OR ( t1.LogicalTableName IS NULL AND t2.LogicalTableName IS NOT NULL) OR (t1.LogicalTableName IS NOT NULL AND t2.LogicalTableName IS NULL)) OR (t1.PhysicalTableName <> t2.PhysicalTableName OR ( t1.PhysicalTableName IS NULL AND t2.PhysicalTableName IS NOT NULL) OR (t1.PhysicalTableName IS NOT NULL AND t2.PhysicalTableName IS NULL)) OR (t1.ObjectName <> t2.ObjectName OR ( t1.ObjectName IS NULL AND t2.ObjectName IS NOT NULL) OR (t1.ObjectName IS NOT NULL AND t2.ObjectName IS NULL)) OR (t1.ObjectDescription <> t2.ObjectDescription OR ( t1.ObjectDescription IS NULL AND t2.ObjectDescription IS NOT NULL) OR (t1.ObjectDescription IS NOT NULL AND t2.ObjectDescription IS NULL)) OR (t1.PhysicalViewName <> t2.PhysicalViewName OR ( t1.PhysicalViewName IS NULL AND t2.PhysicalViewName IS NOT NULL) OR (t1.PhysicalViewName IS NOT NULL AND t2.PhysicalViewName IS NULL)) OR (t1.DisplayColumnNames <> t2.DisplayColumnNames OR ( t1.DisplayColumnNames IS NULL AND t2.DisplayColumnNames IS NOT NULL) OR (t1.DisplayColumnNames IS NOT NULL AND t2.DisplayColumnNames IS NULL)) OR (t1.Url <> t2.Url OR ( t1.Url IS NULL AND t2.Url IS NOT NULL) OR (t1.Url IS NOT NULL AND t2.Url IS NULL)) OR (t1.UrlParam <> t2.UrlParam OR ( t1.UrlParam IS NULL AND t2.UrlParam IS NOT NULL) OR (t1.UrlParam IS NOT NULL AND t2.UrlParam IS NULL)) OR (t1.SortColumnNames <> t2.SortColumnNames OR ( t1.SortColumnNames IS NULL AND t2.SortColumnNames IS NOT NULL) OR (t1.SortColumnNames IS NOT NULL AND t2.SortColumnNames IS NULL)) OR (t1.DisplayColumnLogicalNames <> t2.DisplayColumnLogicalNames OR ( t1.DisplayColumnLogicalNames IS NULL AND t2.DisplayColumnLogicalNames IS NOT NULL) OR (t1.DisplayColumnLogicalNames IS NOT NULL AND t2.DisplayColumnLogicalNames IS NULL)) OR (t1.SortColumnLogicalNames <> t2.SortColumnLogicalNames OR ( t1.SortColumnLogicalNames IS NULL AND t2.SortColumnLogicalNames IS NOT NULL) OR (t1.SortColumnLogicalNames IS NOT NULL AND t2.SortColumnLogicalNames IS NULL)) OR (t1.DisplayColumnLogicalHover <> t2.DisplayColumnLogicalHover OR ( t1.DisplayColumnLogicalHover IS NULL AND t2.DisplayColumnLogicalHover IS NOT NULL) OR (t1.DisplayColumnLogicalHover IS NOT NULL AND t2.DisplayColumnLogicalHover IS NULL)) OR (t1.DisplayColumnsVersion <> t2.DisplayColumnsVersion OR ( t1.DisplayColumnsVersion IS NULL AND t2.DisplayColumnsVersion IS NOT NULL) OR (t1.DisplayColumnsVersion IS NOT NULL AND t2.DisplayColumnsVersion IS NULL)) OR (t1.SortColumnVersion <> t2.SortColumnVersion OR ( t1.SortColumnVersion IS NULL AND t2.SortColumnVersion IS NOT NULL) OR (t1.SortColumnVersion IS NOT NULL AND t2.SortColumnVersion IS NULL)) OR (t1.MasterDataURLVersion <> t2.MasterDataURLVersion OR ( t1.MasterDataURLVersion IS NULL AND t2.MasterDataURLVersion IS NOT NULL) OR (t1.MasterDataURLVersion IS NOT NULL AND t2.MasterDataURLVersion IS NULL)) OR (t1.PhysicalTableNameVersion <> t2.PhysicalTableNameVersion OR ( t1.PhysicalTableNameVersion IS NULL AND t2.PhysicalTableNameVersion IS NOT NULL) OR (t1.PhysicalTableNameVersion IS NOT NULL AND t2.PhysicalTableNameVersion IS NULL)) OR (t1.PhysicalViewNameVersion <> t2.PhysicalViewNameVersion OR ( t1.PhysicalViewNameVersion IS NULL AND t2.PhysicalViewNameVersion IS NOT NULL) OR (t1.PhysicalViewNameVersion IS NOT NULL AND t2.PhysicalViewNameVersion IS NULL)) OR (t1.LogicalTableNameVersion <> t2.LogicalTableNameVersion OR ( t1.LogicalTableNameVersion IS NULL AND t2.LogicalTableNameVersion IS NOT NULL) OR (t1.LogicalTableNameVersion IS NOT NULL AND t2.LogicalTableNameVersion IS NULL)) OR (t1.DisplayColLogHoverVersion <> t2.DisplayColLogHoverVersion OR ( t1.DisplayColLogHoverVersion IS NULL AND t2.DisplayColLogHoverVersion IS NOT NULL) OR (t1.DisplayColLogHoverVersion IS NOT NULL AND t2.DisplayColLogHoverVersion IS NULL)) OR (t1.IsNonMdm <> t2.IsNonMdm OR ( t1.IsNonMdm IS NULL AND t2.IsNonMdm IS NOT NULL) OR (t1.IsNonMdm IS NOT NULL AND t2.IsNonMdm IS NULL)) OR (t1.IsTemporal <> t2.IsTemporal OR ( t1.IsTemporal IS NULL AND t2.IsTemporal IS NOT NULL) OR (t1.IsTemporal IS NOT NULL AND t2.IsTemporal IS NULL)) OR (t1.TooltipLogicalColumnNames <> t2.TooltipLogicalColumnNames OR ( t1.TooltipLogicalColumnNames IS NULL AND t2.TooltipLogicalColumnNames IS NOT NULL) OR (t1.TooltipLogicalColumnNames IS NOT NULL AND t2.TooltipLogicalColumnNames IS NULL)) OR (t1.TooltipColumns <> t2.TooltipColumns OR ( t1.TooltipColumns IS NULL AND t2.TooltipColumns IS NOT NULL) OR (t1.TooltipColumns IS NOT NULL AND t2.TooltipColumns IS NULL)) OR (t1.TooltipVersionColumns <> t2.TooltipVersionColumns OR ( t1.TooltipVersionColumns IS NULL AND t2.TooltipVersionColumns IS NOT NULL) OR (t1.TooltipVersionColumns IS NOT NULL AND t2.TooltipVersionColumns IS NULL)) OR (t1.TooltipDisplayName <> t2.TooltipDisplayName OR ( t1.TooltipDisplayName IS NULL AND t2.TooltipDisplayName IS NOT NULL) OR (t1.TooltipDisplayName IS NOT NULL AND t2.TooltipDisplayName IS NULL)) OR (t1.TooltipDisplayNameVersion <> t2.TooltipDisplayNameVersion OR ( t1.TooltipDisplayNameVersion IS NULL AND t2.TooltipDisplayNameVersion IS NOT NULL) OR (t1.TooltipDisplayNameVersion IS NOT NULL AND t2.TooltipDisplayNameVersion IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RO_ID,t1.MST_TBL_LOG_NAME,t1.MST_TBL_PHY_NAME,t1.NAME,t1.DESCRIPTION,t1.MST_VIEW_NAME,t1.DISPLAY_NAME,t1.MASTER_DATA_URL,t1.URL_PARAMETER,t1.SORT_COLUMNS_NAME,t1.DISPLAY_COLUMNS_NAME_LOG,t1.SORT_COLUMNS_NAME_LOG,t1.DISPLAY_COL_LOG_HOVER,t1.VER_DISPLAY_NAME,t1.VER_SORT_COLUMNS_NAME,t1.VER_MASTER_DATA_URL,t1.VER_TBL_PHY_NAME,t1.VER_VIEW_NAME,t1.VER_TBL_LOG_NAME,t1.VER_DISPLAY_COL_LOG_HOVER,t1.IS_NON_MDM,t1.IS_TEMPORAL,t1.TOOLTIP_COLUMN_LOG_NAME,t1.TOOLTIP_COLUMNS,t1.VER_TOOLTIP_COLUMNS,t1.TOOLTIP_DISPLAY_NAME,t1.VER_TOOLTIP_DISPLAY_NAME,''ACTIVATE'',''VALID'' FROM IN_RELATIONAL_OBJECT t1, MST_RELATIONAL_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,''INSERT'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,''DELETE'',''VALID'' FROM MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_CLM_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_CLM_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_RODV_ID,t1.CLM_ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.CHILD_VALUE,t1.WORKFLOW_NAME,t1.WORKFLOW_INSTANCE_ID,t1.START_DATE,t1.END_DATE,t1.APPROVED_BY,t1.null,t1.STATUS,t1.APPROVED_DATE,t1.XREF_UUID,''UPDATE'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1, MST_REL_CLM_OBJ_DATA_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ColumnRodvId <> t2.ColumnRodvId OR ( t1.ColumnRodvId IS NULL AND t2.ColumnRodvId IS NOT NULL) OR (t1.ColumnRodvId IS NOT NULL AND t2.ColumnRodvId IS NULL)) OR (t1.ColumnRomId <> t2.ColumnRomId OR ( t1.ColumnRomId IS NULL AND t2.ColumnRomId IS NOT NULL) OR (t1.ColumnRomId IS NOT NULL AND t2.ColumnRomId IS NULL)) OR (t1.ParentRokdVal1 <> t2.ParentRokdVal1 OR ( t1.ParentRokdVal1 IS NULL AND t2.ParentRokdVal1 IS NOT NULL) OR (t1.ParentRokdVal1 IS NOT NULL AND t2.ParentRokdVal1 IS NULL)) OR (t1.ParentRokdVal2 <> t2.ParentRokdVal2 OR ( t1.ParentRokdVal2 IS NULL AND t2.ParentRokdVal2 IS NOT NULL) OR (t1.ParentRokdVal2 IS NOT NULL AND t2.ParentRokdVal2 IS NULL)) OR (t1.ParentRokdVal3 <> t2.ParentRokdVal3 OR ( t1.ParentRokdVal3 IS NULL AND t2.ParentRokdVal3 IS NOT NULL) OR (t1.ParentRokdVal3 IS NOT NULL AND t2.ParentRokdVal3 IS NULL)) OR (t1.ParentRokdVal4 <> t2.ParentRokdVal4 OR ( t1.ParentRokdVal4 IS NULL AND t2.ParentRokdVal4 IS NOT NULL) OR (t1.ParentRokdVal4 IS NOT NULL AND t2.ParentRokdVal4 IS NULL)) OR (t1.ParentRokdVal5 <> t2.ParentRokdVal5 OR ( t1.ParentRokdVal5 IS NULL AND t2.ParentRokdVal5 IS NOT NULL) OR (t1.ParentRokdVal5 IS NOT NULL AND t2.ParentRokdVal5 IS NULL)) OR (t1.ParentRokdVal6 <> t2.ParentRokdVal6 OR ( t1.ParentRokdVal6 IS NULL AND t2.ParentRokdVal6 IS NOT NULL) OR (t1.ParentRokdVal6 IS NOT NULL AND t2.ParentRokdVal6 IS NULL)) OR (t1.ParentRokdVal7 <> t2.ParentRokdVal7 OR ( t1.ParentRokdVal7 IS NULL AND t2.ParentRokdVal7 IS NOT NULL) OR (t1.ParentRokdVal7 IS NOT NULL AND t2.ParentRokdVal7 IS NULL)) OR (t1.ParentRokdVal8 <> t2.ParentRokdVal8 OR ( t1.ParentRokdVal8 IS NULL AND t2.ParentRokdVal8 IS NOT NULL) OR (t1.ParentRokdVal8 IS NOT NULL AND t2.ParentRokdVal8 IS NULL)) OR (t1.ParentRokdVal9 <> t2.ParentRokdVal9 OR ( t1.ParentRokdVal9 IS NULL AND t2.ParentRokdVal9 IS NOT NULL) OR (t1.ParentRokdVal9 IS NOT NULL AND t2.ParentRokdVal9 IS NULL)) OR (t1.ParentRokdVal10 <> t2.ParentRokdVal10 OR ( t1.ParentRokdVal10 IS NULL AND t2.ParentRokdVal10 IS NOT NULL) OR (t1.ParentRokdVal10 IS NOT NULL AND t2.ParentRokdVal10 IS NULL)) OR (t1.ChildRokdVal1 <> t2.ChildRokdVal1 OR ( t1.ChildRokdVal1 IS NULL AND t2.ChildRokdVal1 IS NOT NULL) OR (t1.ChildRokdVal1 IS NOT NULL AND t2.ChildRokdVal1 IS NULL)) OR (t1.ChildRokdVal2 <> t2.ChildRokdVal2 OR ( t1.ChildRokdVal2 IS NULL AND t2.ChildRokdVal2 IS NOT NULL) OR (t1.ChildRokdVal2 IS NOT NULL AND t2.ChildRokdVal2 IS NULL)) OR (t1.ChildRokdVal3 <> t2.ChildRokdVal3 OR ( t1.ChildRokdVal3 IS NULL AND t2.ChildRokdVal3 IS NOT NULL) OR (t1.ChildRokdVal3 IS NOT NULL AND t2.ChildRokdVal3 IS NULL)) OR (t1.ChildRokdVal4 <> t2.ChildRokdVal4 OR ( t1.ChildRokdVal4 IS NULL AND t2.ChildRokdVal4 IS NOT NULL) OR (t1.ChildRokdVal4 IS NOT NULL AND t2.ChildRokdVal4 IS NULL)) OR (t1.ChildRokdVal5 <> t2.ChildRokdVal5 OR ( t1.ChildRokdVal5 IS NULL AND t2.ChildRokdVal5 IS NOT NULL) OR (t1.ChildRokdVal5 IS NOT NULL AND t2.ChildRokdVal5 IS NULL)) OR (t1.ChildRokdVal6 <> t2.ChildRokdVal6 OR ( t1.ChildRokdVal6 IS NULL AND t2.ChildRokdVal6 IS NOT NULL) OR (t1.ChildRokdVal6 IS NOT NULL AND t2.ChildRokdVal6 IS NULL)) OR (t1.ChildRokdVal7 <> t2.ChildRokdVal7 OR ( t1.ChildRokdVal7 IS NULL AND t2.ChildRokdVal7 IS NOT NULL) OR (t1.ChildRokdVal7 IS NOT NULL AND t2.ChildRokdVal7 IS NULL)) OR (t1.ChildRokdVal8 <> t2.ChildRokdVal8 OR ( t1.ChildRokdVal8 IS NULL AND t2.ChildRokdVal8 IS NOT NULL) OR (t1.ChildRokdVal8 IS NOT NULL AND t2.ChildRokdVal8 IS NULL)) OR (t1.ChildRokdVal9 <> t2.ChildRokdVal9 OR ( t1.ChildRokdVal9 IS NULL AND t2.ChildRokdVal9 IS NOT NULL) OR (t1.ChildRokdVal9 IS NOT NULL AND t2.ChildRokdVal9 IS NULL)) OR (t1.ChildRokdVal10 <> t2.ChildRokdVal10 OR ( t1.ChildRokdVal10 IS NULL AND t2.ChildRokdVal10 IS NOT NULL) OR (t1.ChildRokdVal10 IS NOT NULL AND t2.ChildRokdVal10 IS NULL)) OR (t1.ChildValue <> t2.ChildValue OR ( t1.ChildValue IS NULL AND t2.ChildValue IS NOT NULL) OR (t1.ChildValue IS NOT NULL AND t2.ChildValue IS NULL)) OR (t1.WorkflowName <> t2.WorkflowName OR ( t1.WorkflowName IS NULL AND t2.WorkflowName IS NOT NULL) OR (t1.WorkflowName IS NOT NULL AND t2.WorkflowName IS NULL)) OR (t1.WorkflowInstanceId <> t2.WorkflowInstanceId OR ( t1.WorkflowInstanceId IS NULL AND t2.WorkflowInstanceId IS NOT NULL) OR (t1.WorkflowInstanceId IS NOT NULL AND t2.WorkflowInstanceId IS NULL)) OR (t1.StartDate <> t2.StartDate OR ( t1.StartDate IS NULL AND t2.StartDate IS NOT NULL) OR (t1.StartDate IS NOT NULL AND t2.StartDate IS NULL)) OR (t1.EndDate <> t2.EndDate OR ( t1.EndDate IS NULL AND t2.EndDate IS NOT NULL) OR (t1.EndDate IS NOT NULL AND t2.EndDate IS NULL)) OR (t1.ApprovedBy <> t2.ApprovedBy OR ( t1.ApprovedBy IS NULL AND t2.ApprovedBy IS NOT NULL) OR (t1.ApprovedBy IS NOT NULL AND t2.ApprovedBy IS NULL)) OR (t1.Comments <> t2.Comments OR ( t1.Comments IS NULL AND t2.Comments IS NOT NULL) OR (t1.Comments IS NOT NULL AND t2.Comments IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) OR (t1.ApprovedDate <> t2.ApprovedDate OR ( t1.ApprovedDate IS NULL AND t2.ApprovedDate IS NOT NULL) OR (t1.ApprovedDate IS NOT NULL AND t2.ApprovedDate IS NULL)) OR (t1.Xref_uuid <> t2.Xref_uuid OR ( t1.Xref_uuid IS NULL AND t2.Xref_uuid IS NOT NULL) OR (t1.Xref_uuid IS NOT NULL AND t2.Xref_uuid IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_RODV_ID,t1.CLM_ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.CHILD_VALUE,t1.WORKFLOW_NAME,t1.WORKFLOW_INSTANCE_ID,t1.START_DATE,t1.END_DATE,t1.APPROVED_BY,t1.null,t1.STATUS,t1.APPROVED_DATE,t1.XREF_UUID,''ACTIVATE'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1, MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,''INSERT'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_CLM_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,''DELETE'',''VALID'' FROM MST_REL_CLM_OBJ_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_CLM_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_CLM_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_ROM_ID,t1.CLM_REL_NAME,t1.CLM_REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAPPING_ID,t1.TARGET_TABLE,t1.CROSS_REF_ROM_ID,t1.SOURCE_SERVICE,t1.SOURCE_DB,t1.SOURCE_TABLE,t1.TARGET_COLUMN,t1.TARGET_COLUMN_PHY,t1.ENABLE_PK_UPDT,t1.COLUMNSEQ,t1.SOURCE_COLUMN,t1.SOURCE_COLUMN_PHY,t1.ATTRB_DETAIL_ID,t1.ATTRB_TYPE,t1.EXT_COL_1,t1.EXT_COL_2,t1.PRIORITY_NO,t1.PRIORITY_START_TM,t1.PRIORITY_END_TM,t1.IS_ALCR_ENABLED,''UPDATE'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1, MST_REL_CLM_OBJ_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ColumnRomId <> t2.ColumnRomId OR ( t1.ColumnRomId IS NULL AND t2.ColumnRomId IS NOT NULL) OR (t1.ColumnRomId IS NOT NULL AND t2.ColumnRomId IS NULL)) OR (t1.ColumnRelationName <> t2.ColumnRelationName OR ( t1.ColumnRelationName IS NULL AND t2.ColumnRelationName IS NOT NULL) OR (t1.ColumnRelationName IS NOT NULL AND t2.ColumnRelationName IS NULL)) OR (t1.ColumnRelationType <> t2.ColumnRelationType OR ( t1.ColumnRelationType IS NULL AND t2.ColumnRelationType IS NOT NULL) OR (t1.ColumnRelationType IS NOT NULL AND t2.ColumnRelationType IS NULL)) OR (t1.ParentROId <> t2.ParentROId OR ( t1.ParentROId IS NULL AND t2.ParentROId IS NOT NULL) OR (t1.ParentROId IS NOT NULL AND t2.ParentROId IS NULL)) OR (t1.ChildROId <> t2.ChildROId OR ( t1.ChildROId IS NULL AND t2.ChildROId IS NOT NULL) OR (t1.ChildROId IS NOT NULL AND t2.ChildROId IS NULL)) OR (t1.ParentROKTId <> t2.ParentROKTId OR ( t1.ParentROKTId IS NULL AND t2.ParentROKTId IS NOT NULL) OR (t1.ParentROKTId IS NOT NULL AND t2.ParentROKTId IS NULL)) OR (t1.CHILD_ROKT_ID <> t2.CHILD_ROKT_ID OR ( t1.CHILD_ROKT_ID IS NULL AND t2.CHILD_ROKT_ID IS NOT NULL) OR (t1.CHILD_ROKT_ID IS NOT NULL AND t2.CHILD_ROKT_ID IS NULL)) OR (t1.TargetTableROId <> t2.TargetTableROId OR ( t1.TargetTableROId IS NULL AND t2.TargetTableROId IS NOT NULL) OR (t1.TargetTableROId IS NOT NULL AND t2.TargetTableROId IS NULL)) OR (t1.MappingId <> t2.MappingId OR ( t1.MappingId IS NULL AND t2.MappingId IS NOT NULL) OR (t1.MappingId IS NOT NULL AND t2.MappingId IS NULL)) OR (t1.TargetTable <> t2.TargetTable OR ( t1.TargetTable IS NULL AND t2.TargetTable IS NOT NULL) OR (t1.TargetTable IS NOT NULL AND t2.TargetTable IS NULL)) OR (t1.CrossRefRomId <> t2.CrossRefRomId OR ( t1.CrossRefRomId IS NULL AND t2.CrossRefRomId IS NOT NULL) OR (t1.CrossRefRomId IS NOT NULL AND t2.CrossRefRomId IS NULL)) OR (t1.SourceService <> t2.SourceService OR ( t1.SourceService IS NULL AND t2.SourceService IS NOT NULL) OR (t1.SourceService IS NOT NULL AND t2.SourceService IS NULL)) OR (t1.SourceDB <> t2.SourceDB OR ( t1.SourceDB IS NULL AND t2.SourceDB IS NOT NULL) OR (t1.SourceDB IS NOT NULL AND t2.SourceDB IS NULL)) OR (t1.Source_Table <> t2.Source_Table OR ( t1.Source_Table IS NULL AND t2.Source_Table IS NOT NULL) OR (t1.Source_Table IS NOT NULL AND t2.Source_Table IS NULL)) OR (t1.TargetColumn <> t2.TargetColumn OR ( t1.TargetColumn IS NULL AND t2.TargetColumn IS NOT NULL) OR (t1.TargetColumn IS NOT NULL AND t2.TargetColumn IS NULL)) OR (t1.TargetColumnPhysical <> t2.TargetColumnPhysical OR ( t1.TargetColumnPhysical IS NULL AND t2.TargetColumnPhysical IS NOT NULL) OR (t1.TargetColumnPhysical IS NOT NULL AND t2.TargetColumnPhysical IS NULL)) OR (t1.EnablePkUpdt <> t2.EnablePkUpdt OR ( t1.EnablePkUpdt IS NULL AND t2.EnablePkUpdt IS NOT NULL) OR (t1.EnablePkUpdt IS NOT NULL AND t2.EnablePkUpdt IS NULL)) OR (t1.ColumnSequence <> t2.ColumnSequence OR ( t1.ColumnSequence IS NULL AND t2.ColumnSequence IS NOT NULL) OR (t1.ColumnSequence IS NOT NULL AND t2.ColumnSequence IS NULL)) OR (t1.SourceColumn <> t2.SourceColumn OR ( t1.SourceColumn IS NULL AND t2.SourceColumn IS NOT NULL) OR (t1.SourceColumn IS NOT NULL AND t2.SourceColumn IS NULL)) OR (t1.SourceColumnPhysical <> t2.SourceColumnPhysical OR ( t1.SourceColumnPhysical IS NULL AND t2.SourceColumnPhysical IS NOT NULL) OR (t1.SourceColumnPhysical IS NOT NULL AND t2.SourceColumnPhysical IS NULL)) OR (t1.AttributeDetailId <> t2.AttributeDetailId OR ( t1.AttributeDetailId IS NULL AND t2.AttributeDetailId IS NOT NULL) OR (t1.AttributeDetailId IS NOT NULL AND t2.AttributeDetailId IS NULL)) OR (t1.AttributeType <> t2.AttributeType OR ( t1.AttributeType IS NULL AND t2.AttributeType IS NOT NULL) OR (t1.AttributeType IS NOT NULL AND t2.AttributeType IS NULL)) OR (t1.ExtCol1 <> t2.ExtCol1 OR ( t1.ExtCol1 IS NULL AND t2.ExtCol1 IS NOT NULL) OR (t1.ExtCol1 IS NOT NULL AND t2.ExtCol1 IS NULL)) OR (t1.EctCol2 <> t2.EctCol2 OR ( t1.EctCol2 IS NULL AND t2.EctCol2 IS NOT NULL) OR (t1.EctCol2 IS NOT NULL AND t2.EctCol2 IS NULL)) OR (t1.PriorityNo <> t2.PriorityNo OR ( t1.PriorityNo IS NULL AND t2.PriorityNo IS NOT NULL) OR (t1.PriorityNo IS NOT NULL AND t2.PriorityNo IS NULL)) OR (t1.PriorityStartTime <> t2.PriorityStartTime OR ( t1.PriorityStartTime IS NULL AND t2.PriorityStartTime IS NOT NULL) OR (t1.PriorityStartTime IS NOT NULL AND t2.PriorityStartTime IS NULL)) OR (t1.PriorityEndTime <> t2.PriorityEndTime OR ( t1.PriorityEndTime IS NULL AND t2.PriorityEndTime IS NOT NULL) OR (t1.PriorityEndTime IS NOT NULL AND t2.PriorityEndTime IS NULL)) OR (t1.IsALCREnabled <> t2.IsALCREnabled OR ( t1.IsALCREnabled IS NULL AND t2.IsALCREnabled IS NOT NULL) OR (t1.IsALCREnabled IS NOT NULL AND t2.IsALCREnabled IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_ROM_ID,t1.CLM_REL_NAME,t1.CLM_REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAPPING_ID,t1.TARGET_TABLE,t1.CROSS_REF_ROM_ID,t1.SOURCE_SERVICE,t1.SOURCE_DB,t1.SOURCE_TABLE,t1.TARGET_COLUMN,t1.TARGET_COLUMN_PHY,t1.ENABLE_PK_UPDT,t1.COLUMNSEQ,t1.SOURCE_COLUMN,t1.SOURCE_COLUMN_PHY,t1.ATTRB_DETAIL_ID,t1.ATTRB_TYPE,t1.EXT_COL_1,t1.EXT_COL_2,t1.PRIORITY_NO,t1.PRIORITY_START_TM,t1.PRIORITY_END_TM,t1.IS_ALCR_ENABLED,''ACTIVATE'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1, MST_REL_CLM_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,''INSERT'',''VALID'' FROM IN_REL_OBJ_DATA_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,''DELETE'',''VALID'' FROM MST_REL_OBJ_DATA_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RODV_ID,t1.ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.ROP_VAL1,t1.ROP_VAL2,t1.ROP_VAL3,t1.ROP_VAL4,t1.ROP_VAL5,t1.EFFECTIVE_START_DATE,t1.EFFECTIVE_END_DATE,t1.APPROVED_BY,t1.COMMENTS,t1.STATUS,t1.APPROVED_DATE,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.XREF_UUID,''UPDATE'',''VALID'' FROM IN_REL_OBJ_DATA_VAL t1, MST_REL_OBJ_DATA_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RovId <> t2.RovId OR ( t1.RovId IS NULL AND t2.RovId IS NOT NULL) OR (t1.RovId IS NOT NULL AND t2.RovId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.ParentRokdVal1 <> t2.ParentRokdVal1 OR ( t1.ParentRokdVal1 IS NULL AND t2.ParentRokdVal1 IS NOT NULL) OR (t1.ParentRokdVal1 IS NOT NULL AND t2.ParentRokdVal1 IS NULL)) OR (t1.ParentRokdVal2 <> t2.ParentRokdVal2 OR ( t1.ParentRokdVal2 IS NULL AND t2.ParentRokdVal2 IS NOT NULL) OR (t1.ParentRokdVal2 IS NOT NULL AND t2.ParentRokdVal2 IS NULL)) OR (t1.ParentRokdVal3 <> t2.ParentRokdVal3 OR ( t1.ParentRokdVal3 IS NULL AND t2.ParentRokdVal3 IS NOT NULL) OR (t1.ParentRokdVal3 IS NOT NULL AND t2.ParentRokdVal3 IS NULL)) OR (t1.ParentRokdVal4 <> t2.ParentRokdVal4 OR ( t1.ParentRokdVal4 IS NULL AND t2.ParentRokdVal4 IS NOT NULL) OR (t1.ParentRokdVal4 IS NOT NULL AND t2.ParentRokdVal4 IS NULL)) OR (t1.ParentRokdVal5 <> t2.ParentRokdVal5 OR ( t1.ParentRokdVal5 IS NULL AND t2.ParentRokdVal5 IS NOT NULL) OR (t1.ParentRokdVal5 IS NOT NULL AND t2.ParentRokdVal5 IS NULL)) OR (t1.ChildRokdVal1 <> t2.ChildRokdVal1 OR ( t1.ChildRokdVal1 IS NULL AND t2.ChildRokdVal1 IS NOT NULL) OR (t1.ChildRokdVal1 IS NOT NULL AND t2.ChildRokdVal1 IS NULL)) OR (t1.ChildRokdVal2 <> t2.ChildRokdVal2 OR ( t1.ChildRokdVal2 IS NULL AND t2.ChildRokdVal2 IS NOT NULL) OR (t1.ChildRokdVal2 IS NOT NULL AND t2.ChildRokdVal2 IS NULL)) OR (t1.ChildRokdVal3 <> t2.ChildRokdVal3 OR ( t1.ChildRokdVal3 IS NULL AND t2.ChildRokdVal3 IS NOT NULL) OR (t1.ChildRokdVal3 IS NOT NULL AND t2.ChildRokdVal3 IS NULL)) OR (t1.ChildRokdVal4 <> t2.ChildRokdVal4 OR ( t1.ChildRokdVal4 IS NULL AND t2.ChildRokdVal4 IS NOT NULL) OR (t1.ChildRokdVal4 IS NOT NULL AND t2.ChildRokdVal4 IS NULL)) OR (t1.ChildRokdVal5 <> t2.ChildRokdVal5 OR ( t1.ChildRokdVal5 IS NULL AND t2.ChildRokdVal5 IS NOT NULL) OR (t1.ChildRokdVal5 IS NOT NULL AND t2.ChildRokdVal5 IS NULL)) OR (t1.RopValue1 <> t2.RopValue1 OR ( t1.RopValue1 IS NULL AND t2.RopValue1 IS NOT NULL) OR (t1.RopValue1 IS NOT NULL AND t2.RopValue1 IS NULL)) OR (t1.RopValue2 <> t2.RopValue2 OR ( t1.RopValue2 IS NULL AND t2.RopValue2 IS NOT NULL) OR (t1.RopValue2 IS NOT NULL AND t2.RopValue2 IS NULL)) OR (t1.RopValue3 <> t2.RopValue3 OR ( t1.RopValue3 IS NULL AND t2.RopValue3 IS NOT NULL) OR (t1.RopValue3 IS NOT NULL AND t2.RopValue3 IS NULL)) OR (t1.RopValue4 <> t2.RopValue4 OR ( t1.RopValue4 IS NULL AND t2.RopValue4 IS NOT NULL) OR (t1.RopValue4 IS NOT NULL AND t2.RopValue4 IS NULL)) OR (t1.RopValue5 <> t2.RopValue5 OR ( t1.RopValue5 IS NULL AND t2.RopValue5 IS NOT NULL) OR (t1.RopValue5 IS NOT NULL AND t2.RopValue5 IS NULL)) OR (t1.EffectiveStartDate <> t2.EffectiveStartDate OR ( t1.EffectiveStartDate IS NULL AND t2.EffectiveStartDate IS NOT NULL) OR (t1.EffectiveStartDate IS NOT NULL AND t2.EffectiveStartDate IS NULL)) OR (t1.EffectiveEndDate <> t2.EffectiveEndDate OR ( t1.EffectiveEndDate IS NULL AND t2.EffectiveEndDate IS NOT NULL) OR (t1.EffectiveEndDate IS NOT NULL AND t2.EffectiveEndDate IS NULL)) OR (t1.ApprovedBy <> t2.ApprovedBy OR ( t1.ApprovedBy IS NULL AND t2.ApprovedBy IS NOT NULL) OR (t1.ApprovedBy IS NOT NULL AND t2.ApprovedBy IS NULL)) OR (t1.Comments <> t2.Comments OR ( t1.Comments IS NULL AND t2.Comments IS NOT NULL) OR (t1.Comments IS NOT NULL AND t2.Comments IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) OR (t1.ApprovedDate <> t2.ApprovedDate OR ( t1.ApprovedDate IS NULL AND t2.ApprovedDate IS NOT NULL) OR (t1.ApprovedDate IS NOT NULL AND t2.ApprovedDate IS NULL)) OR (t1.ParentRokdVal6 <> t2.ParentRokdVal6 OR ( t1.ParentRokdVal6 IS NULL AND t2.ParentRokdVal6 IS NOT NULL) OR (t1.ParentRokdVal6 IS NOT NULL AND t2.ParentRokdVal6 IS NULL)) OR (t1.ParentRokdVal7 <> t2.ParentRokdVal7 OR ( t1.ParentRokdVal7 IS NULL AND t2.ParentRokdVal7 IS NOT NULL) OR (t1.ParentRokdVal7 IS NOT NULL AND t2.ParentRokdVal7 IS NULL)) OR (t1.ParentRokdVal8 <> t2.ParentRokdVal8 OR ( t1.ParentRokdVal8 IS NULL AND t2.ParentRokdVal8 IS NOT NULL) OR (t1.ParentRokdVal8 IS NOT NULL AND t2.ParentRokdVal8 IS NULL)) OR (t1.ParentRokdVal9 <> t2.ParentRokdVal9 OR ( t1.ParentRokdVal9 IS NULL AND t2.ParentRokdVal9 IS NOT NULL) OR (t1.ParentRokdVal9 IS NOT NULL AND t2.ParentRokdVal9 IS NULL)) OR (t1.ParentRokdVal10 <> t2.ParentRokdVal10 OR ( t1.ParentRokdVal10 IS NULL AND t2.ParentRokdVal10 IS NOT NULL) OR (t1.ParentRokdVal10 IS NOT NULL AND t2.ParentRokdVal10 IS NULL)) OR (t1.ChildRokdVal6 <> t2.ChildRokdVal6 OR ( t1.ChildRokdVal6 IS NULL AND t2.ChildRokdVal6 IS NOT NULL) OR (t1.ChildRokdVal6 IS NOT NULL AND t2.ChildRokdVal6 IS NULL)) OR (t1.ChildRokdVal7 <> t2.ChildRokdVal7 OR ( t1.ChildRokdVal7 IS NULL AND t2.ChildRokdVal7 IS NOT NULL) OR (t1.ChildRokdVal7 IS NOT NULL AND t2.ChildRokdVal7 IS NULL)) OR (t1.ChildRokdVal8 <> t2.ChildRokdVal8 OR ( t1.ChildRokdVal8 IS NULL AND t2.ChildRokdVal8 IS NOT NULL) OR (t1.ChildRokdVal8 IS NOT NULL AND t2.ChildRokdVal8 IS NULL)) OR (t1.ChildRokdVal9 <> t2.ChildRokdVal9 OR ( t1.ChildRokdVal9 IS NULL AND t2.ChildRokdVal9 IS NOT NULL) OR (t1.ChildRokdVal9 IS NOT NULL AND t2.ChildRokdVal9 IS NULL)) OR (t1.ChildRokdVal10 <> t2.ChildRokdVal10 OR ( t1.ChildRokdVal10 IS NULL AND t2.ChildRokdVal10 IS NOT NULL) OR (t1.ChildRokdVal10 IS NOT NULL AND t2.ChildRokdVal10 IS NULL)) OR (t1.Xref_uuid <> t2.Xref_uuid OR ( t1.Xref_uuid IS NULL AND t2.Xref_uuid IS NOT NULL) OR (t1.Xref_uuid IS NOT NULL AND t2.Xref_uuid IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RODV_ID,t1.ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.ROP_VAL1,t1.ROP_VAL2,t1.ROP_VAL3,t1.ROP_VAL4,t1.ROP_VAL5,t1.EFFECTIVE_START_DATE,t1.EFFECTIVE_END_DATE,t1.APPROVED_BY,t1.COMMENTS,t1.STATUS,t1.APPROVED_DATE,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.XREF_UUID,''ACTIVATE'',''VALID'' FROM IN_REL_OBJ_DATA_VAL t1, MST_REL_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,''INSERT'',''VALID'' FROM IN_RO_FILTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_RO_FILTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,''DELETE'',''VALID'' FROM MST_RO_FILTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_RO_FILTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_RO_FILTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILTER_ID,t1.RO_ID,t1.FILTER_NAME,t1.FILTER_CONDITION_LOG,t1.FILTER_CONDITION,t1.DESCRIPTION,t1.ROM_ID,t1.IS_GLOBAL,t1.MDM_APP_USER_ID_OR_ROLE_ID,t1.IS_ACTIVE,t1.VER_FILTER_CONDITION,''UPDATE'',''VALID'' FROM IN_RO_FILTER t1, MST_RO_FILTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.FilterId <> t2.FilterId OR ( t1.FilterId IS NULL AND t2.FilterId IS NOT NULL) OR (t1.FilterId IS NOT NULL AND t2.FilterId IS NULL)) OR (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.FilterName <> t2.FilterName OR ( t1.FilterName IS NULL AND t2.FilterName IS NOT NULL) OR (t1.FilterName IS NOT NULL AND t2.FilterName IS NULL)) OR (t1.LogicalFilterCondition <> t2.LogicalFilterCondition OR ( t1.LogicalFilterCondition IS NULL AND t2.LogicalFilterCondition IS NOT NULL) OR (t1.LogicalFilterCondition IS NOT NULL AND t2.LogicalFilterCondition IS NULL)) OR (t1.FilterCondition <> t2.FilterCondition OR ( t1.FilterCondition IS NULL AND t2.FilterCondition IS NOT NULL) OR (t1.FilterCondition IS NOT NULL AND t2.FilterCondition IS NULL)) OR (t1.FilterDescription <> t2.FilterDescription OR ( t1.FilterDescription IS NULL AND t2.FilterDescription IS NOT NULL) OR (t1.FilterDescription IS NOT NULL AND t2.FilterDescription IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.IsGlobal <> t2.IsGlobal OR ( t1.IsGlobal IS NULL AND t2.IsGlobal IS NOT NULL) OR (t1.IsGlobal IS NOT NULL AND t2.IsGlobal IS NULL)) OR (t1.MdmUserRoleId <> t2.MdmUserRoleId OR ( t1.MdmUserRoleId IS NULL AND t2.MdmUserRoleId IS NOT NULL) OR (t1.MdmUserRoleId IS NOT NULL AND t2.MdmUserRoleId IS NULL)) OR (t1.IsActive <> t2.IsActive OR ( t1.IsActive IS NULL AND t2.IsActive IS NOT NULL) OR (t1.IsActive IS NOT NULL AND t2.IsActive IS NULL)) OR (t1.FilterConditionVersion <> t2.FilterConditionVersion OR ( t1.FilterConditionVersion IS NULL AND t2.FilterConditionVersion IS NOT NULL) OR (t1.FilterConditionVersion IS NOT NULL AND t2.FilterConditionVersion IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILTER_ID,t1.RO_ID,t1.FILTER_NAME,t1.FILTER_CONDITION_LOG,t1.FILTER_CONDITION,t1.DESCRIPTION,t1.ROM_ID,t1.IS_GLOBAL,t1.MDM_APP_USER_ID_OR_ROLE_ID,t1.IS_ACTIVE,t1.VER_FILTER_CONDITION,''ACTIVATE'',''VALID'' FROM IN_RO_FILTER t1, MST_RO_FILTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,''INSERT'',''VALID'' FROM IN_REL_OBJ_KEY_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_OBJ_KEY_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,''DELETE'',''VALID'' FROM MST_REL_OBJ_KEY_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_OBJ_KEY_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_OBJ_KEY_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKT_ID,t1.RO_ID,t1.KEY_TYPE,t1.NAME,t1.DESCRIPTION,''UPDATE'',''VALID'' FROM IN_REL_OBJ_KEY_TYPE t1, MST_REL_OBJ_KEY_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RoktId <> t2.RoktId OR ( t1.RoktId IS NULL AND t2.RoktId IS NOT NULL) OR (t1.RoktId IS NOT NULL AND t2.RoktId IS NULL)) OR (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.KeyType <> t2.KeyType OR ( t1.KeyType IS NULL AND t2.KeyType IS NOT NULL) OR (t1.KeyType IS NOT NULL AND t2.KeyType IS NULL)) OR (t1.KeyName <> t2.KeyName OR ( t1.KeyName IS NULL AND t2.KeyName IS NOT NULL) OR (t1.KeyName IS NOT NULL AND t2.KeyName IS NULL)) OR (t1.KeyDescription <> t2.KeyDescription OR ( t1.KeyDescription IS NULL AND t2.KeyDescription IS NOT NULL) OR (t1.KeyDescription IS NOT NULL AND t2.KeyDescription IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKT_ID,t1.RO_ID,t1.KEY_TYPE,t1.NAME,t1.DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_REL_OBJ_KEY_TYPE t1, MST_REL_OBJ_KEY_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,''INSERT'',''VALID'' FROM IN_REL_OBJ_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,''DELETE'',''VALID'' FROM MST_REL_OBJ_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROM_ID,t1.REL_NAME,t1.REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAP_PARENT_COL1,t1.MAP_PARENT_COL2,t1.MAP_PARENT_COL3,t1.MAP_PARENT_COL4,t1.MAP_PARENT_COL5,t1.MAP_CHILD_COL1,t1.MAP_CHILD_COL2,t1.MAP_CHILD_COL3,t1.MAP_CHILD_COL4,t1.MAP_CHILD_COL5,t1.RM_VIEWER_QUERY,t1.DESCRIPTION,t1.MAP_PARENT_LOG_COL1,t1.MAP_PARENT_LOG_COL2,t1.MAP_PARENT_LOG_COL3,t1.MAP_PARENT_LOG_COL4,t1.MAP_PARENT_LOG_COL5,t1.MAP_CHILD_LOG_COL1,t1.MAP_CHILD_LOG_COL2,t1.MAP_CHILD_LOG_COL3,t1.MAP_CHILD_LOG_COL4,t1.MAP_CHILD_LOG_COL5,t1.ROM_ORIGIN,t1.MAP_PARENT_COL6,t1.MAP_PARENT_COL7,t1.MAP_PARENT_COL8,t1.MAP_PARENT_COL9,t1.MAP_PARENT_COL10,t1.MAP_CHILD_COL6,t1.MAP_CHILD_COL7,t1.MAP_CHILD_COL8,t1.MAP_CHILD_COL9,t1.MAP_CHILD_COL10,t1.MAP_PARENT_LOG_COL6,t1.MAP_PARENT_LOG_COL7,t1.MAP_PARENT_LOG_COL8,t1.MAP_PARENT_LOG_COL9,t1.MAP_PARENT_LOG_COL10,t1.MAP_CHILD_LOG_COL6,t1.MAP_CHILD_LOG_COL7,t1.MAP_CHILD_LOG_COL8,t1.MAP_CHILD_LOG_COL9,t1.MAP_CHILD_LOG_COL10,''UPDATE'',''VALID'' FROM IN_REL_OBJ_MAP t1, MST_REL_OBJ_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.RelationName <> t2.RelationName OR ( t1.RelationName IS NULL AND t2.RelationName IS NOT NULL) OR (t1.RelationName IS NOT NULL AND t2.RelationName IS NULL)) OR (t1.RelationType <> t2.RelationType OR ( t1.RelationType IS NULL AND t2.RelationType IS NOT NULL) OR (t1.RelationType IS NOT NULL AND t2.RelationType IS NULL)) OR (t1.ParentROId <> t2.ParentROId OR ( t1.ParentROId IS NULL AND t2.ParentROId IS NOT NULL) OR (t1.ParentROId IS NOT NULL AND t2.ParentROId IS NULL)) OR (t1.ChildROId <> t2.ChildROId OR ( t1.ChildROId IS NULL AND t2.ChildROId IS NOT NULL) OR (t1.ChildROId IS NOT NULL AND t2.ChildROId IS NULL)) OR (t1.ParentROKTId <> t2.ParentROKTId OR ( t1.ParentROKTId IS NULL AND t2.ParentROKTId IS NOT NULL) OR (t1.ParentROKTId IS NOT NULL AND t2.ParentROKTId IS NULL)) OR (t1.ChildROKTId <> t2.ChildROKTId OR ( t1.ChildROKTId IS NULL AND t2.ChildROKTId IS NOT NULL) OR (t1.ChildROKTId IS NOT NULL AND t2.ChildROKTId IS NULL)) OR (t1.TargetTableRelObjId <> t2.TargetTableRelObjId OR ( t1.TargetTableRelObjId IS NULL AND t2.TargetTableRelObjId IS NOT NULL) OR (t1.TargetTableRelObjId IS NOT NULL AND t2.TargetTableRelObjId IS NULL)) OR (t1.MapParentColumn1 <> t2.MapParentColumn1 OR ( t1.MapParentColumn1 IS NULL AND t2.MapParentColumn1 IS NOT NULL) OR (t1.MapParentColumn1 IS NOT NULL AND t2.MapParentColumn1 IS NULL)) OR (t1.MapParentColumn2 <> t2.MapParentColumn2 OR ( t1.MapParentColumn2 IS NULL AND t2.MapParentColumn2 IS NOT NULL) OR (t1.MapParentColumn2 IS NOT NULL AND t2.MapParentColumn2 IS NULL)) OR (t1.MapParentColumn3 <> t2.MapParentColumn3 OR ( t1.MapParentColumn3 IS NULL AND t2.MapParentColumn3 IS NOT NULL) OR (t1.MapParentColumn3 IS NOT NULL AND t2.MapParentColumn3 IS NULL)) OR (t1.MapParentColumn4 <> t2.MapParentColumn4 OR ( t1.MapParentColumn4 IS NULL AND t2.MapParentColumn4 IS NOT NULL) OR (t1.MapParentColumn4 IS NOT NULL AND t2.MapParentColumn4 IS NULL)) OR (t1.MapParentColumn5 <> t2.MapParentColumn5 OR ( t1.MapParentColumn5 IS NULL AND t2.MapParentColumn5 IS NOT NULL) OR (t1.MapParentColumn5 IS NOT NULL AND t2.MapParentColumn5 IS NULL)) OR (t1.MapChildColumn1 <> t2.MapChildColumn1 OR ( t1.MapChildColumn1 IS NULL AND t2.MapChildColumn1 IS NOT NULL) OR (t1.MapChildColumn1 IS NOT NULL AND t2.MapChildColumn1 IS NULL)) OR (t1.MapChildColumn2 <> t2.MapChildColumn2 OR ( t1.MapChildColumn2 IS NULL AND t2.MapChildColumn2 IS NOT NULL) OR (t1.MapChildColumn2 IS NOT NULL AND t2.MapChildColumn2 IS NULL)) OR (t1.MapChildColumn3 <> t2.MapChildColumn3 OR ( t1.MapChildColumn3 IS NULL AND t2.MapChildColumn3 IS NOT NULL) OR (t1.MapChildColumn3 IS NOT NULL AND t2.MapChildColumn3 IS NULL)) OR (t1.MapChildColumn4 <> t2.MapChildColumn4 OR ( t1.MapChildColumn4 IS NULL AND t2.MapChildColumn4 IS NOT NULL) OR (t1.MapChildColumn4 IS NOT NULL AND t2.MapChildColumn4 IS NULL)) OR (t1.MapChildColumn5 <> t2.MapChildColumn5 OR ( t1.MapChildColumn5 IS NULL AND t2.MapChildColumn5 IS NOT NULL) OR (t1.MapChildColumn5 IS NOT NULL AND t2.MapChildColumn5 IS NULL)) OR (t1.ViewerQuery <> t2.ViewerQuery OR ( t1.ViewerQuery IS NULL AND t2.ViewerQuery IS NOT NULL) OR (t1.ViewerQuery IS NOT NULL AND t2.ViewerQuery IS NULL)) OR (t1.RelationDescription <> t2.RelationDescription OR ( t1.RelationDescription IS NULL AND t2.RelationDescription IS NOT NULL) OR (t1.RelationDescription IS NOT NULL AND t2.RelationDescription IS NULL)) OR (t1.MapParentLogColumn1 <> t2.MapParentLogColumn1 OR ( t1.MapParentLogColumn1 IS NULL AND t2.MapParentLogColumn1 IS NOT NULL) OR (t1.MapParentLogColumn1 IS NOT NULL AND t2.MapParentLogColumn1 IS NULL)) OR (t1.MapParentLogColumn2 <> t2.MapParentLogColumn2 OR ( t1.MapParentLogColumn2 IS NULL AND t2.MapParentLogColumn2 IS NOT NULL) OR (t1.MapParentLogColumn2 IS NOT NULL AND t2.MapParentLogColumn2 IS NULL)) OR (t1.MapParentLogColumn3 <> t2.MapParentLogColumn3 OR ( t1.MapParentLogColumn3 IS NULL AND t2.MapParentLogColumn3 IS NOT NULL) OR (t1.MapParentLogColumn3 IS NOT NULL AND t2.MapParentLogColumn3 IS NULL)) OR (t1.MapParentLogColumn4 <> t2.MapParentLogColumn4 OR ( t1.MapParentLogColumn4 IS NULL AND t2.MapParentLogColumn4 IS NOT NULL) OR (t1.MapParentLogColumn4 IS NOT NULL AND t2.MapParentLogColumn4 IS NULL)) OR (t1.MapParentLogColumn5 <> t2.MapParentLogColumn5 OR ( t1.MapParentLogColumn5 IS NULL AND t2.MapParentLogColumn5 IS NOT NULL) OR (t1.MapParentLogColumn5 IS NOT NULL AND t2.MapParentLogColumn5 IS NULL)) OR (t1.MapChildLogColumn1 <> t2.MapChildLogColumn1 OR ( t1.MapChildLogColumn1 IS NULL AND t2.MapChildLogColumn1 IS NOT NULL) OR (t1.MapChildLogColumn1 IS NOT NULL AND t2.MapChildLogColumn1 IS NULL)) OR (t1.MapChildLogColumn2 <> t2.MapChildLogColumn2 OR ( t1.MapChildLogColumn2 IS NULL AND t2.MapChildLogColumn2 IS NOT NULL) OR (t1.MapChildLogColumn2 IS NOT NULL AND t2.MapChildLogColumn2 IS NULL)) OR (t1.MapChildLogColumn3 <> t2.MapChildLogColumn3 OR ( t1.MapChildLogColumn3 IS NULL AND t2.MapChildLogColumn3 IS NOT NULL) OR (t1.MapChildLogColumn3 IS NOT NULL AND t2.MapChildLogColumn3 IS NULL)) OR (t1.MapChildLogColumn4 <> t2.MapChildLogColumn4 OR ( t1.MapChildLogColumn4 IS NULL AND t2.MapChildLogColumn4 IS NOT NULL) OR (t1.MapChildLogColumn4 IS NOT NULL AND t2.MapChildLogColumn4 IS NULL)) OR (t1.MapChildLogColumn5 <> t2.MapChildLogColumn5 OR ( t1.MapChildLogColumn5 IS NULL AND t2.MapChildLogColumn5 IS NOT NULL) OR (t1.MapChildLogColumn5 IS NOT NULL AND t2.MapChildLogColumn5 IS NULL)) OR (t1.RomOrigin <> t2.RomOrigin OR ( t1.RomOrigin IS NULL AND t2.RomOrigin IS NOT NULL) OR (t1.RomOrigin IS NOT NULL AND t2.RomOrigin IS NULL)) OR (t1.MapParentColumn6 <> t2.MapParentColumn6 OR ( t1.MapParentColumn6 IS NULL AND t2.MapParentColumn6 IS NOT NULL) OR (t1.MapParentColumn6 IS NOT NULL AND t2.MapParentColumn6 IS NULL)) OR (t1.MapParentColumn7 <> t2.MapParentColumn7 OR ( t1.MapParentColumn7 IS NULL AND t2.MapParentColumn7 IS NOT NULL) OR (t1.MapParentColumn7 IS NOT NULL AND t2.MapParentColumn7 IS NULL)) OR (t1.MapParentColumn8 <> t2.MapParentColumn8 OR ( t1.MapParentColumn8 IS NULL AND t2.MapParentColumn8 IS NOT NULL) OR (t1.MapParentColumn8 IS NOT NULL AND t2.MapParentColumn8 IS NULL)) OR (t1.MapParentColumn9 <> t2.MapParentColumn9 OR ( t1.MapParentColumn9 IS NULL AND t2.MapParentColumn9 IS NOT NULL) OR (t1.MapParentColumn9 IS NOT NULL AND t2.MapParentColumn9 IS NULL)) OR (t1.MapParentColumn10 <> t2.MapParentColumn10 OR ( t1.MapParentColumn10 IS NULL AND t2.MapParentColumn10 IS NOT NULL) OR (t1.MapParentColumn10 IS NOT NULL AND t2.MapParentColumn10 IS NULL)) OR (t1.MapChildColumn6 <> t2.MapChildColumn6 OR ( t1.MapChildColumn6 IS NULL AND t2.MapChildColumn6 IS NOT NULL) OR (t1.MapChildColumn6 IS NOT NULL AND t2.MapChildColumn6 IS NULL)) OR (t1.MapChildColumn7 <> t2.MapChildColumn7 OR ( t1.MapChildColumn7 IS NULL AND t2.MapChildColumn7 IS NOT NULL) OR (t1.MapChildColumn7 IS NOT NULL AND t2.MapChildColumn7 IS NULL)) OR (t1.MapChildColumn8 <> t2.MapChildColumn8 OR ( t1.MapChildColumn8 IS NULL AND t2.MapChildColumn8 IS NOT NULL) OR (t1.MapChildColumn8 IS NOT NULL AND t2.MapChildColumn8 IS NULL)) OR (t1.MapChildColumn9 <> t2.MapChildColumn9 OR ( t1.MapChildColumn9 IS NULL AND t2.MapChildColumn9 IS NOT NULL) OR (t1.MapChildColumn9 IS NOT NULL AND t2.MapChildColumn9 IS NULL)) OR (t1.MapChildColumn10 <> t2.MapChildColumn10 OR ( t1.MapChildColumn10 IS NULL AND t2.MapChildColumn10 IS NOT NULL) OR (t1.MapChildColumn10 IS NOT NULL AND t2.MapChildColumn10 IS NULL)) OR (t1.MapParentLogColumn6 <> t2.MapParentLogColumn6 OR ( t1.MapParentLogColumn6 IS NULL AND t2.MapParentLogColumn6 IS NOT NULL) OR (t1.MapParentLogColumn6 IS NOT NULL AND t2.MapParentLogColumn6 IS NULL)) OR (t1.MapParentLogColumn7 <> t2.MapParentLogColumn7 OR ( t1.MapParentLogColumn7 IS NULL AND t2.MapParentLogColumn7 IS NOT NULL) OR (t1.MapParentLogColumn7 IS NOT NULL AND t2.MapParentLogColumn7 IS NULL)) OR (t1.MapParentLogColumn8 <> t2.MapParentLogColumn8 OR ( t1.MapParentLogColumn8 IS NULL AND t2.MapParentLogColumn8 IS NOT NULL) OR (t1.MapParentLogColumn8 IS NOT NULL AND t2.MapParentLogColumn8 IS NULL)) OR (t1.MapParentLogColumn9 <> t2.MapParentLogColumn9 OR ( t1.MapParentLogColumn9 IS NULL AND t2.MapParentLogColumn9 IS NOT NULL) OR (t1.MapParentLogColumn9 IS NOT NULL AND t2.MapParentLogColumn9 IS NULL)) OR (t1.MapParentLogColumn10 <> t2.MapParentLogColumn10 OR ( t1.MapParentLogColumn10 IS NULL AND t2.MapParentLogColumn10 IS NOT NULL) OR (t1.MapParentLogColumn10 IS NOT NULL AND t2.MapParentLogColumn10 IS NULL)) OR (t1.MapChildLogColumn6 <> t2.MapChildLogColumn6 OR ( t1.MapChildLogColumn6 IS NULL AND t2.MapChildLogColumn6 IS NOT NULL) OR (t1.MapChildLogColumn6 IS NOT NULL AND t2.MapChildLogColumn6 IS NULL)) OR (t1.MapChildLogColumn7 <> t2.MapChildLogColumn7 OR ( t1.MapChildLogColumn7 IS NULL AND t2.MapChildLogColumn7 IS NOT NULL) OR (t1.MapChildLogColumn7 IS NOT NULL AND t2.MapChildLogColumn7 IS NULL)) OR (t1.MapChildLogColumn8 <> t2.MapChildLogColumn8 OR ( t1.MapChildLogColumn8 IS NULL AND t2.MapChildLogColumn8 IS NOT NULL) OR (t1.MapChildLogColumn8 IS NOT NULL AND t2.MapChildLogColumn8 IS NULL)) OR (t1.MapChildLogColumn9 <> t2.MapChildLogColumn9 OR ( t1.MapChildLogColumn9 IS NULL AND t2.MapChildLogColumn9 IS NOT NULL) OR (t1.MapChildLogColumn9 IS NOT NULL AND t2.MapChildLogColumn9 IS NULL)) OR (t1.MapChildLogColumn10 <> t2.MapChildLogColumn10 OR ( t1.MapChildLogColumn10 IS NULL AND t2.MapChildLogColumn10 IS NOT NULL) OR (t1.MapChildLogColumn10 IS NOT NULL AND t2.MapChildLogColumn10 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROM_ID,t1.REL_NAME,t1.REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAP_PARENT_COL1,t1.MAP_PARENT_COL2,t1.MAP_PARENT_COL3,t1.MAP_PARENT_COL4,t1.MAP_PARENT_COL5,t1.MAP_CHILD_COL1,t1.MAP_CHILD_COL2,t1.MAP_CHILD_COL3,t1.MAP_CHILD_COL4,t1.MAP_CHILD_COL5,t1.RM_VIEWER_QUERY,t1.DESCRIPTION,t1.MAP_PARENT_LOG_COL1,t1.MAP_PARENT_LOG_COL2,t1.MAP_PARENT_LOG_COL3,t1.MAP_PARENT_LOG_COL4,t1.MAP_PARENT_LOG_COL5,t1.MAP_CHILD_LOG_COL1,t1.MAP_CHILD_LOG_COL2,t1.MAP_CHILD_LOG_COL3,t1.MAP_CHILD_LOG_COL4,t1.MAP_CHILD_LOG_COL5,t1.ROM_ORIGIN,t1.MAP_PARENT_COL6,t1.MAP_PARENT_COL7,t1.MAP_PARENT_COL8,t1.MAP_PARENT_COL9,t1.MAP_PARENT_COL10,t1.MAP_CHILD_COL6,t1.MAP_CHILD_COL7,t1.MAP_CHILD_COL8,t1.MAP_CHILD_COL9,t1.MAP_CHILD_COL10,t1.MAP_PARENT_LOG_COL6,t1.MAP_PARENT_LOG_COL7,t1.MAP_PARENT_LOG_COL8,t1.MAP_PARENT_LOG_COL9,t1.MAP_PARENT_LOG_COL10,t1.MAP_CHILD_LOG_COL6,t1.MAP_CHILD_LOG_COL7,t1.MAP_CHILD_LOG_COL8,t1.MAP_CHILD_LOG_COL9,t1.MAP_CHILD_LOG_COL10,''ACTIVATE'',''VALID'' FROM IN_REL_OBJ_MAP t1, MST_REL_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SALES_CONTR', 'INSERT INTO NC_SALES_CONTR ( SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,''INSERT'',''VALID'' FROM IN_SALES_CONTR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM SALES_CONTR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RETLR_NBR = t2.RETLR_NBR AND t1.STORE_NBR = t2.STORE_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SALES_CONTR', 'INSERT INTO NC_SALES_CONTR ( SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,''DELETE'',''VALID'' FROM SALES_CONTR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SALES_CONTR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RETLR_NBR = t2.RETLR_NBR AND t1.STORE_NBR = t2.STORE_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_SALES_CONTR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RETLR_NBR = t2.RETLR_NBR AND t1.STORE_NBR = t2.STORE_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SALES_CONTR', 'INSERT INTO NC_SALES_CONTR ( SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CONTR_NBR,t1.MKTNG_PGM_NBR,t1.RETLR_NBR,t1.STORE_NBR,t1.LOG_SOURCE_ID,t1.LOG_LOAD_ID,t1.LOG_UPDATE_USER,''UPDATE'',''VALID'' FROM IN_SALES_CONTR t1, SALES_CONTR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RETLR_NBR = t2.RETLR_NBR AND t1.STORE_NBR = t2.STORE_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CONTR_NBR <> t2.CONTR_NBR OR ( t1.CONTR_NBR IS NULL AND t2.CONTR_NBR IS NOT NULL) OR (t1.CONTR_NBR IS NOT NULL AND t2.CONTR_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.RETLR_NBR <> t2.RETLR_NBR OR ( t1.RETLR_NBR IS NULL AND t2.RETLR_NBR IS NOT NULL) OR (t1.RETLR_NBR IS NOT NULL AND t2.RETLR_NBR IS NULL)) OR (t1.STORE_NBR <> t2.STORE_NBR OR ( t1.STORE_NBR IS NULL AND t2.STORE_NBR IS NOT NULL) OR (t1.STORE_NBR IS NOT NULL AND t2.STORE_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SALES_CONTR', 'INSERT INTO NC_SALES_CONTR ( SCENARIO_ID,CONTR_NBR,MKTNG_PGM_NBR,RETLR_NBR,STORE_NBR,LOG_SOURCE_ID,LOG_LOAD_ID,LOG_UPDATE_USER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CONTR_NBR,t1.MKTNG_PGM_NBR,t1.RETLR_NBR,t1.STORE_NBR,t1.LOG_SOURCE_ID,t1.LOG_LOAD_ID,t1.LOG_UPDATE_USER,''ACTIVATE'',''VALID'' FROM IN_SALES_CONTR t1, SALES_CONTR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.RETLR_NBR = t2.RETLR_NBR AND t1.STORE_NBR = t2.STORE_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE', 'INSERT INTO NC_STORE ( SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,''INSERT'',''VALID'' FROM IN_STORE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM STORE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_NBR = t2.STORE_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE', 'INSERT INTO NC_STORE ( SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,''DELETE'',''VALID'' FROM STORE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STORE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_NBR = t2.STORE_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STORE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_NBR = t2.STORE_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE', 'INSERT INTO NC_STORE ( SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.null,t1.RETLR_NBR,t1.STORE_NAME,t1.STORE_STATUS_CD,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.STORE_TYPE_CODE,t1.CITY_CODE,t1.TERR_CODE,t1.CNTRY_CODE,t1.POSTL_AREA_CODE,t1.LAT_MEAS,t1.LONG_MEAS,t1.DATA_SRCE_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.STORE_NAME_NTV,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_NAME,t1.GL_MATCH_FLG,t1.DR_CLEANSE_LVL,t1.ALT_STORE_ID,t1.STORE_PHN_NBR,t1.VALID_CNTCT_POINT_IND,t1.PR_GEOCODE_FAIL,t1.TQ_GOUT_MATCH_LEVEL,t1.PR_REV_GROUP,t1.GL_ACCURACY,''UPDATE'',''VALID'' FROM IN_STORE t1, STORE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_NBR = t2.STORE_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STORE_NBR <> t2.STORE_NBR OR ( t1.STORE_NBR IS NULL AND t2.STORE_NBR IS NOT NULL) OR (t1.STORE_NBR IS NOT NULL AND t2.STORE_NBR IS NULL)) OR (t1.RETLR_NBR <> t2.RETLR_NBR OR ( t1.RETLR_NBR IS NULL AND t2.RETLR_NBR IS NOT NULL) OR (t1.RETLR_NBR IS NOT NULL AND t2.RETLR_NBR IS NULL)) OR (t1.STORE_NAME <> t2.STORE_NAME OR ( t1.STORE_NAME IS NULL AND t2.STORE_NAME IS NOT NULL) OR (t1.STORE_NAME IS NOT NULL AND t2.STORE_NAME IS NULL)) OR (t1.STORE_STATUS_CD <> t2.STORE_STATUS_CD OR ( t1.STORE_STATUS_CD IS NULL AND t2.STORE_STATUS_CD IS NOT NULL) OR (t1.STORE_STATUS_CD IS NOT NULL AND t2.STORE_STATUS_CD IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.STORE_TYPE_CODE <> t2.STORE_TYPE_CODE OR ( t1.STORE_TYPE_CODE IS NULL AND t2.STORE_TYPE_CODE IS NOT NULL) OR (t1.STORE_TYPE_CODE IS NOT NULL AND t2.STORE_TYPE_CODE IS NULL)) OR (t1.CITY_CODE <> t2.CITY_CODE OR ( t1.CITY_CODE IS NULL AND t2.CITY_CODE IS NOT NULL) OR (t1.CITY_CODE IS NOT NULL AND t2.CITY_CODE IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LONG_MEAS <> t2.LONG_MEAS OR ( t1.LONG_MEAS IS NULL AND t2.LONG_MEAS IS NOT NULL) OR (t1.LONG_MEAS IS NOT NULL AND t2.LONG_MEAS IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.STORE_NAME_NTV <> t2.STORE_NAME_NTV OR ( t1.STORE_NAME_NTV IS NULL AND t2.STORE_NAME_NTV IS NOT NULL) OR (t1.STORE_NAME_NTV IS NOT NULL AND t2.STORE_NAME_NTV IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.GL_MATCH_FLG <> t2.GL_MATCH_FLG OR ( t1.GL_MATCH_FLG IS NULL AND t2.GL_MATCH_FLG IS NOT NULL) OR (t1.GL_MATCH_FLG IS NOT NULL AND t2.GL_MATCH_FLG IS NULL)) OR (t1.DR_CLEANSE_LVL <> t2.DR_CLEANSE_LVL OR ( t1.DR_CLEANSE_LVL IS NULL AND t2.DR_CLEANSE_LVL IS NOT NULL) OR (t1.DR_CLEANSE_LVL IS NOT NULL AND t2.DR_CLEANSE_LVL IS NULL)) OR (t1.ALT_STORE_ID <> t2.ALT_STORE_ID OR ( t1.ALT_STORE_ID IS NULL AND t2.ALT_STORE_ID IS NOT NULL) OR (t1.ALT_STORE_ID IS NOT NULL AND t2.ALT_STORE_ID IS NULL)) OR (t1.STORE_PHN_NBR <> t2.STORE_PHN_NBR OR ( t1.STORE_PHN_NBR IS NULL AND t2.STORE_PHN_NBR IS NOT NULL) OR (t1.STORE_PHN_NBR IS NOT NULL AND t2.STORE_PHN_NBR IS NULL)) OR (t1.VALID_CNTCT_POINT_IND <> t2.VALID_CNTCT_POINT_IND OR ( t1.VALID_CNTCT_POINT_IND IS NULL AND t2.VALID_CNTCT_POINT_IND IS NOT NULL) OR (t1.VALID_CNTCT_POINT_IND IS NOT NULL AND t2.VALID_CNTCT_POINT_IND IS NULL)) OR (t1.PR_GEOCODE_FAIL <> t2.PR_GEOCODE_FAIL OR ( t1.PR_GEOCODE_FAIL IS NULL AND t2.PR_GEOCODE_FAIL IS NOT NULL) OR (t1.PR_GEOCODE_FAIL IS NOT NULL AND t2.PR_GEOCODE_FAIL IS NULL)) OR (t1.TQ_GOUT_MATCH_LEVEL <> t2.TQ_GOUT_MATCH_LEVEL OR ( t1.TQ_GOUT_MATCH_LEVEL IS NULL AND t2.TQ_GOUT_MATCH_LEVEL IS NOT NULL) OR (t1.TQ_GOUT_MATCH_LEVEL IS NOT NULL AND t2.TQ_GOUT_MATCH_LEVEL IS NULL)) OR (t1.PR_REV_GROUP <> t2.PR_REV_GROUP OR ( t1.PR_REV_GROUP IS NULL AND t2.PR_REV_GROUP IS NOT NULL) OR (t1.PR_REV_GROUP IS NOT NULL AND t2.PR_REV_GROUP IS NULL)) OR (t1.GL_ACCURACY <> t2.GL_ACCURACY OR ( t1.GL_ACCURACY IS NULL AND t2.GL_ACCURACY IS NOT NULL) OR (t1.GL_ACCURACY IS NOT NULL AND t2.GL_ACCURACY IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE', 'INSERT INTO NC_STORE ( SCENARIO_ID,null,RETLR_NBR,STORE_NAME,STORE_STATUS_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,STORE_TYPE_CODE,CITY_CODE,TERR_CODE,CNTRY_CODE,POSTL_AREA_CODE,LAT_MEAS,LONG_MEAS,DATA_SRCE_NBR,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STORE_NAME_NTV,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_NAME,GL_MATCH_FLG,DR_CLEANSE_LVL,ALT_STORE_ID,STORE_PHN_NBR,VALID_CNTCT_POINT_IND,PR_GEOCODE_FAIL,TQ_GOUT_MATCH_LEVEL,PR_REV_GROUP,GL_ACCURACY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.null,t1.RETLR_NBR,t1.STORE_NAME,t1.STORE_STATUS_CD,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.STORE_TYPE_CODE,t1.CITY_CODE,t1.TERR_CODE,t1.CNTRY_CODE,t1.POSTL_AREA_CODE,t1.LAT_MEAS,t1.LONG_MEAS,t1.DATA_SRCE_NBR,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.STORE_NAME_NTV,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_NAME,t1.GL_MATCH_FLG,t1.DR_CLEANSE_LVL,t1.ALT_STORE_ID,t1.STORE_PHN_NBR,t1.VALID_CNTCT_POINT_IND,t1.PR_GEOCODE_FAIL,t1.TQ_GOUT_MATCH_LEVEL,t1.PR_REV_GROUP,t1.GL_ACCURACY,''ACTIVATE'',''VALID'' FROM IN_STORE t1, STORE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_NBR = t2.STORE_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE_TYPE', 'INSERT INTO NC_STORE_TYPE ( SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_STORE_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM STORE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_TYPE_CODE = t2.STORE_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE_TYPE', 'INSERT INTO NC_STORE_TYPE ( SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM STORE_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STORE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_TYPE_CODE = t2.STORE_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STORE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_TYPE_CODE = t2.STORE_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE_TYPE', 'INSERT INTO NC_STORE_TYPE ( SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STORE_TYPE_CODE,t1.STORE_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_STORE_TYPE t1, STORE_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_TYPE_CODE = t2.STORE_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STORE_TYPE_CODE <> t2.STORE_TYPE_CODE OR ( t1.STORE_TYPE_CODE IS NULL AND t2.STORE_TYPE_CODE IS NOT NULL) OR (t1.STORE_TYPE_CODE IS NOT NULL AND t2.STORE_TYPE_CODE IS NULL)) OR (t1.STORE_TYPE_NAME <> t2.STORE_TYPE_NAME OR ( t1.STORE_TYPE_NAME IS NULL AND t2.STORE_TYPE_NAME IS NOT NULL) OR (t1.STORE_TYPE_NAME IS NOT NULL AND t2.STORE_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STORE_TYPE', 'INSERT INTO NC_STORE_TYPE ( SCENARIO_ID,STORE_TYPE_CODE,STORE_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STORE_TYPE_CODE,t1.STORE_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_STORE_TYPE t1, STORE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STORE_TYPE_CODE = t2.STORE_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT', 'INSERT INTO NC_SUBSCRPTN_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,''INSERT'',''VALID'' FROM IN_SUBSCRPTN_OPT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM SUBSCRPTN_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT', 'INSERT INTO NC_SUBSCRPTN_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,''DELETE'',''VALID'' FROM SUBSCRPTN_OPT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SUBSCRPTN_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_SUBSCRPTN_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT', 'INSERT INTO NC_SUBSCRPTN_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NAME,t1.null,t1.PARNTL_CNSNT_IND,t1.SUBSCRPTN_OPT_STMT_TXT,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_VERSION_NBR,''UPDATE'',''VALID'' FROM IN_SUBSCRPTN_OPT t1, SUBSCRPTN_OPT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.PARNTL_CNSNT_IND <> t2.PARNTL_CNSNT_IND OR ( t1.PARNTL_CNSNT_IND IS NULL AND t2.PARNTL_CNSNT_IND IS NOT NULL) OR (t1.PARNTL_CNSNT_IND IS NOT NULL AND t2.PARNTL_CNSNT_IND IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SUBSCRPTN_VERSION_NBR <> t2.SUBSCRPTN_VERSION_NBR OR ( t1.SUBSCRPTN_VERSION_NBR IS NULL AND t2.SUBSCRPTN_VERSION_NBR IS NOT NULL) OR (t1.SUBSCRPTN_VERSION_NBR IS NOT NULL AND t2.SUBSCRPTN_VERSION_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT', 'INSERT INTO NC_SUBSCRPTN_OPT ( SCENARIO_ID,SUBSCRPTN_OPT_NAME,null,PARNTL_CNSNT_IND,SUBSCRPTN_OPT_STMT_TXT,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_VERSION_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NAME,t1.null,t1.PARNTL_CNSNT_IND,t1.SUBSCRPTN_OPT_STMT_TXT,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_VERSION_NBR,''ACTIVATE'',''VALID'' FROM IN_SUBSCRPTN_OPT t1, SUBSCRPTN_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT_TYPE', 'INSERT INTO NC_SUBSCRPTN_OPT_TYPE ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,''INSERT'',''VALID'' FROM IN_SUBSCRPTN_OPT_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM SUBSCRPTN_OPT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT_TYPE', 'INSERT INTO NC_SUBSCRPTN_OPT_TYPE ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,''DELETE'',''VALID'' FROM SUBSCRPTN_OPT_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SUBSCRPTN_OPT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_SUBSCRPTN_OPT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT_TYPE', 'INSERT INTO NC_SUBSCRPTN_OPT_TYPE ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.CNTCT_CHANL_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTCT_POINT_CATEG_CODE,''UPDATE'',''VALID'' FROM IN_SUBSCRPTN_OPT_TYPE t1, SUBSCRPTN_OPT_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_FREQ_TXT <> t2.SUBSCRPTN_OPT_FREQ_TXT OR ( t1.SUBSCRPTN_OPT_FREQ_TXT IS NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_FREQ_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_FREQ_TXT IS NULL)) OR (t1.CNTCT_CHANL_TYPE_CODE <> t2.CNTCT_CHANL_TYPE_CODE OR ( t1.CNTCT_CHANL_TYPE_CODE IS NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_CHANL_TYPE_CODE IS NOT NULL AND t2.CNTCT_CHANL_TYPE_CODE IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SUBSCRPTN_OPT_TYPE', 'INSERT INTO NC_SUBSCRPTN_OPT_TYPE ( SCENARIO_ID,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_FREQ_TXT,CNTCT_CHANL_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,CNTCT_POINT_CATEG_CODE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_FREQ_TXT,t1.CNTCT_CHANL_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.CNTCT_POINT_CATEG_CODE,''ACTIVATE'',''VALID'' FROM IN_SUBSCRPTN_OPT_TYPE t1, SUBSCRPTN_OPT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_CHANL_TYPE_CODE = t2.CNTCT_CHANL_TYPE_CODE AND t1.CNTCT_POINT_CATEG_CODE = t2.CNTCT_POINT_CATEG_CODE AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.SUBSCRPTN_OPT_NBR = t2.SUBSCRPTN_OPT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0001_MAP', 'INSERT INTO NC_STANDARD_0001_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0001_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0001_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0001_MAP', 'INSERT INTO NC_STANDARD_0001_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0001_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0001_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0001_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0001_MAP', 'INSERT INTO NC_STANDARD_0001_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0001_MAP t1, MST_STANDARD_0001_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0001_MAP', 'INSERT INTO NC_STANDARD_0001_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0001_MAP t1, MST_STANDARD_0001_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0002_MAP', 'INSERT INTO NC_STANDARD_0002_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0002_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0002_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0002_MAP', 'INSERT INTO NC_STANDARD_0002_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0002_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0002_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0002_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0002_MAP', 'INSERT INTO NC_STANDARD_0002_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0002_MAP t1, MST_STANDARD_0002_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0002_MAP', 'INSERT INTO NC_STANDARD_0002_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0002_MAP t1, MST_STANDARD_0002_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0003_MAP', 'INSERT INTO NC_STANDARD_0003_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0003_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0003_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0003_MAP', 'INSERT INTO NC_STANDARD_0003_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0003_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0003_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0003_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0003_MAP', 'INSERT INTO NC_STANDARD_0003_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0003_MAP t1, MST_STANDARD_0003_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0003_MAP', 'INSERT INTO NC_STANDARD_0003_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0003_MAP t1, MST_STANDARD_0003_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0004_MAP', 'INSERT INTO NC_STANDARD_0004_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0004_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0004_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0004_MAP', 'INSERT INTO NC_STANDARD_0004_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0004_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0004_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0004_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0004_MAP', 'INSERT INTO NC_STANDARD_0004_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0004_MAP t1, MST_STANDARD_0004_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0004_MAP', 'INSERT INTO NC_STANDARD_0004_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0004_MAP t1, MST_STANDARD_0004_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0005_MAP', 'INSERT INTO NC_STANDARD_0005_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0005_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0005_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0005_MAP', 'INSERT INTO NC_STANDARD_0005_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0005_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0005_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0005_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0005_MAP', 'INSERT INTO NC_STANDARD_0005_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0005_MAP t1, MST_STANDARD_0005_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0005_MAP', 'INSERT INTO NC_STANDARD_0005_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0005_MAP t1, MST_STANDARD_0005_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0006_MAP', 'INSERT INTO NC_STANDARD_0006_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0006_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0006_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0006_MAP', 'INSERT INTO NC_STANDARD_0006_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0006_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0006_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0006_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0006_MAP', 'INSERT INTO NC_STANDARD_0006_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0006_MAP t1, MST_STANDARD_0006_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0006_MAP', 'INSERT INTO NC_STANDARD_0006_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0006_MAP t1, MST_STANDARD_0006_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0007_MAP', 'INSERT INTO NC_STANDARD_0007_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0007_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0007_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0007_MAP', 'INSERT INTO NC_STANDARD_0007_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0007_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0007_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0007_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0007_MAP', 'INSERT INTO NC_STANDARD_0007_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0007_MAP t1, MST_STANDARD_0007_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0007_MAP', 'INSERT INTO NC_STANDARD_0007_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0007_MAP t1, MST_STANDARD_0007_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0008_MAP', 'INSERT INTO NC_STANDARD_0008_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0008_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0008_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0008_MAP', 'INSERT INTO NC_STANDARD_0008_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0008_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0008_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0008_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0008_MAP', 'INSERT INTO NC_STANDARD_0008_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0008_MAP t1, MST_STANDARD_0008_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0008_MAP', 'INSERT INTO NC_STANDARD_0008_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0008_MAP t1, MST_STANDARD_0008_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0009_MAP', 'INSERT INTO NC_STANDARD_0009_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_0009_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_0009_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0009_MAP', 'INSERT INTO NC_STANDARD_0009_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_0009_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_0009_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_0009_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0009_MAP', 'INSERT INTO NC_STANDARD_0009_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_0009_MAP t1, MST_STANDARD_0009_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_0009_MAP', 'INSERT INTO NC_STANDARD_0009_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_0009_MAP t1, MST_STANDARD_0009_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_MAP t1, MST_STANDARD_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_MAP t1, MST_STANDARD_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SYS_PROPS', 'INSERT INTO NC_SYS_PROPS ( SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,''INSERT'',''VALID'' FROM IN_SYS_PROPS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_SYS_PROPS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SYS_PROPS', 'INSERT INTO NC_SYS_PROPS ( SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,''DELETE'',''VALID'' FROM MST_SYS_PROPS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SYS_PROPS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_SYS_PROPS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SYS_PROPS', 'INSERT INTO NC_SYS_PROPS ( SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROPNAME,t1.PROPVALUE,t1.DATA_TYPE,t1.DESCRIPTION,t1.PROPTYPE,t1.ID,''UPDATE'',''VALID'' FROM IN_SYS_PROPS t1, MST_SYS_PROPS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.propertyName <> t2.propertyName OR ( t1.propertyName IS NULL AND t2.propertyName IS NOT NULL) OR (t1.propertyName IS NOT NULL AND t2.propertyName IS NULL)) OR (t1.propertyValue <> t2.propertyValue OR ( t1.propertyValue IS NULL AND t2.propertyValue IS NOT NULL) OR (t1.propertyValue IS NOT NULL AND t2.propertyValue IS NULL)) OR (t1.dataType <> t2.dataType OR ( t1.dataType IS NULL AND t2.dataType IS NOT NULL) OR (t1.dataType IS NOT NULL AND t2.dataType IS NULL)) OR (t1.description <> t2.description OR ( t1.description IS NULL AND t2.description IS NOT NULL) OR (t1.description IS NOT NULL AND t2.description IS NULL)) OR (t1.type <> t2.type OR ( t1.type IS NULL AND t2.type IS NOT NULL) OR (t1.type IS NOT NULL AND t2.type IS NULL)) OR (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SYS_PROPS', 'INSERT INTO NC_SYS_PROPS ( SCENARIO_ID,PROPNAME,PROPVALUE,DATA_TYPE,DESCRIPTION,PROPTYPE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROPNAME,t1.PROPVALUE,t1.DATA_TYPE,t1.DESCRIPTION,t1.PROPTYPE,t1.ID,''ACTIVATE'',''VALID'' FROM IN_SYS_PROPS t1, MST_SYS_PROPS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TERR', 'INSERT INTO NC_TERR ( SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,''INSERT'',''VALID'' FROM IN_TERR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TERR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TERR_CODE = t2.TERR_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TERR', 'INSERT INTO NC_TERR ( SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,''DELETE'',''VALID'' FROM TERR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TERR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TERR_CODE = t2.TERR_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TERR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TERR_CODE = t2.TERR_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TERR', 'INSERT INTO NC_TERR ( SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TERR_CODE,t1.TERR_NAME,t1.CNTRY_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.TERR_CODE_NTV,t1.TERR_NAME_NTV,t1.TERR_SHORT_NAME,t1.TERR_DESC,''UPDATE'',''VALID'' FROM IN_TERR t1, TERR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TERR_CODE = t2.TERR_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.TERR_CODE_NTV <> t2.TERR_CODE_NTV OR ( t1.TERR_CODE_NTV IS NULL AND t2.TERR_CODE_NTV IS NOT NULL) OR (t1.TERR_CODE_NTV IS NOT NULL AND t2.TERR_CODE_NTV IS NULL)) OR (t1.TERR_NAME_NTV <> t2.TERR_NAME_NTV OR ( t1.TERR_NAME_NTV IS NULL AND t2.TERR_NAME_NTV IS NOT NULL) OR (t1.TERR_NAME_NTV IS NOT NULL AND t2.TERR_NAME_NTV IS NULL)) OR (t1.TERR_SHORT_NAME <> t2.TERR_SHORT_NAME OR ( t1.TERR_SHORT_NAME IS NULL AND t2.TERR_SHORT_NAME IS NOT NULL) OR (t1.TERR_SHORT_NAME IS NOT NULL AND t2.TERR_SHORT_NAME IS NULL)) OR (t1.TERR_DESC <> t2.TERR_DESC OR ( t1.TERR_DESC IS NULL AND t2.TERR_DESC IS NOT NULL) OR (t1.TERR_DESC IS NOT NULL AND t2.TERR_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TERR', 'INSERT INTO NC_TERR ( SCENARIO_ID,TERR_CODE,TERR_NAME,CNTRY_CODE,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,TERR_CODE_NTV,TERR_NAME_NTV,TERR_SHORT_NAME,TERR_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TERR_CODE,t1.TERR_NAME,t1.CNTRY_CODE,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.TERR_CODE_NTV,t1.TERR_NAME_NTV,t1.TERR_SHORT_NAME,t1.TERR_DESC,''ACTIVATE'',''VALID'' FROM IN_TERR t1, TERR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TERR_CODE = t2.TERR_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRM_COUPN_LEADKEY_CNTRL', 'INSERT INTO NC_TRM_COUPN_LEADKEY_CNTRL ( SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,''INSERT'',''VALID'' FROM IN_TRM_COUPN_LEADKEY_CNTRL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TRM_COUPN_LEADKEY_CNTRL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRM_COUPN_LEADKEY_CNTRL', 'INSERT INTO NC_TRM_COUPN_LEADKEY_CNTRL ( SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,''DELETE'',''VALID'' FROM TRM_COUPN_LEADKEY_CNTRL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TRM_COUPN_LEADKEY_CNTRL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TRM_COUPN_LEADKEY_CNTRL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRM_COUPN_LEADKEY_CNTRL', 'INSERT INTO NC_TRM_COUPN_LEADKEY_CNTRL ( SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.LEADKEY_LEN,t1.IS_ALPHA_NUMERIC,''UPDATE'',''VALID'' FROM IN_TRM_COUPN_LEADKEY_CNTRL t1, TRM_COUPN_LEADKEY_CNTRL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LEADKEY_LEN <> t2.LEADKEY_LEN OR ( t1.LEADKEY_LEN IS NULL AND t2.LEADKEY_LEN IS NOT NULL) OR (t1.LEADKEY_LEN IS NOT NULL AND t2.LEADKEY_LEN IS NULL)) OR (t1.IS_ALPHA_NUMERIC <> t2.IS_ALPHA_NUMERIC OR ( t1.IS_ALPHA_NUMERIC IS NULL AND t2.IS_ALPHA_NUMERIC IS NOT NULL) OR (t1.IS_ALPHA_NUMERIC IS NOT NULL AND t2.IS_ALPHA_NUMERIC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRM_COUPN_LEADKEY_CNTRL', 'INSERT INTO NC_TRM_COUPN_LEADKEY_CNTRL ( SCENARIO_ID,LEGAL_ENT_NBR,LEADKEY_LEN,IS_ALPHA_NUMERIC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.LEADKEY_LEN,t1.IS_ALPHA_NUMERIC,''ACTIVATE'',''VALID'' FROM IN_TRM_COUPN_LEADKEY_CNTRL t1, TRM_COUPN_LEADKEY_CNTRL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.LEGAL_ENT_NBR = t2.LEGAL_ENT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT', 'INSERT INTO NC_TRT ( SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,''INSERT'',''VALID'' FROM IN_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_NBR = t2.TRT_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT', 'INSERT INTO NC_TRT ( SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,''DELETE'',''VALID'' FROM TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_NBR = t2.TRT_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_NBR = t2.TRT_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT', 'INSERT INTO NC_TRT ( SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_ENT_TYPE_CODE,t1.TRT_NAME,t1.TRT_DESC,t1.TRT_DTTP_CODE,t1.PII_DATA_IND,t1.PRDFN_TRT_IND,''UPDATE'',''VALID'' FROM IN_TRT t1, TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_NBR = t2.TRT_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_ENT_TYPE_CODE <> t2.TRT_ENT_TYPE_CODE OR ( t1.TRT_ENT_TYPE_CODE IS NULL AND t2.TRT_ENT_TYPE_CODE IS NOT NULL) OR (t1.TRT_ENT_TYPE_CODE IS NOT NULL AND t2.TRT_ENT_TYPE_CODE IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.TRT_DESC <> t2.TRT_DESC OR ( t1.TRT_DESC IS NULL AND t2.TRT_DESC IS NOT NULL) OR (t1.TRT_DESC IS NOT NULL AND t2.TRT_DESC IS NULL)) OR (t1.TRT_DTTP_CODE <> t2.TRT_DTTP_CODE OR ( t1.TRT_DTTP_CODE IS NULL AND t2.TRT_DTTP_CODE IS NOT NULL) OR (t1.TRT_DTTP_CODE IS NOT NULL AND t2.TRT_DTTP_CODE IS NULL)) OR (t1.PII_DATA_IND <> t2.PII_DATA_IND OR ( t1.PII_DATA_IND IS NULL AND t2.PII_DATA_IND IS NOT NULL) OR (t1.PII_DATA_IND IS NOT NULL AND t2.PII_DATA_IND IS NULL)) OR (t1.PRDFN_TRT_IND <> t2.PRDFN_TRT_IND OR ( t1.PRDFN_TRT_IND IS NULL AND t2.PRDFN_TRT_IND IS NOT NULL) OR (t1.PRDFN_TRT_IND IS NOT NULL AND t2.PRDFN_TRT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT', 'INSERT INTO NC_TRT ( SCENARIO_ID,TRT_NBR,TRT_ENT_TYPE_CODE,TRT_NAME,TRT_DESC,TRT_DTTP_CODE,PII_DATA_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_ENT_TYPE_CODE,t1.TRT_NAME,t1.TRT_DESC,t1.TRT_DTTP_CODE,t1.PII_DATA_IND,t1.PRDFN_TRT_IND,''ACTIVATE'',''VALID'' FROM IN_TRT t1, TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_NBR = t2.TRT_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_ENT_TYPE', 'INSERT INTO NC_TRT_ENT_TYPE ( SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''INSERT'',''VALID'' FROM IN_TRT_ENT_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TRT_ENT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_ENT_TYPE_CODE = t2.TRT_ENT_TYPE_CODE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_ENT_TYPE', 'INSERT INTO NC_TRT_ENT_TYPE ( SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,''DELETE'',''VALID'' FROM TRT_ENT_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TRT_ENT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_ENT_TYPE_CODE = t2.TRT_ENT_TYPE_CODE ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TRT_ENT_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_ENT_TYPE_CODE = t2.TRT_ENT_TYPE_CODE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_ENT_TYPE', 'INSERT INTO NC_TRT_ENT_TYPE ( SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_ENT_TYPE_CODE,t1.TRT_ENT_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''UPDATE'',''VALID'' FROM IN_TRT_ENT_TYPE t1, TRT_ENT_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_ENT_TYPE_CODE = t2.TRT_ENT_TYPE_CODE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_ENT_TYPE_CODE <> t2.TRT_ENT_TYPE_CODE OR ( t1.TRT_ENT_TYPE_CODE IS NULL AND t2.TRT_ENT_TYPE_CODE IS NOT NULL) OR (t1.TRT_ENT_TYPE_CODE IS NOT NULL AND t2.TRT_ENT_TYPE_CODE IS NULL)) OR (t1.TRT_ENT_TYPE_NAME <> t2.TRT_ENT_TYPE_NAME OR ( t1.TRT_ENT_TYPE_NAME IS NULL AND t2.TRT_ENT_TYPE_NAME IS NOT NULL) OR (t1.TRT_ENT_TYPE_NAME IS NOT NULL AND t2.TRT_ENT_TYPE_NAME IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_ENT_TYPE', 'INSERT INTO NC_TRT_ENT_TYPE ( SCENARIO_ID,TRT_ENT_TYPE_CODE,TRT_ENT_TYPE_NAME,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_ENT_TYPE_CODE,t1.TRT_ENT_TYPE_NAME,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,''ACTIVATE'',''VALID'' FROM IN_TRT_ENT_TYPE t1, TRT_ENT_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRT_ENT_TYPE_CODE = t2.TRT_ENT_TYPE_CODE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN', 'INSERT INTO NC_TRT_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,''INSERT'',''VALID'' FROM IN_TRT_IN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TRT_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN', 'INSERT INTO NC_TRT_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,''DELETE'',''VALID'' FROM TRT_IN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TRT_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TRT_IN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN', 'INSERT INTO NC_TRT_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.TRT_NAME_LOCAL,t1.DISPLAY_TYPE,t1.ID,t1.CNSMR_CLCT_IND,t1.PRDFN_TRT_IND,''UPDATE'',''VALID'' FROM IN_TRT_IN t1, TRT_IN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.TRT_NAME_LOCAL <> t2.TRT_NAME_LOCAL OR ( t1.TRT_NAME_LOCAL IS NULL AND t2.TRT_NAME_LOCAL IS NOT NULL) OR (t1.TRT_NAME_LOCAL IS NOT NULL AND t2.TRT_NAME_LOCAL IS NULL)) OR (t1.DISPLAY_TYPE <> t2.DISPLAY_TYPE OR ( t1.DISPLAY_TYPE IS NULL AND t2.DISPLAY_TYPE IS NOT NULL) OR (t1.DISPLAY_TYPE IS NOT NULL AND t2.DISPLAY_TYPE IS NULL)) OR (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) OR (t1.CNSMR_CLCT_IND <> t2.CNSMR_CLCT_IND OR ( t1.CNSMR_CLCT_IND IS NULL AND t2.CNSMR_CLCT_IND IS NOT NULL) OR (t1.CNSMR_CLCT_IND IS NOT NULL AND t2.CNSMR_CLCT_IND IS NULL)) OR (t1.PRDFN_TRT_IND <> t2.PRDFN_TRT_IND OR ( t1.PRDFN_TRT_IND IS NULL AND t2.PRDFN_TRT_IND IS NOT NULL) OR (t1.PRDFN_TRT_IND IS NOT NULL AND t2.PRDFN_TRT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN', 'INSERT INTO NC_TRT_IN ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.TRT_NAME_LOCAL,t1.DISPLAY_TYPE,t1.ID,t1.CNSMR_CLCT_IND,t1.PRDFN_TRT_IND,''ACTIVATE'',''VALID'' FROM IN_TRT_IN t1, TRT_IN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN_DUMMY', 'INSERT INTO NC_TRT_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,''INSERT'',''VALID'' FROM IN_TRT_IN_DUMMY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TRT_IN_DUMMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN_DUMMY', 'INSERT INTO NC_TRT_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,''DELETE'',''VALID'' FROM TRT_IN_DUMMY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TRT_IN_DUMMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TRT_IN_DUMMY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN_DUMMY', 'INSERT INTO NC_TRT_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.STATUS,t1.TRT_NAME_LOCAL,t1.DISPLAY_TYPE,t1.ID,t1.CNSMR_CLCT_IND,t1.PRDFN_TRT_IND,''UPDATE'',''VALID'' FROM IN_TRT_IN_DUMMY t1, TRT_IN_DUMMY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TRT_NBR <> t2.TRT_NBR OR ( t1.TRT_NBR IS NULL AND t2.TRT_NBR IS NOT NULL) OR (t1.TRT_NBR IS NOT NULL AND t2.TRT_NBR IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) OR (t1.TRT_NAME_LOCAL <> t2.TRT_NAME_LOCAL OR ( t1.TRT_NAME_LOCAL IS NULL AND t2.TRT_NAME_LOCAL IS NOT NULL) OR (t1.TRT_NAME_LOCAL IS NOT NULL AND t2.TRT_NAME_LOCAL IS NULL)) OR (t1.DISPLAY_TYPE <> t2.DISPLAY_TYPE OR ( t1.DISPLAY_TYPE IS NULL AND t2.DISPLAY_TYPE IS NOT NULL) OR (t1.DISPLAY_TYPE IS NOT NULL AND t2.DISPLAY_TYPE IS NULL)) OR (t1.ID <> t2.ID OR ( t1.ID IS NULL AND t2.ID IS NOT NULL) OR (t1.ID IS NOT NULL AND t2.ID IS NULL)) OR (t1.CNSMR_CLCT_IND <> t2.CNSMR_CLCT_IND OR ( t1.CNSMR_CLCT_IND IS NULL AND t2.CNSMR_CLCT_IND IS NOT NULL) OR (t1.CNSMR_CLCT_IND IS NOT NULL AND t2.CNSMR_CLCT_IND IS NULL)) OR (t1.PRDFN_TRT_IND <> t2.PRDFN_TRT_IND OR ( t1.PRDFN_TRT_IND IS NULL AND t2.PRDFN_TRT_IND IS NOT NULL) OR (t1.PRDFN_TRT_IND IS NOT NULL AND t2.PRDFN_TRT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TRT_IN_DUMMY', 'INSERT INTO NC_TRT_IN_DUMMY ( SCENARIO_ID,TRT_NBR,TRT_NAME,LEGAL_ENT_NBR,MKTNG_PGM_NBR,STATUS,TRT_NAME_LOCAL,DISPLAY_TYPE,ID,CNSMR_CLCT_IND,PRDFN_TRT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TRT_NBR,t1.TRT_NAME,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.STATUS,t1.TRT_NAME_LOCAL,t1.DISPLAY_TYPE,t1.ID,t1.CNSMR_CLCT_IND,t1.PRDFN_TRT_IND,''ACTIVATE'',''VALID'' FROM IN_TRT_IN_DUMMY t1, TRT_IN_DUMMY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ID = t2.ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TSS_CNTRY_TABLE_MAP', 'INSERT INTO NC_TSS_CNTRY_TABLE_MAP ( SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,''INSERT'',''VALID'' FROM IN_TSS_CNTRY_TABLE_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TSS_CNTRY_TABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_NAME = t2.CNTRY_NAME )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TSS_CNTRY_TABLE_MAP', 'INSERT INTO NC_TSS_CNTRY_TABLE_MAP ( SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,''DELETE'',''VALID'' FROM TSS_CNTRY_TABLE_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TSS_CNTRY_TABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_NAME = t2.CNTRY_NAME ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_TSS_CNTRY_TABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_NAME = t2.CNTRY_NAME));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TSS_CNTRY_TABLE_MAP', 'INSERT INTO NC_TSS_CNTRY_TABLE_MAP ( SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_NAME,t1.CLEANSE_INPUT_TAB_NAME,t1.WINKEY_TAB_NAME,t1.MATCH_INPUT_TAB_NAME,t1.TRILLIUM_OUTPUT_TAB_NAME,t1.TSS_CLEANSE_INPUT,t1.TSSENVSET,t1.INVOKE_ROUTE_CLEANSE,t1.CNSMR_WINKEY_OUT_STG,t1.MATCH_INPUT_CRM,t1.TSSMATCH,t1.TSS_MATCH_STG,t1.PREV_LOAD_STATUS,t1.CALL_BACK_DURATION,''UPDATE'',''VALID'' FROM IN_TSS_CNTRY_TABLE_MAP t1, TSS_CNTRY_TABLE_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_NAME = t2.CNTRY_NAME AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.CLEANSE_INPUT_TAB_NAME <> t2.CLEANSE_INPUT_TAB_NAME OR ( t1.CLEANSE_INPUT_TAB_NAME IS NULL AND t2.CLEANSE_INPUT_TAB_NAME IS NOT NULL) OR (t1.CLEANSE_INPUT_TAB_NAME IS NOT NULL AND t2.CLEANSE_INPUT_TAB_NAME IS NULL)) OR (t1.WINKEY_TAB_NAME <> t2.WINKEY_TAB_NAME OR ( t1.WINKEY_TAB_NAME IS NULL AND t2.WINKEY_TAB_NAME IS NOT NULL) OR (t1.WINKEY_TAB_NAME IS NOT NULL AND t2.WINKEY_TAB_NAME IS NULL)) OR (t1.MATCH_INPUT_TAB_NAME <> t2.MATCH_INPUT_TAB_NAME OR ( t1.MATCH_INPUT_TAB_NAME IS NULL AND t2.MATCH_INPUT_TAB_NAME IS NOT NULL) OR (t1.MATCH_INPUT_TAB_NAME IS NOT NULL AND t2.MATCH_INPUT_TAB_NAME IS NULL)) OR (t1.TRILLIUM_OUTPUT_TAB_NAME <> t2.TRILLIUM_OUTPUT_TAB_NAME OR ( t1.TRILLIUM_OUTPUT_TAB_NAME IS NULL AND t2.TRILLIUM_OUTPUT_TAB_NAME IS NOT NULL) OR (t1.TRILLIUM_OUTPUT_TAB_NAME IS NOT NULL AND t2.TRILLIUM_OUTPUT_TAB_NAME IS NULL)) OR (t1.TSS_CLEANSE_INPUT <> t2.TSS_CLEANSE_INPUT OR ( t1.TSS_CLEANSE_INPUT IS NULL AND t2.TSS_CLEANSE_INPUT IS NOT NULL) OR (t1.TSS_CLEANSE_INPUT IS NOT NULL AND t2.TSS_CLEANSE_INPUT IS NULL)) OR (t1.TSSENVSET <> t2.TSSENVSET OR ( t1.TSSENVSET IS NULL AND t2.TSSENVSET IS NOT NULL) OR (t1.TSSENVSET IS NOT NULL AND t2.TSSENVSET IS NULL)) OR (t1.INVOKE_ROUTE_CLEANSE <> t2.INVOKE_ROUTE_CLEANSE OR ( t1.INVOKE_ROUTE_CLEANSE IS NULL AND t2.INVOKE_ROUTE_CLEANSE IS NOT NULL) OR (t1.INVOKE_ROUTE_CLEANSE IS NOT NULL AND t2.INVOKE_ROUTE_CLEANSE IS NULL)) OR (t1.CNSMR_WINKEY_OUT_STG <> t2.CNSMR_WINKEY_OUT_STG OR ( t1.CNSMR_WINKEY_OUT_STG IS NULL AND t2.CNSMR_WINKEY_OUT_STG IS NOT NULL) OR (t1.CNSMR_WINKEY_OUT_STG IS NOT NULL AND t2.CNSMR_WINKEY_OUT_STG IS NULL)) OR (t1.MATCH_INPUT_CRM <> t2.MATCH_INPUT_CRM OR ( t1.MATCH_INPUT_CRM IS NULL AND t2.MATCH_INPUT_CRM IS NOT NULL) OR (t1.MATCH_INPUT_CRM IS NOT NULL AND t2.MATCH_INPUT_CRM IS NULL)) OR (t1.TSSMATCH <> t2.TSSMATCH OR ( t1.TSSMATCH IS NULL AND t2.TSSMATCH IS NOT NULL) OR (t1.TSSMATCH IS NOT NULL AND t2.TSSMATCH IS NULL)) OR (t1.TSS_MATCH_STG <> t2.TSS_MATCH_STG OR ( t1.TSS_MATCH_STG IS NULL AND t2.TSS_MATCH_STG IS NOT NULL) OR (t1.TSS_MATCH_STG IS NOT NULL AND t2.TSS_MATCH_STG IS NULL)) OR (t1.PREV_LOAD_STATUS <> t2.PREV_LOAD_STATUS OR ( t1.PREV_LOAD_STATUS IS NULL AND t2.PREV_LOAD_STATUS IS NOT NULL) OR (t1.PREV_LOAD_STATUS IS NOT NULL AND t2.PREV_LOAD_STATUS IS NULL)) OR (t1.CALL_BACK_DURATION <> t2.CALL_BACK_DURATION OR ( t1.CALL_BACK_DURATION IS NULL AND t2.CALL_BACK_DURATION IS NOT NULL) OR (t1.CALL_BACK_DURATION IS NOT NULL AND t2.CALL_BACK_DURATION IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TSS_CNTRY_TABLE_MAP', 'INSERT INTO NC_TSS_CNTRY_TABLE_MAP ( SCENARIO_ID,CNTRY_NAME,CLEANSE_INPUT_TAB_NAME,WINKEY_TAB_NAME,MATCH_INPUT_TAB_NAME,TRILLIUM_OUTPUT_TAB_NAME,TSS_CLEANSE_INPUT,TSSENVSET,INVOKE_ROUTE_CLEANSE,CNSMR_WINKEY_OUT_STG,MATCH_INPUT_CRM,TSSMATCH,TSS_MATCH_STG,PREV_LOAD_STATUS,CALL_BACK_DURATION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTRY_NAME,t1.CLEANSE_INPUT_TAB_NAME,t1.WINKEY_TAB_NAME,t1.MATCH_INPUT_TAB_NAME,t1.TRILLIUM_OUTPUT_TAB_NAME,t1.TSS_CLEANSE_INPUT,t1.TSSENVSET,t1.INVOKE_ROUTE_CLEANSE,t1.CNSMR_WINKEY_OUT_STG,t1.MATCH_INPUT_CRM,t1.TSSMATCH,t1.TSS_MATCH_STG,t1.PREV_LOAD_STATUS,t1.CALL_BACK_DURATION,''ACTIVATE'',''VALID'' FROM IN_TSS_CNTRY_TABLE_MAP t1, TSS_CNTRY_TABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTRY_NAME = t2.CNTRY_NAME AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_ADDRESS', 'INSERT INTO NC_V_ADDRESS ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''INSERT'',''VALID'' FROM V_ADDRESS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_ADDRESS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_ADDRESS', 'INSERT INTO NC_V_ADDRESS ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''DELETE'',''VALID'' FROM V_ADDRESS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_ADDRESS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_ADDRESS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_ADDRESS', 'INSERT INTO NC_V_ADDRESS ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''UPDATE'',''VALID'' FROM V_ADDRESS t1, V_ADDRESS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_ADDRESS', 'INSERT INTO NC_V_ADDRESS ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,CITY_NAME,POSTL_AREA_CODE,CNTRY_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''ACTIVATE'',''VALID'' FROM V_ADDRESS t1, V_ADDRESS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_CAMPAIGN', 'INSERT INTO NC_V_CAMPAIGN ( SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,''INSERT'',''VALID'' FROM V_CAMPAIGN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_CAMPAIGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_CAMPAIGN', 'INSERT INTO NC_V_CAMPAIGN ( SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,''DELETE'',''VALID'' FROM V_CAMPAIGN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_CAMPAIGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_CAMPAIGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_CAMPAIGN', 'INSERT INTO NC_V_CAMPAIGN ( SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_DESC,t1.PROMOTION_EMAIL_ADDR_TXT,t1.CAMPAIGN_NAME,t1.CAMPAIGN_EXEC_DATE,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CAMPAIGN_ID,''UPDATE'',''VALID'' FROM V_CAMPAIGN t1, V_CAMPAIGN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_DESC <> t2.MKTNG_PGM_DESC OR ( t1.MKTNG_PGM_DESC IS NULL AND t2.MKTNG_PGM_DESC IS NOT NULL) OR (t1.MKTNG_PGM_DESC IS NOT NULL AND t2.MKTNG_PGM_DESC IS NULL)) OR (t1.PROMOTION_EMAIL_ADDR_TXT <> t2.PROMOTION_EMAIL_ADDR_TXT OR ( t1.PROMOTION_EMAIL_ADDR_TXT IS NULL AND t2.PROMOTION_EMAIL_ADDR_TXT IS NOT NULL) OR (t1.PROMOTION_EMAIL_ADDR_TXT IS NOT NULL AND t2.PROMOTION_EMAIL_ADDR_TXT IS NULL)) OR (t1.CAMPAIGN_NAME <> t2.CAMPAIGN_NAME OR ( t1.CAMPAIGN_NAME IS NULL AND t2.CAMPAIGN_NAME IS NOT NULL) OR (t1.CAMPAIGN_NAME IS NOT NULL AND t2.CAMPAIGN_NAME IS NULL)) OR (t1.CAMPAIGN_EXEC_DATE <> t2.CAMPAIGN_EXEC_DATE OR ( t1.CAMPAIGN_EXEC_DATE IS NULL AND t2.CAMPAIGN_EXEC_DATE IS NOT NULL) OR (t1.CAMPAIGN_EXEC_DATE IS NOT NULL AND t2.CAMPAIGN_EXEC_DATE IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.CAMPAIGN_ID <> t2.CAMPAIGN_ID OR ( t1.CAMPAIGN_ID IS NULL AND t2.CAMPAIGN_ID IS NOT NULL) OR (t1.CAMPAIGN_ID IS NOT NULL AND t2.CAMPAIGN_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_CAMPAIGN', 'INSERT INTO NC_V_CAMPAIGN ( SCENARIO_ID,MKTNG_PGM_DESC,PROMOTION_EMAIL_ADDR_TXT,CAMPAIGN_NAME,CAMPAIGN_EXEC_DATE,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CAMPAIGN_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_DESC,t1.PROMOTION_EMAIL_ADDR_TXT,t1.CAMPAIGN_NAME,t1.CAMPAIGN_EXEC_DATE,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CAMPAIGN_ID,''ACTIVATE'',''VALID'' FROM V_CAMPAIGN t1, V_CAMPAIGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COMMUNICATIONS', 'INSERT INTO NC_V_COMMUNICATIONS ( SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,''INSERT'',''VALID'' FROM V_COMMUNICATIONS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_COMMUNICATIONS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_COMMUNICATIONS', 'INSERT INTO NC_V_COMMUNICATIONS ( SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,''DELETE'',''VALID'' FROM V_COMMUNICATIONS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_COMMUNICATIONS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_COMMUNICATIONS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COMMUNICATIONS', 'INSERT INTO NC_V_COMMUNICATIONS ( SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.COMMUNICATION_ID,t1.COMMUNICATION_NAME,t1.CHANNEL_CLASS_ID,t1.CHANNEL_NAME,t1.CHANNEL_INSTANCE_ID,t1.CHANNEL_INSTANCE_NAME,t1.CONTACT_DTTM,t1.LEAD_KEY_ID,''UPDATE'',''VALID'' FROM V_COMMUNICATIONS t1, V_COMMUNICATIONS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.COMMUNICATION_ID <> t2.COMMUNICATION_ID OR ( t1.COMMUNICATION_ID IS NULL AND t2.COMMUNICATION_ID IS NOT NULL) OR (t1.COMMUNICATION_ID IS NOT NULL AND t2.COMMUNICATION_ID IS NULL)) OR (t1.COMMUNICATION_NAME <> t2.COMMUNICATION_NAME OR ( t1.COMMUNICATION_NAME IS NULL AND t2.COMMUNICATION_NAME IS NOT NULL) OR (t1.COMMUNICATION_NAME IS NOT NULL AND t2.COMMUNICATION_NAME IS NULL)) OR (t1.CHANNEL_CLASS_ID <> t2.CHANNEL_CLASS_ID OR ( t1.CHANNEL_CLASS_ID IS NULL AND t2.CHANNEL_CLASS_ID IS NOT NULL) OR (t1.CHANNEL_CLASS_ID IS NOT NULL AND t2.CHANNEL_CLASS_ID IS NULL)) OR (t1.CHANNEL_NAME <> t2.CHANNEL_NAME OR ( t1.CHANNEL_NAME IS NULL AND t2.CHANNEL_NAME IS NOT NULL) OR (t1.CHANNEL_NAME IS NOT NULL AND t2.CHANNEL_NAME IS NULL)) OR (t1.CHANNEL_INSTANCE_ID <> t2.CHANNEL_INSTANCE_ID OR ( t1.CHANNEL_INSTANCE_ID IS NULL AND t2.CHANNEL_INSTANCE_ID IS NOT NULL) OR (t1.CHANNEL_INSTANCE_ID IS NOT NULL AND t2.CHANNEL_INSTANCE_ID IS NULL)) OR (t1.CHANNEL_INSTANCE_NAME <> t2.CHANNEL_INSTANCE_NAME OR ( t1.CHANNEL_INSTANCE_NAME IS NULL AND t2.CHANNEL_INSTANCE_NAME IS NOT NULL) OR (t1.CHANNEL_INSTANCE_NAME IS NOT NULL AND t2.CHANNEL_INSTANCE_NAME IS NULL)) OR (t1.CONTACT_DTTM <> t2.CONTACT_DTTM OR ( t1.CONTACT_DTTM IS NULL AND t2.CONTACT_DTTM IS NOT NULL) OR (t1.CONTACT_DTTM IS NOT NULL AND t2.CONTACT_DTTM IS NULL)) OR (t1.LEAD_KEY_ID <> t2.LEAD_KEY_ID OR ( t1.LEAD_KEY_ID IS NULL AND t2.LEAD_KEY_ID IS NOT NULL) OR (t1.LEAD_KEY_ID IS NOT NULL AND t2.LEAD_KEY_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COMMUNICATIONS', 'INSERT INTO NC_V_COMMUNICATIONS ( SCENARIO_ID,REGIS_PRSNA_ID,HSHLD_PRSNA_ID,MATCHD_CNSMR_PRSNA_ID,COMMUNICATION_ID,COMMUNICATION_NAME,CHANNEL_CLASS_ID,CHANNEL_NAME,CHANNEL_INSTANCE_ID,CHANNEL_INSTANCE_NAME,CONTACT_DTTM,LEAD_KEY_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.HSHLD_PRSNA_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.COMMUNICATION_ID,t1.COMMUNICATION_NAME,t1.CHANNEL_CLASS_ID,t1.CHANNEL_NAME,t1.CHANNEL_INSTANCE_ID,t1.CHANNEL_INSTANCE_NAME,t1.CONTACT_DTTM,t1.LEAD_KEY_ID,''ACTIVATE'',''VALID'' FROM V_COMMUNICATIONS t1, V_COMMUNICATIONS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COUPON_REDEEMED', 'INSERT INTO NC_V_COUPON_REDEEMED ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,''INSERT'',''VALID'' FROM V_COUPON_REDEEMED t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_COUPON_REDEEMED t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_COUPON_REDEEMED', 'INSERT INTO NC_V_COUPON_REDEEMED ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,''DELETE'',''VALID'' FROM V_COUPON_REDEEMED t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_COUPON_REDEEMED t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_COUPON_REDEEMED t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COUPON_REDEEMED', 'INSERT INTO NC_V_COUPON_REDEEMED ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_ID,t1.INCTV_NBR,t1.COUPN_SERL_NUM,t1.RDMPT_DATETM,t1.COUPN_STATUS_CODE,t1.STORE_NAME,t1.REDEMPTN_VALUE,''UPDATE'',''VALID'' FROM V_COUPON_REDEEMED t1, V_COUPON_REDEEMED t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.CNSMR_ACTN_TYPE_CODE <> t2.CNSMR_ACTN_TYPE_CODE OR ( t1.CNSMR_ACTN_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NULL)) OR (t1.CNSMR_ACTN_NUM <> t2.CNSMR_ACTN_NUM OR ( t1.CNSMR_ACTN_NUM IS NULL AND t2.CNSMR_ACTN_NUM IS NOT NULL) OR (t1.CNSMR_ACTN_NUM IS NOT NULL AND t2.CNSMR_ACTN_NUM IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNSMR_ACTN_ID <> t2.CNSMR_ACTN_ID OR ( t1.CNSMR_ACTN_ID IS NULL AND t2.CNSMR_ACTN_ID IS NOT NULL) OR (t1.CNSMR_ACTN_ID IS NOT NULL AND t2.CNSMR_ACTN_ID IS NULL)) OR (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.COUPN_SERL_NUM <> t2.COUPN_SERL_NUM OR ( t1.COUPN_SERL_NUM IS NULL AND t2.COUPN_SERL_NUM IS NOT NULL) OR (t1.COUPN_SERL_NUM IS NOT NULL AND t2.COUPN_SERL_NUM IS NULL)) OR (t1.RDMPT_DATETM <> t2.RDMPT_DATETM OR ( t1.RDMPT_DATETM IS NULL AND t2.RDMPT_DATETM IS NOT NULL) OR (t1.RDMPT_DATETM IS NOT NULL AND t2.RDMPT_DATETM IS NULL)) OR (t1.COUPN_STATUS_CODE <> t2.COUPN_STATUS_CODE OR ( t1.COUPN_STATUS_CODE IS NULL AND t2.COUPN_STATUS_CODE IS NOT NULL) OR (t1.COUPN_STATUS_CODE IS NOT NULL AND t2.COUPN_STATUS_CODE IS NULL)) OR (t1.STORE_NAME <> t2.STORE_NAME OR ( t1.STORE_NAME IS NULL AND t2.STORE_NAME IS NOT NULL) OR (t1.STORE_NAME IS NOT NULL AND t2.STORE_NAME IS NULL)) OR (t1.REDEMPTN_VALUE <> t2.REDEMPTN_VALUE OR ( t1.REDEMPTN_VALUE IS NULL AND t2.REDEMPTN_VALUE IS NOT NULL) OR (t1.REDEMPTN_VALUE IS NOT NULL AND t2.REDEMPTN_VALUE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_COUPON_REDEEMED', 'INSERT INTO NC_V_COUPON_REDEEMED ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,COUPN_SERL_NUM,RDMPT_DATETM,COUPN_STATUS_CODE,STORE_NAME,REDEMPTN_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_ID,t1.INCTV_NBR,t1.COUPN_SERL_NUM,t1.RDMPT_DATETM,t1.COUPN_STATUS_CODE,t1.STORE_NAME,t1.REDEMPTN_VALUE,''ACTIVATE'',''VALID'' FROM V_COUPON_REDEEMED t1, V_COUPON_REDEEMED t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_DATA_SRCE', 'INSERT INTO NC_V_DATA_SRCE ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,''INSERT'',''VALID'' FROM V_DATA_SRCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_DATA_SRCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_DATA_SRCE', 'INSERT INTO NC_V_DATA_SRCE ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,''DELETE'',''VALID'' FROM V_DATA_SRCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_DATA_SRCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_DATA_SRCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_DATA_SRCE', 'INSERT INTO NC_V_DATA_SRCE ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_DESC,t1.WEB_SITE_URL_TXT,''UPDATE'',''VALID'' FROM V_DATA_SRCE t1, V_DATA_SRCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) OR (t1.AGNCY_NM <> t2.AGNCY_NM OR ( t1.AGNCY_NM IS NULL AND t2.AGNCY_NM IS NOT NULL) OR (t1.AGNCY_NM IS NOT NULL AND t2.AGNCY_NM IS NULL)) OR (t1.AGNCY_DESC <> t2.AGNCY_DESC OR ( t1.AGNCY_DESC IS NULL AND t2.AGNCY_DESC IS NOT NULL) OR (t1.AGNCY_DESC IS NOT NULL AND t2.AGNCY_DESC IS NULL)) OR (t1.WEB_SITE_URL_TXT <> t2.WEB_SITE_URL_TXT OR ( t1.WEB_SITE_URL_TXT IS NULL AND t2.WEB_SITE_URL_TXT IS NOT NULL) OR (t1.WEB_SITE_URL_TXT IS NOT NULL AND t2.WEB_SITE_URL_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_DATA_SRCE', 'INSERT INTO NC_V_DATA_SRCE ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,AGNCY_NBR,AGNCY_NM,AGNCY_DESC,WEB_SITE_URL_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.AGNCY_NBR,t1.AGNCY_NM,t1.AGNCY_DESC,t1.WEB_SITE_URL_TXT,''ACTIVATE'',''VALID'' FROM V_DATA_SRCE t1, V_DATA_SRCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_EMAIL', 'INSERT INTO NC_V_EMAIL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''INSERT'',''VALID'' FROM V_EMAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_EMAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_EMAIL', 'INSERT INTO NC_V_EMAIL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''DELETE'',''VALID'' FROM V_EMAIL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_EMAIL', 'INSERT INTO NC_V_EMAIL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.EMAIL_ADDR_TXT,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''UPDATE'',''VALID'' FROM V_EMAIL t1, V_EMAIL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_EMAIL', 'INSERT INTO NC_V_EMAIL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.EMAIL_ADDR_TXT,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''ACTIVATE'',''VALID'' FROM V_EMAIL t1, V_EMAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_EDIT_REGIS', 'INSERT INTO NC_V_GDPR_EDIT_REGIS ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,''INSERT'',''VALID'' FROM V_GDPR_EDIT_REGIS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_GDPR_EDIT_REGIS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_EDIT_REGIS', 'INSERT INTO NC_V_GDPR_EDIT_REGIS ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,''DELETE'',''VALID'' FROM V_GDPR_EDIT_REGIS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_GDPR_EDIT_REGIS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_GDPR_EDIT_REGIS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_EDIT_REGIS', 'INSERT INTO NC_V_GDPR_EDIT_REGIS ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_NAME,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_DESC,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.CNTRY_CODE,t1.POSTL_AREA_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_RQST_STATUS_NAME,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,''UPDATE'',''VALID'' FROM V_GDPR_EDIT_REGIS t1, V_GDPR_EDIT_REGIS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GDPR_RQST_TYPE_NAME <> t2.GDPR_RQST_TYPE_NAME OR ( t1.GDPR_RQST_TYPE_NAME IS NULL AND t2.GDPR_RQST_TYPE_NAME IS NOT NULL) OR (t1.GDPR_RQST_TYPE_NAME IS NOT NULL AND t2.GDPR_RQST_TYPE_NAME IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.MKTNG_PGM_DESC <> t2.MKTNG_PGM_DESC OR ( t1.MKTNG_PGM_DESC IS NULL AND t2.MKTNG_PGM_DESC IS NOT NULL) OR (t1.MKTNG_PGM_DESC IS NOT NULL AND t2.MKTNG_PGM_DESC IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.GDPR_RQST_FULFLMT_DATETM <> t2.GDPR_RQST_FULFLMT_DATETM OR ( t1.GDPR_RQST_FULFLMT_DATETM IS NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NOT NULL) OR (t1.GDPR_RQST_FULFLMT_DATETM IS NOT NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NULL)) OR (t1.GDPR_RQST_CRTN_DATETM <> t2.GDPR_RQST_CRTN_DATETM OR ( t1.GDPR_RQST_CRTN_DATETM IS NULL AND t2.GDPR_RQST_CRTN_DATETM IS NOT NULL) OR (t1.GDPR_RQST_CRTN_DATETM IS NOT NULL AND t2.GDPR_RQST_CRTN_DATETM IS NULL)) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM <> t2.GDPR_RQST_IDNTY_VFYD_DATETM OR ( t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL)) OR (t1.GDPR_RQST_STATUS_NAME <> t2.GDPR_RQST_STATUS_NAME OR ( t1.GDPR_RQST_STATUS_NAME IS NULL AND t2.GDPR_RQST_STATUS_NAME IS NOT NULL) OR (t1.GDPR_RQST_STATUS_NAME IS NOT NULL AND t2.GDPR_RQST_STATUS_NAME IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_EDIT_REGIS', 'INSERT INTO NC_V_GDPR_EDIT_REGIS ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_NAME,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_DESC,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,CNTRY_CODE,POSTL_AREA_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_STATUS_NAME,REGIS_PRSNA_ID,MKTNG_PGM_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_NAME,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_DESC,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.CNTRY_CODE,t1.POSTL_AREA_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_RQST_STATUS_NAME,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,''ACTIVATE'',''VALID'' FROM V_GDPR_EDIT_REGIS t1, V_GDPR_EDIT_REGIS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_REVIEW', 'INSERT INTO NC_V_GDPR_REVIEW ( SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,''INSERT'',''VALID'' FROM V_GDPR_REVIEW t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_GDPR_REVIEW t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_REVIEW', 'INSERT INTO NC_V_GDPR_REVIEW ( SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,''DELETE'',''VALID'' FROM V_GDPR_REVIEW t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_GDPR_REVIEW t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_GDPR_REVIEW t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_REVIEW', 'INSERT INTO NC_V_GDPR_REVIEW ( SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GVN_NAME,t1.FAMLY_NAME,t1.ADDR_LINE_1_TXT,t1.CITY_NAME,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.DATA_SRCE_NBR,t1.GDPR_RQST_STATUS_CD,t1.MID_NAME,t1.GDPR_RQST_STATUS_NAME,t1.GDPR_RQST_TYPE_CD,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.NATIONAL_ID_NBR,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_RQST_TYPE_NAME,t1.CNTRY_NAME,t1.MKTNG_PGM_DESC,t1.SR_NBR,t1.GDPR_CASE_OWNR_CNTCT_NBR,''UPDATE'',''VALID'' FROM V_GDPR_REVIEW t1, V_GDPR_REVIEW t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.GDPR_RQST_STATUS_CD <> t2.GDPR_RQST_STATUS_CD OR ( t1.GDPR_RQST_STATUS_CD IS NULL AND t2.GDPR_RQST_STATUS_CD IS NOT NULL) OR (t1.GDPR_RQST_STATUS_CD IS NOT NULL AND t2.GDPR_RQST_STATUS_CD IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.GDPR_RQST_STATUS_NAME <> t2.GDPR_RQST_STATUS_NAME OR ( t1.GDPR_RQST_STATUS_NAME IS NULL AND t2.GDPR_RQST_STATUS_NAME IS NOT NULL) OR (t1.GDPR_RQST_STATUS_NAME IS NOT NULL AND t2.GDPR_RQST_STATUS_NAME IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.GDPR_RQST_FULFLMT_DATETM <> t2.GDPR_RQST_FULFLMT_DATETM OR ( t1.GDPR_RQST_FULFLMT_DATETM IS NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NOT NULL) OR (t1.GDPR_RQST_FULFLMT_DATETM IS NOT NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NULL)) OR (t1.GDPR_RQST_CRTN_DATETM <> t2.GDPR_RQST_CRTN_DATETM OR ( t1.GDPR_RQST_CRTN_DATETM IS NULL AND t2.GDPR_RQST_CRTN_DATETM IS NOT NULL) OR (t1.GDPR_RQST_CRTN_DATETM IS NOT NULL AND t2.GDPR_RQST_CRTN_DATETM IS NULL)) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM <> t2.GDPR_RQST_IDNTY_VFYD_DATETM OR ( t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL)) OR (t1.GDPR_RQST_TYPE_NAME <> t2.GDPR_RQST_TYPE_NAME OR ( t1.GDPR_RQST_TYPE_NAME IS NULL AND t2.GDPR_RQST_TYPE_NAME IS NOT NULL) OR (t1.GDPR_RQST_TYPE_NAME IS NOT NULL AND t2.GDPR_RQST_TYPE_NAME IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.MKTNG_PGM_DESC <> t2.MKTNG_PGM_DESC OR ( t1.MKTNG_PGM_DESC IS NULL AND t2.MKTNG_PGM_DESC IS NOT NULL) OR (t1.MKTNG_PGM_DESC IS NOT NULL AND t2.MKTNG_PGM_DESC IS NULL)) OR (t1.SR_NBR <> t2.SR_NBR OR ( t1.SR_NBR IS NULL AND t2.SR_NBR IS NOT NULL) OR (t1.SR_NBR IS NOT NULL AND t2.SR_NBR IS NULL)) OR (t1.GDPR_CASE_OWNR_CNTCT_NBR <> t2.GDPR_CASE_OWNR_CNTCT_NBR OR ( t1.GDPR_CASE_OWNR_CNTCT_NBR IS NULL AND t2.GDPR_CASE_OWNR_CNTCT_NBR IS NOT NULL) OR (t1.GDPR_CASE_OWNR_CNTCT_NBR IS NOT NULL AND t2.GDPR_CASE_OWNR_CNTCT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_GDPR_REVIEW', 'INSERT INTO NC_V_GDPR_REVIEW ( SCENARIO_ID,GDPR_CASE_ID,GVN_NAME,FAMLY_NAME,ADDR_LINE_1_TXT,CITY_NAME,EMAIL_ADDR_TXT,FULL_PHONE_NUM,DATA_SRCE_NBR,GDPR_RQST_STATUS_CD,MID_NAME,GDPR_RQST_STATUS_NAME,GDPR_RQST_TYPE_CD,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,NATIONAL_ID_NBR,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,GDPR_RQST_TYPE_NAME,CNTRY_NAME,MKTNG_PGM_DESC,SR_NBR,GDPR_CASE_OWNR_CNTCT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GVN_NAME,t1.FAMLY_NAME,t1.ADDR_LINE_1_TXT,t1.CITY_NAME,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.DATA_SRCE_NBR,t1.GDPR_RQST_STATUS_CD,t1.MID_NAME,t1.GDPR_RQST_STATUS_NAME,t1.GDPR_RQST_TYPE_CD,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.NATIONAL_ID_NBR,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,t1.GDPR_RQST_TYPE_NAME,t1.CNTRY_NAME,t1.MKTNG_PGM_DESC,t1.SR_NBR,t1.GDPR_CASE_OWNR_CNTCT_NBR,''ACTIVATE'',''VALID'' FROM V_GDPR_REVIEW t1, V_GDPR_REVIEW t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_LEGACY_CAMPAIGN', 'INSERT INTO NC_V_LEGACY_CAMPAIGN ( SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,''INSERT'',''VALID'' FROM V_LEGACY_CAMPAIGN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_LEGACY_CAMPAIGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_LEGACY_CAMPAIGN', 'INSERT INTO NC_V_LEGACY_CAMPAIGN ( SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,''DELETE'',''VALID'' FROM V_LEGACY_CAMPAIGN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_LEGACY_CAMPAIGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_LEGACY_CAMPAIGN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_LEGACY_CAMPAIGN', 'INSERT INTO NC_V_LEGACY_CAMPAIGN ( SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SELECTION_DATE,t1.CAMPAIGN_NAME,t1.MKTNG_PGM_NBR,t1.CAMPAIGN_CHANNEL,t1.MKTNG_PGM_NAME,''UPDATE'',''VALID'' FROM V_LEGACY_CAMPAIGN t1, V_LEGACY_CAMPAIGN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.SELECTION_DATE <> t2.SELECTION_DATE OR ( t1.SELECTION_DATE IS NULL AND t2.SELECTION_DATE IS NOT NULL) OR (t1.SELECTION_DATE IS NOT NULL AND t2.SELECTION_DATE IS NULL)) OR (t1.CAMPAIGN_NAME <> t2.CAMPAIGN_NAME OR ( t1.CAMPAIGN_NAME IS NULL AND t2.CAMPAIGN_NAME IS NOT NULL) OR (t1.CAMPAIGN_NAME IS NOT NULL AND t2.CAMPAIGN_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.CAMPAIGN_CHANNEL <> t2.CAMPAIGN_CHANNEL OR ( t1.CAMPAIGN_CHANNEL IS NULL AND t2.CAMPAIGN_CHANNEL IS NOT NULL) OR (t1.CAMPAIGN_CHANNEL IS NOT NULL AND t2.CAMPAIGN_CHANNEL IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_LEGACY_CAMPAIGN', 'INSERT INTO NC_V_LEGACY_CAMPAIGN ( SCENARIO_ID,REGIS_PRSNA_ID,SELECTION_DATE,CAMPAIGN_NAME,MKTNG_PGM_NBR,CAMPAIGN_CHANNEL,MKTNG_PGM_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SELECTION_DATE,t1.CAMPAIGN_NAME,t1.MKTNG_PGM_NBR,t1.CAMPAIGN_CHANNEL,t1.MKTNG_PGM_NAME,''ACTIVATE'',''VALID'' FROM V_LEGACY_CAMPAIGN t1, V_LEGACY_CAMPAIGN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,''INSERT'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,''DELETE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.BRTH_DATE,t1.CNTRY_NAME,t1.NATIONAL_ID_NBR,t1.PRSNA_STATUS_CODE,t1.NAME_PREFX_TXT,t1.NAME_SUFFX_TXT,t1.CNSMR_USER_NAME,t1.GENDR_IND,t1.LEGAL_ENT_NBR,t1.LANG_CODE,t1.LANG_NAME,t1.DATA_ORIGIN_SRCE_NBR,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_CODE,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.WIN_KEY,t1.FULL_ADDRESS,t1.MKTNG_PGM_NAME,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.CNTCT_POINT_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.HSHLD_PRSNA_ID,t1.CNTCT_POINT_TYPE,t1.CNTCT_POINT_CATEG_NAME,t1.SUBSCRPTN_OPT_NAME,t1.EMAIL_ADDR_TXT_1,t1.PHONE_CNTRY_NBR_1,t1.PHONE_AREA_NBR_1,t1.PHONE_EXCHG_NBR_1,t1.PHONE_LINE_NBR_1,t1.PHONE_EXTSN_NUM_1,t1.FULL_PHONE_NUM_1,''UPDATE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA t1, V_MATCHD_CNSMR_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.NAME_PREFX_TXT <> t2.NAME_PREFX_TXT OR ( t1.NAME_PREFX_TXT IS NULL AND t2.NAME_PREFX_TXT IS NOT NULL) OR (t1.NAME_PREFX_TXT IS NOT NULL AND t2.NAME_PREFX_TXT IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.CNSMR_USER_NAME <> t2.CNSMR_USER_NAME OR ( t1.CNSMR_USER_NAME IS NULL AND t2.CNSMR_USER_NAME IS NOT NULL) OR (t1.CNSMR_USER_NAME IS NOT NULL AND t2.CNSMR_USER_NAME IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.LANG_NAME <> t2.LANG_NAME OR ( t1.LANG_NAME IS NULL AND t2.LANG_NAME IS NOT NULL) OR (t1.LANG_NAME IS NOT NULL AND t2.LANG_NAME IS NULL)) OR (t1.DATA_ORIGIN_SRCE_NBR <> t2.DATA_ORIGIN_SRCE_NBR OR ( t1.DATA_ORIGIN_SRCE_NBR IS NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NOT NULL) OR (t1.DATA_ORIGIN_SRCE_NBR IS NOT NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.WIN_KEY <> t2.WIN_KEY OR ( t1.WIN_KEY IS NULL AND t2.WIN_KEY IS NOT NULL) OR (t1.WIN_KEY IS NOT NULL AND t2.WIN_KEY IS NULL)) OR (t1.FULL_ADDRESS <> t2.FULL_ADDRESS OR ( t1.FULL_ADDRESS IS NULL AND t2.FULL_ADDRESS IS NOT NULL) OR (t1.FULL_ADDRESS IS NOT NULL AND t2.FULL_ADDRESS IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.CNTCT_POINT_TYPE_CODE <> t2.CNTCT_POINT_TYPE_CODE OR ( t1.CNTCT_POINT_TYPE_CODE IS NULL AND t2.CNTCT_POINT_TYPE_CODE IS NOT NULL) OR (t1.CNTCT_POINT_TYPE_CODE IS NOT NULL AND t2.CNTCT_POINT_TYPE_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) OR (t1.CNTCT_POINT_TYPE <> t2.CNTCT_POINT_TYPE OR ( t1.CNTCT_POINT_TYPE IS NULL AND t2.CNTCT_POINT_TYPE IS NOT NULL) OR (t1.CNTCT_POINT_TYPE IS NOT NULL AND t2.CNTCT_POINT_TYPE IS NULL)) OR (t1.CNTCT_POINT_CATEG_NAME <> t2.CNTCT_POINT_CATEG_NAME OR ( t1.CNTCT_POINT_CATEG_NAME IS NULL AND t2.CNTCT_POINT_CATEG_NAME IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_NAME IS NOT NULL AND t2.CNTCT_POINT_CATEG_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.EMAIL_ADDR_TXT_1 <> t2.EMAIL_ADDR_TXT_1 OR ( t1.EMAIL_ADDR_TXT_1 IS NULL AND t2.EMAIL_ADDR_TXT_1 IS NOT NULL) OR (t1.EMAIL_ADDR_TXT_1 IS NOT NULL AND t2.EMAIL_ADDR_TXT_1 IS NULL)) OR (t1.PHONE_CNTRY_NBR_1 <> t2.PHONE_CNTRY_NBR_1 OR ( t1.PHONE_CNTRY_NBR_1 IS NULL AND t2.PHONE_CNTRY_NBR_1 IS NOT NULL) OR (t1.PHONE_CNTRY_NBR_1 IS NOT NULL AND t2.PHONE_CNTRY_NBR_1 IS NULL)) OR (t1.PHONE_AREA_NBR_1 <> t2.PHONE_AREA_NBR_1 OR ( t1.PHONE_AREA_NBR_1 IS NULL AND t2.PHONE_AREA_NBR_1 IS NOT NULL) OR (t1.PHONE_AREA_NBR_1 IS NOT NULL AND t2.PHONE_AREA_NBR_1 IS NULL)) OR (t1.PHONE_EXCHG_NBR_1 <> t2.PHONE_EXCHG_NBR_1 OR ( t1.PHONE_EXCHG_NBR_1 IS NULL AND t2.PHONE_EXCHG_NBR_1 IS NOT NULL) OR (t1.PHONE_EXCHG_NBR_1 IS NOT NULL AND t2.PHONE_EXCHG_NBR_1 IS NULL)) OR (t1.PHONE_LINE_NBR_1 <> t2.PHONE_LINE_NBR_1 OR ( t1.PHONE_LINE_NBR_1 IS NULL AND t2.PHONE_LINE_NBR_1 IS NOT NULL) OR (t1.PHONE_LINE_NBR_1 IS NOT NULL AND t2.PHONE_LINE_NBR_1 IS NULL)) OR (t1.PHONE_EXTSN_NUM_1 <> t2.PHONE_EXTSN_NUM_1 OR ( t1.PHONE_EXTSN_NUM_1 IS NULL AND t2.PHONE_EXTSN_NUM_1 IS NOT NULL) OR (t1.PHONE_EXTSN_NUM_1 IS NOT NULL AND t2.PHONE_EXTSN_NUM_1 IS NULL)) OR (t1.FULL_PHONE_NUM_1 <> t2.FULL_PHONE_NUM_1 OR ( t1.FULL_PHONE_NUM_1 IS NULL AND t2.FULL_PHONE_NUM_1 IS NOT NULL) OR (t1.FULL_PHONE_NUM_1 IS NOT NULL AND t2.FULL_PHONE_NUM_1 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA ( SCENARIO_ID,MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,CNTRY_NAME,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LEGAL_ENT_NBR,LANG_CODE,LANG_NAME,DATA_ORIGIN_SRCE_NBR,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,TERR_CODE,TERR_NAME,POSTL_AREA_CODE,WIN_KEY,FULL_ADDRESS,MKTNG_PGM_NAME,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,CNTCT_POINT_TYPE_CODE,CNTCT_POINT_CATEG_CODE,HSHLD_PRSNA_ID,CNTCT_POINT_TYPE,CNTCT_POINT_CATEG_NAME,SUBSCRPTN_OPT_NAME,EMAIL_ADDR_TXT_1,PHONE_CNTRY_NBR_1,PHONE_AREA_NBR_1,PHONE_EXCHG_NBR_1,PHONE_LINE_NBR_1,PHONE_EXTSN_NUM_1,FULL_PHONE_NUM_1,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MATCHD_CNSMR_PRSNA_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.BRTH_DATE,t1.CNTRY_NAME,t1.NATIONAL_ID_NBR,t1.PRSNA_STATUS_CODE,t1.NAME_PREFX_TXT,t1.NAME_SUFFX_TXT,t1.CNSMR_USER_NAME,t1.GENDR_IND,t1.LEGAL_ENT_NBR,t1.LANG_CODE,t1.LANG_NAME,t1.DATA_ORIGIN_SRCE_NBR,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.TERR_CODE,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.WIN_KEY,t1.FULL_ADDRESS,t1.MKTNG_PGM_NAME,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.CNTCT_POINT_TYPE_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.HSHLD_PRSNA_ID,t1.CNTCT_POINT_TYPE,t1.CNTCT_POINT_CATEG_NAME,t1.SUBSCRPTN_OPT_NAME,t1.EMAIL_ADDR_TXT_1,t1.PHONE_CNTRY_NBR_1,t1.PHONE_AREA_NBR_1,t1.PHONE_EXCHG_NBR_1,t1.PHONE_LINE_NBR_1,t1.PHONE_EXTSN_NUM_1,t1.FULL_PHONE_NUM_1,''ACTIVATE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA t1, V_MATCHD_CNSMR_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA_DTL', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA_DTL ( SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA_DTL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA_DTL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA_DTL', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA_DTL ( SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA_DTL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA_DTL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHD_CNSMR_PRSNA_DTL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA_DTL', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA_DTL ( SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GVN_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.MATCHD_CNSMR_PRSNA_ID,t1.GENDR_IND,t1.BRTH_DATE,t1.FULL_ADDRESS,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA_DTL t1, V_MATCHD_CNSMR_PRSNA_DTL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.FULL_ADDRESS <> t2.FULL_ADDRESS OR ( t1.FULL_ADDRESS IS NULL AND t2.FULL_ADDRESS IS NOT NULL) OR (t1.FULL_ADDRESS IS NOT NULL AND t2.FULL_ADDRESS IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHD_CNSMR_PRSNA_DTL', 'INSERT INTO NC_V_MATCHD_CNSMR_PRSNA_DTL ( SCENARIO_ID,GVN_NAME,FAMLY_NAME,FULL_NAME,MATCHD_CNSMR_PRSNA_ID,GENDR_IND,BRTH_DATE,FULL_ADDRESS,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GVN_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.MATCHD_CNSMR_PRSNA_ID,t1.GENDR_IND,t1.BRTH_DATE,t1.FULL_ADDRESS,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM V_MATCHD_CNSMR_PRSNA_DTL t1, V_MATCHD_CNSMR_PRSNA_DTL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_MATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,''INSERT'',''VALID'' FROM V_MATCHED_NOT_FND_OPT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_MATCHED_NOT_FND_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_MATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,''DELETE'',''VALID'' FROM V_MATCHED_NOT_FND_OPT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHED_NOT_FND_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_MATCHED_NOT_FND_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_MATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.REGIS_PRSNA_ID,t1.GVN_NAME_REG,t1.FAMLY_NAME_REG,t1.NATIONAL_ID_NBR,''UPDATE'',''VALID'' FROM V_MATCHED_NOT_FND_OPT t1, V_MATCHED_NOT_FND_OPT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.GVN_NAME_OPT <> t2.GVN_NAME_OPT OR ( t1.GVN_NAME_OPT IS NULL AND t2.GVN_NAME_OPT IS NOT NULL) OR (t1.GVN_NAME_OPT IS NOT NULL AND t2.GVN_NAME_OPT IS NULL)) OR (t1.MID_NAME_OPT <> t2.MID_NAME_OPT OR ( t1.MID_NAME_OPT IS NULL AND t2.MID_NAME_OPT IS NOT NULL) OR (t1.MID_NAME_OPT IS NOT NULL AND t2.MID_NAME_OPT IS NULL)) OR (t1.FAMLY_NAME_OPT <> t2.FAMLY_NAME_OPT OR ( t1.FAMLY_NAME_OPT IS NULL AND t2.FAMLY_NAME_OPT IS NOT NULL) OR (t1.FAMLY_NAME_OPT IS NOT NULL AND t2.FAMLY_NAME_OPT IS NULL)) OR (t1.FULL_PHONE_NUM_OPT <> t2.FULL_PHONE_NUM_OPT OR ( t1.FULL_PHONE_NUM_OPT IS NULL AND t2.FULL_PHONE_NUM_OPT IS NOT NULL) OR (t1.FULL_PHONE_NUM_OPT IS NOT NULL AND t2.FULL_PHONE_NUM_OPT IS NULL)) OR (t1.EMAIL_ADDR_TXT_OPT <> t2.EMAIL_ADDR_TXT_OPT OR ( t1.EMAIL_ADDR_TXT_OPT IS NULL AND t2.EMAIL_ADDR_TXT_OPT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT_OPT IS NOT NULL AND t2.EMAIL_ADDR_TXT_OPT IS NULL)) OR (t1.ADDRESS_OPT <> t2.ADDRESS_OPT OR ( t1.ADDRESS_OPT IS NULL AND t2.ADDRESS_OPT IS NOT NULL) OR (t1.ADDRESS_OPT IS NOT NULL AND t2.ADDRESS_OPT IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MATCH_FLG <> t2.MATCH_FLG OR ( t1.MATCH_FLG IS NULL AND t2.MATCH_FLG IS NOT NULL) OR (t1.MATCH_FLG IS NOT NULL AND t2.MATCH_FLG IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.GVN_NAME_REG <> t2.GVN_NAME_REG OR ( t1.GVN_NAME_REG IS NULL AND t2.GVN_NAME_REG IS NOT NULL) OR (t1.GVN_NAME_REG IS NOT NULL AND t2.GVN_NAME_REG IS NULL)) OR (t1.FAMLY_NAME_REG <> t2.FAMLY_NAME_REG OR ( t1.FAMLY_NAME_REG IS NULL AND t2.FAMLY_NAME_REG IS NOT NULL) OR (t1.FAMLY_NAME_REG IS NOT NULL AND t2.FAMLY_NAME_REG IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_MATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_MATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,REGIS_PRSNA_ID,GVN_NAME_REG,FAMLY_NAME_REG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.REGIS_PRSNA_ID,t1.GVN_NAME_REG,t1.FAMLY_NAME_REG,t1.NATIONAL_ID_NBR,''ACTIVATE'',''VALID'' FROM V_MATCHED_NOT_FND_OPT t1, V_MATCHED_NOT_FND_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PE_OPT_OUT', 'INSERT INTO NC_V_PE_OPT_OUT ( SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,''INSERT'',''VALID'' FROM V_PE_OPT_OUT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_PE_OPT_OUT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_PE_OPT_OUT', 'INSERT INTO NC_V_PE_OPT_OUT ( SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,''DELETE'',''VALID'' FROM V_PE_OPT_OUT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_PE_OPT_OUT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_PE_OPT_OUT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PE_OPT_OUT', 'INSERT INTO NC_V_PE_OPT_OUT ( SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.OPT_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.EMAIL_ADDR_TEXT,t1.FULL_PHONE_NUM,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_TERR_NAME,t1.SRC_POSTAL_AREA_CODE,t1.SRC_CNTRY_NAME,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.OPT_IND,t1.OPT_TIME,t1.OPT_REASN_TXT,t1.LAST_ACTIVITY_TM,t1.NATIONAL_ID_NBR,t1.CHANNEL_IND,t1.OPT_LEVEL_IND,t1.PE_OPTOUT_ID,t1.POSTL_ADDR_ID,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.STATUS_FLG,''UPDATE'',''VALID'' FROM V_PE_OPT_OUT t1, V_PE_OPT_OUT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.OPT_TYPE_CODE <> t2.OPT_TYPE_CODE OR ( t1.OPT_TYPE_CODE IS NULL AND t2.OPT_TYPE_CODE IS NOT NULL) OR (t1.OPT_TYPE_CODE IS NOT NULL AND t2.OPT_TYPE_CODE IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.EMAIL_ADDR_TEXT <> t2.EMAIL_ADDR_TEXT OR ( t1.EMAIL_ADDR_TEXT IS NULL AND t2.EMAIL_ADDR_TEXT IS NOT NULL) OR (t1.EMAIL_ADDR_TEXT IS NOT NULL AND t2.EMAIL_ADDR_TEXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.SRC_ADDR_LINE_1_TXT <> t2.SRC_ADDR_LINE_1_TXT OR ( t1.SRC_ADDR_LINE_1_TXT IS NULL AND t2.SRC_ADDR_LINE_1_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_1_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_1_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_2_TXT <> t2.SRC_ADDR_LINE_2_TXT OR ( t1.SRC_ADDR_LINE_2_TXT IS NULL AND t2.SRC_ADDR_LINE_2_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_2_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_2_TXT IS NULL)) OR (t1.SRC_ADDR_LINE_3_TXT <> t2.SRC_ADDR_LINE_3_TXT OR ( t1.SRC_ADDR_LINE_3_TXT IS NULL AND t2.SRC_ADDR_LINE_3_TXT IS NOT NULL) OR (t1.SRC_ADDR_LINE_3_TXT IS NOT NULL AND t2.SRC_ADDR_LINE_3_TXT IS NULL)) OR (t1.SRC_CITY_NAME <> t2.SRC_CITY_NAME OR ( t1.SRC_CITY_NAME IS NULL AND t2.SRC_CITY_NAME IS NOT NULL) OR (t1.SRC_CITY_NAME IS NOT NULL AND t2.SRC_CITY_NAME IS NULL)) OR (t1.SRC_TERR_NAME <> t2.SRC_TERR_NAME OR ( t1.SRC_TERR_NAME IS NULL AND t2.SRC_TERR_NAME IS NOT NULL) OR (t1.SRC_TERR_NAME IS NOT NULL AND t2.SRC_TERR_NAME IS NULL)) OR (t1.SRC_POSTAL_AREA_CODE <> t2.SRC_POSTAL_AREA_CODE OR ( t1.SRC_POSTAL_AREA_CODE IS NULL AND t2.SRC_POSTAL_AREA_CODE IS NOT NULL) OR (t1.SRC_POSTAL_AREA_CODE IS NOT NULL AND t2.SRC_POSTAL_AREA_CODE IS NULL)) OR (t1.SRC_CNTRY_NAME <> t2.SRC_CNTRY_NAME OR ( t1.SRC_CNTRY_NAME IS NULL AND t2.SRC_CNTRY_NAME IS NOT NULL) OR (t1.SRC_CNTRY_NAME IS NOT NULL AND t2.SRC_CNTRY_NAME IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.OPT_IND <> t2.OPT_IND OR ( t1.OPT_IND IS NULL AND t2.OPT_IND IS NOT NULL) OR (t1.OPT_IND IS NOT NULL AND t2.OPT_IND IS NULL)) OR (t1.OPT_TIME <> t2.OPT_TIME OR ( t1.OPT_TIME IS NULL AND t2.OPT_TIME IS NOT NULL) OR (t1.OPT_TIME IS NOT NULL AND t2.OPT_TIME IS NULL)) OR (t1.OPT_REASN_TXT <> t2.OPT_REASN_TXT OR ( t1.OPT_REASN_TXT IS NULL AND t2.OPT_REASN_TXT IS NOT NULL) OR (t1.OPT_REASN_TXT IS NOT NULL AND t2.OPT_REASN_TXT IS NULL)) OR (t1.LAST_ACTIVITY_TM <> t2.LAST_ACTIVITY_TM OR ( t1.LAST_ACTIVITY_TM IS NULL AND t2.LAST_ACTIVITY_TM IS NOT NULL) OR (t1.LAST_ACTIVITY_TM IS NOT NULL AND t2.LAST_ACTIVITY_TM IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.CHANNEL_IND <> t2.CHANNEL_IND OR ( t1.CHANNEL_IND IS NULL AND t2.CHANNEL_IND IS NOT NULL) OR (t1.CHANNEL_IND IS NOT NULL AND t2.CHANNEL_IND IS NULL)) OR (t1.OPT_LEVEL_IND <> t2.OPT_LEVEL_IND OR ( t1.OPT_LEVEL_IND IS NULL AND t2.OPT_LEVEL_IND IS NOT NULL) OR (t1.OPT_LEVEL_IND IS NOT NULL AND t2.OPT_LEVEL_IND IS NULL)) OR (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.POSTL_ADDR_ID <> t2.POSTL_ADDR_ID OR ( t1.POSTL_ADDR_ID IS NULL AND t2.POSTL_ADDR_ID IS NOT NULL) OR (t1.POSTL_ADDR_ID IS NOT NULL AND t2.POSTL_ADDR_ID IS NULL)) OR (t1.LOG_SOURCE_ID <> t2.LOG_SOURCE_ID OR ( t1.LOG_SOURCE_ID IS NULL AND t2.LOG_SOURCE_ID IS NOT NULL) OR (t1.LOG_SOURCE_ID IS NOT NULL AND t2.LOG_SOURCE_ID IS NULL)) OR (t1.LOG_UPDATE_USER <> t2.LOG_UPDATE_USER OR ( t1.LOG_UPDATE_USER IS NULL AND t2.LOG_UPDATE_USER IS NOT NULL) OR (t1.LOG_UPDATE_USER IS NOT NULL AND t2.LOG_UPDATE_USER IS NULL)) OR (t1.LOG_LOAD_ID <> t2.LOG_LOAD_ID OR ( t1.LOG_LOAD_ID IS NULL AND t2.LOG_LOAD_ID IS NOT NULL) OR (t1.LOG_LOAD_ID IS NOT NULL AND t2.LOG_LOAD_ID IS NULL)) OR (t1.STATUS_FLG <> t2.STATUS_FLG OR ( t1.STATUS_FLG IS NULL AND t2.STATUS_FLG IS NOT NULL) OR (t1.STATUS_FLG IS NOT NULL AND t2.STATUS_FLG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PE_OPT_OUT', 'INSERT INTO NC_V_PE_OPT_OUT ( SCENARIO_ID,REGIS_PRSNA_ID,OPT_TYPE_CODE,MKTNG_PGM_NBR,LEGAL_ENT_NBR,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,GVN_NAME,MID_NAME,FAMLY_NAME,EMAIL_ADDR_TEXT,FULL_PHONE_NUM,SRC_ADDR_LINE_1_TXT,SRC_ADDR_LINE_2_TXT,SRC_ADDR_LINE_3_TXT,SRC_CITY_NAME,SRC_TERR_NAME,SRC_POSTAL_AREA_CODE,SRC_CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_NAME,OPT_IND,OPT_TIME,OPT_REASN_TXT,LAST_ACTIVITY_TM,NATIONAL_ID_NBR,CHANNEL_IND,OPT_LEVEL_IND,PE_OPTOUT_ID,POSTL_ADDR_ID,LOG_SOURCE_ID,LOG_UPDATE_USER,LOG_LOAD_ID,STATUS_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.OPT_TYPE_CODE,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.EMAIL_ADDR_TEXT,t1.FULL_PHONE_NUM,t1.SRC_ADDR_LINE_1_TXT,t1.SRC_ADDR_LINE_2_TXT,t1.SRC_ADDR_LINE_3_TXT,t1.SRC_CITY_NAME,t1.SRC_TERR_NAME,t1.SRC_POSTAL_AREA_CODE,t1.SRC_CNTRY_NAME,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.OPT_IND,t1.OPT_TIME,t1.OPT_REASN_TXT,t1.LAST_ACTIVITY_TM,t1.NATIONAL_ID_NBR,t1.CHANNEL_IND,t1.OPT_LEVEL_IND,t1.PE_OPTOUT_ID,t1.POSTL_ADDR_ID,t1.LOG_SOURCE_ID,t1.LOG_UPDATE_USER,t1.LOG_LOAD_ID,t1.STATUS_FLG,''ACTIVATE'',''VALID'' FROM V_PE_OPT_OUT t1, V_PE_OPT_OUT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PHONE', 'INSERT INTO NC_V_PHONE ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''INSERT'',''VALID'' FROM V_PHONE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_PHONE', 'INSERT INTO NC_V_PHONE ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''DELETE'',''VALID'' FROM V_PHONE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_PHONE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PHONE', 'INSERT INTO NC_V_PHONE ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.FULL_PHONE_NUM,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''UPDATE'',''VALID'' FROM V_PHONE t1, V_PHONE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_PHONE', 'INSERT INTO NC_V_PHONE ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,FULL_PHONE_NUM,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.FULL_PHONE_NUM,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''ACTIVATE'',''VALID'' FROM V_PHONE t1, V_PHONE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_REGIS_PRSNA', 'INSERT INTO NC_V_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,''INSERT'',''VALID'' FROM V_REGIS_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_REGIS_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_REGIS_PRSNA', 'INSERT INTO NC_V_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,''DELETE'',''VALID'' FROM V_REGIS_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_REGIS_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_REGIS_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_REGIS_PRSNA', 'INSERT INTO NC_V_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.BRTH_DATE,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.TERR_NAME,t1.EMAIL_ADDR_TXT_1,t1.FULL_PHONE_NUM_1,t1.FULL_ADDRESS,t1.NAME_PREFX_TXT,t1.NAME_SUFFX_TXT,t1.CNSMR_USER_NAME,t1.GENDR_IND,t1.LANG_NAME,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.ADDR_LINE_3_TXT,t1.TERR_CODE,t1.NATIONAL_ID_NBR,t1.PRSNA_STATUS_CODE,t1.DATA_ORIGIN_SRCE_NBR,t1.DATA_OP_SRCE_NAME,t1.LANG_CODE,t1.WIN_KEY,t1.HSHLD_PRSNA_ID,''UPDATE'',''VALID'' FROM V_REGIS_PRSNA t1, V_REGIS_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.BRTH_DATE <> t2.BRTH_DATE OR ( t1.BRTH_DATE IS NULL AND t2.BRTH_DATE IS NOT NULL) OR (t1.BRTH_DATE IS NOT NULL AND t2.BRTH_DATE IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.STRET_NUM <> t2.STRET_NUM OR ( t1.STRET_NUM IS NULL AND t2.STRET_NUM IS NOT NULL) OR (t1.STRET_NUM IS NOT NULL AND t2.STRET_NUM IS NULL)) OR (t1.STRET_NAME <> t2.STRET_NAME OR ( t1.STRET_NAME IS NULL AND t2.STRET_NAME IS NOT NULL) OR (t1.STRET_NAME IS NOT NULL AND t2.STRET_NAME IS NULL)) OR (t1.APT_NUM <> t2.APT_NUM OR ( t1.APT_NUM IS NULL AND t2.APT_NUM IS NOT NULL) OR (t1.APT_NUM IS NOT NULL AND t2.APT_NUM IS NULL)) OR (t1.PO_BOX_NUM <> t2.PO_BOX_NUM OR ( t1.PO_BOX_NUM IS NULL AND t2.PO_BOX_NUM IS NOT NULL) OR (t1.PO_BOX_NUM IS NOT NULL AND t2.PO_BOX_NUM IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.FULL_ADDRESS <> t2.FULL_ADDRESS OR ( t1.FULL_ADDRESS IS NULL AND t2.FULL_ADDRESS IS NOT NULL) OR (t1.FULL_ADDRESS IS NOT NULL AND t2.FULL_ADDRESS IS NULL)) OR (t1.NAME_PREFX_TXT <> t2.NAME_PREFX_TXT OR ( t1.NAME_PREFX_TXT IS NULL AND t2.NAME_PREFX_TXT IS NOT NULL) OR (t1.NAME_PREFX_TXT IS NOT NULL AND t2.NAME_PREFX_TXT IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.CNSMR_USER_NAME <> t2.CNSMR_USER_NAME OR ( t1.CNSMR_USER_NAME IS NULL AND t2.CNSMR_USER_NAME IS NOT NULL) OR (t1.CNSMR_USER_NAME IS NOT NULL AND t2.CNSMR_USER_NAME IS NULL)) OR (t1.GENDR_IND <> t2.GENDR_IND OR ( t1.GENDR_IND IS NULL AND t2.GENDR_IND IS NOT NULL) OR (t1.GENDR_IND IS NOT NULL AND t2.GENDR_IND IS NULL)) OR (t1.LANG_NAME <> t2.LANG_NAME OR ( t1.LANG_NAME IS NULL AND t2.LANG_NAME IS NOT NULL) OR (t1.LANG_NAME IS NOT NULL AND t2.LANG_NAME IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.TERR_CODE <> t2.TERR_CODE OR ( t1.TERR_CODE IS NULL AND t2.TERR_CODE IS NOT NULL) OR (t1.TERR_CODE IS NOT NULL AND t2.TERR_CODE IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.PRSNA_STATUS_CODE <> t2.PRSNA_STATUS_CODE OR ( t1.PRSNA_STATUS_CODE IS NULL AND t2.PRSNA_STATUS_CODE IS NOT NULL) OR (t1.PRSNA_STATUS_CODE IS NOT NULL AND t2.PRSNA_STATUS_CODE IS NULL)) OR (t1.DATA_ORIGIN_SRCE_NBR <> t2.DATA_ORIGIN_SRCE_NBR OR ( t1.DATA_ORIGIN_SRCE_NBR IS NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NOT NULL) OR (t1.DATA_ORIGIN_SRCE_NBR IS NOT NULL AND t2.DATA_ORIGIN_SRCE_NBR IS NULL)) OR (t1.DATA_OP_SRCE_NAME <> t2.DATA_OP_SRCE_NAME OR ( t1.DATA_OP_SRCE_NAME IS NULL AND t2.DATA_OP_SRCE_NAME IS NOT NULL) OR (t1.DATA_OP_SRCE_NAME IS NOT NULL AND t2.DATA_OP_SRCE_NAME IS NULL)) OR (t1.LANG_CODE <> t2.LANG_CODE OR ( t1.LANG_CODE IS NULL AND t2.LANG_CODE IS NOT NULL) OR (t1.LANG_CODE IS NOT NULL AND t2.LANG_CODE IS NULL)) OR (t1.WIN_KEY <> t2.WIN_KEY OR ( t1.WIN_KEY IS NULL AND t2.WIN_KEY IS NOT NULL) OR (t1.WIN_KEY IS NOT NULL AND t2.WIN_KEY IS NULL)) OR (t1.HSHLD_PRSNA_ID <> t2.HSHLD_PRSNA_ID OR ( t1.HSHLD_PRSNA_ID IS NULL AND t2.HSHLD_PRSNA_ID IS NOT NULL) OR (t1.HSHLD_PRSNA_ID IS NOT NULL AND t2.HSHLD_PRSNA_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_REGIS_PRSNA', 'INSERT INTO NC_V_REGIS_PRSNA ( SCENARIO_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,GVN_NAME,MID_NAME,FAMLY_NAME,FULL_NAME,BRTH_DATE,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,STRET_NUM,STRET_NAME,APT_NUM,PO_BOX_NUM,CITY_NAME,POSTL_AREA_CODE,CNTRY_NAME,TERR_NAME,EMAIL_ADDR_TXT_1,FULL_PHONE_NUM_1,FULL_ADDRESS,NAME_PREFX_TXT,NAME_SUFFX_TXT,CNSMR_USER_NAME,GENDR_IND,LANG_NAME,MKTNG_PGM_NAME,LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID,ADDR_LINE_3_TXT,TERR_CODE,NATIONAL_ID_NBR,PRSNA_STATUS_CODE,DATA_ORIGIN_SRCE_NBR,DATA_OP_SRCE_NAME,LANG_CODE,WIN_KEY,HSHLD_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.FULL_NAME,t1.BRTH_DATE,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.STRET_NUM,t1.STRET_NAME,t1.APT_NUM,t1.PO_BOX_NUM,t1.CITY_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_NAME,t1.TERR_NAME,t1.EMAIL_ADDR_TXT_1,t1.FULL_PHONE_NUM_1,t1.FULL_ADDRESS,t1.NAME_PREFX_TXT,t1.NAME_SUFFX_TXT,t1.CNSMR_USER_NAME,t1.GENDR_IND,t1.LANG_NAME,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.ADDR_LINE_3_TXT,t1.TERR_CODE,t1.NATIONAL_ID_NBR,t1.PRSNA_STATUS_CODE,t1.DATA_ORIGIN_SRCE_NBR,t1.DATA_OP_SRCE_NAME,t1.LANG_CODE,t1.WIN_KEY,t1.HSHLD_PRSNA_ID,''ACTIVATE'',''VALID'' FROM V_REGIS_PRSNA t1, V_REGIS_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_ADDR_QLTY', 'INSERT INTO NC_V_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,''INSERT'',''VALID'' FROM V_RPT_ADDR_QLTY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_RPT_ADDR_QLTY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_ADDR_QLTY', 'INSERT INTO NC_V_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,''DELETE'',''VALID'' FROM V_RPT_ADDR_QLTY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_ADDR_QLTY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_ADDR_QLTY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_ADDR_QLTY', 'INSERT INTO NC_V_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.ACTV_RGSTRTN_CNT,t1.SUCCESS_PCT,t1.LCLTY_FAIL_PCT,t1.UNK_ADDR_PCT,t1.CITY_TERR_FAIL_PCT,t1.STREET_NAME_FAIL_PCT,t1.HOUSE_NO_FAIL_PCT,t1.STREET_COMPT_FAIL_PCT,t1.MULTIPLE_STREET_ADDR_PCT,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,t1.MULTIPLE_ADDR_MATCH_PCT,''UPDATE'',''VALID'' FROM V_RPT_ADDR_QLTY t1, V_RPT_ADDR_QLTY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.ACTV_RGSTRTN_CNT <> t2.ACTV_RGSTRTN_CNT OR ( t1.ACTV_RGSTRTN_CNT IS NULL AND t2.ACTV_RGSTRTN_CNT IS NOT NULL) OR (t1.ACTV_RGSTRTN_CNT IS NOT NULL AND t2.ACTV_RGSTRTN_CNT IS NULL)) OR (t1.SUCCESS_PCT <> t2.SUCCESS_PCT OR ( t1.SUCCESS_PCT IS NULL AND t2.SUCCESS_PCT IS NOT NULL) OR (t1.SUCCESS_PCT IS NOT NULL AND t2.SUCCESS_PCT IS NULL)) OR (t1.LCLTY_FAIL_PCT <> t2.LCLTY_FAIL_PCT OR ( t1.LCLTY_FAIL_PCT IS NULL AND t2.LCLTY_FAIL_PCT IS NOT NULL) OR (t1.LCLTY_FAIL_PCT IS NOT NULL AND t2.LCLTY_FAIL_PCT IS NULL)) OR (t1.UNK_ADDR_PCT <> t2.UNK_ADDR_PCT OR ( t1.UNK_ADDR_PCT IS NULL AND t2.UNK_ADDR_PCT IS NOT NULL) OR (t1.UNK_ADDR_PCT IS NOT NULL AND t2.UNK_ADDR_PCT IS NULL)) OR (t1.CITY_TERR_FAIL_PCT <> t2.CITY_TERR_FAIL_PCT OR ( t1.CITY_TERR_FAIL_PCT IS NULL AND t2.CITY_TERR_FAIL_PCT IS NOT NULL) OR (t1.CITY_TERR_FAIL_PCT IS NOT NULL AND t2.CITY_TERR_FAIL_PCT IS NULL)) OR (t1.STREET_NAME_FAIL_PCT <> t2.STREET_NAME_FAIL_PCT OR ( t1.STREET_NAME_FAIL_PCT IS NULL AND t2.STREET_NAME_FAIL_PCT IS NOT NULL) OR (t1.STREET_NAME_FAIL_PCT IS NOT NULL AND t2.STREET_NAME_FAIL_PCT IS NULL)) OR (t1.HOUSE_NO_FAIL_PCT <> t2.HOUSE_NO_FAIL_PCT OR ( t1.HOUSE_NO_FAIL_PCT IS NULL AND t2.HOUSE_NO_FAIL_PCT IS NOT NULL) OR (t1.HOUSE_NO_FAIL_PCT IS NOT NULL AND t2.HOUSE_NO_FAIL_PCT IS NULL)) OR (t1.STREET_COMPT_FAIL_PCT <> t2.STREET_COMPT_FAIL_PCT OR ( t1.STREET_COMPT_FAIL_PCT IS NULL AND t2.STREET_COMPT_FAIL_PCT IS NOT NULL) OR (t1.STREET_COMPT_FAIL_PCT IS NOT NULL AND t2.STREET_COMPT_FAIL_PCT IS NULL)) OR (t1.MULTIPLE_STREET_ADDR_PCT <> t2.MULTIPLE_STREET_ADDR_PCT OR ( t1.MULTIPLE_STREET_ADDR_PCT IS NULL AND t2.MULTIPLE_STREET_ADDR_PCT IS NOT NULL) OR (t1.MULTIPLE_STREET_ADDR_PCT IS NOT NULL AND t2.MULTIPLE_STREET_ADDR_PCT IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) OR (t1.MULTIPLE_ADDR_MATCH_PCT <> t2.MULTIPLE_ADDR_MATCH_PCT OR ( t1.MULTIPLE_ADDR_MATCH_PCT IS NULL AND t2.MULTIPLE_ADDR_MATCH_PCT IS NOT NULL) OR (t1.MULTIPLE_ADDR_MATCH_PCT IS NOT NULL AND t2.MULTIPLE_ADDR_MATCH_PCT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_ADDR_QLTY', 'INSERT INTO NC_V_RPT_ADDR_QLTY ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,ACTV_RGSTRTN_CNT,SUCCESS_PCT,LCLTY_FAIL_PCT,UNK_ADDR_PCT,CITY_TERR_FAIL_PCT,STREET_NAME_FAIL_PCT,HOUSE_NO_FAIL_PCT,STREET_COMPT_FAIL_PCT,MULTIPLE_STREET_ADDR_PCT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,MULTIPLE_ADDR_MATCH_PCT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.ACTV_RGSTRTN_CNT,t1.SUCCESS_PCT,t1.LCLTY_FAIL_PCT,t1.UNK_ADDR_PCT,t1.CITY_TERR_FAIL_PCT,t1.STREET_NAME_FAIL_PCT,t1.HOUSE_NO_FAIL_PCT,t1.STREET_COMPT_FAIL_PCT,t1.MULTIPLE_STREET_ADDR_PCT,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,t1.MULTIPLE_ADDR_MATCH_PCT,''ACTIVATE'',''VALID'' FROM V_RPT_ADDR_QLTY t1, V_RPT_ADDR_QLTY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_DATA_NBR', 'INSERT INTO NC_V_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,''INSERT'',''VALID'' FROM V_RPT_DATA_NBR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_RPT_DATA_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_DATA_NBR', 'INSERT INTO NC_V_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,''DELETE'',''VALID'' FROM V_RPT_DATA_NBR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_DATA_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_DATA_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_DATA_NBR', 'INSERT INTO NC_V_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,''UPDATE'',''VALID'' FROM V_RPT_DATA_NBR t1, V_RPT_DATA_NBR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.STAGING_NBR <> t2.STAGING_NBR OR ( t1.STAGING_NBR IS NULL AND t2.STAGING_NBR IS NOT NULL) OR (t1.STAGING_NBR IS NOT NULL AND t2.STAGING_NBR IS NULL)) OR (t1.ERROR_NBR <> t2.ERROR_NBR OR ( t1.ERROR_NBR IS NULL AND t2.ERROR_NBR IS NOT NULL) OR (t1.ERROR_NBR IS NOT NULL AND t2.ERROR_NBR IS NULL)) OR (t1.ACTIVE_NBR <> t2.ACTIVE_NBR OR ( t1.ACTIVE_NBR IS NULL AND t2.ACTIVE_NBR IS NOT NULL) OR (t1.ACTIVE_NBR IS NOT NULL AND t2.ACTIVE_NBR IS NULL)) OR (t1.DUPLICATE_NBR <> t2.DUPLICATE_NBR OR ( t1.DUPLICATE_NBR IS NULL AND t2.DUPLICATE_NBR IS NOT NULL) OR (t1.DUPLICATE_NBR IS NOT NULL AND t2.DUPLICATE_NBR IS NULL)) OR (t1.MTCHD_CNSMR_NBR <> t2.MTCHD_CNSMR_NBR OR ( t1.MTCHD_CNSMR_NBR IS NULL AND t2.MTCHD_CNSMR_NBR IS NOT NULL) OR (t1.MTCHD_CNSMR_NBR IS NOT NULL AND t2.MTCHD_CNSMR_NBR IS NULL)) OR (t1.HSHLD_NBR <> t2.HSHLD_NBR OR ( t1.HSHLD_NBR IS NULL AND t2.HSHLD_NBR IS NOT NULL) OR (t1.HSHLD_NBR IS NOT NULL AND t2.HSHLD_NBR IS NULL)) OR (t1.PHONE_OPT_IN <> t2.PHONE_OPT_IN OR ( t1.PHONE_OPT_IN IS NULL AND t2.PHONE_OPT_IN IS NOT NULL) OR (t1.PHONE_OPT_IN IS NOT NULL AND t2.PHONE_OPT_IN IS NULL)) OR (t1.PHONE_OPT_OUT <> t2.PHONE_OPT_OUT OR ( t1.PHONE_OPT_OUT IS NULL AND t2.PHONE_OPT_OUT IS NOT NULL) OR (t1.PHONE_OPT_OUT IS NOT NULL AND t2.PHONE_OPT_OUT IS NULL)) OR (t1.EMAIL_OPT_IN <> t2.EMAIL_OPT_IN OR ( t1.EMAIL_OPT_IN IS NULL AND t2.EMAIL_OPT_IN IS NOT NULL) OR (t1.EMAIL_OPT_IN IS NOT NULL AND t2.EMAIL_OPT_IN IS NULL)) OR (t1.EMAIL_OPT_OUT <> t2.EMAIL_OPT_OUT OR ( t1.EMAIL_OPT_OUT IS NULL AND t2.EMAIL_OPT_OUT IS NOT NULL) OR (t1.EMAIL_OPT_OUT IS NOT NULL AND t2.EMAIL_OPT_OUT IS NULL)) OR (t1.POSTAL_OPT_IN <> t2.POSTAL_OPT_IN OR ( t1.POSTAL_OPT_IN IS NULL AND t2.POSTAL_OPT_IN IS NOT NULL) OR (t1.POSTAL_OPT_IN IS NOT NULL AND t2.POSTAL_OPT_IN IS NULL)) OR (t1.POSTAL_OPT_OUT <> t2.POSTAL_OPT_OUT OR ( t1.POSTAL_OPT_OUT IS NULL AND t2.POSTAL_OPT_OUT IS NOT NULL) OR (t1.POSTAL_OPT_OUT IS NOT NULL AND t2.POSTAL_OPT_OUT IS NULL)) OR (t1.SOCIAL_OPT_IN <> t2.SOCIAL_OPT_IN OR ( t1.SOCIAL_OPT_IN IS NULL AND t2.SOCIAL_OPT_IN IS NOT NULL) OR (t1.SOCIAL_OPT_IN IS NOT NULL AND t2.SOCIAL_OPT_IN IS NULL)) OR (t1.SOCIAL_OPT_OUT <> t2.SOCIAL_OPT_OUT OR ( t1.SOCIAL_OPT_OUT IS NULL AND t2.SOCIAL_OPT_OUT IS NOT NULL) OR (t1.SOCIAL_OPT_OUT IS NOT NULL AND t2.SOCIAL_OPT_OUT IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_DATA_NBR', 'INSERT INTO NC_V_RPT_DATA_NBR ( SCENARIO_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,MTCHD_CNSMR_NBR,HSHLD_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,MKTNG_PGM_NAME,LEGAL_ENT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.MTCHD_CNSMR_NBR,t1.HSHLD_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,''ACTIVATE'',''VALID'' FROM V_RPT_DATA_NBR t1, V_RPT_DATA_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_LOAD_NBR', 'INSERT INTO NC_V_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,''INSERT'',''VALID'' FROM V_RPT_LOAD_NBR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_RPT_LOAD_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_LOAD_NBR', 'INSERT INTO NC_V_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,''DELETE'',''VALID'' FROM V_RPT_LOAD_NBR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_LOAD_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_LOAD_NBR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_LOAD_NBR', 'INSERT INTO NC_V_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.START_DATE,t1.END_DATE,t1.LOAD_SUCCESS,t1.SOURCE_ID,t1.REQ_MAIL_ID,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,t1.DATA_SOURCE,t1.STG_REJECT_CNT,t1.STG_REJECT_DESC,''UPDATE'',''VALID'' FROM V_RPT_LOAD_NBR t1, V_RPT_LOAD_NBR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.STAGING_NBR <> t2.STAGING_NBR OR ( t1.STAGING_NBR IS NULL AND t2.STAGING_NBR IS NOT NULL) OR (t1.STAGING_NBR IS NOT NULL AND t2.STAGING_NBR IS NULL)) OR (t1.ERROR_NBR <> t2.ERROR_NBR OR ( t1.ERROR_NBR IS NULL AND t2.ERROR_NBR IS NOT NULL) OR (t1.ERROR_NBR IS NOT NULL AND t2.ERROR_NBR IS NULL)) OR (t1.ACTIVE_NBR <> t2.ACTIVE_NBR OR ( t1.ACTIVE_NBR IS NULL AND t2.ACTIVE_NBR IS NOT NULL) OR (t1.ACTIVE_NBR IS NOT NULL AND t2.ACTIVE_NBR IS NULL)) OR (t1.DUPLICATE_NBR <> t2.DUPLICATE_NBR OR ( t1.DUPLICATE_NBR IS NULL AND t2.DUPLICATE_NBR IS NOT NULL) OR (t1.DUPLICATE_NBR IS NOT NULL AND t2.DUPLICATE_NBR IS NULL)) OR (t1.PHONE_OPT_IN <> t2.PHONE_OPT_IN OR ( t1.PHONE_OPT_IN IS NULL AND t2.PHONE_OPT_IN IS NOT NULL) OR (t1.PHONE_OPT_IN IS NOT NULL AND t2.PHONE_OPT_IN IS NULL)) OR (t1.PHONE_OPT_OUT <> t2.PHONE_OPT_OUT OR ( t1.PHONE_OPT_OUT IS NULL AND t2.PHONE_OPT_OUT IS NOT NULL) OR (t1.PHONE_OPT_OUT IS NOT NULL AND t2.PHONE_OPT_OUT IS NULL)) OR (t1.EMAIL_OPT_IN <> t2.EMAIL_OPT_IN OR ( t1.EMAIL_OPT_IN IS NULL AND t2.EMAIL_OPT_IN IS NOT NULL) OR (t1.EMAIL_OPT_IN IS NOT NULL AND t2.EMAIL_OPT_IN IS NULL)) OR (t1.EMAIL_OPT_OUT <> t2.EMAIL_OPT_OUT OR ( t1.EMAIL_OPT_OUT IS NULL AND t2.EMAIL_OPT_OUT IS NOT NULL) OR (t1.EMAIL_OPT_OUT IS NOT NULL AND t2.EMAIL_OPT_OUT IS NULL)) OR (t1.POSTAL_OPT_IN <> t2.POSTAL_OPT_IN OR ( t1.POSTAL_OPT_IN IS NULL AND t2.POSTAL_OPT_IN IS NOT NULL) OR (t1.POSTAL_OPT_IN IS NOT NULL AND t2.POSTAL_OPT_IN IS NULL)) OR (t1.POSTAL_OPT_OUT <> t2.POSTAL_OPT_OUT OR ( t1.POSTAL_OPT_OUT IS NULL AND t2.POSTAL_OPT_OUT IS NOT NULL) OR (t1.POSTAL_OPT_OUT IS NOT NULL AND t2.POSTAL_OPT_OUT IS NULL)) OR (t1.SOCIAL_OPT_IN <> t2.SOCIAL_OPT_IN OR ( t1.SOCIAL_OPT_IN IS NULL AND t2.SOCIAL_OPT_IN IS NOT NULL) OR (t1.SOCIAL_OPT_IN IS NOT NULL AND t2.SOCIAL_OPT_IN IS NULL)) OR (t1.SOCIAL_OPT_OUT <> t2.SOCIAL_OPT_OUT OR ( t1.SOCIAL_OPT_OUT IS NULL AND t2.SOCIAL_OPT_OUT IS NOT NULL) OR (t1.SOCIAL_OPT_OUT IS NOT NULL AND t2.SOCIAL_OPT_OUT IS NULL)) OR (t1.START_DATE <> t2.START_DATE OR ( t1.START_DATE IS NULL AND t2.START_DATE IS NOT NULL) OR (t1.START_DATE IS NOT NULL AND t2.START_DATE IS NULL)) OR (t1.END_DATE <> t2.END_DATE OR ( t1.END_DATE IS NULL AND t2.END_DATE IS NOT NULL) OR (t1.END_DATE IS NOT NULL AND t2.END_DATE IS NULL)) OR (t1.LOAD_SUCCESS <> t2.LOAD_SUCCESS OR ( t1.LOAD_SUCCESS IS NULL AND t2.LOAD_SUCCESS IS NOT NULL) OR (t1.LOAD_SUCCESS IS NOT NULL AND t2.LOAD_SUCCESS IS NULL)) OR (t1.SOURCE_ID <> t2.SOURCE_ID OR ( t1.SOURCE_ID IS NULL AND t2.SOURCE_ID IS NOT NULL) OR (t1.SOURCE_ID IS NOT NULL AND t2.SOURCE_ID IS NULL)) OR (t1.REQ_MAIL_ID <> t2.REQ_MAIL_ID OR ( t1.REQ_MAIL_ID IS NULL AND t2.REQ_MAIL_ID IS NOT NULL) OR (t1.REQ_MAIL_ID IS NOT NULL AND t2.REQ_MAIL_ID IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) OR (t1.DATA_SOURCE <> t2.DATA_SOURCE OR ( t1.DATA_SOURCE IS NULL AND t2.DATA_SOURCE IS NOT NULL) OR (t1.DATA_SOURCE IS NOT NULL AND t2.DATA_SOURCE IS NULL)) OR (t1.STG_REJECT_CNT <> t2.STG_REJECT_CNT OR ( t1.STG_REJECT_CNT IS NULL AND t2.STG_REJECT_CNT IS NOT NULL) OR (t1.STG_REJECT_CNT IS NOT NULL AND t2.STG_REJECT_CNT IS NULL)) OR (t1.STG_REJECT_DESC <> t2.STG_REJECT_DESC OR ( t1.STG_REJECT_DESC IS NULL AND t2.STG_REJECT_DESC IS NOT NULL) OR (t1.STG_REJECT_DESC IS NOT NULL AND t2.STG_REJECT_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_LOAD_NBR', 'INSERT INTO NC_V_RPT_LOAD_NBR ( SCENARIO_ID,LOAD_ID,MKTNG_PGM_NBR,LEGAL_ENT_NBR,STAGING_NBR,ERROR_NBR,ACTIVE_NBR,DUPLICATE_NBR,PHONE_OPT_IN,PHONE_OPT_OUT,EMAIL_OPT_IN,EMAIL_OPT_OUT,POSTAL_OPT_IN,POSTAL_OPT_OUT,SOCIAL_OPT_IN,SOCIAL_OPT_OUT,START_DATE,END_DATE,LOAD_SUCCESS,SOURCE_ID,REQ_MAIL_ID,MKTNG_PGM_NAME,LEGAL_ENT_NAME,DATA_SOURCE,STG_REJECT_CNT,STG_REJECT_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOAD_ID,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.STAGING_NBR,t1.ERROR_NBR,t1.ACTIVE_NBR,t1.DUPLICATE_NBR,t1.PHONE_OPT_IN,t1.PHONE_OPT_OUT,t1.EMAIL_OPT_IN,t1.EMAIL_OPT_OUT,t1.POSTAL_OPT_IN,t1.POSTAL_OPT_OUT,t1.SOCIAL_OPT_IN,t1.SOCIAL_OPT_OUT,t1.START_DATE,t1.END_DATE,t1.LOAD_SUCCESS,t1.SOURCE_ID,t1.REQ_MAIL_ID,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NAME,t1.DATA_SOURCE,t1.STG_REJECT_CNT,t1.STG_REJECT_DESC,''ACTIVATE'',''VALID'' FROM V_RPT_LOAD_NBR t1, V_RPT_LOAD_NBR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_PROFILE_CHANGES', 'INSERT INTO NC_V_RPT_PROFILE_CHANGES ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,''INSERT'',''VALID'' FROM V_RPT_PROFILE_CHANGES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_RPT_PROFILE_CHANGES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_PROFILE_CHANGES', 'INSERT INTO NC_V_RPT_PROFILE_CHANGES ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,''DELETE'',''VALID'' FROM V_RPT_PROFILE_CHANGES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_PROFILE_CHANGES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_RPT_PROFILE_CHANGES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_PROFILE_CHANGES', 'INSERT INTO NC_V_RPT_PROFILE_CHANGES ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.USER_ID,t1.PROFILE_CHANGE_NBR,t1.MONTH_START,''UPDATE'',''VALID'' FROM V_RPT_PROFILE_CHANGES t1, V_RPT_PROFILE_CHANGES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.USER_ID <> t2.USER_ID OR ( t1.USER_ID IS NULL AND t2.USER_ID IS NOT NULL) OR (t1.USER_ID IS NOT NULL AND t2.USER_ID IS NULL)) OR (t1.PROFILE_CHANGE_NBR <> t2.PROFILE_CHANGE_NBR OR ( t1.PROFILE_CHANGE_NBR IS NULL AND t2.PROFILE_CHANGE_NBR IS NOT NULL) OR (t1.PROFILE_CHANGE_NBR IS NOT NULL AND t2.PROFILE_CHANGE_NBR IS NULL)) OR (t1.MONTH_START <> t2.MONTH_START OR ( t1.MONTH_START IS NULL AND t2.MONTH_START IS NOT NULL) OR (t1.MONTH_START IS NOT NULL AND t2.MONTH_START IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_RPT_PROFILE_CHANGES', 'INSERT INTO NC_V_RPT_PROFILE_CHANGES ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,USER_ID,PROFILE_CHANGE_NBR,MONTH_START,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.USER_ID,t1.PROFILE_CHANGE_NBR,t1.MONTH_START,''ACTIVATE'',''VALID'' FROM V_RPT_PROFILE_CHANGES t1, V_RPT_PROFILE_CHANGES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SAMPLE', 'INSERT INTO NC_V_SAMPLE ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,''INSERT'',''VALID'' FROM V_SAMPLE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_SAMPLE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_SAMPLE', 'INSERT INTO NC_V_SAMPLE ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,''DELETE'',''VALID'' FROM V_SAMPLE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SAMPLE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SAMPLE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SAMPLE', 'INSERT INTO NC_V_SAMPLE ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_ID,t1.INCTV_NBR,t1.PROD_ITEM_NUM,t1.ORDER_NUM,t1.ORDER_STATUS,t1.SHIPPED_DATE,t1.COURIER_URL,t1.TRACKING_NBR,t1.INCTV_NAME,''UPDATE'',''VALID'' FROM V_SAMPLE t1, V_SAMPLE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.CNSMR_ACTN_TYPE_CODE <> t2.CNSMR_ACTN_TYPE_CODE OR ( t1.CNSMR_ACTN_TYPE_CODE IS NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NOT NULL) OR (t1.CNSMR_ACTN_TYPE_CODE IS NOT NULL AND t2.CNSMR_ACTN_TYPE_CODE IS NULL)) OR (t1.CNSMR_ACTN_NUM <> t2.CNSMR_ACTN_NUM OR ( t1.CNSMR_ACTN_NUM IS NULL AND t2.CNSMR_ACTN_NUM IS NOT NULL) OR (t1.CNSMR_ACTN_NUM IS NOT NULL AND t2.CNSMR_ACTN_NUM IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNSMR_ACTN_ID <> t2.CNSMR_ACTN_ID OR ( t1.CNSMR_ACTN_ID IS NULL AND t2.CNSMR_ACTN_ID IS NOT NULL) OR (t1.CNSMR_ACTN_ID IS NOT NULL AND t2.CNSMR_ACTN_ID IS NULL)) OR (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.PROD_ITEM_NUM <> t2.PROD_ITEM_NUM OR ( t1.PROD_ITEM_NUM IS NULL AND t2.PROD_ITEM_NUM IS NOT NULL) OR (t1.PROD_ITEM_NUM IS NOT NULL AND t2.PROD_ITEM_NUM IS NULL)) OR (t1.ORDER_NUM <> t2.ORDER_NUM OR ( t1.ORDER_NUM IS NULL AND t2.ORDER_NUM IS NOT NULL) OR (t1.ORDER_NUM IS NOT NULL AND t2.ORDER_NUM IS NULL)) OR (t1.ORDER_STATUS <> t2.ORDER_STATUS OR ( t1.ORDER_STATUS IS NULL AND t2.ORDER_STATUS IS NOT NULL) OR (t1.ORDER_STATUS IS NOT NULL AND t2.ORDER_STATUS IS NULL)) OR (t1.SHIPPED_DATE <> t2.SHIPPED_DATE OR ( t1.SHIPPED_DATE IS NULL AND t2.SHIPPED_DATE IS NOT NULL) OR (t1.SHIPPED_DATE IS NOT NULL AND t2.SHIPPED_DATE IS NULL)) OR (t1.COURIER_URL <> t2.COURIER_URL OR ( t1.COURIER_URL IS NULL AND t2.COURIER_URL IS NOT NULL) OR (t1.COURIER_URL IS NOT NULL AND t2.COURIER_URL IS NULL)) OR (t1.TRACKING_NBR <> t2.TRACKING_NBR OR ( t1.TRACKING_NBR IS NULL AND t2.TRACKING_NBR IS NOT NULL) OR (t1.TRACKING_NBR IS NOT NULL AND t2.TRACKING_NBR IS NULL)) OR (t1.INCTV_NAME <> t2.INCTV_NAME OR ( t1.INCTV_NAME IS NULL AND t2.INCTV_NAME IS NOT NULL) OR (t1.INCTV_NAME IS NOT NULL AND t2.INCTV_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SAMPLE', 'INSERT INTO NC_V_SAMPLE ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_PRSNA_ID,CNSMR_ACTN_TYPE_CODE,CNSMR_ACTN_NUM,LEGAL_ENT_NBR,CNSMR_ACTN_ID,INCTV_NBR,PROD_ITEM_NUM,ORDER_NUM,ORDER_STATUS,SHIPPED_DATE,COURIER_URL,TRACKING_NBR,INCTV_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_PRSNA_ID,t1.CNSMR_ACTN_TYPE_CODE,t1.CNSMR_ACTN_NUM,t1.LEGAL_ENT_NBR,t1.CNSMR_ACTN_ID,t1.INCTV_NBR,t1.PROD_ITEM_NUM,t1.ORDER_NUM,t1.ORDER_STATUS,t1.SHIPPED_DATE,t1.COURIER_URL,t1.TRACKING_NBR,t1.INCTV_NAME,''ACTIVATE'',''VALID'' FROM V_SAMPLE t1, V_SAMPLE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SOCIAL', 'INSERT INTO NC_V_SOCIAL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''INSERT'',''VALID'' FROM V_SOCIAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_SOCIAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_SOCIAL', 'INSERT INTO NC_V_SOCIAL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,''DELETE'',''VALID'' FROM V_SOCIAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SOCIAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SOCIAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SOCIAL', 'INSERT INTO NC_V_SOCIAL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.SOC_NET_STATUS_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''UPDATE'',''VALID'' FROM V_SOCIAL t1, V_SOCIAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.PREF_CNTCT_POINT_IND <> t2.PREF_CNTCT_POINT_IND OR ( t1.PREF_CNTCT_POINT_IND IS NULL AND t2.PREF_CNTCT_POINT_IND IS NOT NULL) OR (t1.PREF_CNTCT_POINT_IND IS NOT NULL AND t2.PREF_CNTCT_POINT_IND IS NULL)) OR (t1.SOC_NET_STATUS_CODE <> t2.SOC_NET_STATUS_CODE OR ( t1.SOC_NET_STATUS_CODE IS NULL AND t2.SOC_NET_STATUS_CODE IS NOT NULL) OR (t1.SOC_NET_STATUS_CODE IS NOT NULL AND t2.SOC_NET_STATUS_CODE IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL <> t2.SOCIAL_NETWK_ACCT_ID_VAL OR ( t1.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL) OR (t1.SOCIAL_NETWK_ACCT_ID_VAL IS NOT NULL AND t2.SOCIAL_NETWK_ACCT_ID_VAL IS NULL)) OR (t1.SUBSCRPTN_OPT_NAME <> t2.SUBSCRPTN_OPT_NAME OR ( t1.SUBSCRPTN_OPT_NAME IS NULL AND t2.SUBSCRPTN_OPT_NAME IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NAME IS NOT NULL AND t2.SUBSCRPTN_OPT_NAME IS NULL)) OR (t1.SUBSCRPTN_OPT_STMT_TXT <> t2.SUBSCRPTN_OPT_STMT_TXT OR ( t1.SUBSCRPTN_OPT_STMT_TXT IS NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL) OR (t1.SUBSCRPTN_OPT_STMT_TXT IS NOT NULL AND t2.SUBSCRPTN_OPT_STMT_TXT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SOCIAL', 'INSERT INTO NC_V_SOCIAL ( SCENARIO_ID,REGIS_PRSNA_ID,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,PREF_CNTCT_POINT_IND,SOC_NET_STATUS_CODE,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NAME,SUBSCRPTN_OPT_STMT_TXT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.REGIS_PRSNA_ID,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.PREF_CNTCT_POINT_IND,t1.SOC_NET_STATUS_CODE,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.MKTNG_PGM_NBR,t1.LEGAL_ENT_NBR,t1.SOCIAL_NETWK_ACCT_ID_VAL,t1.SUBSCRPTN_OPT_NAME,t1.SUBSCRPTN_OPT_STMT_TXT,''ACTIVATE'',''VALID'' FROM V_SOCIAL t1, V_SOCIAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SRC_EMAIL_DETAIL', 'INSERT INTO NC_V_SRC_EMAIL_DETAIL ( SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,''INSERT'',''VALID'' FROM V_SRC_EMAIL_DETAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_SRC_EMAIL_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_SRC_EMAIL_DETAIL', 'INSERT INTO NC_V_SRC_EMAIL_DETAIL ( SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,''DELETE'',''VALID'' FROM V_SRC_EMAIL_DETAIL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SRC_EMAIL_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_SRC_EMAIL_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SRC_EMAIL_DETAIL', 'INSERT INTO NC_V_SRC_EMAIL_DETAIL ( SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOURCE_ID,t1.REQ_MAIL_ID,t1.LOAD_ID,t1.AGN_CON_MAIL_ID,''UPDATE'',''VALID'' FROM V_SRC_EMAIL_DETAIL t1, V_SRC_EMAIL_DETAIL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOURCE_ID <> t2.SOURCE_ID OR ( t1.SOURCE_ID IS NULL AND t2.SOURCE_ID IS NOT NULL) OR (t1.SOURCE_ID IS NOT NULL AND t2.SOURCE_ID IS NULL)) OR (t1.REQ_MAIL_ID <> t2.REQ_MAIL_ID OR ( t1.REQ_MAIL_ID IS NULL AND t2.REQ_MAIL_ID IS NOT NULL) OR (t1.REQ_MAIL_ID IS NOT NULL AND t2.REQ_MAIL_ID IS NULL)) OR (t1.LOAD_ID <> t2.LOAD_ID OR ( t1.LOAD_ID IS NULL AND t2.LOAD_ID IS NOT NULL) OR (t1.LOAD_ID IS NOT NULL AND t2.LOAD_ID IS NULL)) OR (t1.AGN_CON_MAIL_ID <> t2.AGN_CON_MAIL_ID OR ( t1.AGN_CON_MAIL_ID IS NULL AND t2.AGN_CON_MAIL_ID IS NOT NULL) OR (t1.AGN_CON_MAIL_ID IS NOT NULL AND t2.AGN_CON_MAIL_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_SRC_EMAIL_DETAIL', 'INSERT INTO NC_V_SRC_EMAIL_DETAIL ( SCENARIO_ID,SOURCE_ID,REQ_MAIL_ID,LOAD_ID,AGN_CON_MAIL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOURCE_ID,t1.REQ_MAIL_ID,t1.LOAD_ID,t1.AGN_CON_MAIL_ID,''ACTIVATE'',''VALID'' FROM V_SRC_EMAIL_DETAIL t1, V_SRC_EMAIL_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,''INSERT'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,''DELETE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.NATIONAL_ID_NBR,''UPDATE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT t1, V_UNMATCHED_NOT_FND_OPT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.GVN_NAME_OPT <> t2.GVN_NAME_OPT OR ( t1.GVN_NAME_OPT IS NULL AND t2.GVN_NAME_OPT IS NOT NULL) OR (t1.GVN_NAME_OPT IS NOT NULL AND t2.GVN_NAME_OPT IS NULL)) OR (t1.MID_NAME_OPT <> t2.MID_NAME_OPT OR ( t1.MID_NAME_OPT IS NULL AND t2.MID_NAME_OPT IS NOT NULL) OR (t1.MID_NAME_OPT IS NOT NULL AND t2.MID_NAME_OPT IS NULL)) OR (t1.FAMLY_NAME_OPT <> t2.FAMLY_NAME_OPT OR ( t1.FAMLY_NAME_OPT IS NULL AND t2.FAMLY_NAME_OPT IS NOT NULL) OR (t1.FAMLY_NAME_OPT IS NOT NULL AND t2.FAMLY_NAME_OPT IS NULL)) OR (t1.FULL_PHONE_NUM_OPT <> t2.FULL_PHONE_NUM_OPT OR ( t1.FULL_PHONE_NUM_OPT IS NULL AND t2.FULL_PHONE_NUM_OPT IS NOT NULL) OR (t1.FULL_PHONE_NUM_OPT IS NOT NULL AND t2.FULL_PHONE_NUM_OPT IS NULL)) OR (t1.EMAIL_ADDR_TXT_OPT <> t2.EMAIL_ADDR_TXT_OPT OR ( t1.EMAIL_ADDR_TXT_OPT IS NULL AND t2.EMAIL_ADDR_TXT_OPT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT_OPT IS NOT NULL AND t2.EMAIL_ADDR_TXT_OPT IS NULL)) OR (t1.ADDRESS_OPT <> t2.ADDRESS_OPT OR ( t1.ADDRESS_OPT IS NULL AND t2.ADDRESS_OPT IS NOT NULL) OR (t1.ADDRESS_OPT IS NOT NULL AND t2.ADDRESS_OPT IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MATCH_FLG <> t2.MATCH_FLG OR ( t1.MATCH_FLG IS NULL AND t2.MATCH_FLG IS NOT NULL) OR (t1.MATCH_FLG IS NOT NULL AND t2.MATCH_FLG IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.NATIONAL_ID_NBR,''ACTIVATE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT t1, V_UNMATCHED_NOT_FND_OPT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT_RPRT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT_RPRT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,''INSERT'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT_RPRT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT_RPRT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,''DELETE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT_RPRT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT_RPRT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.ADDRESS_OPT1,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.NATIONAL_ID_NBR,''UPDATE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t1, V_UNMATCHED_NOT_FND_OPT_RPRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PE_OPTOUT_ID <> t2.PE_OPTOUT_ID OR ( t1.PE_OPTOUT_ID IS NULL AND t2.PE_OPTOUT_ID IS NOT NULL) OR (t1.PE_OPTOUT_ID IS NOT NULL AND t2.PE_OPTOUT_ID IS NULL)) OR (t1.GVN_NAME_OPT <> t2.GVN_NAME_OPT OR ( t1.GVN_NAME_OPT IS NULL AND t2.GVN_NAME_OPT IS NOT NULL) OR (t1.GVN_NAME_OPT IS NOT NULL AND t2.GVN_NAME_OPT IS NULL)) OR (t1.MID_NAME_OPT <> t2.MID_NAME_OPT OR ( t1.MID_NAME_OPT IS NULL AND t2.MID_NAME_OPT IS NOT NULL) OR (t1.MID_NAME_OPT IS NOT NULL AND t2.MID_NAME_OPT IS NULL)) OR (t1.FAMLY_NAME_OPT <> t2.FAMLY_NAME_OPT OR ( t1.FAMLY_NAME_OPT IS NULL AND t2.FAMLY_NAME_OPT IS NOT NULL) OR (t1.FAMLY_NAME_OPT IS NOT NULL AND t2.FAMLY_NAME_OPT IS NULL)) OR (t1.FULL_PHONE_NUM_OPT <> t2.FULL_PHONE_NUM_OPT OR ( t1.FULL_PHONE_NUM_OPT IS NULL AND t2.FULL_PHONE_NUM_OPT IS NOT NULL) OR (t1.FULL_PHONE_NUM_OPT IS NOT NULL AND t2.FULL_PHONE_NUM_OPT IS NULL)) OR (t1.EMAIL_ADDR_TXT_OPT <> t2.EMAIL_ADDR_TXT_OPT OR ( t1.EMAIL_ADDR_TXT_OPT IS NULL AND t2.EMAIL_ADDR_TXT_OPT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT_OPT IS NOT NULL AND t2.EMAIL_ADDR_TXT_OPT IS NULL)) OR (t1.ADDRESS_OPT <> t2.ADDRESS_OPT OR ( t1.ADDRESS_OPT IS NULL AND t2.ADDRESS_OPT IS NOT NULL) OR (t1.ADDRESS_OPT IS NOT NULL AND t2.ADDRESS_OPT IS NULL)) OR (t1.ADDRESS_OPT1 <> t2.ADDRESS_OPT1 OR ( t1.ADDRESS_OPT1 IS NULL AND t2.ADDRESS_OPT1 IS NOT NULL) OR (t1.ADDRESS_OPT1 IS NOT NULL AND t2.ADDRESS_OPT1 IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MATCH_FLG <> t2.MATCH_FLG OR ( t1.MATCH_FLG IS NULL AND t2.MATCH_FLG IS NOT NULL) OR (t1.MATCH_FLG IS NOT NULL AND t2.MATCH_FLG IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('V_UNMATCHED_NOT_FND_OPT_RPRT', 'INSERT INTO NC_V_UNMATCHED_NOT_FND_OPT_RPRT ( SCENARIO_ID,PE_OPTOUT_ID,GVN_NAME_OPT,MID_NAME_OPT,FAMLY_NAME_OPT,FULL_PHONE_NUM_OPT,EMAIL_ADDR_TXT_OPT,ADDRESS_OPT,ADDRESS_OPT1,LEGAL_ENT_NBR,MATCH_FLG,NATIONAL_ID_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PE_OPTOUT_ID,t1.GVN_NAME_OPT,t1.MID_NAME_OPT,t1.FAMLY_NAME_OPT,t1.FULL_PHONE_NUM_OPT,t1.EMAIL_ADDR_TXT_OPT,t1.ADDRESS_OPT,t1.ADDRESS_OPT1,t1.LEGAL_ENT_NBR,t1.MATCH_FLG,t1.NATIONAL_ID_NBR,''ACTIVATE'',''VALID'' FROM V_UNMATCHED_NOT_FND_OPT_RPRT t1, V_UNMATCHED_NOT_FND_OPT_RPRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_VALID_LANGUAGE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VALID_LANGUAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_VALID_LANGUAGE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VALID_LANGUAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VALID_LANGUAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Language_Id,t1.LANGUAGE_NAME,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_VALID_LANGUAGE t1, MST_VALID_LANGUAGE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Language_Name <> t2.Language_Name OR ( t1.Language_Name IS NULL AND t2.Language_Name IS NOT NULL) OR (t1.Language_Name IS NOT NULL AND t2.Language_Name IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Language_Id,t1.LANGUAGE_NAME,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_VALID_LANGUAGE t1, MST_VALID_LANGUAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,''INSERT'',''VALID'' FROM IN_VERSION_DETAILS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VERSION_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,''DELETE'',''VALID'' FROM MST_VERSION_DETAILS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VERSION_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VERSION_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.SRC_PHY_TABLE_NAME,t1.TGT_PHY_TABLE_NAME,t1.SNAPSHOT_REQ_TIME,t1.VER_STATUS,''UPDATE'',''VALID'' FROM IN_VERSION_DETAILS t1, MST_VERSION_DETAILS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.versionId <> t2.versionId OR ( t1.versionId IS NULL AND t2.versionId IS NOT NULL) OR (t1.versionId IS NOT NULL AND t2.versionId IS NULL)) OR (t1.srcPhyTableName <> t2.srcPhyTableName OR ( t1.srcPhyTableName IS NULL AND t2.srcPhyTableName IS NOT NULL) OR (t1.srcPhyTableName IS NOT NULL AND t2.srcPhyTableName IS NULL)) OR (t1.tgtPhyTableName <> t2.tgtPhyTableName OR ( t1.tgtPhyTableName IS NULL AND t2.tgtPhyTableName IS NOT NULL) OR (t1.tgtPhyTableName IS NOT NULL AND t2.tgtPhyTableName IS NULL)) OR (t1.snapshotReqTime <> t2.snapshotReqTime OR ( t1.snapshotReqTime IS NULL AND t2.snapshotReqTime IS NOT NULL) OR (t1.snapshotReqTime IS NOT NULL AND t2.snapshotReqTime IS NULL)) OR (t1.verStatus <> t2.verStatus OR ( t1.verStatus IS NULL AND t2.verStatus IS NOT NULL) OR (t1.verStatus IS NOT NULL AND t2.verStatus IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.SRC_PHY_TABLE_NAME,t1.TGT_PHY_TABLE_NAME,t1.SNAPSHOT_REQ_TIME,t1.VER_STATUS,''ACTIVATE'',''VALID'' FROM IN_VERSION_DETAILS t1, MST_VERSION_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,''INSERT'',''VALID'' FROM IN_VERSION_INFO t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VERSION_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,''DELETE'',''VALID'' FROM MST_VERSION_INFO t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VERSION_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VERSION_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.CREATION_DATE,t1.REASON,''UPDATE'',''VALID'' FROM IN_VERSION_INFO t1, MST_VERSION_INFO t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.versionId <> t2.versionId OR ( t1.versionId IS NULL AND t2.versionId IS NOT NULL) OR (t1.versionId IS NOT NULL AND t2.versionId IS NULL)) OR (t1.creationDate <> t2.creationDate OR ( t1.creationDate IS NULL AND t2.creationDate IS NOT NULL) OR (t1.creationDate IS NOT NULL AND t2.creationDate IS NULL)) OR (t1.reason <> t2.reason OR ( t1.reason IS NULL AND t2.reason IS NOT NULL) OR (t1.reason IS NOT NULL AND t2.reason IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.CREATION_DATE,t1.REASON,''ACTIVATE'',''VALID'' FROM IN_VERSION_INFO t1, MST_VERSION_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WEB_SITE', 'INSERT INTO NC_WEB_SITE ( SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,''INSERT'',''VALID'' FROM IN_WEB_SITE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WEB_SITE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WEB_SITE_NBR = t2.WEB_SITE_NBR )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WEB_SITE', 'INSERT INTO NC_WEB_SITE ( SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,''DELETE'',''VALID'' FROM WEB_SITE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WEB_SITE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WEB_SITE_NBR = t2.WEB_SITE_NBR ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WEB_SITE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WEB_SITE_NBR = t2.WEB_SITE_NBR));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WEB_SITE', 'INSERT INTO NC_WEB_SITE ( SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.WEB_SITE_NBR,t1.WEB_SITE_URL_TXT,t1.IS_WEB_STORE_IND,t1.CNTRY_CODE,t1.AGNCY_NBR,''UPDATE'',''VALID'' FROM IN_WEB_SITE t1, WEB_SITE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WEB_SITE_NBR = t2.WEB_SITE_NBR AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.WEB_SITE_NBR <> t2.WEB_SITE_NBR OR ( t1.WEB_SITE_NBR IS NULL AND t2.WEB_SITE_NBR IS NOT NULL) OR (t1.WEB_SITE_NBR IS NOT NULL AND t2.WEB_SITE_NBR IS NULL)) OR (t1.WEB_SITE_URL_TXT <> t2.WEB_SITE_URL_TXT OR ( t1.WEB_SITE_URL_TXT IS NULL AND t2.WEB_SITE_URL_TXT IS NOT NULL) OR (t1.WEB_SITE_URL_TXT IS NOT NULL AND t2.WEB_SITE_URL_TXT IS NULL)) OR (t1.IS_WEB_STORE_IND <> t2.IS_WEB_STORE_IND OR ( t1.IS_WEB_STORE_IND IS NULL AND t2.IS_WEB_STORE_IND IS NOT NULL) OR (t1.IS_WEB_STORE_IND IS NOT NULL AND t2.IS_WEB_STORE_IND IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.AGNCY_NBR <> t2.AGNCY_NBR OR ( t1.AGNCY_NBR IS NULL AND t2.AGNCY_NBR IS NOT NULL) OR (t1.AGNCY_NBR IS NOT NULL AND t2.AGNCY_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WEB_SITE', 'INSERT INTO NC_WEB_SITE ( SCENARIO_ID,WEB_SITE_NBR,WEB_SITE_URL_TXT,IS_WEB_STORE_IND,CNTRY_CODE,AGNCY_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.WEB_SITE_NBR,t1.WEB_SITE_URL_TXT,t1.IS_WEB_STORE_IND,t1.CNTRY_CODE,t1.AGNCY_NBR,''ACTIVATE'',''VALID'' FROM IN_WEB_SITE t1, WEB_SITE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WEB_SITE_NBR = t2.WEB_SITE_NBR AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WINKEY_TRIGGER', 'INSERT INTO NC_WINKEY_TRIGGER ( SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,''INSERT'',''VALID'' FROM IN_WINKEY_TRIGGER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WINKEY_TRIGGER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WINDOW_KEY_01 = t2.WINDOW_KEY_01 )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WINKEY_TRIGGER', 'INSERT INTO NC_WINKEY_TRIGGER ( SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,''DELETE'',''VALID'' FROM WINKEY_TRIGGER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WINKEY_TRIGGER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WINDOW_KEY_01 = t2.WINDOW_KEY_01 ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WINKEY_TRIGGER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WINDOW_KEY_01 = t2.WINDOW_KEY_01));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WINKEY_TRIGGER', 'INSERT INTO NC_WINKEY_TRIGGER ( SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.WINDOW_KEY_01,t1.EMAIL_ADDR_TXT,t1.PHONE,t1.LEGAL_ENT_NBR,''UPDATE'',''VALID'' FROM IN_WINKEY_TRIGGER t1, WINKEY_TRIGGER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WINDOW_KEY_01 = t2.WINDOW_KEY_01 AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.WINDOW_KEY_01 <> t2.WINDOW_KEY_01 OR ( t1.WINDOW_KEY_01 IS NULL AND t2.WINDOW_KEY_01 IS NOT NULL) OR (t1.WINDOW_KEY_01 IS NOT NULL AND t2.WINDOW_KEY_01 IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.PHONE <> t2.PHONE OR ( t1.PHONE IS NULL AND t2.PHONE IS NOT NULL) OR (t1.PHONE IS NOT NULL AND t2.PHONE IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WINKEY_TRIGGER', 'INSERT INTO NC_WINKEY_TRIGGER ( SCENARIO_ID,WINDOW_KEY_01,EMAIL_ADDR_TXT,PHONE,LEGAL_ENT_NBR,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.WINDOW_KEY_01,t1.EMAIL_ADDR_TXT,t1.PHONE,t1.LEGAL_ENT_NBR,''ACTIVATE'',''VALID'' FROM IN_WINKEY_TRIGGER t1, WINKEY_TRIGGER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.WINDOW_KEY_01 = t2.WINDOW_KEY_01 AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_EMAIL', 'INSERT INTO NC_WS_CAMPAIGN_EMAIL ( SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,''INSERT'',''VALID'' FROM WS_CAMPAIGN_EMAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_EMAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_EMAIL', 'INSERT INTO NC_WS_CAMPAIGN_EMAIL ( SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,''DELETE'',''VALID'' FROM WS_CAMPAIGN_EMAIL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_EMAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_EMAIL', 'INSERT INTO NC_WS_CAMPAIGN_EMAIL ( SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.CAMPAIGN_LEAD_KEY,''UPDATE'',''VALID'' FROM WS_CAMPAIGN_EMAIL t1, WS_CAMPAIGN_EMAIL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.CAMPAIGN_LEAD_KEY <> t2.CAMPAIGN_LEAD_KEY OR ( t1.CAMPAIGN_LEAD_KEY IS NULL AND t2.CAMPAIGN_LEAD_KEY IS NOT NULL) OR (t1.CAMPAIGN_LEAD_KEY IS NOT NULL AND t2.CAMPAIGN_LEAD_KEY IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_EMAIL', 'INSERT INTO NC_WS_CAMPAIGN_EMAIL ( SCENARIO_ID,EMAIL_ADDR_TXT,CAMPAIGN_LEAD_KEY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EMAIL_ADDR_TXT,t1.CAMPAIGN_LEAD_KEY,''ACTIVATE'',''VALID'' FROM WS_CAMPAIGN_EMAIL t1, WS_CAMPAIGN_EMAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_JOBS', 'INSERT INTO NC_WS_CAMPAIGN_JOBS ( SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,''INSERT'',''VALID'' FROM WS_CAMPAIGN_JOBS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_JOBS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_JOBS', 'INSERT INTO NC_WS_CAMPAIGN_JOBS ( SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,''DELETE'',''VALID'' FROM WS_CAMPAIGN_JOBS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_JOBS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_JOBS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_JOBS', 'INSERT INTO NC_WS_CAMPAIGN_JOBS ( SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CAMPAIGN_NAME,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.COUNTRY,t1.VENDOR_NAME,t1.CAMPAIGN_URL,t1.EMAIL_DEPLOYMENT_DATE,t1.EMAIL_DEPLOYMENT_TIME,t1.START_DTTM,t1.END_DTTM,t1.NEXT_SCHEDULED_RUN_DTTM,t1.LEAD_GENERATION_CNT,t1.AUTOMATED_IND,t1.STATUS,''UPDATE'',''VALID'' FROM WS_CAMPAIGN_JOBS t1, WS_CAMPAIGN_JOBS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CAMPAIGN_NAME <> t2.CAMPAIGN_NAME OR ( t1.CAMPAIGN_NAME IS NULL AND t2.CAMPAIGN_NAME IS NOT NULL) OR (t1.CAMPAIGN_NAME IS NOT NULL AND t2.CAMPAIGN_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.COUNTRY <> t2.COUNTRY OR ( t1.COUNTRY IS NULL AND t2.COUNTRY IS NOT NULL) OR (t1.COUNTRY IS NOT NULL AND t2.COUNTRY IS NULL)) OR (t1.VENDOR_NAME <> t2.VENDOR_NAME OR ( t1.VENDOR_NAME IS NULL AND t2.VENDOR_NAME IS NOT NULL) OR (t1.VENDOR_NAME IS NOT NULL AND t2.VENDOR_NAME IS NULL)) OR (t1.CAMPAIGN_URL <> t2.CAMPAIGN_URL OR ( t1.CAMPAIGN_URL IS NULL AND t2.CAMPAIGN_URL IS NOT NULL) OR (t1.CAMPAIGN_URL IS NOT NULL AND t2.CAMPAIGN_URL IS NULL)) OR (t1.EMAIL_DEPLOYMENT_DATE <> t2.EMAIL_DEPLOYMENT_DATE OR ( t1.EMAIL_DEPLOYMENT_DATE IS NULL AND t2.EMAIL_DEPLOYMENT_DATE IS NOT NULL) OR (t1.EMAIL_DEPLOYMENT_DATE IS NOT NULL AND t2.EMAIL_DEPLOYMENT_DATE IS NULL)) OR (t1.EMAIL_DEPLOYMENT_TIME <> t2.EMAIL_DEPLOYMENT_TIME OR ( t1.EMAIL_DEPLOYMENT_TIME IS NULL AND t2.EMAIL_DEPLOYMENT_TIME IS NOT NULL) OR (t1.EMAIL_DEPLOYMENT_TIME IS NOT NULL AND t2.EMAIL_DEPLOYMENT_TIME IS NULL)) OR (t1.START_DTTM <> t2.START_DTTM OR ( t1.START_DTTM IS NULL AND t2.START_DTTM IS NOT NULL) OR (t1.START_DTTM IS NOT NULL AND t2.START_DTTM IS NULL)) OR (t1.END_DTTM <> t2.END_DTTM OR ( t1.END_DTTM IS NULL AND t2.END_DTTM IS NOT NULL) OR (t1.END_DTTM IS NOT NULL AND t2.END_DTTM IS NULL)) OR (t1.NEXT_SCHEDULED_RUN_DTTM <> t2.NEXT_SCHEDULED_RUN_DTTM OR ( t1.NEXT_SCHEDULED_RUN_DTTM IS NULL AND t2.NEXT_SCHEDULED_RUN_DTTM IS NOT NULL) OR (t1.NEXT_SCHEDULED_RUN_DTTM IS NOT NULL AND t2.NEXT_SCHEDULED_RUN_DTTM IS NULL)) OR (t1.LEAD_GENERATION_CNT <> t2.LEAD_GENERATION_CNT OR ( t1.LEAD_GENERATION_CNT IS NULL AND t2.LEAD_GENERATION_CNT IS NOT NULL) OR (t1.LEAD_GENERATION_CNT IS NOT NULL AND t2.LEAD_GENERATION_CNT IS NULL)) OR (t1.AUTOMATED_IND <> t2.AUTOMATED_IND OR ( t1.AUTOMATED_IND IS NULL AND t2.AUTOMATED_IND IS NOT NULL) OR (t1.AUTOMATED_IND IS NOT NULL AND t2.AUTOMATED_IND IS NULL)) OR (t1.STATUS <> t2.STATUS OR ( t1.STATUS IS NULL AND t2.STATUS IS NOT NULL) OR (t1.STATUS IS NOT NULL AND t2.STATUS IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_JOBS', 'INSERT INTO NC_WS_CAMPAIGN_JOBS ( SCENARIO_ID,CAMPAIGN_NAME,MKTNG_PGM_NBR,MKTNG_PGM_NAME,COUNTRY,VENDOR_NAME,CAMPAIGN_URL,EMAIL_DEPLOYMENT_DATE,EMAIL_DEPLOYMENT_TIME,START_DTTM,END_DTTM,NEXT_SCHEDULED_RUN_DTTM,LEAD_GENERATION_CNT,AUTOMATED_IND,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CAMPAIGN_NAME,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.COUNTRY,t1.VENDOR_NAME,t1.CAMPAIGN_URL,t1.EMAIL_DEPLOYMENT_DATE,t1.EMAIL_DEPLOYMENT_TIME,t1.START_DTTM,t1.END_DTTM,t1.NEXT_SCHEDULED_RUN_DTTM,t1.LEAD_GENERATION_CNT,t1.AUTOMATED_IND,t1.STATUS,''ACTIVATE'',''VALID'' FROM WS_CAMPAIGN_JOBS t1, WS_CAMPAIGN_JOBS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_SGMNT_CNSMR', 'INSERT INTO NC_WS_CAMPAIGN_SGMNT_CNSMR ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,''INSERT'',''VALID'' FROM WS_CAMPAIGN_SGMNT_CNSMR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_SGMNT_CNSMR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_SGMNT_CNSMR', 'INSERT INTO NC_WS_CAMPAIGN_SGMNT_CNSMR ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,''DELETE'',''VALID'' FROM WS_CAMPAIGN_SGMNT_CNSMR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_SGMNT_CNSMR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CAMPAIGN_SGMNT_CNSMR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_SGMNT_CNSMR', 'INSERT INTO NC_WS_CAMPAIGN_SGMNT_CNSMR ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.CAMPAIGN_LEAD_KEY,t1.REGIS_PRSNA_ID,''UPDATE'',''VALID'' FROM WS_CAMPAIGN_SGMNT_CNSMR t1, WS_CAMPAIGN_SGMNT_CNSMR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.CAMPAIGN_LEAD_KEY <> t2.CAMPAIGN_LEAD_KEY OR ( t1.CAMPAIGN_LEAD_KEY IS NULL AND t2.CAMPAIGN_LEAD_KEY IS NOT NULL) OR (t1.CAMPAIGN_LEAD_KEY IS NOT NULL AND t2.CAMPAIGN_LEAD_KEY IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CAMPAIGN_SGMNT_CNSMR', 'INSERT INTO NC_WS_CAMPAIGN_SGMNT_CNSMR ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,CAMPAIGN_LEAD_KEY,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.CAMPAIGN_LEAD_KEY,t1.REGIS_PRSNA_ID,''ACTIVATE'',''VALID'' FROM WS_CAMPAIGN_SGMNT_CNSMR t1, WS_CAMPAIGN_SGMNT_CNSMR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_DEL', 'INSERT INTO NC_WS_CNSMR_DEL ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,''INSERT'',''VALID'' FROM IN_WS_CNSMR_DEL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CNSMR_DEL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_DEL', 'INSERT INTO NC_WS_CNSMR_DEL ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,''DELETE'',''VALID'' FROM WS_CNSMR_DEL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WS_CNSMR_DEL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WS_CNSMR_DEL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_DEL', 'INSERT INTO NC_WS_CNSMR_DEL ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.SOURCE_ID,''UPDATE'',''VALID'' FROM IN_WS_CNSMR_DEL t1, WS_CNSMR_DEL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.SOURCE_ID <> t2.SOURCE_ID OR ( t1.SOURCE_ID IS NULL AND t2.SOURCE_ID IS NOT NULL) OR (t1.SOURCE_ID IS NOT NULL AND t2.SOURCE_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_DEL', 'INSERT INTO NC_WS_CNSMR_DEL ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SOURCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.SOURCE_ID,''ACTIVATE'',''VALID'' FROM IN_WS_CNSMR_DEL t1, WS_CNSMR_DEL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MKTNG_PGM_NBR = t2.MKTNG_PGM_NBR AND t1.REGIS_CNSMR_ID_VAL = t2.REGIS_CNSMR_ID_VAL AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_GDPR_RQST', 'INSERT INTO NC_WS_CNSMR_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,''INSERT'',''VALID'' FROM IN_WS_CNSMR_GDPR_RQST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CNSMR_GDPR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_GDPR_RQST', 'INSERT INTO NC_WS_CNSMR_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,''DELETE'',''VALID'' FROM WS_CNSMR_GDPR_RQST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WS_CNSMR_GDPR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WS_CNSMR_GDPR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_GDPR_RQST', 'INSERT INTO NC_WS_CNSMR_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_STATUS_CD,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,''UPDATE'',''VALID'' FROM IN_WS_CNSMR_GDPR_RQST t1, WS_CNSMR_GDPR_RQST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GDPR_CASE_ID <> t2.GDPR_CASE_ID OR ( t1.GDPR_CASE_ID IS NULL AND t2.GDPR_CASE_ID IS NOT NULL) OR (t1.GDPR_CASE_ID IS NOT NULL AND t2.GDPR_CASE_ID IS NULL)) OR (t1.GDPR_RQST_TYPE_CD <> t2.GDPR_RQST_TYPE_CD OR ( t1.GDPR_RQST_TYPE_CD IS NULL AND t2.GDPR_RQST_TYPE_CD IS NOT NULL) OR (t1.GDPR_RQST_TYPE_CD IS NOT NULL AND t2.GDPR_RQST_TYPE_CD IS NULL)) OR (t1.GDPR_RQST_STATUS_CD <> t2.GDPR_RQST_STATUS_CD OR ( t1.GDPR_RQST_STATUS_CD IS NULL AND t2.GDPR_RQST_STATUS_CD IS NOT NULL) OR (t1.GDPR_RQST_STATUS_CD IS NOT NULL AND t2.GDPR_RQST_STATUS_CD IS NULL)) OR (t1.GVN_NAME <> t2.GVN_NAME OR ( t1.GVN_NAME IS NULL AND t2.GVN_NAME IS NOT NULL) OR (t1.GVN_NAME IS NOT NULL AND t2.GVN_NAME IS NULL)) OR (t1.MID_NAME <> t2.MID_NAME OR ( t1.MID_NAME IS NULL AND t2.MID_NAME IS NOT NULL) OR (t1.MID_NAME IS NOT NULL AND t2.MID_NAME IS NULL)) OR (t1.FAMLY_NAME <> t2.FAMLY_NAME OR ( t1.FAMLY_NAME IS NULL AND t2.FAMLY_NAME IS NOT NULL) OR (t1.FAMLY_NAME IS NOT NULL AND t2.FAMLY_NAME IS NULL)) OR (t1.NAME_SUFFX_TXT <> t2.NAME_SUFFX_TXT OR ( t1.NAME_SUFFX_TXT IS NULL AND t2.NAME_SUFFX_TXT IS NOT NULL) OR (t1.NAME_SUFFX_TXT IS NOT NULL AND t2.NAME_SUFFX_TXT IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.NATIONAL_ID_NBR <> t2.NATIONAL_ID_NBR OR ( t1.NATIONAL_ID_NBR IS NULL AND t2.NATIONAL_ID_NBR IS NOT NULL) OR (t1.NATIONAL_ID_NBR IS NOT NULL AND t2.NATIONAL_ID_NBR IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.FULL_PHONE_NUM <> t2.FULL_PHONE_NUM OR ( t1.FULL_PHONE_NUM IS NULL AND t2.FULL_PHONE_NUM IS NOT NULL) OR (t1.FULL_PHONE_NUM IS NOT NULL AND t2.FULL_PHONE_NUM IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.TERR_NAME <> t2.TERR_NAME OR ( t1.TERR_NAME IS NULL AND t2.TERR_NAME IS NOT NULL) OR (t1.TERR_NAME IS NOT NULL AND t2.TERR_NAME IS NULL)) OR (t1.POSTL_AREA_CODE <> t2.POSTL_AREA_CODE OR ( t1.POSTL_AREA_CODE IS NULL AND t2.POSTL_AREA_CODE IS NOT NULL) OR (t1.POSTL_AREA_CODE IS NOT NULL AND t2.POSTL_AREA_CODE IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.GDPR_RQST_FULFLMT_DATETM <> t2.GDPR_RQST_FULFLMT_DATETM OR ( t1.GDPR_RQST_FULFLMT_DATETM IS NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NOT NULL) OR (t1.GDPR_RQST_FULFLMT_DATETM IS NOT NULL AND t2.GDPR_RQST_FULFLMT_DATETM IS NULL)) OR (t1.GDPR_RQST_CRTN_DATETM <> t2.GDPR_RQST_CRTN_DATETM OR ( t1.GDPR_RQST_CRTN_DATETM IS NULL AND t2.GDPR_RQST_CRTN_DATETM IS NOT NULL) OR (t1.GDPR_RQST_CRTN_DATETM IS NOT NULL AND t2.GDPR_RQST_CRTN_DATETM IS NULL)) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM <> t2.GDPR_RQST_IDNTY_VFYD_DATETM OR ( t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL) OR (t1.GDPR_RQST_IDNTY_VFYD_DATETM IS NOT NULL AND t2.GDPR_RQST_IDNTY_VFYD_DATETM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WS_CNSMR_GDPR_RQST', 'INSERT INTO NC_WS_CNSMR_GDPR_RQST ( SCENARIO_ID,GDPR_CASE_ID,GDPR_RQST_TYPE_CD,GDPR_RQST_STATUS_CD,GVN_NAME,MID_NAME,FAMLY_NAME,NAME_SUFFX_TXT,FULL_NAME,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,NATIONAL_ID_NBR,EMAIL_ADDR_TXT,FULL_PHONE_NUM,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,CNTRY_CODE,GDPR_RQST_FULFLMT_DATETM,GDPR_RQST_CRTN_DATETM,GDPR_RQST_IDNTY_VFYD_DATETM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GDPR_CASE_ID,t1.GDPR_RQST_TYPE_CD,t1.GDPR_RQST_STATUS_CD,t1.GVN_NAME,t1.MID_NAME,t1.FAMLY_NAME,t1.NAME_SUFFX_TXT,t1.FULL_NAME,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.NATIONAL_ID_NBR,t1.EMAIL_ADDR_TXT,t1.FULL_PHONE_NUM,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.CITY_NAME,t1.TERR_NAME,t1.POSTL_AREA_CODE,t1.CNTRY_CODE,t1.GDPR_RQST_FULFLMT_DATETM,t1.GDPR_RQST_CRTN_DATETM,t1.GDPR_RQST_IDNTY_VFYD_DATETM,''ACTIVATE'',''VALID'' FROM IN_WS_CNSMR_GDPR_RQST t1, WS_CNSMR_GDPR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GDPR_CASE_ID = t2.GDPR_CASE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CNTNT_ELEM', 'INSERT INTO NC_WS_CNTNT_ELEM ( SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,''INSERT'',''VALID'' FROM WS_CNTNT_ELEM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_CNTNT_ELEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CNTNT_ELEM', 'INSERT INTO NC_WS_CNTNT_ELEM ( SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,''DELETE'',''VALID'' FROM WS_CNTNT_ELEM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CNTNT_ELEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_CNTNT_ELEM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CNTNT_ELEM', 'INSERT INTO NC_WS_CNTNT_ELEM ( SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.CNTNT_ELEM_ID,t1.CNTNT_NAME,''UPDATE'',''VALID'' FROM WS_CNTNT_ELEM t1, WS_CNTNT_ELEM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.CNTNT_ELEM_ID <> t2.CNTNT_ELEM_ID OR ( t1.CNTNT_ELEM_ID IS NULL AND t2.CNTNT_ELEM_ID IS NOT NULL) OR (t1.CNTNT_ELEM_ID IS NOT NULL AND t2.CNTNT_ELEM_ID IS NULL)) OR (t1.CNTNT_NAME <> t2.CNTNT_NAME OR ( t1.CNTNT_NAME IS NULL AND t2.CNTNT_NAME IS NOT NULL) OR (t1.CNTNT_NAME IS NOT NULL AND t2.CNTNT_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_CNTNT_ELEM', 'INSERT INTO NC_WS_CNTNT_ELEM ( SCENARIO_ID,MKTNG_PGM_NBR,CNTNT_ELEM_ID,CNTNT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.CNTNT_ELEM_ID,t1.CNTNT_NAME,''ACTIVATE'',''VALID'' FROM WS_CNTNT_ELEM t1, WS_CNTNT_ELEM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_INCTV', 'INSERT INTO NC_WS_INCTV ( SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,''INSERT'',''VALID'' FROM WS_INCTV t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_INCTV t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_INCTV', 'INSERT INTO NC_WS_INCTV ( SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,''DELETE'',''VALID'' FROM WS_INCTV t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_INCTV t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_INCTV t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_INCTV', 'INSERT INTO NC_WS_INCTV ( SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.INCTV_NBR,t1.INCTV_NAME,t1.INCTV_START_DATE,t1.INCTV_END_DATE,t1.BRAND_CODE,t1.INCTV_DESC,t1.INCTV_VAL_AMT,t1.INCTV_VAL_PCT,t1.INCTV_EXPRN_DATETM,t1.INCTV_EXPRN_DAY_CNT,t1.INCTV_CRTN_DATE,t1.INCTV_STATUS_CODE,t1.INCTV_TYPE_CODE,t1.ALT_SYS_INCTV_ID,t1.COUPN_TYPE_CODE,t1.BUNDLE_PACK_IND,t1.PREMARKET_OFFER_IND,t1.EXT_INCTV_CD,t1.COUPN_EXT_CD,t1.INCTV_UOM_CD,t1.TGT_DST_QTY,t1.CLRNG_HS_CD,t1.EXTRN_COUPN_DATA_SRCE_NBR,t1.COUPN_UNIQUE_IND,t1.BRAND_NAME,''UPDATE'',''VALID'' FROM WS_INCTV t1, WS_INCTV t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.INCTV_NBR <> t2.INCTV_NBR OR ( t1.INCTV_NBR IS NULL AND t2.INCTV_NBR IS NOT NULL) OR (t1.INCTV_NBR IS NOT NULL AND t2.INCTV_NBR IS NULL)) OR (t1.INCTV_NAME <> t2.INCTV_NAME OR ( t1.INCTV_NAME IS NULL AND t2.INCTV_NAME IS NOT NULL) OR (t1.INCTV_NAME IS NOT NULL AND t2.INCTV_NAME IS NULL)) OR (t1.INCTV_START_DATE <> t2.INCTV_START_DATE OR ( t1.INCTV_START_DATE IS NULL AND t2.INCTV_START_DATE IS NOT NULL) OR (t1.INCTV_START_DATE IS NOT NULL AND t2.INCTV_START_DATE IS NULL)) OR (t1.INCTV_END_DATE <> t2.INCTV_END_DATE OR ( t1.INCTV_END_DATE IS NULL AND t2.INCTV_END_DATE IS NOT NULL) OR (t1.INCTV_END_DATE IS NOT NULL AND t2.INCTV_END_DATE IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.INCTV_DESC <> t2.INCTV_DESC OR ( t1.INCTV_DESC IS NULL AND t2.INCTV_DESC IS NOT NULL) OR (t1.INCTV_DESC IS NOT NULL AND t2.INCTV_DESC IS NULL)) OR (t1.INCTV_VAL_AMT <> t2.INCTV_VAL_AMT OR ( t1.INCTV_VAL_AMT IS NULL AND t2.INCTV_VAL_AMT IS NOT NULL) OR (t1.INCTV_VAL_AMT IS NOT NULL AND t2.INCTV_VAL_AMT IS NULL)) OR (t1.INCTV_VAL_PCT <> t2.INCTV_VAL_PCT OR ( t1.INCTV_VAL_PCT IS NULL AND t2.INCTV_VAL_PCT IS NOT NULL) OR (t1.INCTV_VAL_PCT IS NOT NULL AND t2.INCTV_VAL_PCT IS NULL)) OR (t1.INCTV_EXPRN_DATETM <> t2.INCTV_EXPRN_DATETM OR ( t1.INCTV_EXPRN_DATETM IS NULL AND t2.INCTV_EXPRN_DATETM IS NOT NULL) OR (t1.INCTV_EXPRN_DATETM IS NOT NULL AND t2.INCTV_EXPRN_DATETM IS NULL)) OR (t1.INCTV_EXPRN_DAY_CNT <> t2.INCTV_EXPRN_DAY_CNT OR ( t1.INCTV_EXPRN_DAY_CNT IS NULL AND t2.INCTV_EXPRN_DAY_CNT IS NOT NULL) OR (t1.INCTV_EXPRN_DAY_CNT IS NOT NULL AND t2.INCTV_EXPRN_DAY_CNT IS NULL)) OR (t1.INCTV_CRTN_DATE <> t2.INCTV_CRTN_DATE OR ( t1.INCTV_CRTN_DATE IS NULL AND t2.INCTV_CRTN_DATE IS NOT NULL) OR (t1.INCTV_CRTN_DATE IS NOT NULL AND t2.INCTV_CRTN_DATE IS NULL)) OR (t1.INCTV_STATUS_CODE <> t2.INCTV_STATUS_CODE OR ( t1.INCTV_STATUS_CODE IS NULL AND t2.INCTV_STATUS_CODE IS NOT NULL) OR (t1.INCTV_STATUS_CODE IS NOT NULL AND t2.INCTV_STATUS_CODE IS NULL)) OR (t1.INCTV_TYPE_CODE <> t2.INCTV_TYPE_CODE OR ( t1.INCTV_TYPE_CODE IS NULL AND t2.INCTV_TYPE_CODE IS NOT NULL) OR (t1.INCTV_TYPE_CODE IS NOT NULL AND t2.INCTV_TYPE_CODE IS NULL)) OR (t1.ALT_SYS_INCTV_ID <> t2.ALT_SYS_INCTV_ID OR ( t1.ALT_SYS_INCTV_ID IS NULL AND t2.ALT_SYS_INCTV_ID IS NOT NULL) OR (t1.ALT_SYS_INCTV_ID IS NOT NULL AND t2.ALT_SYS_INCTV_ID IS NULL)) OR (t1.COUPN_TYPE_CODE <> t2.COUPN_TYPE_CODE OR ( t1.COUPN_TYPE_CODE IS NULL AND t2.COUPN_TYPE_CODE IS NOT NULL) OR (t1.COUPN_TYPE_CODE IS NOT NULL AND t2.COUPN_TYPE_CODE IS NULL)) OR (t1.BUNDLE_PACK_IND <> t2.BUNDLE_PACK_IND OR ( t1.BUNDLE_PACK_IND IS NULL AND t2.BUNDLE_PACK_IND IS NOT NULL) OR (t1.BUNDLE_PACK_IND IS NOT NULL AND t2.BUNDLE_PACK_IND IS NULL)) OR (t1.PREMARKET_OFFER_IND <> t2.PREMARKET_OFFER_IND OR ( t1.PREMARKET_OFFER_IND IS NULL AND t2.PREMARKET_OFFER_IND IS NOT NULL) OR (t1.PREMARKET_OFFER_IND IS NOT NULL AND t2.PREMARKET_OFFER_IND IS NULL)) OR (t1.EXT_INCTV_CD <> t2.EXT_INCTV_CD OR ( t1.EXT_INCTV_CD IS NULL AND t2.EXT_INCTV_CD IS NOT NULL) OR (t1.EXT_INCTV_CD IS NOT NULL AND t2.EXT_INCTV_CD IS NULL)) OR (t1.COUPN_EXT_CD <> t2.COUPN_EXT_CD OR ( t1.COUPN_EXT_CD IS NULL AND t2.COUPN_EXT_CD IS NOT NULL) OR (t1.COUPN_EXT_CD IS NOT NULL AND t2.COUPN_EXT_CD IS NULL)) OR (t1.INCTV_UOM_CD <> t2.INCTV_UOM_CD OR ( t1.INCTV_UOM_CD IS NULL AND t2.INCTV_UOM_CD IS NOT NULL) OR (t1.INCTV_UOM_CD IS NOT NULL AND t2.INCTV_UOM_CD IS NULL)) OR (t1.TGT_DST_QTY <> t2.TGT_DST_QTY OR ( t1.TGT_DST_QTY IS NULL AND t2.TGT_DST_QTY IS NOT NULL) OR (t1.TGT_DST_QTY IS NOT NULL AND t2.TGT_DST_QTY IS NULL)) OR (t1.CLRNG_HS_CD <> t2.CLRNG_HS_CD OR ( t1.CLRNG_HS_CD IS NULL AND t2.CLRNG_HS_CD IS NOT NULL) OR (t1.CLRNG_HS_CD IS NOT NULL AND t2.CLRNG_HS_CD IS NULL)) OR (t1.EXTRN_COUPN_DATA_SRCE_NBR <> t2.EXTRN_COUPN_DATA_SRCE_NBR OR ( t1.EXTRN_COUPN_DATA_SRCE_NBR IS NULL AND t2.EXTRN_COUPN_DATA_SRCE_NBR IS NOT NULL) OR (t1.EXTRN_COUPN_DATA_SRCE_NBR IS NOT NULL AND t2.EXTRN_COUPN_DATA_SRCE_NBR IS NULL)) OR (t1.COUPN_UNIQUE_IND <> t2.COUPN_UNIQUE_IND OR ( t1.COUPN_UNIQUE_IND IS NULL AND t2.COUPN_UNIQUE_IND IS NOT NULL) OR (t1.COUPN_UNIQUE_IND IS NOT NULL AND t2.COUPN_UNIQUE_IND IS NULL)) OR (t1.BRAND_NAME <> t2.BRAND_NAME OR ( t1.BRAND_NAME IS NULL AND t2.BRAND_NAME IS NOT NULL) OR (t1.BRAND_NAME IS NOT NULL AND t2.BRAND_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_INCTV', 'INSERT INTO NC_WS_INCTV ( SCENARIO_ID,MKTNG_PGM_NBR,INCTV_NBR,INCTV_NAME,INCTV_START_DATE,INCTV_END_DATE,BRAND_CODE,INCTV_DESC,INCTV_VAL_AMT,INCTV_VAL_PCT,INCTV_EXPRN_DATETM,INCTV_EXPRN_DAY_CNT,INCTV_CRTN_DATE,INCTV_STATUS_CODE,INCTV_TYPE_CODE,ALT_SYS_INCTV_ID,COUPN_TYPE_CODE,BUNDLE_PACK_IND,PREMARKET_OFFER_IND,EXT_INCTV_CD,COUPN_EXT_CD,INCTV_UOM_CD,TGT_DST_QTY,CLRNG_HS_CD,EXTRN_COUPN_DATA_SRCE_NBR,COUPN_UNIQUE_IND,BRAND_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.INCTV_NBR,t1.INCTV_NAME,t1.INCTV_START_DATE,t1.INCTV_END_DATE,t1.BRAND_CODE,t1.INCTV_DESC,t1.INCTV_VAL_AMT,t1.INCTV_VAL_PCT,t1.INCTV_EXPRN_DATETM,t1.INCTV_EXPRN_DAY_CNT,t1.INCTV_CRTN_DATE,t1.INCTV_STATUS_CODE,t1.INCTV_TYPE_CODE,t1.ALT_SYS_INCTV_ID,t1.COUPN_TYPE_CODE,t1.BUNDLE_PACK_IND,t1.PREMARKET_OFFER_IND,t1.EXT_INCTV_CD,t1.COUPN_EXT_CD,t1.INCTV_UOM_CD,t1.TGT_DST_QTY,t1.CLRNG_HS_CD,t1.EXTRN_COUPN_DATA_SRCE_NBR,t1.COUPN_UNIQUE_IND,t1.BRAND_NAME,''ACTIVATE'',''VALID'' FROM WS_INCTV t1, WS_INCTV t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_OPT_STATUS', 'INSERT INTO NC_WS_MATCHD_CNSMR_OPT_STATUS ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,''INSERT'',''VALID'' FROM WS_MATCHD_CNSMR_OPT_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_OPT_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_OPT_STATUS', 'INSERT INTO NC_WS_MATCHD_CNSMR_OPT_STATUS ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,''DELETE'',''VALID'' FROM WS_MATCHD_CNSMR_OPT_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_OPT_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_OPT_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_OPT_STATUS', 'INSERT INTO NC_WS_MATCHD_CNSMR_OPT_STATUS ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.EMAIL_ADDR_TXT,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.UNIVERSAL_OPT_OUT_IND,t1.UNIVERSAL_OPT_OUT_DATE,''UPDATE'',''VALID'' FROM WS_MATCHD_CNSMR_OPT_STATUS t1, WS_MATCHD_CNSMR_OPT_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.EMAIL_ADDR_TXT <> t2.EMAIL_ADDR_TXT OR ( t1.EMAIL_ADDR_TXT IS NULL AND t2.EMAIL_ADDR_TXT IS NOT NULL) OR (t1.EMAIL_ADDR_TXT IS NOT NULL AND t2.EMAIL_ADDR_TXT IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.UNIVERSAL_OPT_OUT_IND <> t2.UNIVERSAL_OPT_OUT_IND OR ( t1.UNIVERSAL_OPT_OUT_IND IS NULL AND t2.UNIVERSAL_OPT_OUT_IND IS NOT NULL) OR (t1.UNIVERSAL_OPT_OUT_IND IS NOT NULL AND t2.UNIVERSAL_OPT_OUT_IND IS NULL)) OR (t1.UNIVERSAL_OPT_OUT_DATE <> t2.UNIVERSAL_OPT_OUT_DATE OR ( t1.UNIVERSAL_OPT_OUT_DATE IS NULL AND t2.UNIVERSAL_OPT_OUT_DATE IS NOT NULL) OR (t1.UNIVERSAL_OPT_OUT_DATE IS NOT NULL AND t2.UNIVERSAL_OPT_OUT_DATE IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_OPT_STATUS', 'INSERT INTO NC_WS_MATCHD_CNSMR_OPT_STATUS ( SCENARIO_ID,LEGAL_ENT_NBR,MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNTCT_POINT_CATEG_CODE,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNSMR_CHCE_DATETM,UNIVERSAL_OPT_OUT_IND,UNIVERSAL_OPT_OUT_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LEGAL_ENT_NBR,t1.MKTNG_PGM_NBR,t1.EMAIL_ADDR_TXT,t1.CNTCT_POINT_CATEG_CODE,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNSMR_CHCE_DATETM,t1.UNIVERSAL_OPT_OUT_IND,t1.UNIVERSAL_OPT_OUT_DATE,''ACTIVATE'',''VALID'' FROM WS_MATCHD_CNSMR_OPT_STATUS t1, WS_MATCHD_CNSMR_OPT_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_PRSNA_TRT', 'INSERT INTO NC_WS_MATCHD_CNSMR_PRSNA_TRT ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,''INSERT'',''VALID'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_PRSNA_TRT', 'INSERT INTO NC_WS_MATCHD_CNSMR_PRSNA_TRT ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,''DELETE'',''VALID'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_PRSNA_TRT', 'INSERT INTO NC_WS_MATCHD_CNSMR_PRSNA_TRT ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.TRT_NAME,t1.MATCHD_PRSNA_TRT_TXT,t1.MATCHD_PRSNA_TRT_DATE,t1.REGIS_PRSNA_ID,''UPDATE'',''VALID'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t1, WS_MATCHD_CNSMR_PRSNA_TRT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.MATCHD_CNSMR_PRSNA_ID <> t2.MATCHD_CNSMR_PRSNA_ID OR ( t1.MATCHD_CNSMR_PRSNA_ID IS NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NOT NULL) OR (t1.MATCHD_CNSMR_PRSNA_ID IS NOT NULL AND t2.MATCHD_CNSMR_PRSNA_ID IS NULL)) OR (t1.TRT_NAME <> t2.TRT_NAME OR ( t1.TRT_NAME IS NULL AND t2.TRT_NAME IS NOT NULL) OR (t1.TRT_NAME IS NOT NULL AND t2.TRT_NAME IS NULL)) OR (t1.MATCHD_PRSNA_TRT_TXT <> t2.MATCHD_PRSNA_TRT_TXT OR ( t1.MATCHD_PRSNA_TRT_TXT IS NULL AND t2.MATCHD_PRSNA_TRT_TXT IS NOT NULL) OR (t1.MATCHD_PRSNA_TRT_TXT IS NOT NULL AND t2.MATCHD_PRSNA_TRT_TXT IS NULL)) OR (t1.MATCHD_PRSNA_TRT_DATE <> t2.MATCHD_PRSNA_TRT_DATE OR ( t1.MATCHD_PRSNA_TRT_DATE IS NULL AND t2.MATCHD_PRSNA_TRT_DATE IS NOT NULL) OR (t1.MATCHD_PRSNA_TRT_DATE IS NOT NULL AND t2.MATCHD_PRSNA_TRT_DATE IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MATCHD_CNSMR_PRSNA_TRT', 'INSERT INTO NC_WS_MATCHD_CNSMR_PRSNA_TRT ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,MATCHD_CNSMR_PRSNA_ID,TRT_NAME,MATCHD_PRSNA_TRT_TXT,MATCHD_PRSNA_TRT_DATE,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.MATCHD_CNSMR_PRSNA_ID,t1.TRT_NAME,t1.MATCHD_PRSNA_TRT_TXT,t1.MATCHD_PRSNA_TRT_DATE,t1.REGIS_PRSNA_ID,''ACTIVATE'',''VALID'' FROM WS_MATCHD_CNSMR_PRSNA_TRT t1, WS_MATCHD_CNSMR_PRSNA_TRT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_CNTRY', 'INSERT INTO NC_WS_MKTNG_PGM_CNTRY ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,''INSERT'',''VALID'' FROM WS_MKTNG_PGM_CNTRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_CNTRY', 'INSERT INTO NC_WS_MKTNG_PGM_CNTRY ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,''DELETE'',''VALID'' FROM WS_MKTNG_PGM_CNTRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_CNTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_CNTRY', 'INSERT INTO NC_WS_MKTNG_PGM_CNTRY ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NBR,t1.LEGAL_ENT_NAME,t1.CNTRY_CODE,t1.CNTRY_NAME,''UPDATE'',''VALID'' FROM WS_MKTNG_PGM_CNTRY t1, WS_MKTNG_PGM_CNTRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.LEGAL_ENT_NAME <> t2.LEGAL_ENT_NAME OR ( t1.LEGAL_ENT_NAME IS NULL AND t2.LEGAL_ENT_NAME IS NOT NULL) OR (t1.LEGAL_ENT_NAME IS NOT NULL AND t2.LEGAL_ENT_NAME IS NULL)) OR (t1.CNTRY_CODE <> t2.CNTRY_CODE OR ( t1.CNTRY_CODE IS NULL AND t2.CNTRY_CODE IS NOT NULL) OR (t1.CNTRY_CODE IS NOT NULL AND t2.CNTRY_CODE IS NULL)) OR (t1.CNTRY_NAME <> t2.CNTRY_NAME OR ( t1.CNTRY_NAME IS NULL AND t2.CNTRY_NAME IS NOT NULL) OR (t1.CNTRY_NAME IS NOT NULL AND t2.CNTRY_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_CNTRY', 'INSERT INTO NC_WS_MKTNG_PGM_CNTRY ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,LEGAL_ENT_NBR,LEGAL_ENT_NAME,CNTRY_CODE,CNTRY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.LEGAL_ENT_NBR,t1.LEGAL_ENT_NAME,t1.CNTRY_CODE,t1.CNTRY_NAME,''ACTIVATE'',''VALID'' FROM WS_MKTNG_PGM_CNTRY t1, WS_MKTNG_PGM_CNTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_SCORE_SGMNT', 'INSERT INTO NC_WS_MKTNG_PGM_SCORE_SGMNT ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,''INSERT'',''VALID'' FROM WS_MKTNG_PGM_SCORE_SGMNT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_SCORE_SGMNT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_SCORE_SGMNT', 'INSERT INTO NC_WS_MKTNG_PGM_SCORE_SGMNT ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,''DELETE'',''VALID'' FROM WS_MKTNG_PGM_SCORE_SGMNT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_SCORE_SGMNT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_MKTNG_PGM_SCORE_SGMNT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_SCORE_SGMNT', 'INSERT INTO NC_WS_MKTNG_PGM_SCORE_SGMNT ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.MKTNG_PGM_SHORT_NAME,t1.MKTNG_PGM_DESC,t1.MKTNG_PGM_STATUS,t1.MKTNG_PGM_BUSN_NAME,t1.LEGAL_ENT_NBR,t1.CNSMR_SCORE_NBR,t1.CNSMR_SCORE_NAME,t1.CNSMR_SCORE_DESC,t1.WEBSITE_SGMNT_IND,''UPDATE'',''VALID'' FROM WS_MKTNG_PGM_SCORE_SGMNT t1, WS_MKTNG_PGM_SCORE_SGMNT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.MKTNG_PGM_NAME <> t2.MKTNG_PGM_NAME OR ( t1.MKTNG_PGM_NAME IS NULL AND t2.MKTNG_PGM_NAME IS NOT NULL) OR (t1.MKTNG_PGM_NAME IS NOT NULL AND t2.MKTNG_PGM_NAME IS NULL)) OR (t1.MKTNG_PGM_SHORT_NAME <> t2.MKTNG_PGM_SHORT_NAME OR ( t1.MKTNG_PGM_SHORT_NAME IS NULL AND t2.MKTNG_PGM_SHORT_NAME IS NOT NULL) OR (t1.MKTNG_PGM_SHORT_NAME IS NOT NULL AND t2.MKTNG_PGM_SHORT_NAME IS NULL)) OR (t1.MKTNG_PGM_DESC <> t2.MKTNG_PGM_DESC OR ( t1.MKTNG_PGM_DESC IS NULL AND t2.MKTNG_PGM_DESC IS NOT NULL) OR (t1.MKTNG_PGM_DESC IS NOT NULL AND t2.MKTNG_PGM_DESC IS NULL)) OR (t1.MKTNG_PGM_STATUS <> t2.MKTNG_PGM_STATUS OR ( t1.MKTNG_PGM_STATUS IS NULL AND t2.MKTNG_PGM_STATUS IS NOT NULL) OR (t1.MKTNG_PGM_STATUS IS NOT NULL AND t2.MKTNG_PGM_STATUS IS NULL)) OR (t1.MKTNG_PGM_BUSN_NAME <> t2.MKTNG_PGM_BUSN_NAME OR ( t1.MKTNG_PGM_BUSN_NAME IS NULL AND t2.MKTNG_PGM_BUSN_NAME IS NOT NULL) OR (t1.MKTNG_PGM_BUSN_NAME IS NOT NULL AND t2.MKTNG_PGM_BUSN_NAME IS NULL)) OR (t1.LEGAL_ENT_NBR <> t2.LEGAL_ENT_NBR OR ( t1.LEGAL_ENT_NBR IS NULL AND t2.LEGAL_ENT_NBR IS NOT NULL) OR (t1.LEGAL_ENT_NBR IS NOT NULL AND t2.LEGAL_ENT_NBR IS NULL)) OR (t1.CNSMR_SCORE_NBR <> t2.CNSMR_SCORE_NBR OR ( t1.CNSMR_SCORE_NBR IS NULL AND t2.CNSMR_SCORE_NBR IS NOT NULL) OR (t1.CNSMR_SCORE_NBR IS NOT NULL AND t2.CNSMR_SCORE_NBR IS NULL)) OR (t1.CNSMR_SCORE_NAME <> t2.CNSMR_SCORE_NAME OR ( t1.CNSMR_SCORE_NAME IS NULL AND t2.CNSMR_SCORE_NAME IS NOT NULL) OR (t1.CNSMR_SCORE_NAME IS NOT NULL AND t2.CNSMR_SCORE_NAME IS NULL)) OR (t1.CNSMR_SCORE_DESC <> t2.CNSMR_SCORE_DESC OR ( t1.CNSMR_SCORE_DESC IS NULL AND t2.CNSMR_SCORE_DESC IS NOT NULL) OR (t1.CNSMR_SCORE_DESC IS NOT NULL AND t2.CNSMR_SCORE_DESC IS NULL)) OR (t1.WEBSITE_SGMNT_IND <> t2.WEBSITE_SGMNT_IND OR ( t1.WEBSITE_SGMNT_IND IS NULL AND t2.WEBSITE_SGMNT_IND IS NOT NULL) OR (t1.WEBSITE_SGMNT_IND IS NOT NULL AND t2.WEBSITE_SGMNT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_MKTNG_PGM_SCORE_SGMNT', 'INSERT INTO NC_WS_MKTNG_PGM_SCORE_SGMNT ( SCENARIO_ID,MKTNG_PGM_NBR,MKTNG_PGM_NAME,MKTNG_PGM_SHORT_NAME,MKTNG_PGM_DESC,MKTNG_PGM_STATUS,MKTNG_PGM_BUSN_NAME,LEGAL_ENT_NBR,CNSMR_SCORE_NBR,CNSMR_SCORE_NAME,CNSMR_SCORE_DESC,WEBSITE_SGMNT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.MKTNG_PGM_NAME,t1.MKTNG_PGM_SHORT_NAME,t1.MKTNG_PGM_DESC,t1.MKTNG_PGM_STATUS,t1.MKTNG_PGM_BUSN_NAME,t1.LEGAL_ENT_NBR,t1.CNSMR_SCORE_NBR,t1.CNSMR_SCORE_NAME,t1.CNSMR_SCORE_DESC,t1.WEBSITE_SGMNT_IND,''ACTIVATE'',''VALID'' FROM WS_MKTNG_PGM_SCORE_SGMNT t1, WS_MKTNG_PGM_SCORE_SGMNT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_OPT_STATUS', 'INSERT INTO NC_WS_OPT_STATUS ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,''INSERT'',''VALID'' FROM WS_OPT_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_OPT_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_OPT_STATUS', 'INSERT INTO NC_WS_OPT_STATUS ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,''DELETE'',''VALID'' FROM WS_OPT_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_OPT_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_OPT_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_OPT_STATUS', 'INSERT INTO NC_WS_OPT_STATUS ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.CNSMR_CHCE_DATETM,t1.REGIS_PRSNA_ID,''UPDATE'',''VALID'' FROM WS_OPT_STATUS t1, WS_OPT_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MKTNG_PGM_NBR <> t2.MKTNG_PGM_NBR OR ( t1.MKTNG_PGM_NBR IS NULL AND t2.MKTNG_PGM_NBR IS NOT NULL) OR (t1.MKTNG_PGM_NBR IS NOT NULL AND t2.MKTNG_PGM_NBR IS NULL)) OR (t1.REGIS_CNSMR_ID_VAL <> t2.REGIS_CNSMR_ID_VAL OR ( t1.REGIS_CNSMR_ID_VAL IS NULL AND t2.REGIS_CNSMR_ID_VAL IS NOT NULL) OR (t1.REGIS_CNSMR_ID_VAL IS NOT NULL AND t2.REGIS_CNSMR_ID_VAL IS NULL)) OR (t1.DATA_SRCE_NBR <> t2.DATA_SRCE_NBR OR ( t1.DATA_SRCE_NBR IS NULL AND t2.DATA_SRCE_NBR IS NOT NULL) OR (t1.DATA_SRCE_NBR IS NOT NULL AND t2.DATA_SRCE_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_NBR <> t2.SUBSCRPTN_OPT_NBR OR ( t1.SUBSCRPTN_OPT_NBR IS NULL AND t2.SUBSCRPTN_OPT_NBR IS NOT NULL) OR (t1.SUBSCRPTN_OPT_NBR IS NOT NULL AND t2.SUBSCRPTN_OPT_NBR IS NULL)) OR (t1.SUBSCRPTN_OPT_IND <> t2.SUBSCRPTN_OPT_IND OR ( t1.SUBSCRPTN_OPT_IND IS NULL AND t2.SUBSCRPTN_OPT_IND IS NOT NULL) OR (t1.SUBSCRPTN_OPT_IND IS NOT NULL AND t2.SUBSCRPTN_OPT_IND IS NULL)) OR (t1.CNTCT_POINT_CATEG_CODE <> t2.CNTCT_POINT_CATEG_CODE OR ( t1.CNTCT_POINT_CATEG_CODE IS NULL AND t2.CNTCT_POINT_CATEG_CODE IS NOT NULL) OR (t1.CNTCT_POINT_CATEG_CODE IS NOT NULL AND t2.CNTCT_POINT_CATEG_CODE IS NULL)) OR (t1.CNSMR_CHCE_DATETM <> t2.CNSMR_CHCE_DATETM OR ( t1.CNSMR_CHCE_DATETM IS NULL AND t2.CNSMR_CHCE_DATETM IS NOT NULL) OR (t1.CNSMR_CHCE_DATETM IS NOT NULL AND t2.CNSMR_CHCE_DATETM IS NULL)) OR (t1.REGIS_PRSNA_ID <> t2.REGIS_PRSNA_ID OR ( t1.REGIS_PRSNA_ID IS NULL AND t2.REGIS_PRSNA_ID IS NOT NULL) OR (t1.REGIS_PRSNA_ID IS NOT NULL AND t2.REGIS_PRSNA_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_OPT_STATUS', 'INSERT INTO NC_WS_OPT_STATUS ( SCENARIO_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,DATA_SRCE_NBR,SUBSCRPTN_OPT_NBR,SUBSCRPTN_OPT_IND,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MKTNG_PGM_NBR,t1.REGIS_CNSMR_ID_VAL,t1.DATA_SRCE_NBR,t1.SUBSCRPTN_OPT_NBR,t1.SUBSCRPTN_OPT_IND,t1.CNTCT_POINT_CATEG_CODE,t1.CNSMR_CHCE_DATETM,t1.REGIS_PRSNA_ID,''ACTIVATE'',''VALID'' FROM WS_OPT_STATUS t1, WS_OPT_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_PROD_ITEM_HIER_ASSOC', 'INSERT INTO NC_WS_PROD_ITEM_HIER_ASSOC ( SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,''INSERT'',''VALID'' FROM WS_PROD_ITEM_HIER_ASSOC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WS_PROD_ITEM_HIER_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('WS_PROD_ITEM_HIER_ASSOC', 'INSERT INTO NC_WS_PROD_ITEM_HIER_ASSOC ( SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,''DELETE'',''VALID'' FROM WS_PROD_ITEM_HIER_ASSOC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_PROD_ITEM_HIER_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM WS_PROD_ITEM_HIER_ASSOC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_PROD_ITEM_HIER_ASSOC', 'INSERT INTO NC_WS_PROD_ITEM_HIER_ASSOC ( SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SECTOR_CODE,t1.SECTOR_NAME,t1.SUB_SECTOR_CODE,t1.SUB_SECTOR_NAME,t1.CATEG_CODE,t1.CATEG_NAME,t1.SEG_CODE,t1.SEG_NAME,t1.SUB_BRAND_CODE,t1.SUB_BRAND_NAME,t1.BRAND_CODE,t1.BRAND_NAME,t1.ITEM_VERS_CODE,t1.GLOBAL_FORM_CODE,t1.PROD_ITEM_UPC,t1.PROD_ITEM_NAME,t1.PROD_FAMLY_ID,t1.PROD_FAMLY_NAME,t1.BRAND_FAMLY_ID,t1.BRAND_FAMLY_NAME,''UPDATE'',''VALID'' FROM WS_PROD_ITEM_HIER_ASSOC t1, WS_PROD_ITEM_HIER_ASSOC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SECTOR_CODE <> t2.SECTOR_CODE OR ( t1.SECTOR_CODE IS NULL AND t2.SECTOR_CODE IS NOT NULL) OR (t1.SECTOR_CODE IS NOT NULL AND t2.SECTOR_CODE IS NULL)) OR (t1.SECTOR_NAME <> t2.SECTOR_NAME OR ( t1.SECTOR_NAME IS NULL AND t2.SECTOR_NAME IS NOT NULL) OR (t1.SECTOR_NAME IS NOT NULL AND t2.SECTOR_NAME IS NULL)) OR (t1.SUB_SECTOR_CODE <> t2.SUB_SECTOR_CODE OR ( t1.SUB_SECTOR_CODE IS NULL AND t2.SUB_SECTOR_CODE IS NOT NULL) OR (t1.SUB_SECTOR_CODE IS NOT NULL AND t2.SUB_SECTOR_CODE IS NULL)) OR (t1.SUB_SECTOR_NAME <> t2.SUB_SECTOR_NAME OR ( t1.SUB_SECTOR_NAME IS NULL AND t2.SUB_SECTOR_NAME IS NOT NULL) OR (t1.SUB_SECTOR_NAME IS NOT NULL AND t2.SUB_SECTOR_NAME IS NULL)) OR (t1.CATEG_CODE <> t2.CATEG_CODE OR ( t1.CATEG_CODE IS NULL AND t2.CATEG_CODE IS NOT NULL) OR (t1.CATEG_CODE IS NOT NULL AND t2.CATEG_CODE IS NULL)) OR (t1.CATEG_NAME <> t2.CATEG_NAME OR ( t1.CATEG_NAME IS NULL AND t2.CATEG_NAME IS NOT NULL) OR (t1.CATEG_NAME IS NOT NULL AND t2.CATEG_NAME IS NULL)) OR (t1.SEG_CODE <> t2.SEG_CODE OR ( t1.SEG_CODE IS NULL AND t2.SEG_CODE IS NOT NULL) OR (t1.SEG_CODE IS NOT NULL AND t2.SEG_CODE IS NULL)) OR (t1.SEG_NAME <> t2.SEG_NAME OR ( t1.SEG_NAME IS NULL AND t2.SEG_NAME IS NOT NULL) OR (t1.SEG_NAME IS NOT NULL AND t2.SEG_NAME IS NULL)) OR (t1.SUB_BRAND_CODE <> t2.SUB_BRAND_CODE OR ( t1.SUB_BRAND_CODE IS NULL AND t2.SUB_BRAND_CODE IS NOT NULL) OR (t1.SUB_BRAND_CODE IS NOT NULL AND t2.SUB_BRAND_CODE IS NULL)) OR (t1.SUB_BRAND_NAME <> t2.SUB_BRAND_NAME OR ( t1.SUB_BRAND_NAME IS NULL AND t2.SUB_BRAND_NAME IS NOT NULL) OR (t1.SUB_BRAND_NAME IS NOT NULL AND t2.SUB_BRAND_NAME IS NULL)) OR (t1.BRAND_CODE <> t2.BRAND_CODE OR ( t1.BRAND_CODE IS NULL AND t2.BRAND_CODE IS NOT NULL) OR (t1.BRAND_CODE IS NOT NULL AND t2.BRAND_CODE IS NULL)) OR (t1.BRAND_NAME <> t2.BRAND_NAME OR ( t1.BRAND_NAME IS NULL AND t2.BRAND_NAME IS NOT NULL) OR (t1.BRAND_NAME IS NOT NULL AND t2.BRAND_NAME IS NULL)) OR (t1.ITEM_VERS_CODE <> t2.ITEM_VERS_CODE OR ( t1.ITEM_VERS_CODE IS NULL AND t2.ITEM_VERS_CODE IS NOT NULL) OR (t1.ITEM_VERS_CODE IS NOT NULL AND t2.ITEM_VERS_CODE IS NULL)) OR (t1.GLOBAL_FORM_CODE <> t2.GLOBAL_FORM_CODE OR ( t1.GLOBAL_FORM_CODE IS NULL AND t2.GLOBAL_FORM_CODE IS NOT NULL) OR (t1.GLOBAL_FORM_CODE IS NOT NULL AND t2.GLOBAL_FORM_CODE IS NULL)) OR (t1.PROD_ITEM_UPC <> t2.PROD_ITEM_UPC OR ( t1.PROD_ITEM_UPC IS NULL AND t2.PROD_ITEM_UPC IS NOT NULL) OR (t1.PROD_ITEM_UPC IS NOT NULL AND t2.PROD_ITEM_UPC IS NULL)) OR (t1.PROD_ITEM_NAME <> t2.PROD_ITEM_NAME OR ( t1.PROD_ITEM_NAME IS NULL AND t2.PROD_ITEM_NAME IS NOT NULL) OR (t1.PROD_ITEM_NAME IS NOT NULL AND t2.PROD_ITEM_NAME IS NULL)) OR (t1.PROD_FAMLY_ID <> t2.PROD_FAMLY_ID OR ( t1.PROD_FAMLY_ID IS NULL AND t2.PROD_FAMLY_ID IS NOT NULL) OR (t1.PROD_FAMLY_ID IS NOT NULL AND t2.PROD_FAMLY_ID IS NULL)) OR (t1.PROD_FAMLY_NAME <> t2.PROD_FAMLY_NAME OR ( t1.PROD_FAMLY_NAME IS NULL AND t2.PROD_FAMLY_NAME IS NOT NULL) OR (t1.PROD_FAMLY_NAME IS NOT NULL AND t2.PROD_FAMLY_NAME IS NULL)) OR (t1.BRAND_FAMLY_ID <> t2.BRAND_FAMLY_ID OR ( t1.BRAND_FAMLY_ID IS NULL AND t2.BRAND_FAMLY_ID IS NOT NULL) OR (t1.BRAND_FAMLY_ID IS NOT NULL AND t2.BRAND_FAMLY_ID IS NULL)) OR (t1.BRAND_FAMLY_NAME <> t2.BRAND_FAMLY_NAME OR ( t1.BRAND_FAMLY_NAME IS NULL AND t2.BRAND_FAMLY_NAME IS NOT NULL) OR (t1.BRAND_FAMLY_NAME IS NOT NULL AND t2.BRAND_FAMLY_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('WS_PROD_ITEM_HIER_ASSOC', 'INSERT INTO NC_WS_PROD_ITEM_HIER_ASSOC ( SCENARIO_ID,SECTOR_CODE,SECTOR_NAME,SUB_SECTOR_CODE,SUB_SECTOR_NAME,CATEG_CODE,CATEG_NAME,SEG_CODE,SEG_NAME,SUB_BRAND_CODE,SUB_BRAND_NAME,BRAND_CODE,BRAND_NAME,ITEM_VERS_CODE,GLOBAL_FORM_CODE,PROD_ITEM_UPC,PROD_ITEM_NAME,PROD_FAMLY_ID,PROD_FAMLY_NAME,BRAND_FAMLY_ID,BRAND_FAMLY_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SECTOR_CODE,t1.SECTOR_NAME,t1.SUB_SECTOR_CODE,t1.SUB_SECTOR_NAME,t1.CATEG_CODE,t1.CATEG_NAME,t1.SEG_CODE,t1.SEG_NAME,t1.SUB_BRAND_CODE,t1.SUB_BRAND_NAME,t1.BRAND_CODE,t1.BRAND_NAME,t1.ITEM_VERS_CODE,t1.GLOBAL_FORM_CODE,t1.PROD_ITEM_UPC,t1.PROD_ITEM_NAME,t1.PROD_FAMLY_ID,t1.PROD_FAMLY_NAME,t1.BRAND_FAMLY_ID,t1.BRAND_FAMLY_NAME,''ACTIVATE'',''VALID'' FROM WS_PROD_ITEM_HIER_ASSOC t1, WS_PROD_ITEM_HIER_ASSOC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES', 'INSERT INTO NC_WF_NEXT_NODES ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,''INSERT'',''VALID'' FROM IN_WF_NEXT_NODES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_NEXT_NODES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES', 'INSERT INTO NC_WF_NEXT_NODES ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,''DELETE'',''VALID'' FROM WF_NEXT_NODES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_NEXT_NODES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_NEXT_NODES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES', 'INSERT INTO NC_WF_NEXT_NODES ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.NODE_ID,t1.PROCESS_ID,t1.NEXT_NODE_ID,t1.NEXT_NODE_SEQ,t1.NODE_CONDITION,t1.CONDITION_DESC,t1.PRESENTATION_DATA,''UPDATE'',''VALID'' FROM IN_WF_NEXT_NODES t1, WF_NEXT_NODES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Next_Node_Id <> t2.Next_Node_Id OR ( t1.Next_Node_Id IS NULL AND t2.Next_Node_Id IS NOT NULL) OR (t1.Next_Node_Id IS NOT NULL AND t2.Next_Node_Id IS NULL)) OR (t1.Next_Node_Seq <> t2.Next_Node_Seq OR ( t1.Next_Node_Seq IS NULL AND t2.Next_Node_Seq IS NOT NULL) OR (t1.Next_Node_Seq IS NOT NULL AND t2.Next_Node_Seq IS NULL)) OR (t1.Node_Condition <> t2.Node_Condition OR ( t1.Node_Condition IS NULL AND t2.Node_Condition IS NOT NULL) OR (t1.Node_Condition IS NOT NULL AND t2.Node_Condition IS NULL)) OR (t1.Condition_Desc <> t2.Condition_Desc OR ( t1.Condition_Desc IS NULL AND t2.Condition_Desc IS NOT NULL) OR (t1.Condition_Desc IS NOT NULL AND t2.Condition_Desc IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES', 'INSERT INTO NC_WF_NEXT_NODES ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.NODE_ID,t1.PROCESS_ID,t1.NEXT_NODE_ID,t1.NEXT_NODE_SEQ,t1.NODE_CONDITION,t1.CONDITION_DESC,t1.PRESENTATION_DATA,''ACTIVATE'',''VALID'' FROM IN_WF_NEXT_NODES t1, WF_NEXT_NODES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES_AUDIT', 'INSERT INTO NC_WF_NEXT_NODES_AUDIT ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''INSERT'',''VALID'' FROM IN_WF_NEXT_NODES_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_NEXT_NODES_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES_AUDIT', 'INSERT INTO NC_WF_NEXT_NODES_AUDIT ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''DELETE'',''VALID'' FROM WF_NEXT_NODES_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_NEXT_NODES_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_NEXT_NODES_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES_AUDIT', 'INSERT INTO NC_WF_NEXT_NODES_AUDIT ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.NODE_ID,t1.PROCESS_ID,t1.NEXT_NODE_ID,t1.NEXT_NODE_SEQ,t1.NODE_CONDITION,t1.CONDITION_DESC,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''UPDATE'',''VALID'' FROM IN_WF_NEXT_NODES_AUDIT t1, WF_NEXT_NODES_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Next_Node_Id <> t2.Next_Node_Id OR ( t1.Next_Node_Id IS NULL AND t2.Next_Node_Id IS NOT NULL) OR (t1.Next_Node_Id IS NOT NULL AND t2.Next_Node_Id IS NULL)) OR (t1.Next_Node_Seq <> t2.Next_Node_Seq OR ( t1.Next_Node_Seq IS NULL AND t2.Next_Node_Seq IS NOT NULL) OR (t1.Next_Node_Seq IS NOT NULL AND t2.Next_Node_Seq IS NULL)) OR (t1.Node_Condition <> t2.Node_Condition OR ( t1.Node_Condition IS NULL AND t2.Node_Condition IS NOT NULL) OR (t1.Node_Condition IS NOT NULL AND t2.Node_Condition IS NULL)) OR (t1.Condition_Desc <> t2.Condition_Desc OR ( t1.Condition_Desc IS NULL AND t2.Condition_Desc IS NOT NULL) OR (t1.Condition_Desc IS NOT NULL AND t2.Condition_Desc IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) OR (t1.Version_Id <> t2.Version_Id OR ( t1.Version_Id IS NULL AND t2.Version_Id IS NOT NULL) OR (t1.Version_Id IS NOT NULL AND t2.Version_Id IS NULL)) OR (t1.Version_Create_Date <> t2.Version_Create_Date OR ( t1.Version_Create_Date IS NULL AND t2.Version_Create_Date IS NOT NULL) OR (t1.Version_Create_Date IS NOT NULL AND t2.Version_Create_Date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_NEXT_NODES_AUDIT', 'INSERT INTO NC_WF_NEXT_NODES_AUDIT ( SCENARIO_ID,NODE_ID,PROCESS_ID,NEXT_NODE_ID,NEXT_NODE_SEQ,NODE_CONDITION,CONDITION_DESC,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.NODE_ID,t1.PROCESS_ID,t1.NEXT_NODE_ID,t1.NEXT_NODE_SEQ,t1.NODE_CONDITION,t1.CONDITION_DESC,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''ACTIVATE'',''VALID'' FROM IN_WF_NEXT_NODES_AUDIT t1, WF_NEXT_NODES_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Next_Node_Id = t2.Next_Node_Id AND t1.Next_Node_Seq = t2.Next_Node_Seq AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS', 'INSERT INTO NC_WF_PARAMS ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,''INSERT'',''VALID'' FROM IN_WF_PARAMS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PARAMS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS', 'INSERT INTO NC_WF_PARAMS ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,''DELETE'',''VALID'' FROM WF_PARAMS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PARAMS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PARAMS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS', 'INSERT INTO NC_WF_PARAMS ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_TYPE,t1.PARAM_NAME,t1.PARAM_DISP_NAME,t1.PARAM_VALUE,t1.PARAM_DESC,t1.IS_REQUIRED,t1.PARAM_VALUE_TYPE,t1.IS_HIDDEN,t1.IS_EDITABLE,t1.PARAM_SCOPE,''UPDATE'',''VALID'' FROM IN_WF_PARAMS t1, WF_PARAMS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Param_Type <> t2.Param_Type OR ( t1.Param_Type IS NULL AND t2.Param_Type IS NOT NULL) OR (t1.Param_Type IS NOT NULL AND t2.Param_Type IS NULL)) OR (t1.Param_Name <> t2.Param_Name OR ( t1.Param_Name IS NULL AND t2.Param_Name IS NOT NULL) OR (t1.Param_Name IS NOT NULL AND t2.Param_Name IS NULL)) OR (t1.Display_Name <> t2.Display_Name OR ( t1.Display_Name IS NULL AND t2.Display_Name IS NOT NULL) OR (t1.Display_Name IS NOT NULL AND t2.Display_Name IS NULL)) OR (t1.Param_Value <> t2.Param_Value OR ( t1.Param_Value IS NULL AND t2.Param_Value IS NOT NULL) OR (t1.Param_Value IS NOT NULL AND t2.Param_Value IS NULL)) OR (t1.Param_Desc <> t2.Param_Desc OR ( t1.Param_Desc IS NULL AND t2.Param_Desc IS NOT NULL) OR (t1.Param_Desc IS NOT NULL AND t2.Param_Desc IS NULL)) OR (t1.Is_Required <> t2.Is_Required OR ( t1.Is_Required IS NULL AND t2.Is_Required IS NOT NULL) OR (t1.Is_Required IS NOT NULL AND t2.Is_Required IS NULL)) OR (t1.Param_Value_Type <> t2.Param_Value_Type OR ( t1.Param_Value_Type IS NULL AND t2.Param_Value_Type IS NOT NULL) OR (t1.Param_Value_Type IS NOT NULL AND t2.Param_Value_Type IS NULL)) OR (t1.Is_Hidden <> t2.Is_Hidden OR ( t1.Is_Hidden IS NULL AND t2.Is_Hidden IS NOT NULL) OR (t1.Is_Hidden IS NOT NULL AND t2.Is_Hidden IS NULL)) OR (t1.Is_Editable <> t2.Is_Editable OR ( t1.Is_Editable IS NULL AND t2.Is_Editable IS NOT NULL) OR (t1.Is_Editable IS NOT NULL AND t2.Is_Editable IS NULL)) OR (t1.Param_Scope <> t2.Param_Scope OR ( t1.Param_Scope IS NULL AND t2.Param_Scope IS NOT NULL) OR (t1.Param_Scope IS NOT NULL AND t2.Param_Scope IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS', 'INSERT INTO NC_WF_PARAMS ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_TYPE,t1.PARAM_NAME,t1.PARAM_DISP_NAME,t1.PARAM_VALUE,t1.PARAM_DESC,t1.IS_REQUIRED,t1.PARAM_VALUE_TYPE,t1.IS_HIDDEN,t1.IS_EDITABLE,t1.PARAM_SCOPE,''ACTIVATE'',''VALID'' FROM IN_WF_PARAMS t1, WF_PARAMS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_AUDIT', 'INSERT INTO NC_WF_PARAMS_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,''INSERT'',''VALID'' FROM IN_WF_PARAMS_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PARAMS_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_AUDIT', 'INSERT INTO NC_WF_PARAMS_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,''DELETE'',''VALID'' FROM WF_PARAMS_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PARAMS_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PARAMS_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_AUDIT', 'INSERT INTO NC_WF_PARAMS_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_TYPE,t1.PARAM_NAME,t1.PARAM_DISP_NAME,t1.PARAM_VALUE,t1.PARAM_DESC,t1.IS_REQUIRED,t1.PARAM_VALUE_TYPE,t1.IS_HIDDEN,t1.IS_EDITABLE,t1.PARAM_SCOPE,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''UPDATE'',''VALID'' FROM IN_WF_PARAMS_AUDIT t1, WF_PARAMS_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Param_Type <> t2.Param_Type OR ( t1.Param_Type IS NULL AND t2.Param_Type IS NOT NULL) OR (t1.Param_Type IS NOT NULL AND t2.Param_Type IS NULL)) OR (t1.Param_Name <> t2.Param_Name OR ( t1.Param_Name IS NULL AND t2.Param_Name IS NOT NULL) OR (t1.Param_Name IS NOT NULL AND t2.Param_Name IS NULL)) OR (t1.Display_Name <> t2.Display_Name OR ( t1.Display_Name IS NULL AND t2.Display_Name IS NOT NULL) OR (t1.Display_Name IS NOT NULL AND t2.Display_Name IS NULL)) OR (t1.Param_Value <> t2.Param_Value OR ( t1.Param_Value IS NULL AND t2.Param_Value IS NOT NULL) OR (t1.Param_Value IS NOT NULL AND t2.Param_Value IS NULL)) OR (t1.Param_Desc <> t2.Param_Desc OR ( t1.Param_Desc IS NULL AND t2.Param_Desc IS NOT NULL) OR (t1.Param_Desc IS NOT NULL AND t2.Param_Desc IS NULL)) OR (t1.Is_Required <> t2.Is_Required OR ( t1.Is_Required IS NULL AND t2.Is_Required IS NOT NULL) OR (t1.Is_Required IS NOT NULL AND t2.Is_Required IS NULL)) OR (t1.Param_Value_Type <> t2.Param_Value_Type OR ( t1.Param_Value_Type IS NULL AND t2.Param_Value_Type IS NOT NULL) OR (t1.Param_Value_Type IS NOT NULL AND t2.Param_Value_Type IS NULL)) OR (t1.Is_Hidden <> t2.Is_Hidden OR ( t1.Is_Hidden IS NULL AND t2.Is_Hidden IS NOT NULL) OR (t1.Is_Hidden IS NOT NULL AND t2.Is_Hidden IS NULL)) OR (t1.Is_Editable <> t2.Is_Editable OR ( t1.Is_Editable IS NULL AND t2.Is_Editable IS NOT NULL) OR (t1.Is_Editable IS NOT NULL AND t2.Is_Editable IS NULL)) OR (t1.Param_Scope <> t2.Param_Scope OR ( t1.Param_Scope IS NULL AND t2.Param_Scope IS NOT NULL) OR (t1.Param_Scope IS NOT NULL AND t2.Param_Scope IS NULL)) OR (t1.Version_Id <> t2.Version_Id OR ( t1.Version_Id IS NULL AND t2.Version_Id IS NOT NULL) OR (t1.Version_Id IS NOT NULL AND t2.Version_Id IS NULL)) OR (t1.Version_Create_Date <> t2.Version_Create_Date OR ( t1.Version_Create_Date IS NULL AND t2.Version_Create_Date IS NOT NULL) OR (t1.Version_Create_Date IS NOT NULL AND t2.Version_Create_Date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_AUDIT', 'INSERT INTO NC_WF_PARAMS_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_TYPE,PARAM_NAME,PARAM_DISP_NAME,PARAM_VALUE,PARAM_DESC,IS_REQUIRED,PARAM_VALUE_TYPE,IS_HIDDEN,IS_EDITABLE,PARAM_SCOPE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_TYPE,t1.PARAM_NAME,t1.PARAM_DISP_NAME,t1.PARAM_VALUE,t1.PARAM_DESC,t1.IS_REQUIRED,t1.PARAM_VALUE_TYPE,t1.IS_HIDDEN,t1.IS_EDITABLE,t1.PARAM_SCOPE,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''ACTIVATE'',''VALID'' FROM IN_WF_PARAMS_AUDIT t1, WF_PARAMS_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Param_Name = t2.Param_Name AND t1.Param_Type = t2.Param_Type AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT', 'INSERT INTO NC_WF_PARAMS_EXT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,''INSERT'',''VALID'' FROM IN_WF_PARAMS_EXT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PARAMS_EXT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT', 'INSERT INTO NC_WF_PARAMS_EXT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,''DELETE'',''VALID'' FROM WF_PARAMS_EXT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PARAMS_EXT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PARAMS_EXT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT', 'INSERT INTO NC_WF_PARAMS_EXT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_VALUE,''UPDATE'',''VALID'' FROM IN_WF_PARAMS_EXT t1, WF_PARAMS_EXT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Param_Value <> t2.Param_Value OR ( t1.Param_Value IS NULL AND t2.Param_Value IS NOT NULL) OR (t1.Param_Value IS NOT NULL AND t2.Param_Value IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT', 'INSERT INTO NC_WF_PARAMS_EXT ( SCENARIO_ID,PROCESS_ID,NODE_ID,PARAM_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.PARAM_VALUE,''ACTIVATE'',''VALID'' FROM IN_WF_PARAMS_EXT t1, WF_PARAMS_EXT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT_AUDIT', 'INSERT INTO NC_WF_PARAMS_EXT_AUDIT ( SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,''INSERT'',''VALID'' FROM IN_WF_PARAMS_EXT_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PARAMS_EXT_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT_AUDIT', 'INSERT INTO NC_WF_PARAMS_EXT_AUDIT ( SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,''DELETE'',''VALID'' FROM WF_PARAMS_EXT_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PARAMS_EXT_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PARAMS_EXT_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT_AUDIT', 'INSERT INTO NC_WF_PARAMS_EXT_AUDIT ( SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Process_Id,t1.NODE_ID,t1.PARAM_VALUE,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''UPDATE'',''VALID'' FROM IN_WF_PARAMS_EXT_AUDIT t1, WF_PARAMS_EXT_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Param_Value <> t2.Param_Value OR ( t1.Param_Value IS NULL AND t2.Param_Value IS NOT NULL) OR (t1.Param_Value IS NOT NULL AND t2.Param_Value IS NULL)) OR (t1.Version_Id <> t2.Version_Id OR ( t1.Version_Id IS NULL AND t2.Version_Id IS NOT NULL) OR (t1.Version_Id IS NOT NULL AND t2.Version_Id IS NULL)) OR (t1.Version_Create_Date <> t2.Version_Create_Date OR ( t1.Version_Create_Date IS NULL AND t2.Version_Create_Date IS NOT NULL) OR (t1.Version_Create_Date IS NOT NULL AND t2.Version_Create_Date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PARAMS_EXT_AUDIT', 'INSERT INTO NC_WF_PARAMS_EXT_AUDIT ( SCENARIO_ID,Process_Id,NODE_ID,PARAM_VALUE,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Process_Id,t1.NODE_ID,t1.PARAM_VALUE,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''ACTIVATE'',''VALID'' FROM IN_WF_PARAMS_EXT_AUDIT t1, WF_PARAMS_EXT_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS', 'INSERT INTO NC_WF_PROCESS ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,''INSERT'',''VALID'' FROM IN_WF_PROCESS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS', 'INSERT INTO NC_WF_PROCESS ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,''DELETE'',''VALID'' FROM WF_PROCESS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS', 'INSERT INTO NC_WF_PROCESS ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.PROCESS_NAME,t1.PROCESS_TEMPLATE,t1.DESCRIPTION,t1.NOTIFICATION_ENABLED,t1.NOTIFICATION_DETAILS,t1.MANAGE_AUTH_ROLE,t1.EXECUTE_AUTH_ROLE,t1.ENABLE_QUERYBAND,t1.WORKFLOW_TEMPLATE,t1.PROCESS_VERSION,t1.EFFECTIVE_DATE,t1.IS_DIRTY,t1.SERVICE,t1.CATEGORY,t1.LOG_LEVEL,t1.IS_SCHEDULABLE,t1.IS_FAVORITE,t1.USE_CONFIGURATION,t1.PRESENTATION_DATA,''UPDATE'',''VALID'' FROM IN_WF_PROCESS t1, WF_PROCESS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Template <> t2.Process_Template OR ( t1.Process_Template IS NULL AND t2.Process_Template IS NOT NULL) OR (t1.Process_Template IS NOT NULL AND t2.Process_Template IS NULL)) OR (t1.Process_Description <> t2.Process_Description OR ( t1.Process_Description IS NULL AND t2.Process_Description IS NOT NULL) OR (t1.Process_Description IS NOT NULL AND t2.Process_Description IS NULL)) OR (t1.Notification_Enabled <> t2.Notification_Enabled OR ( t1.Notification_Enabled IS NULL AND t2.Notification_Enabled IS NOT NULL) OR (t1.Notification_Enabled IS NOT NULL AND t2.Notification_Enabled IS NULL)) OR (t1.Notification_Details <> t2.Notification_Details OR ( t1.Notification_Details IS NULL AND t2.Notification_Details IS NOT NULL) OR (t1.Notification_Details IS NOT NULL AND t2.Notification_Details IS NULL)) OR (t1.Manage_Auth_Role <> t2.Manage_Auth_Role OR ( t1.Manage_Auth_Role IS NULL AND t2.Manage_Auth_Role IS NOT NULL) OR (t1.Manage_Auth_Role IS NOT NULL AND t2.Manage_Auth_Role IS NULL)) OR (t1.Execute_Auth_Role <> t2.Execute_Auth_Role OR ( t1.Execute_Auth_Role IS NULL AND t2.Execute_Auth_Role IS NOT NULL) OR (t1.Execute_Auth_Role IS NOT NULL AND t2.Execute_Auth_Role IS NULL)) OR (t1.Enable_Queryband <> t2.Enable_Queryband OR ( t1.Enable_Queryband IS NULL AND t2.Enable_Queryband IS NOT NULL) OR (t1.Enable_Queryband IS NOT NULL AND t2.Enable_Queryband IS NULL)) OR (t1.Workflow_Template <> t2.Workflow_Template OR ( t1.Workflow_Template IS NULL AND t2.Workflow_Template IS NOT NULL) OR (t1.Workflow_Template IS NOT NULL AND t2.Workflow_Template IS NULL)) OR (t1.Process_Version <> t2.Process_Version OR ( t1.Process_Version IS NULL AND t2.Process_Version IS NOT NULL) OR (t1.Process_Version IS NOT NULL AND t2.Process_Version IS NULL)) OR (t1.Effective_Date <> t2.Effective_Date OR ( t1.Effective_Date IS NULL AND t2.Effective_Date IS NOT NULL) OR (t1.Effective_Date IS NOT NULL AND t2.Effective_Date IS NULL)) OR (t1.Is_Dirty <> t2.Is_Dirty OR ( t1.Is_Dirty IS NULL AND t2.Is_Dirty IS NOT NULL) OR (t1.Is_Dirty IS NOT NULL AND t2.Is_Dirty IS NULL)) OR (t1.Service <> t2.Service OR ( t1.Service IS NULL AND t2.Service IS NOT NULL) OR (t1.Service IS NOT NULL AND t2.Service IS NULL)) OR (t1.Category <> t2.Category OR ( t1.Category IS NULL AND t2.Category IS NOT NULL) OR (t1.Category IS NOT NULL AND t2.Category IS NULL)) OR (t1.Log_Level <> t2.Log_Level OR ( t1.Log_Level IS NULL AND t2.Log_Level IS NOT NULL) OR (t1.Log_Level IS NOT NULL AND t2.Log_Level IS NULL)) OR (t1.Is_Schedulable <> t2.Is_Schedulable OR ( t1.Is_Schedulable IS NULL AND t2.Is_Schedulable IS NOT NULL) OR (t1.Is_Schedulable IS NOT NULL AND t2.Is_Schedulable IS NULL)) OR (t1.Is_Favorite <> t2.Is_Favorite OR ( t1.Is_Favorite IS NULL AND t2.Is_Favorite IS NOT NULL) OR (t1.Is_Favorite IS NOT NULL AND t2.Is_Favorite IS NULL)) OR (t1.Use_Configuration <> t2.Use_Configuration OR ( t1.Use_Configuration IS NULL AND t2.Use_Configuration IS NOT NULL) OR (t1.Use_Configuration IS NOT NULL AND t2.Use_Configuration IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS', 'INSERT INTO NC_WF_PROCESS ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.PROCESS_NAME,t1.PROCESS_TEMPLATE,t1.DESCRIPTION,t1.NOTIFICATION_ENABLED,t1.NOTIFICATION_DETAILS,t1.MANAGE_AUTH_ROLE,t1.EXECUTE_AUTH_ROLE,t1.ENABLE_QUERYBAND,t1.WORKFLOW_TEMPLATE,t1.PROCESS_VERSION,t1.EFFECTIVE_DATE,t1.IS_DIRTY,t1.SERVICE,t1.CATEGORY,t1.LOG_LEVEL,t1.IS_SCHEDULABLE,t1.IS_FAVORITE,t1.USE_CONFIGURATION,t1.PRESENTATION_DATA,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS t1, WF_PROCESS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_AUDIT', 'INSERT INTO NC_WF_PROCESS_AUDIT ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''INSERT'',''VALID'' FROM IN_WF_PROCESS_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_AUDIT', 'INSERT INTO NC_WF_PROCESS_AUDIT ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''DELETE'',''VALID'' FROM WF_PROCESS_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_AUDIT', 'INSERT INTO NC_WF_PROCESS_AUDIT ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.PROCESS_NAME,t1.PROCESS_TEMPLATE,t1.DESCRIPTION,t1.NOTIFICATION_ENABLED,t1.NOTIFICATION_DETAILS,t1.MANAGE_AUTH_ROLE,t1.EXECUTE_AUTH_ROLE,t1.ENABLE_QUERYBAND,t1.WORKFLOW_TEMPLATE,t1.PROCESS_VERSION,t1.EFFECTIVE_DATE,t1.IS_DIRTY,t1.SERVICE,t1.CATEGORY,t1.LOG_LEVEL,t1.IS_SCHEDULABLE,t1.IS_FAVORITE,t1.USE_CONFIGURATION,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_AUDIT t1, WF_PROCESS_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Template <> t2.Process_Template OR ( t1.Process_Template IS NULL AND t2.Process_Template IS NOT NULL) OR (t1.Process_Template IS NOT NULL AND t2.Process_Template IS NULL)) OR (t1.Process_Description <> t2.Process_Description OR ( t1.Process_Description IS NULL AND t2.Process_Description IS NOT NULL) OR (t1.Process_Description IS NOT NULL AND t2.Process_Description IS NULL)) OR (t1.Notification_Enabled <> t2.Notification_Enabled OR ( t1.Notification_Enabled IS NULL AND t2.Notification_Enabled IS NOT NULL) OR (t1.Notification_Enabled IS NOT NULL AND t2.Notification_Enabled IS NULL)) OR (t1.Notification_Details <> t2.Notification_Details OR ( t1.Notification_Details IS NULL AND t2.Notification_Details IS NOT NULL) OR (t1.Notification_Details IS NOT NULL AND t2.Notification_Details IS NULL)) OR (t1.Manage_Auth_Role <> t2.Manage_Auth_Role OR ( t1.Manage_Auth_Role IS NULL AND t2.Manage_Auth_Role IS NOT NULL) OR (t1.Manage_Auth_Role IS NOT NULL AND t2.Manage_Auth_Role IS NULL)) OR (t1.Execute_Auth_Role <> t2.Execute_Auth_Role OR ( t1.Execute_Auth_Role IS NULL AND t2.Execute_Auth_Role IS NOT NULL) OR (t1.Execute_Auth_Role IS NOT NULL AND t2.Execute_Auth_Role IS NULL)) OR (t1.Enable_Queryband <> t2.Enable_Queryband OR ( t1.Enable_Queryband IS NULL AND t2.Enable_Queryband IS NOT NULL) OR (t1.Enable_Queryband IS NOT NULL AND t2.Enable_Queryband IS NULL)) OR (t1.Workflow_Template <> t2.Workflow_Template OR ( t1.Workflow_Template IS NULL AND t2.Workflow_Template IS NOT NULL) OR (t1.Workflow_Template IS NOT NULL AND t2.Workflow_Template IS NULL)) OR (t1.Process_Version <> t2.Process_Version OR ( t1.Process_Version IS NULL AND t2.Process_Version IS NOT NULL) OR (t1.Process_Version IS NOT NULL AND t2.Process_Version IS NULL)) OR (t1.Effective_Date <> t2.Effective_Date OR ( t1.Effective_Date IS NULL AND t2.Effective_Date IS NOT NULL) OR (t1.Effective_Date IS NOT NULL AND t2.Effective_Date IS NULL)) OR (t1.Is_Dirty <> t2.Is_Dirty OR ( t1.Is_Dirty IS NULL AND t2.Is_Dirty IS NOT NULL) OR (t1.Is_Dirty IS NOT NULL AND t2.Is_Dirty IS NULL)) OR (t1.Service <> t2.Service OR ( t1.Service IS NULL AND t2.Service IS NOT NULL) OR (t1.Service IS NOT NULL AND t2.Service IS NULL)) OR (t1.Category <> t2.Category OR ( t1.Category IS NULL AND t2.Category IS NOT NULL) OR (t1.Category IS NOT NULL AND t2.Category IS NULL)) OR (t1.Log_Level <> t2.Log_Level OR ( t1.Log_Level IS NULL AND t2.Log_Level IS NOT NULL) OR (t1.Log_Level IS NOT NULL AND t2.Log_Level IS NULL)) OR (t1.Is_Schedulable <> t2.Is_Schedulable OR ( t1.Is_Schedulable IS NULL AND t2.Is_Schedulable IS NOT NULL) OR (t1.Is_Schedulable IS NOT NULL AND t2.Is_Schedulable IS NULL)) OR (t1.Is_Favorite <> t2.Is_Favorite OR ( t1.Is_Favorite IS NULL AND t2.Is_Favorite IS NOT NULL) OR (t1.Is_Favorite IS NOT NULL AND t2.Is_Favorite IS NULL)) OR (t1.Use_Configuration <> t2.Use_Configuration OR ( t1.Use_Configuration IS NULL AND t2.Use_Configuration IS NOT NULL) OR (t1.Use_Configuration IS NOT NULL AND t2.Use_Configuration IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) OR (t1.Version_Id <> t2.Version_Id OR ( t1.Version_Id IS NULL AND t2.Version_Id IS NOT NULL) OR (t1.Version_Id IS NOT NULL AND t2.Version_Id IS NULL)) OR (t1.Version_Create_Date <> t2.Version_Create_Date OR ( t1.Version_Create_Date IS NULL AND t2.Version_Create_Date IS NOT NULL) OR (t1.Version_Create_Date IS NOT NULL AND t2.Version_Create_Date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_AUDIT', 'INSERT INTO NC_WF_PROCESS_AUDIT ( SCENARIO_ID,PROCESS_ID,PROCESS_NAME,PROCESS_TEMPLATE,DESCRIPTION,NOTIFICATION_ENABLED,NOTIFICATION_DETAILS,MANAGE_AUTH_ROLE,EXECUTE_AUTH_ROLE,ENABLE_QUERYBAND,WORKFLOW_TEMPLATE,PROCESS_VERSION,EFFECTIVE_DATE,IS_DIRTY,SERVICE,CATEGORY,LOG_LEVEL,IS_SCHEDULABLE,IS_FAVORITE,USE_CONFIGURATION,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.PROCESS_NAME,t1.PROCESS_TEMPLATE,t1.DESCRIPTION,t1.NOTIFICATION_ENABLED,t1.NOTIFICATION_DETAILS,t1.MANAGE_AUTH_ROLE,t1.EXECUTE_AUTH_ROLE,t1.ENABLE_QUERYBAND,t1.WORKFLOW_TEMPLATE,t1.PROCESS_VERSION,t1.EFFECTIVE_DATE,t1.IS_DIRTY,t1.SERVICE,t1.CATEGORY,t1.LOG_LEVEL,t1.IS_SCHEDULABLE,t1.IS_FAVORITE,t1.USE_CONFIGURATION,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_AUDIT t1, WF_PROCESS_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_INSTANCE', 'INSERT INTO NC_WF_PROCESS_INSTANCE ( SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,''INSERT'',''VALID'' FROM IN_WF_PROCESS_INSTANCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_INSTANCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.WfInstance_Id = t2.WfInstance_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_INSTANCE', 'INSERT INTO NC_WF_PROCESS_INSTANCE ( SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,''DELETE'',''VALID'' FROM WF_PROCESS_INSTANCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_INSTANCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.WfInstance_Id = t2.WfInstance_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_INSTANCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.WfInstance_Id = t2.WfInstance_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_INSTANCE', 'INSERT INTO NC_WF_PROCESS_INSTANCE ( SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.WF_INSTANCE_ID,t1.DESCRIPTION,t1.WF_START_DATE,t1.WF_END_DATE,t1.STATUS,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_INSTANCE t1, WF_PROCESS_INSTANCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.WfInstance_Id = t2.WfInstance_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.WfInstance_Id <> t2.WfInstance_Id OR ( t1.WfInstance_Id IS NULL AND t2.WfInstance_Id IS NOT NULL) OR (t1.WfInstance_Id IS NOT NULL AND t2.WfInstance_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Wf_Start_Date <> t2.Wf_Start_Date OR ( t1.Wf_Start_Date IS NULL AND t2.Wf_Start_Date IS NOT NULL) OR (t1.Wf_Start_Date IS NOT NULL AND t2.Wf_Start_Date IS NULL)) OR (t1.Wf_End_Date <> t2.Wf_End_Date OR ( t1.Wf_End_Date IS NULL AND t2.Wf_End_Date IS NOT NULL) OR (t1.Wf_End_Date IS NOT NULL AND t2.Wf_End_Date IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_INSTANCE', 'INSERT INTO NC_WF_PROCESS_INSTANCE ( SCENARIO_ID,PROCESS_ID,WF_INSTANCE_ID,DESCRIPTION,WF_START_DATE,WF_END_DATE,STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.WF_INSTANCE_ID,t1.DESCRIPTION,t1.WF_START_DATE,t1.WF_END_DATE,t1.STATUS,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_INSTANCE t1, WF_PROCESS_INSTANCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.WfInstance_Id = t2.WfInstance_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES', 'INSERT INTO NC_WF_PROCESS_NODES ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,''INSERT'',''VALID'' FROM IN_WF_PROCESS_NODES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_NODES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES', 'INSERT INTO NC_WF_PROCESS_NODES ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,''DELETE'',''VALID'' FROM WF_PROCESS_NODES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_NODES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_NODES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES', 'INSERT INTO NC_WF_PROCESS_NODES ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.NODE_NAME,t1.NODE_DESC,t1.NODE_TYPE,t1.NODE_SUB_TYPE,t1.NODE_INPUT,t1.NODE_OUTPUT,t1.PRESENTATION_DATA,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_NODES t1, WF_PROCESS_NODES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Node_Name <> t2.Node_Name OR ( t1.Node_Name IS NULL AND t2.Node_Name IS NOT NULL) OR (t1.Node_Name IS NOT NULL AND t2.Node_Name IS NULL)) OR (t1.Node_Desc <> t2.Node_Desc OR ( t1.Node_Desc IS NULL AND t2.Node_Desc IS NOT NULL) OR (t1.Node_Desc IS NOT NULL AND t2.Node_Desc IS NULL)) OR (t1.Node_Type <> t2.Node_Type OR ( t1.Node_Type IS NULL AND t2.Node_Type IS NOT NULL) OR (t1.Node_Type IS NOT NULL AND t2.Node_Type IS NULL)) OR (t1.Node_Sub_Type <> t2.Node_Sub_Type OR ( t1.Node_Sub_Type IS NULL AND t2.Node_Sub_Type IS NOT NULL) OR (t1.Node_Sub_Type IS NOT NULL AND t2.Node_Sub_Type IS NULL)) OR (t1.Node_Input <> t2.Node_Input OR ( t1.Node_Input IS NULL AND t2.Node_Input IS NOT NULL) OR (t1.Node_Input IS NOT NULL AND t2.Node_Input IS NULL)) OR (t1.Node_Output <> t2.Node_Output OR ( t1.Node_Output IS NULL AND t2.Node_Output IS NOT NULL) OR (t1.Node_Output IS NOT NULL AND t2.Node_Output IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES', 'INSERT INTO NC_WF_PROCESS_NODES ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.NODE_NAME,t1.NODE_DESC,t1.NODE_TYPE,t1.NODE_SUB_TYPE,t1.NODE_INPUT,t1.NODE_OUTPUT,t1.PRESENTATION_DATA,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_NODES t1, WF_PROCESS_NODES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES_AUDIT', 'INSERT INTO NC_WF_PROCESS_NODES_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''INSERT'',''VALID'' FROM IN_WF_PROCESS_NODES_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_NODES_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES_AUDIT', 'INSERT INTO NC_WF_PROCESS_NODES_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,''DELETE'',''VALID'' FROM WF_PROCESS_NODES_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_NODES_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_NODES_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES_AUDIT', 'INSERT INTO NC_WF_PROCESS_NODES_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.NODE_NAME,t1.NODE_DESC,t1.NODE_TYPE,t1.NODE_SUB_TYPE,t1.NODE_INPUT,t1.NODE_OUTPUT,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_NODES_AUDIT t1, WF_PROCESS_NODES_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Id <> t2.Node_Id OR ( t1.Node_Id IS NULL AND t2.Node_Id IS NOT NULL) OR (t1.Node_Id IS NOT NULL AND t2.Node_Id IS NULL)) OR (t1.Node_Name <> t2.Node_Name OR ( t1.Node_Name IS NULL AND t2.Node_Name IS NOT NULL) OR (t1.Node_Name IS NOT NULL AND t2.Node_Name IS NULL)) OR (t1.Node_Desc <> t2.Node_Desc OR ( t1.Node_Desc IS NULL AND t2.Node_Desc IS NOT NULL) OR (t1.Node_Desc IS NOT NULL AND t2.Node_Desc IS NULL)) OR (t1.Node_Type <> t2.Node_Type OR ( t1.Node_Type IS NULL AND t2.Node_Type IS NOT NULL) OR (t1.Node_Type IS NOT NULL AND t2.Node_Type IS NULL)) OR (t1.Node_Sub_Type <> t2.Node_Sub_Type OR ( t1.Node_Sub_Type IS NULL AND t2.Node_Sub_Type IS NOT NULL) OR (t1.Node_Sub_Type IS NOT NULL AND t2.Node_Sub_Type IS NULL)) OR (t1.Node_Input <> t2.Node_Input OR ( t1.Node_Input IS NULL AND t2.Node_Input IS NOT NULL) OR (t1.Node_Input IS NOT NULL AND t2.Node_Input IS NULL)) OR (t1.Node_Output <> t2.Node_Output OR ( t1.Node_Output IS NULL AND t2.Node_Output IS NOT NULL) OR (t1.Node_Output IS NOT NULL AND t2.Node_Output IS NULL)) OR (t1.Presentation_Data <> t2.Presentation_Data OR ( t1.Presentation_Data IS NULL AND t2.Presentation_Data IS NOT NULL) OR (t1.Presentation_Data IS NOT NULL AND t2.Presentation_Data IS NULL)) OR (t1.Version_Id <> t2.Version_Id OR ( t1.Version_Id IS NULL AND t2.Version_Id IS NOT NULL) OR (t1.Version_Id IS NOT NULL AND t2.Version_Id IS NULL)) OR (t1.Version_Create_Date <> t2.Version_Create_Date OR ( t1.Version_Create_Date IS NULL AND t2.Version_Create_Date IS NOT NULL) OR (t1.Version_Create_Date IS NOT NULL AND t2.Version_Create_Date IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_NODES_AUDIT', 'INSERT INTO NC_WF_PROCESS_NODES_AUDIT ( SCENARIO_ID,PROCESS_ID,NODE_ID,NODE_NAME,NODE_DESC,NODE_TYPE,NODE_SUB_TYPE,NODE_INPUT,NODE_OUTPUT,PRESENTATION_DATA,VERSION_ID,VERSION_CREATE_DATE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_ID,t1.NODE_NAME,t1.NODE_DESC,t1.NODE_TYPE,t1.NODE_SUB_TYPE,t1.NODE_INPUT,t1.NODE_OUTPUT,t1.PRESENTATION_DATA,t1.VERSION_ID,t1.VERSION_CREATE_DATE,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_NODES_AUDIT t1, WF_PROCESS_NODES_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Node_Id = t2.Node_Id AND t1.Process_Id = t2.Process_Id AND t1.Version_Id = t2.Version_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_STATUS', 'INSERT INTO NC_WF_PROCESS_STATUS ( SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,''INSERT'',''VALID'' FROM IN_WF_PROCESS_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Condition_Seq = t2.Condition_Seq AND t1.Node_Name = t2.Node_Name AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_STATUS', 'INSERT INTO NC_WF_PROCESS_STATUS ( SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,''DELETE'',''VALID'' FROM WF_PROCESS_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Condition_Seq = t2.Condition_Seq AND t1.Node_Name = t2.Node_Name AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Condition_Seq = t2.Condition_Seq AND t1.Node_Name = t2.Node_Name AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_STATUS', 'INSERT INTO NC_WF_PROCESS_STATUS ( SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_NAME,t1.STATUS_TYPE,t1.STATUS_CONDITION,t1.CONDITION_SEQ,t1.STATUS_DESCRIPTION,t1.TRUE_STATUS,t1.FALSE_STATUS,t1.TRUE_STATUS_COLOR_CD,t1.FALSE_STATUS_COLOR_CD,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_STATUS t1, WF_PROCESS_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Condition_Seq = t2.Condition_Seq AND t1.Node_Name = t2.Node_Name AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Node_Name <> t2.Node_Name OR ( t1.Node_Name IS NULL AND t2.Node_Name IS NOT NULL) OR (t1.Node_Name IS NOT NULL AND t2.Node_Name IS NULL)) OR (t1.Status_Type <> t2.Status_Type OR ( t1.Status_Type IS NULL AND t2.Status_Type IS NOT NULL) OR (t1.Status_Type IS NOT NULL AND t2.Status_Type IS NULL)) OR (t1.Condition <> t2.Condition OR ( t1.Condition IS NULL AND t2.Condition IS NOT NULL) OR (t1.Condition IS NOT NULL AND t2.Condition IS NULL)) OR (t1.Condition_Seq <> t2.Condition_Seq OR ( t1.Condition_Seq IS NULL AND t2.Condition_Seq IS NOT NULL) OR (t1.Condition_Seq IS NOT NULL AND t2.Condition_Seq IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.True_Status <> t2.True_Status OR ( t1.True_Status IS NULL AND t2.True_Status IS NOT NULL) OR (t1.True_Status IS NOT NULL AND t2.True_Status IS NULL)) OR (t1.False_Status <> t2.False_Status OR ( t1.False_Status IS NULL AND t2.False_Status IS NOT NULL) OR (t1.False_Status IS NOT NULL AND t2.False_Status IS NULL)) OR (t1.True_ColorCd <> t2.True_ColorCd OR ( t1.True_ColorCd IS NULL AND t2.True_ColorCd IS NOT NULL) OR (t1.True_ColorCd IS NOT NULL AND t2.True_ColorCd IS NULL)) OR (t1.False_ColorCd <> t2.False_ColorCd OR ( t1.False_ColorCd IS NULL AND t2.False_ColorCd IS NOT NULL) OR (t1.False_ColorCd IS NOT NULL AND t2.False_ColorCd IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_STATUS', 'INSERT INTO NC_WF_PROCESS_STATUS ( SCENARIO_ID,PROCESS_ID,NODE_NAME,STATUS_TYPE,STATUS_CONDITION,CONDITION_SEQ,STATUS_DESCRIPTION,TRUE_STATUS,FALSE_STATUS,TRUE_STATUS_COLOR_CD,FALSE_STATUS_COLOR_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.NODE_NAME,t1.STATUS_TYPE,t1.STATUS_CONDITION,t1.CONDITION_SEQ,t1.STATUS_DESCRIPTION,t1.TRUE_STATUS,t1.FALSE_STATUS,t1.TRUE_STATUS_COLOR_CD,t1.FALSE_STATUS_COLOR_CD,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_STATUS t1, WF_PROCESS_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Condition_Seq = t2.Condition_Seq AND t1.Node_Name = t2.Node_Name AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_TASKS', 'INSERT INTO NC_WF_PROCESS_TASKS ( SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,''INSERT'',''VALID'' FROM IN_WF_PROCESS_TASKS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_PROCESS_TASKS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_TASKS', 'INSERT INTO NC_WF_PROCESS_TASKS ( SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,''DELETE'',''VALID'' FROM WF_PROCESS_TASKS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_PROCESS_TASKS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_PROCESS_TASKS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_TASKS', 'INSERT INTO NC_WF_PROCESS_TASKS ( SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.TASK_ID,t1.TASK_NODE,t1.MESSAGE,t1.STATUS,t1.ASSIGNED_BY,t1.ASSIGNED_TO,t1.ASSIGNED_DATE,t1.COMPLETION_DATE,t1.LOCKED_BY,''UPDATE'',''VALID'' FROM IN_WF_PROCESS_TASKS t1, WF_PROCESS_TASKS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Task_Id <> t2.Task_Id OR ( t1.Task_Id IS NULL AND t2.Task_Id IS NOT NULL) OR (t1.Task_Id IS NOT NULL AND t2.Task_Id IS NULL)) OR (t1.Task_Node <> t2.Task_Node OR ( t1.Task_Node IS NULL AND t2.Task_Node IS NOT NULL) OR (t1.Task_Node IS NOT NULL AND t2.Task_Node IS NULL)) OR (t1.Message <> t2.Message OR ( t1.Message IS NULL AND t2.Message IS NOT NULL) OR (t1.Message IS NOT NULL AND t2.Message IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) OR (t1.Assigned_By <> t2.Assigned_By OR ( t1.Assigned_By IS NULL AND t2.Assigned_By IS NOT NULL) OR (t1.Assigned_By IS NOT NULL AND t2.Assigned_By IS NULL)) OR (t1.Assigned_To <> t2.Assigned_To OR ( t1.Assigned_To IS NULL AND t2.Assigned_To IS NOT NULL) OR (t1.Assigned_To IS NOT NULL AND t2.Assigned_To IS NULL)) OR (t1.Assigned_Date <> t2.Assigned_Date OR ( t1.Assigned_Date IS NULL AND t2.Assigned_Date IS NOT NULL) OR (t1.Assigned_Date IS NOT NULL AND t2.Assigned_Date IS NULL)) OR (t1.Completion_Date <> t2.Completion_Date OR ( t1.Completion_Date IS NULL AND t2.Completion_Date IS NOT NULL) OR (t1.Completion_Date IS NOT NULL AND t2.Completion_Date IS NULL)) OR (t1.Locked_By <> t2.Locked_By OR ( t1.Locked_By IS NULL AND t2.Locked_By IS NOT NULL) OR (t1.Locked_By IS NOT NULL AND t2.Locked_By IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_PROCESS_TASKS', 'INSERT INTO NC_WF_PROCESS_TASKS ( SCENARIO_ID,PROCESS_ID,TASK_ID,TASK_NODE,MESSAGE,STATUS,ASSIGNED_BY,ASSIGNED_TO,ASSIGNED_DATE,COMPLETION_DATE,LOCKED_BY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.TASK_ID,t1.TASK_NODE,t1.MESSAGE,t1.STATUS,t1.ASSIGNED_BY,t1.ASSIGNED_TO,t1.ASSIGNED_DATE,t1.COMPLETION_DATE,t1.LOCKED_BY,''ACTIVATE'',''VALID'' FROM IN_WF_PROCESS_TASKS t1, WF_PROCESS_TASKS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_TASK_AUDIT', 'INSERT INTO NC_WF_TASK_AUDIT ( SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,''INSERT'',''VALID'' FROM IN_WF_TASK_AUDIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_TASK_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND t1.Task_Sequence = t2.Task_Sequence )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_TASK_AUDIT', 'INSERT INTO NC_WF_TASK_AUDIT ( SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,''DELETE'',''VALID'' FROM WF_TASK_AUDIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_TASK_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND t1.Task_Sequence = t2.Task_Sequence ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_TASK_AUDIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND t1.Task_Sequence = t2.Task_Sequence));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_TASK_AUDIT', 'INSERT INTO NC_WF_TASK_AUDIT ( SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TASK_ID,t1.TASK_NODE,t1.OPERATION,t1.REASSIGN_COMMENT,t1.REASSIGNED_TO,t1.TASK_SEQUENCE,''UPDATE'',''VALID'' FROM IN_WF_TASK_AUDIT t1, WF_TASK_AUDIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND t1.Task_Sequence = t2.Task_Sequence AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Task_Id <> t2.Task_Id OR ( t1.Task_Id IS NULL AND t2.Task_Id IS NOT NULL) OR (t1.Task_Id IS NOT NULL AND t2.Task_Id IS NULL)) OR (t1.Task_Node <> t2.Task_Node OR ( t1.Task_Node IS NULL AND t2.Task_Node IS NOT NULL) OR (t1.Task_Node IS NOT NULL AND t2.Task_Node IS NULL)) OR (t1.Operation <> t2.Operation OR ( t1.Operation IS NULL AND t2.Operation IS NOT NULL) OR (t1.Operation IS NOT NULL AND t2.Operation IS NULL)) OR (t1.Reassign_Comment <> t2.Reassign_Comment OR ( t1.Reassign_Comment IS NULL AND t2.Reassign_Comment IS NOT NULL) OR (t1.Reassign_Comment IS NOT NULL AND t2.Reassign_Comment IS NULL)) OR (t1.Reassigned_To <> t2.Reassigned_To OR ( t1.Reassigned_To IS NULL AND t2.Reassigned_To IS NOT NULL) OR (t1.Reassigned_To IS NOT NULL AND t2.Reassigned_To IS NULL)) OR (t1.Task_Sequence <> t2.Task_Sequence OR ( t1.Task_Sequence IS NULL AND t2.Task_Sequence IS NOT NULL) OR (t1.Task_Sequence IS NOT NULL AND t2.Task_Sequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_TASK_AUDIT', 'INSERT INTO NC_WF_TASK_AUDIT ( SCENARIO_ID,TASK_ID,TASK_NODE,OPERATION,REASSIGN_COMMENT,REASSIGNED_TO,TASK_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TASK_ID,t1.TASK_NODE,t1.OPERATION,t1.REASSIGN_COMMENT,t1.REASSIGNED_TO,t1.TASK_SEQUENCE,''ACTIVATE'',''VALID'' FROM IN_WF_TASK_AUDIT t1, WF_TASK_AUDIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Task_Id = t2.Task_Id AND t1.Task_Node = t2.Task_Node AND t1.Task_Sequence = t2.Task_Sequence AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_WORKFLOWS', 'INSERT INTO NC_WF_WORKFLOWS ( SCENARIO_ID,PROCESS_ID,WORKFLOW,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,WORKFLOW,''INSERT'',''VALID'' FROM IN_WF_WORKFLOWS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM WF_WORKFLOWS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_WORKFLOWS', 'INSERT INTO NC_WF_WORKFLOWS ( SCENARIO_ID,PROCESS_ID,WORKFLOW,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PROCESS_ID,WORKFLOW,''DELETE'',''VALID'' FROM WF_WORKFLOWS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_WF_WORKFLOWS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_WF_WORKFLOWS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_WORKFLOWS', 'INSERT INTO NC_WF_WORKFLOWS ( SCENARIO_ID,PROCESS_ID,WORKFLOW,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.WORKFLOW,''UPDATE'',''VALID'' FROM IN_WF_WORKFLOWS t1, WF_WORKFLOWS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Workflow <> t2.Workflow OR ( t1.Workflow IS NULL AND t2.Workflow IS NOT NULL) OR (t1.Workflow IS NOT NULL AND t2.Workflow IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_WF_WORKFLOWS', 'INSERT INTO NC_WF_WORKFLOWS ( SCENARIO_ID,PROCESS_ID,WORKFLOW,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PROCESS_ID,t1.WORKFLOW,''ACTIVATE'',''VALID'' FROM IN_WF_WORKFLOWS t1, WF_WORKFLOWS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Process_Id = t2.Process_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

