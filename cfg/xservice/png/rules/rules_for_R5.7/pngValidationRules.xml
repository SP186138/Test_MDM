<?xml version="1.0" encoding="UTF-8"?>
<DOCUMENTS>
  <!--
 	 Copyright (c) 2009 by Teradata Corporation. 
	 All Rights Reserved. 
	 Teradata CONFIDENTIAL AND TRADE SECRET 
 -->
  <DEFINE_METHOD Name="pngStopICRMtoMDMValidationTimer">
    <!--**********************************************************************************************************
*   Module Name	: pngValidations
*		Created Date	: Oct 27, 2011
*		Created By   	: Kalyana Chakravarthy
*		Called Functions: 
*		Called By Functions:
*		Short Desc	: Rule that stops timer for data acquisition from ICRM stage to MDM stage. 
*  		Change Log 		:
*		DATE							LC						OWNER		DESCRIPTION
*
**********************************************************************************************************-->
    <RULE>
      <ACTION>
        <STOP_TIMER>
          <IDENTIFIED_BY>
            <NAME Value="TIMER_FOR_VALIDATION"/>
          </IDENTIFIED_BY>
        </STOP_TIMER>
      </ACTION>
    </RULE>
  </DEFINE_METHOD>
  <DEFINE_METHOD Name="pngStartICRMtoMDMValidationTimer">
    <!--**********************************************************************************************************
*   Module Name	: pngValidations
*		Created Date	: Oct 27, 2011
*		Created By   	: Kalyana Chakravarthy
*		Called Functions: Calls pngICRMtoMDMValidationRules script that runs the bteqs to perform validations while acquiring data from ICRM stage
*		Called By Functions:  
*		Short Desc	: Rule that invokes timer for data acquisition from ICRM stage to MDM stage. This timer runs every 15 mins
*  		Change Log 		:
*		DATE							LC						OWNER		DESCRIPTION
*
**********************************************************************************************************-->
    <RULE>
      <ACTION>
        <START_TIMER>
          <IDENTIFIED_BY>
            <NAME Value="TIMER_FOR_VALIDATION"/>
          </IDENTIFIED_BY>
          <CALLBACK_DATE Value="{incrDate(date(), duration(0, 0, 0, 10))}"/>
          <CALLBACK_DURATION Value="{duration(0,0,0,10)}"/>
          <CALLBACK_ACTIONS>
            <REQUEST Name="pngICRMtoMDMValidationRules" ServiceName="BCM_MASTER" AssignToVar="resValidationTimerRule" Synchronous="true">
            </REQUEST>
          </CALLBACK_ACTIONS>
        </START_TIMER>
      </ACTION>
    </RULE>
  </DEFINE_METHOD>
  <DEFINE_METHOD Name="pngICRMtoMDMValidationRules">
    <!--**********************************************************************************************************
*   Module Name	: pngValidations
*		Created Date	: Oct 27, 2011
*		Created By   	: Kalyana Chakravarthy
*		Called Functions: Calls CONSUMER_INFORMATION.bat script that runs the bteqs to perform validations while acquiring data from ICRM stage
*		Called By Functions:  pngICRMtoMDMValidationTimer
*		Short Desc	: Rule that invokes validations while acquiring data from ICRM Stage to MDM Stage 
*  		Change Log 		:
*		DATE							LC						OWNER		DESCRIPTION
*													
**********************************************************************************************************-->
    <RULE>
      <ACTION>
        <EXECUTE_SQL_QUERY Value="SEL LOAD_ID FROM MDM_LOAD_CONTROL A WHERE A.LOAD_ID IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL_SCHEDULER) AND NOT EXISTS(SEL LOAD_ID FROM LOAD_INFO B WHERE A.LOAD_ID = B.LOAD_ID) AND LOAD_ID IN (SEL LOAD_ID FROM LOAD_CONTROL WHERE FORMAT_ID IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE ATTRIBUTE_TYPE_ID IN (SEL ATTRIBUTE_TYPE_ID  FROM ATTRIBUTE_TYPES WHERE ATTRIBUTE_TYPE='i2 Format') AND SYS_ENT_STATE='Active'));" AssignToVar="validationReadyLoadIds"/>
        <IF_TEST Test="count($validationReadyLoadIds/SQL_RESULT) > 0">
          <THEN>
            <GET_DOCUMENT Name="LOAD_INFO" AssignToVar="resLoadInfo" ServiceName="BCM_MASTER" DirtyRead="yes">
              <SELECT>
                <LOAD_ID/>
              </SELECT>
              <PROCESS_NAME Value="Validations"/>
              <STATUS Value="In Progress"/>
            </GET_DOCUMENT>
            <IF_TEST Test="$resLoadInfo/LOAD_INFO/LOAD_ID/@Value = null">
              <THEN>
                <!-- Generate a new Batch_Id and pass it on as parameter value to the CONSUMER_INFORMATION.bat batch script that does Validations.
                 Logic to identify the load ids and the countries within them to insert and update entries into load_info table will be handled by the Bteq scripts-->
                <REQUEST Name="getIDGeneratedBatch" ServiceName="BCM_MASTER" AssignToVar="resBatchId"/>
                <EXECUTE_SQL_QUERY Value="INSERT INTO SCHDL_SNAPSHOT(SCHDL_ID,BATCH_ID,SCHEDULED_CNTRY_CNT,PROCESS_START_RECORD_CNT,SCHDL_STRT_TM,SCHDL_END_TM,PROCESS_START_CNTRY_CNT) SELECT SCHDL_ID,{$resBatchId/BatchID/@Value},CNTRY_CNT,RCRD_CNT,SCHDL_STRT_TM,SCHDL_END_TM,ACTUAL_CNTRY_CNT FROM SCHEDULER_SNAPSHOT;"/>
                <FOR_EACH SelectList="$validationReadyLoadIds/*" CurrentElement="currLoad">
                  <DO_TRANSACTION>
                    <ADD_DOC_SMART Name="LOAD_INFO" AssignToVar="resaddLoadInfo" ServiceName="BCM_MASTER">
                      <LOAD_ID Value="{$currLoad/LOAD_ID/@Value}"/>
                      <PROCESS_NAME Value="Validations"/>
                      <PROCESS_START_TIME Value="{date()}"/>
                      <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                      <STATUS Value="In Progress"/>
                    </ADD_DOC_SMART>
                  </DO_TRANSACTION>
                </FOR_EACH>
                <EXECUTE_SHELL_COMMAND Value="{concat('Validate_batch.cmd ',$resBatchId/BatchID/@Value)}" AssignToVar="validationResult"/>
                <IF_TEST Test="$validationResult/@ShellReturnValue = 0">
                  <THEN>
                    <TO_DOCVAR AssignToVar="thisReturn">
                      <SUCCESS>
                        <Message Value="Validation Successful"/>
                      </SUCCESS>
                    </TO_DOCVAR>
                    <FOR_EACH SelectList="$validationReadyLoadIds/*" CurrentElement="currLoad">
                      <DO_TRANSACTION>
                        <MODIFY_DOC_SMART Name="LOAD_INFO" ServiceName="BCM_MASTER">
                          <DOCUMENT_CONTEXT>
                            <LOAD_ID Value="{$currLoad/LOAD_ID/@Value}"/>
                            <PROCESS_NAME Value="Validations"/>
                            <STATUS Value="In Progress"/>
                            <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                          </DOCUMENT_CONTEXT>
                          <UPDATE_PROPERTIES>
                            <STATUS Value="Success"/>
                            <PROCESS_END_TIME Value="{date()}"/>
                          </UPDATE_PROPERTIES>
                        </MODIFY_DOC_SMART>
                      </DO_TRANSACTION>
                    </FOR_EACH>
                    <GET_DOCUMENT Name="LOAD_INFO" ServiceName="BCM_MASTER" AssignToVar="resLoad" DirtyRead="yes" Distinct="false">
                      <SELECT>
                        <LOAD_ID/>
                      </SELECT>
                      <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                      <STATUS Value="Failure-BadFile"/>
                    </GET_DOCUMENT>
                    <IF_TEST Test="$resLoad/LOAD_INFO/LOAD_ID != null ">
                      <THEN>
                        <EXECUTE_SQL_QUERY Value="SELECT DISTINCT A.SOURCE_ID,A.REQ_MAIL_ID,A.AGN_CON_MAIL_ID FROM SOURCE_CONTROL A INNER JOIN LOAD_CONTROL B ON A.SOURCE_ID = B.SOURCE_ID AND B.LOAD_TYPE='ETL' AND B.LOAD_ID IN(SEL LOAD_ID FROM MDM_LOAD_CONTROL) INNER JOIN LOAD_INFO LI ON B.LOAD_ID = LI.LOAD_ID AND LI.PROCESS_NAME='Validations-BadFile' AND LI.STATUS ='Failure-BadFile';" AssignToVar="resSrcEmail"/>
                        <TO_DOCVAR AssignToVar="srcdetails">
                          <ROOT>
                            <TO_XML SelectList="$resSrcEmail/*"/>
                          </ROOT>
                        </TO_DOCVAR>
                        <EXECUTE_SQL_QUERY Value="SELECT DISTINCT LOAD_ID FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG WHERE LOAD_ID IN (SELECT DISTINCT LOAD_ID FROM ERR_PRSNA_STG WHERE LOAD_ID IN(SELECT DISTINCT B.LOAD_ID FROM LOAD_CONTROL B INNER JOIN LOAD_INFO LI ON B.LOAD_ID = LI.LOAD_ID AND LI.PROCESS_NAME='Validations-BadFile' AND LI.STATUS ='Failure-BadFile' WHERE B.LOAD_TYPE='ETL' AND B.LOAD_ID IN(SEL LOAD_ID FROM MDM_LOAD_CONTROL))) AND CNTCT_OPTN_IND IN ('N','O');" AssignToVar="resdistinctSourceId"/>
                        <IF_TEST Test="$resdistinctSourceId/SQL_RESULT/LOAD_ID/@Value != NULL">
                          <THEN>
                            <SET Var="Sample" FromValue="1"/>
                            <FOR_EACH SelectList="$resdistinctSourceId/*" CurrentElement="currSource">
                              <IF_TEST Test="$Sample=1">
                                <THEN>
                                  <SET Var="LoadId" FromValue="{$currSource/LOAD_ID/@Value}"/>
                                </THEN>
                                <ELSE>
                                  <SET Var="LoadId" FromValue="{concat($LoadId/@Value,',',$currSource/LOAD_ID/@Value)}"/>
                                </ELSE>
                              </IF_TEST>
                              <SET Var="Sample" FromValue="{int(int($Sample)+1)}"/>
                            </FOR_EACH>
                            <EXECUTE_SHELL_COMMAND Value="{concat('alternatei2optout.cmd Validation ',$LoadId)}" AssignToVar="alternatei2optoutResult"/>
                            <IF_TEST Test="$alternatei2optoutResult/@ShellReturnValue != 0">
                              <THEN>
                                <SET Var="Description" FromValue="{$alternatei2optoutResult/@ShellReturnValue}"/>
                                <REQUEST Name="emailOnErrorNode" ServiceName="BCM_MASTER">
                                  <LoadId Value="{$LoadId}"/>
                                  <Subject Value="i2 Alternate Optout Failure"/>
                                  <Short_Description Value="{$Description/@Value}"/>
                                  <Description Value="Following Load Id failed :{$LoadId}"/>
                                  <SubCategory Value="Validation Error"/>
                                  <PROCESS_NAME Value="{$PROCESS_NAME/@Value}"/>
                                </REQUEST>
                              </THEN>
                            </IF_TEST>
                          </THEN>
                          <ELSE>
                          </ELSE>
                        </IF_TEST>
                        <!-- send the bad file email for the corresponding batch id -->
                        <REQUEST Name="BadFileRequest" ServiceName="BCM_MASTER" AssignToVar="resBadFile" Synchronous="no">
                          <BatchId Value="{$resBatchId/BatchID/@Value}"/>
                          <TO_XML DocVar="srcdetails"/>
                        </REQUEST>
                        <!-- Call Status Update batch Script which does inserts into ETL_CTRL.LOAD_CONTROL -->
                        <EXECUTE_SHELL_COMMAND Value="MDM_STATUS.BAT" AssignToVar="resMdmStatus"/>
                      </THEN>
                      <ELSE>
                      </ELSE>
                    </IF_TEST>
                  </THEN>
                  <ELSE>
                    <TO_DOCVAR AssignToVar="thisReturn">
                      <FAILURE>
                        <Message Value="{$validationResult/@ShellReturnValue}"/>
                      </FAILURE>
                    </TO_DOCVAR>
                    <FOR_EACH SelectList="$validationReadyLoadIds/*" CurrentElement="currLoad">
                      <DO_TRANSACTION>
                        <MODIFY_DOC_SMART Name="LOAD_INFO" ServiceName="BCM_MASTER">
                          <DOCUMENT_CONTEXT>
                            <LOAD_ID Value="{$currLoad/LOAD_ID/@Value}"/>
                            <PROCESS_NAME Value="Validations"/>
                            <STATUS Value="In Progress"/>
                            <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                          </DOCUMENT_CONTEXT>
                          <UPDATE_PROPERTIES>
                            <STATUS Value="Failure"/>
                            <ERROR_MSG_TXT Value="{$thisReturn/Message/@Value}"/>
                            <PROCESS_END_TIME Value="{date()}"/>
                          </UPDATE_PROPERTIES>
                        </MODIFY_DOC_SMART>
                      </DO_TRANSACTION>
                    </FOR_EACH>
                    <SET Var="Description" FromValue="{$validationResult/@ShellReturnValue}"/>
                    <!-- Verify if this BadFile caused failure -->
                    <GET_DOCUMENT Name="LOAD_INFO" ServiceName="BCM_MASTER" AssignToVar="resLoad" DirtyRead="yes" Distinct="false">
                      <SELECT>
                        <LOAD_ID/>
                      </SELECT>
                      <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                      <STATUS Value="Failure-BadFile"/>
                    </GET_DOCUMENT>
                    <IF_TEST Test="$resLoad/LOAD_INFO/LOAD_ID != null ">
                      <THEN>
                        <EXECUTE_SQL_QUERY Value="SELECT DISTINCT A.SOURCE_ID,A.REQ_MAIL_ID,A.AGN_CON_MAIL_ID FROM SOURCE_CONTROL A INNER JOIN LOAD_CONTROL B ON A.SOURCE_ID = B.SOURCE_ID AND B.LOAD_TYPE='ETL' AND B.LOAD_ID IN(SEL LOAD_ID FROM MDM_LOAD_CONTROL) INNER JOIN LOAD_INFO LI ON B.LOAD_ID = LI.LOAD_ID AND LI.PROCESS_NAME='Validations-BadFile' AND LI.STATUS ='Failure-BadFile';" AssignToVar="resSrcEmail"/>
                        <TO_DOCVAR AssignToVar="srcdetails">
                          <ROOT>
                            <TO_XML SelectList="$resSrcEmail/*"/>
                          </ROOT>
                        </TO_DOCVAR>
                        <EXECUTE_SQL_QUERY Value="SELECT DISTINCT LOAD_ID FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG WHERE LOAD_ID IN (SELECT DISTINCT LOAD_ID FROM ERR_PRSNA_STG WHERE LOAD_ID IN(SELECT DISTINCT B.LOAD_ID FROM LOAD_CONTROL B INNER JOIN LOAD_INFO LI ON B.LOAD_ID = LI.LOAD_ID AND LI.PROCESS_NAME='Validations-BadFile' AND LI.STATUS ='Failure-BadFile' WHERE B.LOAD_TYPE='ETL' AND B.LOAD_ID IN(SEL LOAD_ID FROM MDM_LOAD_CONTROL))) AND CNTCT_OPTN_IND IN ('N','O');" AssignToVar="resdistinctSourceId"/>
                        <IF_TEST Test="$resdistinctSourceId/SQL_RESULT/LOAD_ID/@Value != NULL">
                          <THEN>
                            <SET Var="Sample" FromValue="1"/>
                            <FOR_EACH SelectList="$resdistinctSourceId/*" CurrentElement="currSource">
                              <IF_TEST Test="$Sample=1">
                                <THEN>
                                  <SET Var="LoadId" FromValue="{$currSource/LOAD_ID/@Value}"/>
                                </THEN>
                                <ELSE>
                                  <SET Var="LoadId" FromValue="{concat($LoadId/@Value,',',$currSource/LOAD_ID/@Value)}"/>
                                </ELSE>
                              </IF_TEST>
                              <SET Var="Sample" FromValue="{int(int($Sample)+1)}"/>
                            </FOR_EACH>
                            <EXECUTE_SHELL_COMMAND Value="{concat('alternatei2optout.cmd Validation ',$LoadId)}" AssignToVar="alternatei2optoutResult"/>
                            <IF_TEST Test="$alternatei2optoutResult/@ShellReturnValue != 0">
                              <THEN>
                                <SET Var="Description" FromValue="{$alternatei2optoutResult/@ShellReturnValue}"/>
                                <REQUEST Name="emailOnErrorNode" ServiceName="BCM_MASTER">
                                  <LoadId Value="{$LoadId}"/>
                                  <Subject Value="i2 Alternate Optout Failure"/>
                                  <Short_Description Value="{$Description/@Value}"/>
                                  <Description Value="Following Load Id failed :{$LoadId}"/>
                                  <SubCategory Value="Validation Error"/>
                                  <PROCESS_NAME Value="{$PROCESS_NAME/@Value}"/>
                                </REQUEST>
                              </THEN>
                            </IF_TEST>
                          </THEN>
                          <ELSE>
                          </ELSE>
                        </IF_TEST>
                        <!-- send the bad file email for the corresponding batch id -->
                        <REQUEST Name="BadFileRequest" ServiceName="BCM_MASTER" AssignToVar="resBadFile" Synchronous="no">
                          <BatchId Value="{$resBatchId/BatchID/@Value}"/>
                          <TO_XML DocVar="srcdetails"/>
                        </REQUEST>
                        <!-- Call Status Update batch Script which does inserts into ETL_CTRL.LOAD_CONTROL -->
                        <EXECUTE_SHELL_COMMAND Value="MDM_STATUS.BAT" AssignToVar="resMdmStatus"/>
                      </THEN>
                      <ELSE>
                        <EXECUTE_SQL_QUERY Value="SELECT DISTINCT LOAD_ID FROM ICRM_STAGE.CNTCT_OPTN_CHCE_STG WHERE LOAD_ID IN (SELECT DISTINCT B.LOAD_ID FROM LOAD_CONTROL B INNER JOIN LOAD_INFO LI ON B.LOAD_ID = LI.LOAD_ID AND LI.PROCESS_NAME='Validations' AND LI.STATUS ='Failure' WHERE B.LOAD_TYPE='ETL' AND B.LOAD_ID IN(SEL LOAD_ID FROM MDM_LOAD_CONTROL)) AND CNTCT_OPTN_IND IN ('N','O');" AssignToVar="resdistinctSourceId"/>
                        <IF_TEST Test="$resdistinctSourceId/SQL_RESULT/LOAD_ID/@Value != NULL">
                          <THEN>
                            <SET Var="Sample" FromValue="1"/>
                            <FOR_EACH SelectList="$resdistinctSourceId/*" CurrentElement="currSource">
                              <IF_TEST Test="$Sample=1">
                                <THEN>
                                  <SET Var="LoadId" FromValue="{$currSource/LOAD_ID/@Value}"/>
                                </THEN>
                                <ELSE>
                                  <SET Var="LoadId" FromValue="{concat($LoadId/@Value,',',$currSource/LOAD_ID/@Value)}"/>
                                </ELSE>
                              </IF_TEST>
                              <SET Var="Sample" FromValue="{int(int($Sample)+1)}"/>
                            </FOR_EACH>
                            <EXECUTE_SHELL_COMMAND Value="{concat('alternatei2optout.cmd ValidationFailure ',$LoadId)}" AssignToVar="alternatei2optoutResult"/>
                            <IF_TEST Test="$alternatei2optoutResult/@ShellReturnValue != 0">
                              <THEN>
                                <SET Var="Description" FromValue="{$alternatei2optoutResult/@ShellReturnValue}"/>
                                <REQUEST Name="emailOnErrorNode" ServiceName="BCM_MASTER">
                                  <LoadId Value="{$LoadId}"/>
                                  <Subject Value="i2 Alternate Optout Failure"/>
                                  <Short_Description Value="{$Description/@Value}"/>
                                  <Description Value="Following Load Id failed :{$LoadId}"/>
                                  <SubCategory Value="Validation Error"/>
                                  <PROCESS_NAME Value="{$PROCESS_NAME/@Value}"/>
                                </REQUEST>
                              </THEN>
                            </IF_TEST>
                          </THEN>
                          <ELSE>
                          </ELSE>
                        </IF_TEST>
                        <!-- Call Status Update batch Script which does inserts into ETL_CTRL.LOAD_CONTROL -->
                        <EXECUTE_SHELL_COMMAND Value="MDM_STATUS.BAT" AssignToVar="resMdmStatus"/>
                        <!-- Set Load Status to Failed,so when Timer call backs and if the failure is not yet rectified then it should send an email and not execute next Validation load-->
                        <SET Var="previousValidationLoadStatus" FromValue="Failed" Scope="Global"/>
                        <REQUEST Name="getConcatenatedLoadIds" AssignToVar="resConcatenatedLoadIds" ServiceName="BCM_MASTER">
                          <BATCH_ID Value="{$resBatchId/BatchID/@Value}"/>
                        </REQUEST>
                        <!--<EXECUTE_SQL_QUERY Value="SEL DISTINCT SOURCE_ID FROM FAILURE_EMAIL_DETAILS WHERE LOAD_ID IN({$resConcatenatedLoadIds/@Value})" AssignToVar="resagencyfailuredetails"/>
                        <SET Var="DistinctSourceId" FromVar=""/>
                        <FOR_EACH SelectList="$resagencyfailuredetails/SQL_RESULT/SOURCE_ID" CurrentElement="currentSourceId">-->
                        <REQUEST Name="emailOnErrorNode">
                          <LoadId Value="{$resConcatenatedLoadIds/@Value}"/>
                          <Subject Value="Validation Failure"/>
                          <Short_Description Value="{$Description/@Value}"/>
                          <Description Value="Following Load Id failed :{$resConcatenatedLoadIds/@Value}"/>
                          <SubCategory Value="Validation Error"/>
                          <PROCESS_NAME Value="{$PROCESS_NAME/@Value}"/>
                        </REQUEST>
                        <!--</FOR_EACH>-->
                        <!-- send the validation failure email for the corresponding batch id with Type as BATCH-->
                      </ELSE>
                    </IF_TEST>
                  </ELSE>
                </IF_TEST>
              </THEN>
              <ELSE>
              </ELSE>
            </IF_TEST>
          </THEN>
        </IF_TEST>
      </ACTION>
    </RULE>
  </DEFINE_METHOD>
</DOCUMENTS>