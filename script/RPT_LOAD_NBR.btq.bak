/***********************************************************************************************************
SCRIPT:               RPT_LOAD_NBR.BTEQ 
DESCRIPTION:          THIS SCRIPT UPDATES RPT_LOAD_NBR
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
***********************************************************************************************************/
.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE $DATABASENAME;

 FROM PRSNA_DPLCT ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT PRSNA_DPLCT
(
DUP_REGIS_PRSNA_ID,
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
REFERENCE_REGISTRATIONKEY
)
SELECT DISTINCT
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN C.REGIS_PRSNA_ID
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN B.REGIS_PRSNA_ID
 END DUP_REGIS_PRSNA_ID1,
A.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
CASE WHEN C.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER)
     WHEN B.REGIS_PRSNA_ID IS NOT NULL
     THEN CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER)     
 END REFERENCE_REGISTRATIONKEY1
FROM
TRILLIUM_OUTPUT_DUP1 A

LEFT OUTER JOIN REGIS_PRSNA B
ON CAST(A.REFERENCE_REGISTRATIONKEY AS INTEGER) = B.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND B.PRSNA_STATUS_CODE = 'DP'
LEFT OUTER JOIN REGIS_PRSNA C
ON CAST(A.DUP_REGIS_PRSNA_ID AS INTEGER) = C.REGIS_PRSNA_ID
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.PRSNA_STATUS_CODE = 'DP'

LEFT OUTER JOIN ATTRIBUTE_VALUES D
ON D.AV_CODE = A.MKTNG_PGM_NBR
AND D.AV_DESCRIPTION='Merge'

WHERE (B.PRSNA_STATUS_CODE = 'DP' OR C.PRSNA_STATUS_CODE = 'DP')
AND D.AV_CODE IS NULL
AND A.SYS_SOURCE <> 'BACKEND'
AND DUP_REGIS_PRSNA_ID1 IS NOT NULL 
AND REFERENCE_REGISTRATIONKEY1 IS NOT NULL
QUALIFY RANK() OVER (PARTITION BY DUP_REGIS_PRSNA_ID1
ORDER BY A.SYS_CREATION_DATE DESC,REFERENCE_REGISTRATIONKEY1 DESC,A.REGIS_CNSMR_ID_VAL DESC, A.REGIS_DATE DESC) = 1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS ON TEMPORARY PRSNA_DPLCT
COLUMN DUP_REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS ON TEMPORARY PRSNA_DPLCT
COLUMN REFERENCE_REGISTRATIONKEY;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS ON TEMPORARY PRSNA_DPLCT
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS ON TEMPORARY PRSNA_DPLCT
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT A
INNER JOIN REGIS_PRSNA_POSTL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.SUBSCRPTN_OPT_NBR IS NOT NULL
AND E.POSTL_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_POSTL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND D.SUBSCRPTN_OPT_NBR IS NOT NULL

WHERE E.SUBSCRPTN_OPT_NBR = D.SUBSCRPTN_OPT_NBR
GROUP BY 1,2,3,4
) B
SET POSTL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_PHONE
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT A
INNER JOIN REGIS_PRSNA_PHONE E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.SUBSCRPTN_OPT_NBR IS NOT NULL
AND E.PHONE_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_PHONE D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND D.SUBSCRPTN_OPT_NBR IS NOT NULL

WHERE E.SUBSCRPTN_OPT_NBR = D.SUBSCRPTN_OPT_NBR
GROUP BY 1,2,3,4
) B
SET PHONE_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE = 'AC';

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT A
INNER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.SUBSCRPTN_OPT_NBR IS NOT NULL
AND E.EMAIL_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_EMAIL_ADDR D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND D.SUBSCRPTN_OPT_NBR IS NOT NULL

WHERE E.SUBSCRPTN_OPT_NBR = D.SUBSCRPTN_OPT_NBR
GROUP BY 1,2,3,4
) B
SET EMAIL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM (
SEL E.REGIS_PRSNA_ID,E.LEGAL_ENT_NBR,E.MKTNG_PGM_NBR,E.SUBSCRPTN_OPT_NBR
 FROM PRSNA_DPLCT A
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT E
ON E.REGIS_PRSNA_ID = A.DUP_REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND E.SUBSCRPTN_OPT_NBR IS NOT NULL
AND E.SOC_NET_STATUS_CODE = 'AC'
INNER JOIN REGIS_PRSNA_SOC_NET_ACCT D
ON D.REGIS_PRSNA_ID = A.REFERENCE_REGISTRATIONKEY
AND D.LEGAL_ENT_NBR = A.LEGAL_ENT_NBR
AND D.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND D.SUBSCRPTN_OPT_NBR IS NOT NULL

WHERE E.SUBSCRPTN_OPT_NBR = D.SUBSCRPTN_OPT_NBR
GROUP BY 1,2,3,4
) B
SET SOC_NET_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,0) = COALESCE(B.SUBSCRPTN_OPT_NBR,0)
AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE = 'AC'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE MATCHD_CNSMR_PRSNA
SET PRSNA_STATUS_CODE = 'AC'
WHERE PRSNA_STATUS_CODE = 'IN'
AND (LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID) IN 
(SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE MATCHD_CNSMR_PRSNA
SET PRSNA_STATUS_CODE = 'IN'
WHERE PRSNA_STATUS_CODE = 'AC'
AND (LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID) NOT IN 
(SEL LEGAL_ENT_NBR,MATCHD_CNSMR_PRSNA_ID
FROM REGIS_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE HSHLD_PRSNA
SET PRSNA_STATUS_CODE = 'AC'
WHERE PRSNA_STATUS_CODE = 'IN'
AND (LEGAL_ENT_NBR,HSHLD_PRSNA_ID) IN 
(SEL LEGAL_ENT_NBR,HSHLD_PRSNA_ID
FROM MATCHD_CNSMR_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE HSHLD_PRSNA
SET PRSNA_STATUS_CODE = 'IN'
WHERE PRSNA_STATUS_CODE = 'AC'
AND (LEGAL_ENT_NBR,HSHLD_PRSNA_ID) NOT IN 
(SEL LEGAL_ENT_NBR,HSHLD_PRSNA_ID
FROM MATCHD_CNSMR_PRSNA
WHERE PRSNA_STATUS_CODE = 'AC'
); 
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA
FROM (
SEL C.REGIS_PRSNA_ID,C.LEGAL_ENT_NBR,C.MKTNG_PGM_NBR,C.REGIS_CNSMR_ID_VAL
 FROM REGIS_PRSNA C
INNER JOIN REGIS_PRSNA C1
ON C.REGIS_PRSNA_ID = C1.REGIS_PRSNA_ID
AND C.LEGAL_ENT_NBR = C1.LEGAL_ENT_NBR
AND C.MKTNG_PGM_NBR = C1.MKTNG_PGM_NBR
AND C.REGIS_CNSMR_ID_VAL = C1.REGIS_CNSMR_ID_VAL
AND C.PRSNA_STATUS_CODE = 'DP'
LEFT OUTER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E.EMAIL_STATUS_CODE = 'AC'
LEFT OUTER JOIN REGIS_PRSNA_PHONE E1
ON E1.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E1.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E1.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E1.PHONE_STATUS_CODE = 'AC'
LEFT OUTER JOIN REGIS_PRSNA_POSTL_ADDR E2
ON E2.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E2.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E2.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E2.POSTL_STATUS_CODE = 'AC'
LEFT OUTER JOIN REGIS_PRSNA_SOC_NET_ACCT E3
ON E3.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E3.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E3.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND E3.SOC_NET_STATUS_CODE = 'AC'
WHERE E.EMAIL_STATUS_CODE = 'AC'
OR E1.PHONE_STATUS_CODE = 'AC'
OR E2.POSTL_STATUS_CODE = 'AC'
OR E3.SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2,3,4
) B
SET PRSNA_STATUS_CODE = 'AC'
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA
FROM (
SEL C.REGIS_PRSNA_ID,C.LEGAL_ENT_NBR,C.MKTNG_PGM_NBR,C.REGIS_CNSMR_ID_VAL
 FROM REGIS_PRSNA C
LEFT OUTER JOIN REGIS_PRSNA_EMAIL_ADDR E
ON E.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN REGIS_PRSNA_PHONE E1
ON E1.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E1.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E1.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN REGIS_PRSNA_POSTL_ADDR E2
ON E2.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E2.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E2.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN REGIS_PRSNA_SOC_NET_ACCT E3
ON E3.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID
AND E3.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND E3.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
WHERE   ((E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP')
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL) 
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E.EMAIL_STATUS_CODE = 'DP' AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP')
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL) 
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E1.PHONE_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP')
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE = 'DP'  AND E3.SOC_NET_STATUS_CODE IS NULL) 
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE = 'DP') 
OR (E2.POSTL_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE IS NULL AND E3.SOC_NET_STATUS_CODE IS NULL)
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL)
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP')
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE = 'DP'  AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL)
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE = 'DP') 
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE = 'DP'  AND E2.POSTL_STATUS_CODE IS NULL) 
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE = 'DP') 
OR (E3.SOC_NET_STATUS_CODE = 'DP' AND E.EMAIL_STATUS_CODE IS NULL AND E1.PHONE_STATUS_CODE IS NULL AND E2.POSTL_STATUS_CODE IS NULL))
AND PRSNA_STATUS_CODE='AC'
GROUP BY 1,2,3,4
) B
SET PRSNA_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
SET VALID_CNTCT_POINT_IND = 'N'
WHERE ADDR_LINE_1_TXT IS NULL 
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS RPT_LOAD_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS LOAD_INFO1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/****************************************************************************************************
QUERY TO INSERT LOAD STATS INTO RPT_LOAD_NBR TABLE
****************************************************************************************************/

CREATE VOLATILE TABLE VT_RPT_LOAD_NBR
AS 
(
SELECT DISTINCT
CAST (A.LOAD_ID AS INTEGER) AS LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0) AS MKTNG_PGM_NBR
,COUNT(DISTINCT B.REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM 
(

SELECT A.LOAD_ID 
FROM
(
SELECT LOAD_ID
FROM LOAD_CONTROL  
WHERE LOAD_TYPE = 'ETL'
AND LOADSTATUS = 'SUCCESS'
AND MDM_PROCESS_DESC='COMPLETED'
AND TARGETCNT > 0	
) A

INNER JOIN MDM_LOAD_CONTROL LC
ON A.LOAD_ID = LC.LOAD_ID

INNER JOIN LOAD_INFO LI 
ON A.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Wrapper'
AND LI.STATUS = 'In Progress'
AND LI.CNTRY_NAME='$CNTRY'
GROUP BY 1
)A

LEFT OUTER JOIN PRSNA_STG_CNT B
ON A.LOAD_ID = B.LOAD_ID	
GROUP BY 1,2 
)
WITH DATA
PRIMARY INDEX ( LOAD_ID, MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
, MKTNG_PGM_NBR
, LEGAL_ENT_NBR
, STAGING_NBR
, ERROR_NBR
, ACTIVE_NBR
, DUPLICATE_NBR
, PHONE_OPT_IN
, PHONE_OPT_OUT
, EMAIL_OPT_IN
, EMAIL_OPT_OUT
, POSTAL_OPT_IN
, POSTAL_OPT_OUT
, SOCIAL_OPT_IN
, SOCIAL_OPT_OUT
)
SELECT DISTINCT
B.LOAD_ID
,B.MKTNG_PGM_NBR
,COALESCE(C.LEGAL_ENT_NBR,0)
,B.STAGING_NBR
,COALESCE(N.ERROR_NBR,0)
,COALESCE(D.ACTIVE_NBR,0)
,COALESCE(D.DUPLICATE_NBR,0)
,COALESCE(E.PHONE_OPT_IN,0)
,COALESCE(E.PHONE_OPT_OUT,0)
,COALESCE(F.EMAIL_OPT_IN,0)
,COALESCE(F.EMAIL_OPT_OUT,0)
,COALESCE(G.POSTAL_OPT_IN,0)
,COALESCE(G.POSTAL_OPT_OUT,0)
,COALESCE(H.SOCIAL_OPT_IN,0)
,COALESCE(H.SOCIAL_OPT_OUT,0)
FROM
VT_RPT_LOAD_NBR B

LEFT OUTER JOIN
MKTNG_PGM C
ON B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'AC' THEN REGIS_PRSNA_ID ELSE NULL END ) ACTIVE_NBR
, COUNT(DISTINCT CASE WHEN PRSNA_STATUS_CODE = 'DP' THEN REGIS_PRSNA_ID ELSE NULL END ) DUPLICATE_NBR
FROM REGIS_PRSNA R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
GROUP BY 1,2
) D
ON B.LOAD_ID = D.SYS_SOURCE
AND B.MKTNG_PGM_NBR = D.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) PHONE_OPT_OUT
FROM REGIS_PRSNA_PHONE R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND PHONE_STATUS_CODE = 'AC'
GROUP BY 1,2
) E
ON B.LOAD_ID = E.SYS_SOURCE
AND B.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) EMAIL_OPT_OUT
FROM REGIS_PRSNA_EMAIL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR 
AND EMAIL_STATUS_CODE = 'AC'
GROUP BY 1,2
) F
ON B.LOAD_ID = F.SYS_SOURCE
AND B.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) POSTAL_OPT_OUT
FROM REGIS_PRSNA_POSTL_ADDR R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND POSTL_STATUS_CODE = 'AC'
GROUP BY 1,2
) G
ON B.LOAD_ID = G.SYS_SOURCE
AND B.MKTNG_PGM_NBR = G.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT	  CAST(SYS_SOURCE AS INTEGER) SYS_SOURCE, R.MKTNG_PGM_NBR
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('Y','I') THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_IN
,  COUNT( CASE WHEN SUBSCRPTN_OPT_IND IN ('N','O')THEN REGIS_PRSNA_ID ELSE NULL END ) SOCIAL_OPT_OUT
FROM REGIS_PRSNA_SOC_NET_ACCT R, VT_RPT_LOAD_NBR V
WHERE SYS_SOURCE		= V.LOAD_ID
AND R.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
AND SOC_NET_STATUS_CODE = 'AC'
GROUP BY 1,2
) H
ON B.LOAD_ID = H.SYS_SOURCE
AND B.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 

LEFT OUTER JOIN 
(
SELECT E.LOAD_ID, E.MKTNG_PGM_NBR, COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG_CURR_LOAD E, VT_RPT_LOAD_NBR V
WHERE E.LOAD_ID		= V.LOAD_ID
AND E.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

 INSERT INTO ERR_PRSNA_STG
 (MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 )
SELECT
MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,A.LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 FROM
 ERR_PRSNA_STG_CURR_LOAD A
 WHERE A.LOAD_ID IN (SEL LOAD_ID FROM  LOAD_INFO 
 WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit

