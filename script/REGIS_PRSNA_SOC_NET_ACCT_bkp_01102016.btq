/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_SOC_NET_ACCT.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts takes data friom trillium output tables 
                                                      and loads REGIS_PRSNA_SOC_NET_ACCT
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
4.2.1                01/14/2013           TERADATA                        INC0011026
4.5.3                03/02/2013           TERADATA                        PRB0040960          
5.1                  04/08/2014           TERADATA                        RELEASE 5.1
                                                                          1. i60 PROCESSING CHANGES    
5.7                  02/29/2015           TERADATA                        RELEASE 5.7 BR392 SET PRSNA_STATUS_CODE='WR'
                                                                          For Website Registrations                                                            
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Country=$CNTRY;Stage=Wrapper;Step=Step10;' FOR SESSION; 
DATABASE $DATABASENAME;

SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_LIST_$CNTRY
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO i2

.LABEL OPTOUT

/*****************************************************************************
i60 Opt Out
Opt out the consumer from REGIS_PRSNA_EMAIL_ADDR based on the match available 
in OPT_OUT_$CNTRY_LIST_TEMP table populated above.

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
******************************************************************************/

UPDATE	PRSNA_SOC_NETWK_ACCT_STG
FROM	(
SELECT	DISTINCT REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1    
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
ON TEMP1.EDW_REGIS_PRSNA_ID=B.REGIS_PRSNA_ID   
AND TEMP1.EDW_MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
WHERE EDW_CHANNEL_IND IN ('ALL')
AND EDW_SUBSCRIPTION_NBR = 9999
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,LOAD_ID=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE PRSNA_SOC_NETWK_ACCT_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_SOC_NETWK_ACCT_STG.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND PRSNA_SOC_NETWK_ACCT_STG.LOAD_ID=TRIM(CAST(TEMP.SYS_SOURCE AS INTEGER))
AND PRSNA_SOC_NETWK_ACCT_STG.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND PRSNA_SOC_NETWK_ACCT_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	PRSNA_SOC_NETWK_ACCT_STG
FROM	(
SELECT	DISTINCT REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE,EDW_SUBSCRIPTION_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1    
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
ON TEMP1.EDW_REGIS_PRSNA_ID=B.REGIS_PRSNA_ID   
AND TEMP1.EDW_MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
WHERE EDW_CHANNEL_IND IN ('ALL')
AND EDW_SUBSCRIPTION_NBR <> 9999
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,LOAD_ID=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE PRSNA_SOC_NETWK_ACCT_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_SOC_NETWK_ACCT_STG.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND PRSNA_SOC_NETWK_ACCT_STG.CNTCT_OPTN_NBR=TEMP.EDW_SUBSCRIPTION_NBR
AND PRSNA_SOC_NETWK_ACCT_STG.LOAD_ID=TRIM(CAST(TEMP.SYS_SOURCE AS INTEGER))
AND PRSNA_SOC_NETWK_ACCT_STG.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND PRSNA_SOC_NETWK_ACCT_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	REGIS_PRSNA_SOC_NET_ACCT
FROM	(
SELECT	DISTINCT EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1  
WHERE EDW_CHANNEL_IND IN ('ALL')
AND EDW_SUBSCRIPTION_NBR = 9999
QUALIFY RANK() OVER (PARTITION BY EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID=TEMP.EDW_REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	REGIS_PRSNA_SOC_NET_ACCT
FROM	(
SELECT	DISTINCT EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,EDW_SUBSCRIPTION_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1  
WHERE EDW_CHANNEL_IND IN ('ALL')
AND EDW_SUBSCRIPTION_NBR <> 9999
QUALIFY RANK() OVER (PARTITION BY EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID=TEMP.EDW_REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR=TEMP.EDW_SUBSCRIPTION_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/******************************************************************************************
i2 Opt Out 
4.5.3                03/02/2013           TERADATA                        PRB0040960                                                                          

Opt out the consumer from REGIS_PRSNA_EMAIL_ADDR based on the match available 
in ICRM_STAGE_TBL.CNTCT_OPTN_CHCE_STG and ICRM_STAGE_TBL. CNTCT_OPTN_CHCE_STG_HIST.     

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
*******************************************************************************************/

.LABEL i2

--PRB0040960 Start--

SELECT
COUNT(*) AS CNT 
FROM I2_Channels_$CNTRY
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO i2OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO EDW2

.LABEL i2OPTOUT

UPDATE PRSNA_SOC_NETWK_ACCT_STG
FROM	(
SELECT	REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
CNTCT_POINT_CATEG_CODE,
CNTCT_OPTN_NBR,
SYS_TARGET_ID,
CNSMR_CHCE_DATETM,
SYS_SOURCE 
FROM	$DATABASENAME. I2_Channels_$CNTRY  TEMP1  
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,SYS_TARGET_ID, CNTCT_OPTN_NBR, CNTCT_POINT_CATEG_CODE
ORDER BY CNSMR_CHCE_DATETM DESC, SYS_SOURCE DESC) = 1
GROUP	BY 1,2,3,4,5,6,7) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'I2USER'
,CNSMR_CHCE_DATETM=CAST(CAST(temp.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0))
,LOAD_ID=TRIM(CAST(TEMP. SYS_SOURCE AS INTEGER))
WHERE PRSNA_SOC_NETWK_ACCT_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_SOC_NETWK_ACCT_STG.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND PRSNA_SOC_NETWK_ACCT_STG. SYS_TARGET_ID =TEMP. SYS_TARGET_ID
AND PRSNA_SOC_NETWK_ACCT_STG.CNTCT_OPTN_NBR=TEMP.CNTCT_OPTN_NBR
AND PRSNA_SOC_NETWK_ACCT_STG. CNTCT_POINT_CATEG_CODE =TEMP.CNTCT_POINT_CATEG_CODE
AND PRSNA_SOC_NETWK_ACCT_STG.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND PRSNA_SOC_NETWK_ACCT_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EDW2


--PRB0040960 End  --

CREATE VOLATILE TABLE RP1 AS (
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS_$CNTRY TOUT
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS RP1
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS RP1
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM REGIS_PRSNA_SOC_NET_ACCT WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
RP1 TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS REGIS_PRSNA_SOC_NET_ACCT 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
SOCIAL_NETWK_ACCT_ID_VAL      ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY   ,
DATA_SRCE_NBR,
SOC_NET_STATUS_CODE
)
SELECT *
FROM 
(SELECT
A.CNTCT_POINT_CATEG_CODE        ,
--B.REFERENCE_REGISTRATIONKEY                ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.CNTCT_OPTN_NBR             ,
A.CNTCT_OPTN_IND             ,
CAST(A.CNSMR_CHCE_DATETM   AS TIMESTAMP(6))  CNSMR_CHCE_DATETM       ,
A.PREFR_IND          ,
A.SOCIAL_NETWK_ACCT_ID_VAL      ,
A.VALID_IND         ,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
COALESCE(TRIM(CAST(A.LOAD_ID AS INTEGER)),A.SYS_SOURCE) SYS_SOURCE    ,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.SYS_TARGET_ID SYS_TARGET_ID1,
CASE WHEN (A.SOCIAL_NETWK_ACCT_ID_VAL IS NULL AND A.CNTCT_OPTN_IND='I')
     THEN 'NV'
     WHEN A.SOCIAL_NETWK_ACCT_ID_VAL =''
     THEN 'IN'
     ELSE 'AC' END AS SOC_NET_STATUS_CODE
FROM PRSNA_SOC_NETWK_ACCT_STG A
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
	AND	A.SYS_TARGET_ID=B.SYS_TARGET_ID
QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.CNTCT_POINT_CATEG_CODE,COALESCE(A.CNTCT_OPTN_NBR,0)
ORDER BY A.SYS_CREATION_DATE DESC
,A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
,A.CNSMR_CHCE_DATETM DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27
;	
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************************************
i2 Optout Proess
******************************************************************************************************/

CREATE VOLATILE MULTISET TABLE SOC_OPTOUT AS (
SEL MKTNG_PGM_NBR,SOCIAL_NETWK_ACCT_ID_VAL,CNSMR_CHCE_DATETM,SYS_SOURCE
,COALESCE(SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR1
,REGIS_PRSNA_ID
,CNTCT_POINT_CATEG_CODE
FROM REGIS_PRSNA_SOC_NET_ACCT  ADJ
WHERE COALESCE(TRIM(SOCIAL_NETWK_ACCT_ID_VAL),'') <> ''
AND SUBSCRPTN_OPT_IND = 'O'
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
GROUP BY MKTNG_PGM_NBR,SOCIAL_NETWK_ACCT_ID_VAL,CNSMR_CHCE_DATETM,SYS_SOURCE
,SUBSCRPTN_OPT_NBR1
,REGIS_PRSNA_ID
,CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE SOC_OPTOUT_T2 AS (
SEL ADJ.MKTNG_PGM_NBR,ADJ.SOCIAL_NETWK_ACCT_ID_VAL,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
,ADJ.REGIS_PRSNA_ID
FROM SOC_OPTOUT  ADJ
WHERE EXISTS (SEL 1 FROM REGIS_PRSNA_SOC_NET_ACCT PA
WHERE PA.SOCIAL_NETWK_ACCT_ID_VAL=ADJ.SOCIAL_NETWK_ACCT_ID_VAL
AND PA.MKTNG_PGM_NBR=ADJ.MKTNG_PGM_NBR
AND PA.CNSMR_CHCE_DATETM<=ADJ.CNSMR_CHCE_DATETM
AND COALESCE(PA.SUBSCRPTN_OPT_NBR,0) = ADJ.SUBSCRPTN_OPT_NBR1
AND PA.CNTCT_POINT_CATEG_CODE=ADJ.CNTCT_POINT_CATEG_CODE
AND PA.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
AND PA.SUBSCRPTN_OPT_IND = 'I'
)
QUALIFY RANK() OVER (PARTITION BY ADJ.MKTNG_PGM_NBR,ADJ.SOCIAL_NETWK_ACCT_ID_VAL,
ADJ.SUBSCRPTN_OPT_NBR1,ADJ.CNTCT_POINT_CATEG_CODE
ORDER BY ADJ.CNSMR_CHCE_DATETM DESC,ADJ.SYS_SOURCE DESC,ADJ.REGIS_PRSNA_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SEL 1 FROM SOC_OPTOUT_T2 GROUP BY 1;
.IF ACTIVITYCOUNT = 0 THEN .EXIT

CREATE VOLATILE MULTISET TABLE SOC_OPTOUT_T1 AS (
SEL ADJ.MKTNG_PGM_NBR,ADJ.SOCIAL_NETWK_ACCT_ID_VAL,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
FROM SOC_OPTOUT_T2 ADJ
GROUP BY ADJ.MKTNG_PGM_NBR,ADJ.SOCIAL_NETWK_ACCT_ID_VAL,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,SOCIAL_NETWK_ACCT_ID_VAL,SUBSCRPTN_OPT_NBR1,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM SOC_OPTOUT_T1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.SOCIAL_NETWK_ACCT_ID_VAL=  TEMP.SOCIAL_NETWK_ACCT_ID_VAL
AND REGIS_PRSNA_SOC_NET_ACCT.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_SOC_NET_ACCT.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit