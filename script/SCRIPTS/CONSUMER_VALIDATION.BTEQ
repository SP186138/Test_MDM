/***********************************************************************************************************
SCRIPT:               Consumer Validation.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        REMOVAL OF Failure-BadFile
***********************************************************************************************************/

.RUN FILE \\10.36.32.4\Teradata\MDM\3.04.01.00\custom\pngrelease3\logon\LOGON.txt;
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE MDM;

DELETE FROM MDM.CNSMR_AFFLTN_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.DPEND_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.DPEND_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PET_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PET_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_EMAIL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_PHONE_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_POSTL_ADDR_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_SOC_NETWK_ACCT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.PRSNA_TRT_STG;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_EMAIL_DATA_IGNORE
SEL B.EMAIL_ADDR_TXT 
FROM 
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,EMAIL_ADDR_TXT
FROM
ICRM_STAGE.PRSNA_EMAIL_ADDR_STG STG
QUALIFY RANK() OVER (PARTITION BY MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL
ORDER BY LOAD_ID DESC,
LOAD_TS DESC,
RECORD_IND DESC
) = 1
) B
LEFT OUTER JOIN REF_EMAIL_DATA_IGNORE C
ON B.EMAIL_ADDR_TXT = C.EMAIL_ADDR_TXT
WHERE C.EMAIL_ADDR_TXT IS NULL
GROUP BY 1
HAVING COUNT(*) > 50
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO REF_PHONE_DATA_IGNORE
SEL B.FULL_PHONE_NUM 
FROM 
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,FULL_PHONE_NUM
FROM
ICRM_STAGE.PRSNA_PHONE_STG STG
QUALIFY RANK() OVER (PARTITION BY MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL
ORDER BY LOAD_ID DESC,
LOAD_TS DESC,
RECORD_IND DESC
) = 1
) B
LEFT OUTER JOIN REF_PHONE_DATA_IGNORE C
ON B.FULL_PHONE_NUM = C.FULL_PHONE_NUM
WHERE C.FULL_PHONE_NUM IS NULL
GROUP BY 1
HAVING COUNT(*) > 50
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS REF_EMAIL_DATA_IGNORE
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS REF_PHONE_DATA_IGNORE
COLUMN FULL_PHONE_NUM;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* VALIDATION FOR MISSING LEGAL ENTITY NUMBER */ 


INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
'Missing Legal Entity Number in Marketing Program Entity' SYS_ERR_CODE
FROM
(
SELECT 
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL
FROM
ICRM_STAGE.PRSNA_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN MDM.MKTNG_PGM MKTNG_PGM_1
ON STG.MKTNG_PGM_NBR = MKTNG_PGM_1.MKTNG_PGM_NBR
WHERE MKTNG_PGM_1.MKTNG_PGM_NBR IS NULL
GROUP BY 1,2
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* VALIDATION FOR SAME CATEG CODE COMING TWICE */ 


INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER.MKTNG_PGM_NBR,
DER.REGIS_CNSMR_ID_VAL,
'Email Address having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
ICRM_STAGE.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
'Phone having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
ICRM_STAGE.PRSNA_PHONE_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
--GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER1.MKTNG_PGM_NBR,
DER1.REGIS_CNSMR_ID_VAL,
'Social having same Category Code' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
STG.LOAD_ID,
--STG.LOAD_TS,
RECORD_IND
FROM
ICRM_STAGE.PRSNA_SOCIAL_NETWK_ACCT_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID	
-- GROUP BY 1,2,3,4,5,6
GROUP BY 1,2,3,4,5
HAVING COUNT(*) >1
)DER1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* VALIDATION FOR CHECKING CATEG CODE VALUES FROM ATT VALUES TABLE */

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for EMAIL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
ICRM_STAGE.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM MDM.ATTRIBUTE_VALUES A
INNER JOIN MDM.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN MDM.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION='Email Address'
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for PHONE' 
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
ICRM_STAGE.PRSNA_PHONE_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM MDM.ATTRIBUTE_VALUES A
INNER JOIN MDM.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN MDM.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION='Telephone Number'
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
'Not a Valid Category Code Value for POSTAL' SYS_ERR_CODE
FROM
(
SELECT 
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE
FROM
ICRM_STAGE.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
LEFT OUTER JOIN (
SEL A.AV_CODE  FROM MDM.ATTRIBUTE_VALUES A
INNER JOIN MDM.ATTRIBUTE_VALUES_HIERARCHY C
ON A.AV_ID = C.AV_ID_CHILD
INNER JOIN MDM.ATTRIBUTE_VALUES B
ON C.AV_ID_PARENT = B.AV_ID
AND B.AV_DESCRIPTION='Postal Address'
) A
ON STG.CNTCT_POINT_CATEG_CODE = A.AV_CODE
WHERE A.AV_CODE IS NULL
)DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* RECORDS HAVING MORE THEN TWO POSTAL/EMAIL/PHONE */

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP.MKTNG_PGM_NBR,
TEMP.REGIS_CNSMR_ID_VAL,
'Too Many Values in Postal' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
     --  ,STG.LOAD_TS
       ,RECORD_IND
FROM ICRM_STAGE.PRSNA_POSTL_ADDR_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 2)TEMP;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
'Too Many Values in Phone' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
  --     ,STG.LOAD_TS
       ,RECORD_IND
FROM ICRM_STAGE.PRSNA_PHONE_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 3)TEMP1;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP3.MKTNG_PGM_NBR,
TEMP3.REGIS_CNSMR_ID_VAL,
'Too Many Values in Email' SYS_ERR_CODE
FROM
(SELECT  MKTNG_PGM_NBR
       ,REGIS_CNSMR_ID_VAL
       ,STG.LOAD_ID
   --    ,STG.LOAD_TS
       ,RECORD_IND
FROM ICRM_STAGE.PRSNA_EMAIL_ADDR_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
--GROUP BY 1,2,3,4,5
GROUP BY 1,2,3,4
HAVING COUNT(*) > 3)TEMP3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* RECORDS WITH INVALID CONTACT INDICATOR */

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
TEMP1.MKTNG_PGM_NBR,
TEMP1.REGIS_CNSMR_ID_VAL,
'CNTCT_OPTN_IND NOT VALID' SYS_ERR_CODE
FROM
(
SELECT	
  PRSNA_STG_1.MKTNG_PGM_NBR
 ,PRSNA_STG_1.REGIS_CNSMR_ID_VAL  
FROM	ICRM_STAGE.PRSNA_STG PRSNA_STG_1
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON PRSNA_STG_1.LOAD_ID = LOAD.LOAD_ID  
 LEFT OUTER  JOIN ICRM_STAGE.CNTCT_OPTN_CHCE_STG B    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=B.LOAD_ID
	AND B.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from MDM.ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION='Email Address')
 LEFT OUTER JOIN ICRM_STAGE.CNTCT_OPTN_CHCE_STG C    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=C.LOAD_ID
	AND C.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from MDM.ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION='Telephone Number')
 LEFT OUTER JOIN ICRM_STAGE.CNTCT_OPTN_CHCE_STG D    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=D.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=D.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=D.LOAD_ID		
	AND D.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from MDM.ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION='Postal Address')
 LEFT OUTER JOIN ICRM_STAGE.CNTCT_OPTN_CHCE_STG E    
	ON	PRSNA_STG_1.MKTNG_PGM_NBR=E.MKTNG_PGM_NBR   
	AND	PRSNA_STG_1.REGIS_CNSMR_ID_VAL=E.REGIS_CNSMR_ID_VAL
	AND	PRSNA_STG_1.LOAD_ID=E.LOAD_ID				
	AND E.CNTCT_POINT_TYPE_CODE IN (sel AV_CODE  from MDM.ATTRIBUTE_VALUES B
                                                    WHERE B.AV_DESCRIPTION='Social Network Account')
WHERE (B.CNTCT_OPTN_IND IS NULL 
  AND  C.CNTCT_OPTN_IND IS NULL
  AND  D.CNTCT_OPTN_IND IS NULL
  AND  E.CNTCT_OPTN_IND IS NULL
      )
)TEMP1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

/* Failed records for AGE */



INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
'Failed because of Age Validation' SYS_ERR_CODE
FROM
(
   SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL, (CURRENT_DATE - CAST(BRTH_DATE AS DATE)) YEAR(4) AS age
FROM ICRM_STAGE.PRSNA_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
JOIN
MDM.AGE_MIN_MAX M
ON
STG.CNTRY_NAME = M.country
LEFT OUTER JOIN
ICRM_STAGE.CNTCT_OPTN_CHCE_STG C
ON
C.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
C.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND STG.LOAD_ID = C.LOAD_ID
WHERE
(age >= M.MIN_AGE AND age < M.MAX_AGE
AND
(C.GUARDN_CNSNT_IND IN('N',NULL)
OR
C.GUARDN_NAME IS NULL))
OR
(CURRENT_DATE - CAST(BRTH_DATE AS DATE)) <= 0
OR
(age <= M.MIN_AGE))DER5
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
'No valid contact point' SYS_ERR_CODE
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL
FROM ICRM_STAGE.PRSNA_STG STG
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON STG.LOAD_ID = LOAD.LOAD_ID
 
 LEFT OUTER  JOIN ICRM_STAGE.PRSNA_EMAIL_ADDR_STG B1    
	ON	STG.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=B1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=B1.LOAD_ID
	AND     STG.RECORD_IND=B1.RECORD_IND
 LEFT OUTER JOIN ICRM_STAGE.PRSNA_PHONE_STG C1    
	ON	STG.MKTNG_PGM_NBR=C1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=C1.REGIS_CNSMR_ID_VAL
	AND     STG.LOAD_ID=C1.LOAD_ID
	AND     STG.RECORD_IND=C1.RECORD_IND
 LEFT OUTER JOIN ICRM_STAGE.PRSNA_POSTL_ADDR_STG D1    
	ON	STG.MKTNG_PGM_NBR=D1.MKTNG_PGM_NBR   
	AND	STG.REGIS_CNSMR_ID_VAL=D1.REGIS_CNSMR_ID_VAL		
	AND     STG.LOAD_ID=D1.LOAD_ID
	AND     STG.RECORD_IND=D1.RECORD_IND
WHERE B1.MKTNG_PGM_NBR IS NULL
AND C1.MKTNG_PGM_NBR IS NULL
AND D1.MKTNG_PGM_NBR IS NULL
) DER5
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DISTINCT
DER2.MKTNG_PGM_NBR,
DER2.REGIS_CNSMR_ID_VAL,
'Not a Valid Email Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL
FROM
ICRM_STAGE.PRSNA_EMAIL_ADDR_STG E
INNER JOIN
ICRM_STAGE.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
C.CNTCT_POINT_TYPE_CODE='E'
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM MDM.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='E'
))DER2;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DISTINCT
DER3.MKTNG_PGM_NBR,
DER3.REGIS_CNSMR_ID_VAL,
'Not a Valid Phone Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL
FROM
ICRM_STAGE.PRSNA_PHONE_STG E
INNER JOIN
ICRM_STAGE.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
C.CNTCT_POINT_TYPE_CODE='P'
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM MDM.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='P'
))DER3;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;



INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DISTINCT
DER4.MKTNG_PGM_NBR,
DER4.REGIS_CNSMR_ID_VAL,
'Not a Valid Postal Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL
FROM
ICRM_STAGE.PRSNA_POSTL_ADDR_STG E
INNER JOIN
ICRM_STAGE.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
C.CNTCT_POINT_TYPE_CODE='A'
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM MDM.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='A'
))DER4;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT INTO MDM.ERR_PRSNA_STG (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL, SYS_ERR_CODE)
SELECT
DISTINCT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
'Not a Valid Social Option number for Marketing Program' SYS_ERR_CODE
FROM
(
SELECT
E.MKTNG_PGM_NBR,
E.REGIS_CNSMR_ID_VAL
FROM
ICRM_STAGE.PRSNA_SOCIAL_NETWK_ACCT_STG E
INNER JOIN
ICRM_STAGE.CNTCT_OPTN_CHCE_STG C
ON
E.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
E.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
E.CNTCT_POINT_CATEG_CODE = C.CNTCT_POINT_CATEG_CODE
AND
C.CNTCT_POINT_TYPE_CODE='S'
INNER JOIN
MDM.MDM_LOAD_CONTROL LOAD
ON E.LOAD_ID = LOAD.LOAD_ID

WHERE (E.MKTNG_PGM_NBR, C.CNTCT_OPTN_NBR)NOT IN
(
SEL MKTNG_PGM_NBR,SUBSCRPTN_OPT_NBR 
FROM MDM.SUBSCRPTN_OPT_TYPE
WHERE CNTCT_CHANL_TYPE_CODE='S'
))DER5;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;


/* UPDATE ERR_PRSNA_STG */

INSERT INTO MDM.ERR_PRSNA_STG
(MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,USER_NAME
,PRSNA_REG_DT 
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME 
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,PRSNA_STTUS_CODE
,RECORD_IND 
,LOAD_ID 
,LOAD_TS 
,MDM_LOAD_IND
,SYS_SOURCE
,SYS_NC_TYPE
,SYS_ERROR_TIME
,SYS_ERR_CODE
,SYS_DOCUMENT
,CNTRY_CODE
)
SELECT DISTINCT
ERR1.MKTNG_PGM_NBR,
ERR1.REGIS_CNSMR_ID_VAL,
ERR1.USER_NAME,
CAST(CAST(ERR1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)),
ERR1.NAME_PREFX_TXT,
ERR1.GVN_NAME,
ERR1.MID_NAME,
ERR1.FAMLY_NAME,
ERR1.NAME_SUFFX_TXT,
ERR1.FULL_NAME,
ERR1.GENDR_IND,
ERR1.BRTH_DATE,
ERR1.LANG_CODE,
ERR1.PRSNA_STTUS_CODE,
ERR1.RECORD_IND,
ERR1.LOAD_ID,
ERR1.LOAD_TS,
ERR1.MDM_LOAD_IND,
TRIM(CAST(ERR1.LOAD_ID AS INTEGER)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
ERR1.LOAD_TS,
ERR.SYS_ERR_CODE,
ERR.SYS_DOCUMENT,
ERR1.CNTRY_NAME
FROM ICRM_STAGE.PRSNA_STG ERR1
INNER JOIN MDM.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
INNER JOIN MDM.ERR_PRSNA_STG ERR
ON ERR.MKTNG_PGM_NBR = ERR1.MKTNG_PGM_NBR
AND ERR.REGIS_CNSMR_ID_VAL = ERR1.REGIS_CNSMR_ID_VAL
AND ERR.LOAD_ID IS NULL
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

DELETE FROM MDM.ERR_PRSNA_STG WHERE SYS_NC_TYPE IS NULL;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN REGIS_CNSMR_ID_VAL;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
COLLECT STATS ON MDM.ERR_PRSNA_STG
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;

SEL 1
FROM MDM_LOAD_CONTROL A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM ICRM_STAGE.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100
;
.IF ACTIVITYCOUNT > 0 THEN .GOTO ERR1

.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

INSERT INTO MDM.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
NC_TYPE,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE) 
SELECT
ERR1.LOAD_ID,
'Validations',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
'Failure',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
FROM ICRM_STAGE.PRSNA_STG ERR1
INNER JOIN MDM.MDM_LOAD_CONTROL LOAD
ON ERR1.LOAD_ID = LOAD.LOAD_ID
GROUP BY
ERR1.LOAD_ID,
ERR1.RECORD_IND
;

.QUIT 1

.LABEL WARN
.QUIT 0

.LABEL ERR1

INSERT INTO MDM.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
NC_TYPE,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE) 
SELECT
ERR1.LOAD_ID,
'Validations-BadFile',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
'Failure-BadFile',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))

FROM ICRM_STAGE.PRSNA_STG ERR1
INNER JOIN MDM_LOAD_CONTROL A
ON A.LOAD_ID = ERR1.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM ICRM_STAGE.PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM ERR_PRSNA_STG
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100

GROUP BY
ERR1.LOAD_ID,
ERR1.RECORD_IND
;

.QUIT 1
