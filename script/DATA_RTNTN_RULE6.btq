/***********************************************************************************************************
SCRIPT:               DATA_RTNTN_RULE6.BTQ 
DESCRIPTION:          THIS SCRIPT POPULATES REGISTRATIONS WITH SUBSCRIPTIONS ARE STATUS OF ‘O’ FOR RULE 6
DEPENDENCY:           
INPUT:                GOLDEN TABLES
OUTPUT:               
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 05/17/2011           TERADATA                        INITIAL VERSION
2.00                 10/09/2012           TERADATA                        RELEASE 4.2
4.5                  10/09/2013           TERADATA                        RELEASE 4.5
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE $DATABASENAME;

CREATE VOLATILE SET TABLE REGIS_OPT_OUT
AS 
(
SELECT 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
C.CNSMR_CHCE_DATETM

FROM REGIS_PRSNA A

INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR OPT OUT'

INNER JOIN (
SEL
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CAST(MAX(CAST(CNSMR_CHCE_DATETM AS VARCHAR(10))) AS DATE FORMAT 'YYYY-MM-DD') CNSMR_CHCE_DATETM
FROM
(
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_POSTL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION ALL
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_EMAIL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION ALL
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_PHONE A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
UNION ALL
SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
CNSMR_CHCE_DATETM
FROM REGIS_PRSNA_SOC_NET_ACCT A
WHERE SUBSCRPTN_OPT_IND IN ('N','O')
GROUP BY 1,2,3,4
) A
GROUP BY 1,2,3
) C
ON A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = C.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_POSTL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) F
ON A.LEGAL_ENT_NBR = F.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = F.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = F.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_EMAIL_ADDR A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) H
ON A.LEGAL_ENT_NBR = H.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = H.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = H.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_PHONE A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) J
ON A.LEGAL_ENT_NBR = J.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = J.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = J.REGIS_PRSNA_ID

LEFT OUTER JOIN (SEL 
A.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
SUBSCRPTN_OPT_IND
FROM REGIS_PRSNA_SOC_NET_ACCT A
WHERE SUBSCRPTN_OPT_IND IN ('Y','I')
GROUP BY 1,2,3,4
) K
ON A.LEGAL_ENT_NBR = K.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR = K.MKTNG_PGM_NBR 
AND A.REGIS_PRSNA_ID = K.REGIS_PRSNA_ID

WHERE F.SUBSCRPTN_OPT_IND IS NULL
AND H.SUBSCRPTN_OPT_IND IS NULL
AND J.SUBSCRPTN_OPT_IND IS NULL
AND K.SUBSCRPTN_OPT_IND IS NULL
AND C.CNSMR_CHCE_DATETM IS NOT NULL
)
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS REGIS_OPT_OUT
COLUMN LEGAL_ENT_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS REGIS_OPT_OUT
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE OPT_DATETM
AS 
(SEL
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
CAST(MAX(CAST(LATST_ACTVY_DATE AS VARCHAR(10))) AS DATE FORMAT 'YYYY-MM-DD') LATST_ACTVY_DATE
FROM REGIS_PRSNA A
INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR Opt Out'
AND PRSNA_STATUS_CODE=B.STATUS_VALUE
GROUP BY 1,2
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS OPT_DATETM
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS OPT_DATETM
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
PII_STATUS,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
D.MKTNG_PGM_NBR,
D.LEGAL_ENT_NBR,
D.REGIS_PRSNA_ID,
D.REGIS_CNSMR_ID_VAL,
'CNSMR Opt Out',
B.STATUS_VALUE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
E.CNSMR_CHCE_DATETM

FROM REGIS_PRSNA D

INNER JOIN DATA_RTNTN_REF B
ON D.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR Opt Out'

INNER JOIN REGIS_OPT_OUT E
ON D.REGIS_PRSNA_ID = E.REGIS_PRSNA_ID
AND D.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
PII_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
D.MKTNG_PGM_NBR,
D.LEGAL_ENT_NBR,
D.REGIS_PRSNA_ID,
D.REGIS_CNSMR_ID_VAL,
'CNSMR Opt Out',
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
E.LATST_ACTVY_DATE

FROM REGIS_PRSNA D

INNER JOIN DATA_RTNTN_REF B
ON D.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR Opt Out'

INNER JOIN OPT_DATETM E
ON D.REGIS_PRSNA_ID = E.REGIS_PRSNA_ID
AND D.MKTNG_PGM_NBR = E.MKTNG_PGM_NBR 

WHERE CAST(E.LATST_ACTVY_DATE AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit