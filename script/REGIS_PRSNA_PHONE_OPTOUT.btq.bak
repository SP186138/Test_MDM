/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_PHONE_OPTOUT.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0


DATABASE $DATABASENAME;

/*****************************************************************************
Opt out the consumer from REGIS_PRSNA_PHONE based on the match available 
in OPT_OUT_$CNTRY_LIST_TEMP table populated above.

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_PHONE.
******************************************************************************/

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM	(
SELECT	
REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
SUBSCRIPTION_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.OPT_OUT_$CNTRY_LIST_TEMP TEMP1  
WHERE TEMP1.PHONE  IS NOT NULL  
AND	TEMP1.REGIS_PRSNA_ID > 0 
AND CNTRY_CODE = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,SUBSCRIPTION_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4,5) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM	(
SELECT	
REGIS_PRSNA_ID,
EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	$DATABASENAME.OPT_OUT_$CNTRY_LIST_TEMP TEMP1  
WHERE TEMP1.MKTNG_PGM_NBR=9999
AND	TEMP1.REGIS_PRSNA_ID > 0 
AND CNTRY_CODE = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE 
FROM	(
SELECT	CP.REGIS_PRSNA_ID,
MAX(OPT_OUT_DTTIME) OPT_OUT_DTTIME,
MAX(LOAD_ID) LOAD_ID 
FROM	$DATABASENAME.OPT_OUT_$CNTRY_LIST_DCS TEMP1 
INNER JOIN $DATABASENAME.REGIS_PRSNA CP
ON TEMP1.MATCHD_REGIS_PRSNA_ID= CP.MATCHD_CNSMR_PRSNA_ID
WHERE P_OPT_OUT='Y'
AND TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.CNTRY_CODE = '$CNTRY'
GROUP BY 1)  TEMP
SET SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=LOAD_ID 
WHERE	
REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND TEMP.OPT_OUT_DTTIME>=CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE 
FROM	(
SELECT	CP.REGIS_PRSNA_ID,
MAX(OPT_OUT_DTTIME) OPT_OUT_DTTIME,
MAX(LOAD_ID) LOAD_ID 
FROM	$DATABASENAME.OPT_OUT_$CNTRY_LIST_SIDS TEMP1 
inner join $DATABASENAME.MATCHD_CNSMR_PRSNA MCP
ON TEMP1.HSHLD_PRSNA_ID=MCP.HSHLD_PRSNA_ID
inner join $DATABASENAME.REGIS_PRSNA CP
ON MCP.MATCHD_CNSMR_PRSNA_ID=CP.MATCHD_CNSMR_PRSNA_ID
and TEMP1.MKTNG_PGM_NBR=CP.MKTNG_PGM_NBR
WHERE P_OPT_OUT='Y'
AND TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.CNTRY_CODE = '$CNTRY'
GROUP BY 1)  TEMP
SET SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=LOAD_ID 
WHERE	
REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND TEMP.OPT_OUT_DTTIME>=CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Opt out the consumer from REGIS_PRSNA_PHONE based on the match available 
in REGIS_PRSNA_OPT_OUT_HIST during reloads.

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_PHONE.
******************************************************************************/

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM
(SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR,OPT_TIME,LOG_SOURCE_ID,OPT_REASN_TXT
FROM
REGIS_PRSNA_OPT_OUT_HIST 
--WHERE SUBSCRIPTION_NBR IS NOT NULL
WHERE OPT_REASN_TXT IN ('Multiple channel Opted Out','Multiple channel','Phone Channel Opted Out')
and CNTRY_NAME = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR
ORDER BY OPT_TIME DESC,OPT_REASN_TXT DESC,LOG_SOURCE_ID DESC) = 1
GROUP BY 1,2,3,4,5
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
--AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_TIME
AND CAST(REGIS_PRSNA_PHONE.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE REG_PRSNA
AS 
(

SEL MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM REGIS_PRSNA ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')

)
WITH DATA
PRIMARY INDEX ( MATCHD_CNSMR_PRSNA_ID,REGIS_PRSNA_ID,MKTNG_PGM_NBR )
ON COMMIT PRESERVE ROWS
;

UPDATE	$DATABASENAME.REGIS_PRSNA_PHONE
FROM
(SELECT C.REGIS_PRSNA_ID,C.MKTNG_PGM_NBR,OPT_TIME,LOG_SOURCE_ID,OPT_REASN_TXT
FROM
REGIS_PRSNA_OPT_OUT_HIST  A
INNER JOIN REGIS_PRSNA B
ON A.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
INNER JOIN REG_PRSNA C
ON C.MATCHD_CNSMR_PRSNA_ID=B.MATCHD_CNSMR_PRSNA_ID
--WHERE SUBSCRIPTION_NBR IS NOT NULL
WHERE OPT_TYPE_CODE='U'
AND CNTRY_NAME = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR
ORDER BY OPT_TIME DESC,OPT_REASN_TXT DESC,LOG_SOURCE_ID DESC) = 1
GROUP BY 1,2,3,4,5
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
--AND REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRIPTION_NBR
AND REGIS_PRSNA_PHONE.CNSMR_CHCE_DATETM<=TEMP.OPT_TIME
AND CAST(REGIS_PRSNA_PHONE.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;