.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE MDM;

.GOTO $Step


 .LABEL L0
 
DEL FROM TRILLIUM_OUTPUT1_USA_TEMP;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L1

INS TRILLIUM_OUTPUT1_USA_TEMP
(	   MKTNG_PGM_NBR
      ,REGIS_CNSMR_ID_VAL
      ,DR_ALIAS_CONTACT
      ,DR_FIRST_NAME
      ,DR_MIDDLE_NAME
      ,DR_LAST_NAME
      ,DR_MRMRS
      ,DR_NAME_GENER
      ,DR_NAME_SUFFIX
      ,DR_NAME_GENDER
      ,DR_COUNTRY_NAME
      ,DR_REGION_NAME
      ,DR_CITY_NAME
      ,DR_POSTAL_CODE
      ,DR_STREET_NAME
      ,DR_HOUSE_NUMBER1
      ,DR_HOUSE_NUMBER2
      ,DR_POBOX_NUMBER
      ,DR_ADDRESS
      ,DR_ADDRESS2
      ,DR_ADDRESS3
      ,CLEANSED_PHONE_1
      ,CLEANSED_EMAIL_1
      ,PR_REV_GROUP
      ,GOUT_MATCH_LEVEL
      ,WINDOW_KEY_01
      ,REFERENCE_HOUSEHOLD_ID
      ,REFERENCE_LEGALENTITYKEY
      ,REFERENCE_REGISTRATIONKEY
      ,LEGAL_ENT_NBR
      ,BRTH_DATE
      ,LANG_CODE
      ,CNSMR_USER_NAME
      ,STATUS
      ,FULL_NAME
      ,DPEND_NAME
      ,PET_NAME
      ,PR_NAME_FORM_01
      ,DR_ALIAS_ACCOUNT
      ,REFERENCE_MATCHED_LEV1_PATTERN
      ,REFERENCE_MATCHED_LEV2_PATTERN
      ,DR_BUSINESS_NAME
      ,EMAIL_IND
      ,REGIS_DATE
      ,RECORD_IND
      ,RECENT_IND
      ,REGIS_PRSNA_ID
      ,HH_FLAG
      ,LE_FLAG
      ,SYS_TARGET_ID
      ,SYS_AUTH_ID
      ,SYS_SOURCE
      ,SYS_CREATED_BY
      ,SYS_CREATION_DATE
      ,SYS_ENT_STATE
      ,SYS_LAST_MODIFIED_BY
      ,SYS_LAST_MODIFIED_DATE
      ,SYS_NC_TYPE
      ,SYS_ERR_CODE
      ,SYS_ERR_SVRTY
      ,ADDRESS_CONTACT
      ,ADDRESS_SUBSCRPTN
      ,PHONE_CONTACT
      ,PHONE_SUBSCRPTN
      ,EMAIL_CONTACT
      ,EMAIL_SUBSCRPTN
      ,NATIONAL_ID_NBR
      ,GL_ACCURACY
      ,GL_MATCH_FLAG
      ,GL_LATITUDE
      ,GL_LONGITUDE
      ,DR_CLEANSE_LEVEL
	  )
	  SEL
	  MKTNG_PGM_NBR
      ,REGIS_CNSMR_ID_VAL
      ,DR_ALIAS_CONTACT
      ,DR_FIRST_NAME
      ,DR_MIDDLE_NAME
      ,DR_LAST_NAME
      ,DR_MRMRS
      ,DR_NAME_GENER
      ,DR_NAME_SUFFIX
      ,DR_NAME_GENDER
      ,DR_COUNTRY_NAME
      ,DR_REGION_NAME
      ,DR_CITY_NAME
      ,DR_POSTAL_CODE
      ,DR_STREET_NAME
      ,DR_HOUSE_NUMBER1
      ,DR_HOUSE_NUMBER2
      ,DR_POBOX_NUMBER
      ,DR_ADDRESS
      ,DR_ADDRESS2
      ,DR_ADDRESS3
      ,CLEANSED_PHONE_1
      ,CLEANSED_EMAIL_1
      ,PR_REV_GROUP
      ,GOUT_MATCH_LEVEL
      ,WINDOW_KEY_01
      ,REFERENCE_HOUSEHOLD_ID
      ,REFERENCE_LEGALENTITYKEY
      ,REFERENCE_REGISTRATIONKEY
      ,LEGAL_ENT_NBR
      ,BRTH_DATE
      ,LANG_CODE
      ,CNSMR_USER_NAME
      ,STATUS
      ,FULL_NAME
      ,DPEND_NAME
      ,PET_NAME
      ,PR_NAME_FORM_01
      ,DR_ALIAS_ACCOUNT
      ,REFERENCE_MATCHED_LEV1_PATTERN
      ,REFERENCE_MATCHED_LEV2_PATTERN
      ,DR_BUSINESS_NAME
      ,EMAIL_IND
      ,REGIS_DATE
      ,RECORD_IND
      ,RECENT_IND
      ,REGIS_PRSNA_ID
      ,HH_FLAG
      ,LE_FLAG
      ,SYS_TARGET_ID
      ,SYS_AUTH_ID
      ,SYS_SOURCE
      ,SYS_CREATED_BY
      ,SYS_CREATION_DATE
      ,SYS_ENT_STATE
      ,SYS_LAST_MODIFIED_BY
      ,SYS_LAST_MODIFIED_DATE
      ,SYS_NC_TYPE
      ,SYS_ERR_CODE
      ,SYS_ERR_SVRTY
      ,ADDRESS_CONTACT
      ,ADDRESS_SUBSCRPTN
      ,PHONE_CONTACT
      ,PHONE_SUBSCRPTN
      ,EMAIL_CONTACT
      ,EMAIL_SUBSCRPTN
      ,NATIONAL_ID_NBR
      ,GL_ACCURACY
      ,GL_MATCH_FLAG
      ,GL_LATITUDE
      ,GL_LONGITUDE
      ,DR_CLEANSE_LEVEL
	  FROM TRILLIUM_OUTPUT1_USA;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L2

DROP TABLE REGIS_PRSNA_TEMP_USA;
 
 CREATE TABLE REGIS_PRSNA_TEMP_USA AS (SEL * FROM REGIS_PRSNA_TEMP)WITH NO DATA
 PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID ,LEGAL_ENT_NBR );

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L3

INSERT INTO REGIS_PRSNA_TEMP_USA
(MKTNG_PGM_NBR ,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,REGIS_PRSNA_ID)
SELECT
MKTNG_PGM_NBR ,LEGAL_ENT_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,REGIS_PRSNA_ID
FROM REGIS_PRSNA
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP);

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L4

UPDATE TRILLIUM_OUTPUT1_USA_TEMP SET RECORD_IND='Y'    ---  records matching REGIS_PRSNA
WHERE EXISTS
(SELECT
1
FROM
REGIS_PRSNA_TEMP_USA
WHERE
LEGAL_ENT_NBR = TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR
AND MKTNG_PGM_NBR = TRILLIUM_OUTPUT1_USA_TEMP.MKTNG_PGM_NBR   
AND REGIS_CNSMR_ID_VAL = TRILLIUM_OUTPUT1_USA_TEMP.REGIS_CNSMR_ID_VAL
AND SYS_TARGET_ID = TRILLIUM_OUTPUT1_USA_TEMP.SYS_TARGET_ID
);

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L5

/* Identified the most recent record to be used since we are processing multiple loads at the same time */

UPDATE TRILLIUM_OUTPUT1_USA_TEMP
FROM
(
SELECT * FROM
(
SELECT 
 LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL
,REGIS_DATE
,SYS_SOURCE
,SYS_CREATION_DATE
,SYS_NC_TYPE
,SYS_TARGET_ID
,RANK() OVER (PARTITION BY LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL 
,SYS_TARGET_ID
ORDER BY REGIS_DATE DESC 
,SYS_SOURCE DESC
,SYS_CREATION_DATE DESC
,SYS_NC_TYPE DESC
) AS RNK
GROUP BY LEGAL_ENT_NBR
,MKTNG_PGM_NBR   
,REGIS_CNSMR_ID_VAL
,REGIS_DATE
,SYS_SOURCE
,SYS_CREATION_DATE
,SYS_NC_TYPE
,SYS_TARGET_ID
FROM TRILLIUM_OUTPUT1_USA_TEMP
) B
WHERE RNK = 1
) B

SET RECENT_IND = 'Y'
WHERE TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1_USA_TEMP.REGIS_DATE=B.REGIS_DATE
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_CREATION_DATE=B.SYS_CREATION_DATE
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_NC_TYPE=B.SYS_NC_TYPE
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_SOURCE=B.SYS_SOURCE
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_TARGET_ID=B.SYS_TARGET_ID
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L6




/* Table where new Id's are generated 
   If trillium finds a match on EDW, trillium will populate these id's from EDW
   
   If no match is found, trillium generates id's prefixed with HH, LE, RG 
   Using these prefixes, we are able to identify the records that do not have a match. 
   We need to generate Id's based on the max id in edw and assign to these records
   Or we could use the identity column function instead */ 
   
UPDATE TRILLIUM_OUTPUT1_USA_TEMP
FROM 
(SELECT A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.LEGAL_ENT_NBR,
A.SYS_SOURCE,
A.REFERENCE_HOUSEHOLD_ID,
A.REFERENCE_LEGALENTITYKEY,
MIN(REFERENCE_REGISTRATIONKEY) REFERENCE_REGISTRATIONKEY
FROM TRILLIUM_OUTPUT1_USA_TEMP A
WHERE (A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LEGAL_ENT_NBR,A.SYS_SOURCE,A.REFERENCE_HOUSEHOLD_ID
,A.REFERENCE_LEGALENTITYKEY)
IN 
(SELECT A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.LEGAL_ENT_NBR,
A.SYS_SOURCE,
A.REFERENCE_HOUSEHOLD_ID,
MIN(A.REFERENCE_LEGALENTITYKEY) REFERENCE_LEGALENTITYKEY
FROM
TRILLIUM_OUTPUT1_USA_TEMP A
WHERE (A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LEGAL_ENT_NBR,A.SYS_SOURCE,A.REFERENCE_HOUSEHOLD_ID)
IN (SELECT A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.LEGAL_ENT_NBR,
A.SYS_SOURCE,
MIN(A.REFERENCE_HOUSEHOLD_ID)
FROM TRILLIUM_OUTPUT1_USA_TEMP A
GROUP BY 1,2,3,4)
GROUP BY 1,2,3,4,5
) 
GROUP BY 1,2,3,4,5,6
) B
SET REFERENCE_HOUSEHOLD_ID = B.REFERENCE_HOUSEHOLD_ID
,REFERENCE_LEGALENTITYKEY = B.REFERENCE_LEGALENTITYKEY
,REFERENCE_REGISTRATIONKEY = B.REFERENCE_REGISTRATIONKEY
WHERE TRILLIUM_OUTPUT1_USA_TEMP.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.REGIS_CNSMR_ID_VAL = B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_SOURCE = B.SYS_SOURCE
AND TRILLIUM_OUTPUT1_USA_TEMP.RECENT_IND = 'Y'
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L7


INSERT TRILLIUM_MDM_REFERENCE_LE
(
 REFERENCE_LEGALENTITYKEY      
,SYS_CREATION_DATE             
,SYS_ENT_STATE    
,SYS_LAST_MODIFIED_BY
,SYS_SOURCE
,SYS_TARGET_ID
)
SELECT DISTINCT
REFERENCE_LEGALENTITYKEY      
,SYS_CREATION_DATE             
,'ACTIVE'     
,CASE WHEN SUBSTR(TRIM(REFERENCE_LEGALENTITYKEY),1,2)='LE'
      THEN 'TRILLIUM'
  END AS SYS_LAST_MODIFIED_BY1
,SYS_SOURCE
,LEGAL_ENT_NBR
FROM
TRILLIUM_OUTPUT1_USA_TEMP A
WHERE SYS_LAST_MODIFIED_BY1 = 'TRILLIUM'
AND RECENT_IND = 'Y'
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L8

INSERT TRILLIUM_MDM_REFERENCE_HH
(
REFERENCE_HOUSEHOLD_ID        
,SYS_CREATION_DATE             
,SYS_ENT_STATE       
,SYS_LAST_MODIFIED_BY
,SYS_SOURCE
,SYS_TARGET_ID
)
SELECT DISTINCT
 REFERENCE_HOUSEHOLD_ID        
,SYS_CREATION_DATE             
,'ACTIVE'          
,CASE WHEN SUBSTR(TRIM(REFERENCE_HOUSEHOLD_ID),1,2)='HH'
      THEN 'TRILLIUM'
  END AS SYS_LAST_MODIFIED_BY1
,SYS_SOURCE
,LEGAL_ENT_NBR
FROM
TRILLIUM_OUTPUT1_USA_TEMP A
WHERE SYS_LAST_MODIFIED_BY1 = 'TRILLIUM'
AND RECENT_IND = 'Y'
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L9


/* Taking the newly generated Id's and updating the TRILLIUM OUTPUT table */

UPDATE TRILLIUM_OUTPUT1_USA_TEMP
FROM 
(SELECT A.REFERENCE_HOUSEHOLD_ID,A.SYS_TARGET_ID,MAX(NEW_HOUSEHOLD_ID) NEW_HOUSEHOLD_ID
FROM
TRILLIUM_MDM_REFERENCE_HH A
INNER JOIN TRILLIUM_OUTPUT1_USA_TEMP B
ON A.REFERENCE_HOUSEHOLD_ID=B.REFERENCE_HOUSEHOLD_ID
AND A.SYS_SOURCE=B.SYS_SOURCE
GROUP BY 1,2) B
SET REFERENCE_HOUSEHOLD_ID = B.NEW_HOUSEHOLD_ID
WHERE TRILLIUM_OUTPUT1_USA_TEMP.REFERENCE_HOUSEHOLD_ID = B.REFERENCE_HOUSEHOLD_ID
AND TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR = B.SYS_TARGET_ID;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L10

UPDATE TRILLIUM_OUTPUT1_USA_TEMP
FROM 
(SELECT A.REFERENCE_LEGALENTITYKEY,A.SYS_TARGET_ID,MAX(NEW_LEGAL_ENTITY_KEY) NEW_LEGAL_ENTITY_KEY
FROM
TRILLIUM_MDM_REFERENCE_LE A
INNER JOIN TRILLIUM_OUTPUT1_USA_TEMP B
ON A.REFERENCE_LEGALENTITYKEY=B.REFERENCE_LEGALENTITYKEY
AND A.SYS_SOURCE=B.SYS_SOURCE
GROUP BY 1,2) B
SET REFERENCE_LEGALENTITYKEY = B.NEW_LEGAL_ENTITY_KEY
WHERE TRILLIUM_OUTPUT1_USA_TEMP.REFERENCE_LEGALENTITYKEY = B.REFERENCE_LEGALENTITYKEY
AND TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR = B.SYS_TARGET_ID;


 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L11


UPDATE TRILLIUM_OUTPUT1_USA_TEMP
SET REFERENCE_HOUSEHOLD_ID = CASE WHEN REFERENCE_HOUSEHOLD_ID LIKE '%HH%'
                                  THEN SUBSTR(REFERENCE_HOUSEHOLD_ID,1,INDEX(REFERENCE_HOUSEHOLD_ID,'HH')-1)||'999999'||SUBSTR(REFERENCE_HOUSEHOLD_ID,INDEX(REFERENCE_HOUSEHOLD_ID,'HH')+2)
                                  WHEN REFERENCE_HOUSEHOLD_ID LIKE '%HH'
                                  THEN SUBSTR(REFERENCE_HOUSEHOLD_ID,1,INDEX(REFERENCE_HOUSEHOLD_ID,'HH')-1)||'999999'
                                  ELSE REFERENCE_HOUSEHOLD_ID
                              END
,REFERENCE_LEGALENTITYKEY = CASE WHEN REFERENCE_LEGALENTITYKEY LIKE '%LE%'
                                  THEN SUBSTR(REFERENCE_LEGALENTITYKEY,1,INDEX(REFERENCE_LEGALENTITYKEY,'LE')-1)||'999999'||SUBSTR(REFERENCE_LEGALENTITYKEY,INDEX(REFERENCE_LEGALENTITYKEY,'LE')+2)
                                  WHEN REFERENCE_LEGALENTITYKEY LIKE '%LE'
                                  THEN SUBSTR(REFERENCE_LEGALENTITYKEY,1,INDEX(REFERENCE_LEGALENTITYKEY,'LE')-1)||'999999'
                                  ELSE REFERENCE_LEGALENTITYKEY
                              END
,REFERENCE_REGISTRATIONKEY = CASE WHEN REFERENCE_REGISTRATIONKEY LIKE '%RG%'
                                  THEN SUBSTR(REFERENCE_REGISTRATIONKEY,1,INDEX(REFERENCE_REGISTRATIONKEY,'RG')-1)||'999999'||SUBSTR(REFERENCE_REGISTRATIONKEY,INDEX(REFERENCE_REGISTRATIONKEY,'RG')+2)
                                  WHEN REFERENCE_REGISTRATIONKEY LIKE '%RG'
                                  THEN SUBSTR(REFERENCE_REGISTRATIONKEY,1,INDEX(REFERENCE_REGISTRATIONKEY,'RG')-1)||'999999'
                                  ELSE REFERENCE_REGISTRATIONKEY
                              END
;                              

  .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L12

UPDATE TRILLIUM_OUTPUT1_USA_TEMP
SET HOUSEHOLD_ID = CAST(TRIM(REFERENCE_HOUSEHOLD_ID) AS INTEGER)
,LEGALENTITYKEY = CAST(TRIM(REFERENCE_LEGALENTITYKEY) AS INTEGER)
,REGISTRATIONKEY = CAST(999999 AS INTEGER)
WHERE RECENT_IND='Y';

  .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L13

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN HOUSEHOLD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L14

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN LEGALENTITYKEY;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L15

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN REGISTRATIONKEY;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L16

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN (LEGAL_ENT_NBR ,HOUSEHOLD_ID);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L17

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN (LEGAL_ENT_NBR ,LEGALENTITYKEY);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L18

COLLECT STATS  TRILLIUM_OUTPUT1_USA_TEMP
COLUMN (LEGALENTITYKEY,ADDRESS_CONTACT);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L19

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
SEL
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1_USA_TEMP A
 LEFT OUTER JOIN REGIS_PRSNA B
 ON A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGISTRATIONKEY=B.REGIS_PRSNA_ID
AND B.PRSNA_STATUS_CODE = 'AC'
WHERE A.RECENT_IND = 'Y'
AND A.REGIS_CNSMR_ID_VAL <> B.REGIS_CNSMR_ID_VAL
GROUP BY 1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,
51,52,53,54,55,56,57
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L20

-- Insert duplicate records into this table where the duplicate is NOT in EDW but in the incoming file 

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
--SEL * FROM (
SEL DISTINCT
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19)) SYS_CREATION_DATE
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1_USA_TEMP A
 WHERE A.RECENT_IND = 'Y'
 
 QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY
 ORDER BY A.REGIS_DATE DESC
 ,A.REGIS_CNSMR_ID_VAL DESC
 ,A.SYS_CREATION_DATE DESC
 ,A.SYS_NC_TYPE DESC
) <> 1
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L21

/* retain same regis_prsna_id where the consumer already exists */

UPDATE TRILLIUM_OUTPUT1_USA_TEMP
FROM (SEL DISTINCT LEGAL_ENT_NBR, MKTNG_PGM_NBR , REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,REGIS_PRSNA_ID
FROM REGIS_PRSNA_TEMP_USA 
QUALIFY RANK() OVER (PARTITION BY LEGAL_ENT_NBR, MKTNG_PGM_NBR , REGIS_CNSMR_ID_VAL,SYS_TARGET_ID
ORDER BY REGIS_PRSNA_ID DESC)=1 ) B
SET REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
WHERE TRILLIUM_OUTPUT1_USA_TEMP.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TRILLIUM_OUTPUT1_USA_TEMP.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TRILLIUM_OUTPUT1_USA_TEMP.SYS_TARGET_ID=B.SYS_TARGET_ID
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L22

INS TRILLIUM_OUTPUT_DUP
(
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,LEGAL_ENT_NBR
 ,BRTH_DATE
 ,LANG_CODE
 ,CNSMR_USER_NAME
 ,STATUS  
 ,FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,DUP_REGIS_PRSNA_ID
 ,SYS_TARGET_ID
 ,SYS_AUTH_ID
 ,SYS_SOURCE
 ,SYS_CREATED_BY
 ,SYS_CREATION_DATE
 ,SYS_ENT_STATE
 ,SYS_LAST_MODIFIED_BY
 ,SYS_LAST_MODIFIED_DATE
 ,SYS_NC_TYPE
 ,SYS_ERR_CODE
 ,SYS_ERR_SVRTY
)
SEL
  A.MKTNG_PGM_NBR
 ,A.REGIS_CNSMR_ID_VAL
 ,DR_ALIAS_CONTACT
 ,DR_FIRST_NAME
 ,DR_MIDDLE_NAME
 ,DR_LAST_NAME
 ,DR_MRMRS
 ,DR_NAME_GENER
 ,DR_NAME_SUFFIX
 ,DR_NAME_GENDER
 ,DR_COUNTRY_NAME
 ,DR_REGION_NAME
 ,DR_CITY_NAME
 ,DR_POSTAL_CODE
 ,DR_STREET_NAME
 ,DR_HOUSE_NUMBER1
 ,DR_HOUSE_NUMBER2
 ,DR_POBOX_NUMBER
 ,DR_ADDRESS
 ,DR_ADDRESS2
 ,DR_ADDRESS3
 ,CLEANSED_PHONE_1
 ,CLEANSED_EMAIL_1
 ,PR_REV_GROUP
 ,GOUT_MATCH_LEVEL
 ,WINDOW_KEY_01
 ,REFERENCE_HOUSEHOLD_ID
 ,REFERENCE_LEGALENTITYKEY
 ,REFERENCE_REGISTRATIONKEY
 ,A.LEGAL_ENT_NBR
 ,A.BRTH_DATE
 ,A.LANG_CODE
 ,A.CNSMR_USER_NAME
 ,STATUS  
 ,A.FULL_NAME
 ,DPEND_NAME
 ,PET_NAME
 ,PR_NAME_FORM_01
 ,DR_ALIAS_ACCOUNT
 ,REFERENCE_MATCHED_LEV1_PATTERN
 ,REFERENCE_MATCHED_LEV2_PATTERN
 ,DR_BUSINESS_NAME
 ,EMAIL_IND
 ,A.REGIS_DATE
 ,RECORD_IND
 ,RECENT_IND
 ,TRIM(A.REGIS_PRSNA_ID)
 ,A.SYS_TARGET_ID
 ,A.SYS_AUTH_ID
 ,A.SYS_SOURCE
 ,A.SYS_CREATED_BY
 ,CAST(CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6)) AS VARCHAR(19))
 ,A.SYS_ENT_STATE
 ,A.SYS_LAST_MODIFIED_BY
 ,A.SYS_LAST_MODIFIED_DATE
 ,A.SYS_NC_TYPE
 ,A.SYS_ERR_CODE
 ,A.SYS_ERR_SVRTY
 FROM TRILLIUM_OUTPUT1_USA_TEMP A
 LEFT OUTER JOIN REGIS_PRSNA B
   ON A.REGISTRATIONKEY = B.REGIS_PRSNA_ID
  AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
  AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
 LEFT OUTER JOIN MATCHD_CNSMR_PRSNA C
   ON A.LEGALENTITYKEY = C.MATCHD_CNSMR_PRSNA_ID
  AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
 LEFT OUTER JOIN HSHLD_PRSNA D
   ON A.HOUSEHOLD_ID = D.HSHLD_PRSNA_ID
  AND A.LEGAL_ENT_NBR = D.LEGAL_ENT_NBR
WHERE A.RECENT_IND = 'Y'
AND B.LEGAL_ENT_NBR IS NOT NULL
AND C.LEGAL_ENT_NBR IS NOT NULL
AND D.LEGAL_ENT_NBR IS NOT NULL
GROUP BY 1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,
51,52,53,54,55,56,57,58
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L23

DEL FROM TSS_PRSNA_IDS_USA ALL;
																					
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L24


INSERT INTO TSS_PRSNA_IDS_USA
(
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
MATCHD_CNSMR_PRSNA_ID,
HSHLD_PRSNA_ID,
SYS_SOURCE
)
SELECT
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
COALESCE(REGIS_PRSNA_ID,CAST(999999 AS INTEGER)),
CAST(REFERENCE_LEGALENTITYKEY AS INTEGER),
CAST(REFERENCE_HOUSEHOLD_ID AS INTEGER),
SYS_SOURCE
FROM
TRILLIUM_OUTPUT1_USA_TEMP
WHERE  RECENT_IND = 'Y' 
QUALIFY RANK() OVER(PARTITION BY REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,LEGAL_ENT_NBR,SYS_SOURCE
ORDER BY SYS_CREATION_DATE DESC, SYS_NC_TYPE DESC) = 1
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L25

DEL FROM TSS_PRSNA_IDS_USA_PREV ALL;
																					
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L26


INSERT INTO TSS_PRSNA_IDS_USA_PREV
(
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
MATCHD_CNSMR_PRSNA_ID,
HSHLD_PRSNA_ID,
SYS_SOURCE
)
SELECT
REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
MATCHD_CNSMR_PRSNA_ID,
0,
SYS_SOURCE
FROM
REGIS_PRSNA
WHERE (MKTNG_PGM_NBR,REGIS_PRSNA_ID) IN
(SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID FROM TSS_PRSNA_IDS_USA)
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L27

COLLECT STATS TSS_PRSNA_IDS_USA
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L28

COLLECT STATS TSS_PRSNA_IDS_USA
COLUMN MATCHD_CNSMR_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L29

COLLECT STATS TSS_PRSNA_IDS_USA
COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L30

COLLECT STATS TSS_PRSNA_IDS_USA
COLUMN LEGAL_ENT_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L31


INS TRILLIUM_OUTPUT2
(MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
DR_ALIAS_CONTACT              ,
DR_FIRST_NAME                 ,
DR_MIDDLE_NAME                ,
DR_LAST_NAME                  ,
DR_MRMRS                      ,
DR_NAME_GENER                 ,
DR_NAME_SUFFIX                ,
DR_NAME_GENDER                ,
DR_COUNTRY_NAME               ,
DR_REGION_NAME                ,
DR_CITY_NAME                  ,
DR_POSTAL_CODE                ,
DR_STREET_NAME                ,
DR_HOUSE_NUMBER1              ,
DR_HOUSE_NUMBER2              ,
DR_POBOX_NUMBER               ,
DR_ADDRESS                    ,
DR_ADDRESS2                   ,
DR_ADDRESS3                   ,
CLEANSED_PHONE_1              ,
CLEANSED_EMAIL_1              ,
PR_REV_GROUP                  ,
GOUT_MATCH_LEVEL              ,
WINDOW_KEY_01                 ,
REFERENCE_HOUSEHOLD_ID        ,
REFERENCE_LEGALENTITYKEY      ,
REFERENCE_REGISTRATIONKEY     ,
LEGAL_ENT_NBR                 ,
BRTH_DATE                     ,
LANG_CODE                     ,
CNSMR_USER_NAME               ,
STATUS                        ,
FULL_NAME                     ,
DPEND_NAME                    ,
PET_NAME                      ,
PR_NAME_FORM_01               ,
DR_ALIAS_ACCOUNT              ,
REFERENCE_MATCHED_LEV1_PATTERN,
REFERENCE_MATCHED_LEV2_PATTERN,
DR_BUSINESS_NAME              ,
EMAIL_IND                     ,
REGIS_DATE                    ,
RECORD_IND                    ,
RECENT_IND                    ,
REGIS_PRSNA_ID                ,
HH_FLAG                       ,
LE_FLAG                       ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_SOURCE                    ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_LAST_MODIFIED_DATE        ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
NATIONAL_ID_NBR               ,
GL_ACCURACY                   ,
GL_MATCH_FLAG                 ,
GL_LATITUDE                   ,
GL_LONGITUDE                  ,
DR_CLEANSE_LEVEL              ,
HOUSEHOLD_ID                  ,
LEGALENTITYKEY                ,
REGISTRATIONKEY               )
SEL MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
DR_ALIAS_CONTACT              ,
DR_FIRST_NAME                 ,
DR_MIDDLE_NAME                ,
DR_LAST_NAME                  ,
DR_MRMRS                      ,
DR_NAME_GENER                 ,
DR_NAME_SUFFIX                ,
DR_NAME_GENDER                ,
DR_COUNTRY_NAME               ,
DR_REGION_NAME                ,
DR_CITY_NAME                  ,
DR_POSTAL_CODE                ,
DR_STREET_NAME                ,
DR_HOUSE_NUMBER1              ,
DR_HOUSE_NUMBER2              ,
DR_POBOX_NUMBER               ,
DR_ADDRESS                    ,
DR_ADDRESS2                   ,
DR_ADDRESS3                   ,
CLEANSED_PHONE_1              ,
CLEANSED_EMAIL_1              ,
PR_REV_GROUP                  ,
GOUT_MATCH_LEVEL              ,
WINDOW_KEY_01                 ,
REFERENCE_HOUSEHOLD_ID        ,
REFERENCE_LEGALENTITYKEY      ,
REFERENCE_REGISTRATIONKEY     ,
LEGAL_ENT_NBR                 ,
BRTH_DATE                     ,
LANG_CODE                     ,
CNSMR_USER_NAME               ,
STATUS                        ,
FULL_NAME                     ,
DPEND_NAME                    ,
PET_NAME                      ,
PR_NAME_FORM_01               ,
DR_ALIAS_ACCOUNT              ,
REFERENCE_MATCHED_LEV1_PATTERN,
REFERENCE_MATCHED_LEV2_PATTERN,
DR_BUSINESS_NAME              ,
EMAIL_IND                     ,
REGIS_DATE                    ,
RECORD_IND                    ,
RECENT_IND                    ,
REGIS_PRSNA_ID                ,
HH_FLAG                       ,
LE_FLAG                       ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_SOURCE                    ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_LAST_MODIFIED_DATE        ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
NATIONAL_ID_NBR               ,
GL_ACCURACY                   ,
GL_MATCH_FLAG                 ,
GL_LATITUDE                   ,
GL_LONGITUDE                  ,
DR_CLEANSE_LEVEL              ,
HOUSEHOLD_ID                  ,
LEGALENTITYKEY                ,
REGISTRATIONKEY              
FROM TRILLIUM_OUTPUT1_USA_TEMP;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L32

--Updating the Regis_prsna table with the Matched consumer Id value of the Trillium Output Table
UPDATE REGIS_PRSNA
FROM 
(SEL DISTINCT LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,SYS_TARGET_ID,
REFERENCE_LEGALENTITYKEY
,COALESCE(NULLIF(TRIM(DR_ALIAS_CONTACT),''),DR_FIRST_NAME) AS ALIAS_GVN_NAME
,COALESCE(NULLIF(TRIM(DR_ALIAS_ACCOUNT),''),DR_LAST_NAME) AS ALIAS_FAMLY_NAME
FROM
TRILLIUM_OUTPUT1_USA_TEMP
WHERE RECENT_IND='Y'
QUALIFY count(1)over(partition by LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,SYS_TARGET_ID)
= count(1)over(partition by LEGAL_ENT_NBR,MKTNG_PGM_NBR,REGIS_PRSNA_ID,SYS_TARGET_ID,REFERENCE_LEGALENTITYKEY,COALESCE(NULLIF(TRIM(DR_ALIAS_CONTACT),''),DR_FIRST_NAME),COALESCE(NULLIF(TRIM(DR_ALIAS_ACCOUNT),''),DR_LAST_NAME))
) B
SET MATCHD_CNSMR_PRSNA_ID=CAST(B.REFERENCE_LEGALENTITYKEY AS INTEGER)
,GVN_NAME_ALIAS=B.ALIAS_GVN_NAME
,FAMLY_NAME_ALIAS=B.ALIAS_FAMLY_NAME
WHERE REGIS_PRSNA.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
AND REGIS_PRSNA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND REGIS_PRSNA.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND REGIS_PRSNA.SYS_TARGET_ID=B.SYS_TARGET_ID
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L33

/*UPDATE REGIS_PRSNA_POSTL_ADDR
FROM ADDR_INPUT B
SET 
WIN_KEY=B.WIN_KEY
,SYS_ERR_CODE=B.SYS_ERR_CODE
WHERE REGIS_PRSNA_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=B.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID=B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR;
*/
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L34

--Inserting Record in the HSHLD_PRSNA Table


INSERT INTO HSHLD_PRSNA  
(HSHLD_PRSNA_ID
,LEGAL_ENT_NBR
,PRSNA_STATUS_CODE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE                                                                  
,SYS_ERR_SVRTY) 
SELECT *
FROM
(SELECT
A.REFERENCE_HOUSEHOLD_ID
,A.LEGAL_ENT_NBR
,'ACTIVATED' PRSNA_STATUS_CODE
,A.SYS_SOURCE
,A.SYS_TARGET_ID
,A.SYS_AUTH_ID
,A.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,A.SYS_ENT_STATE
,A.SYS_LAST_MODIFIED_BY
,A.SYS_NC_TYPE
,A.SYS_ERR_CODE                                                                  
,A.SYS_ERR_SVRTY
FROM
TRILLIUM_OUTPUT1_USA_TEMP A
LEFT OUTER JOIN HSHLD_PRSNA B
  ON A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
 AND A.HOUSEHOLD_ID = B.HSHLD_PRSNA_ID
WHERE B.HSHLD_PRSNA_ID IS NULL 
AND RECENT_IND = 'Y'
QUALIFY RANK() OVER(PARTITION BY REFERENCE_HOUSEHOLD_ID
ORDER BY REGIS_DATE DESC, REFERENCE_REGISTRATIONKEY DESC, A.SYS_CREATION_DATE DESC, 
A.SYS_SOURCE DESC, A.SYS_NC_TYPE DESC, A.SYS_TARGET_ID DESC  ) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L35

--Inserting the MATCHD_CNSMR_PRSNA


INSERT INTO MDM.MATCHD_CNSMR_PRSNA  
(MATCHD_CNSMR_PRSNA_ID
,LEGAL_ENT_NBR
,HSHLD_PRSNA_ID
,HEAD_OF_HSHLD_IND
,UNIVERSAL_OPT_OUT
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,NOTE_TXT
,LATST_ACTVY_DATE
,PRSNA_STATUS_CODE
,CNSMR_USER_NAME
,LANG_CODE
,REGIS_DATE
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE                                                                  
,SYS_ERR_SVRTY) 
SELECT DISTINCT
B.MATCHD_CNSMR_PRSNA_ID
,B.LEGAL_ENT_NBR
,B.HSHLD_PRSNA_ID
,CASE WHEN RANK() OVER (PARTITION BY B.HSHLD_PRSNA_ID ORDER BY B.HSHLD_PRSNA_ID,B.MATCHD_CNSMR_PRSNA_ID) = 1
      THEN 'Y'
      ELSE 'N'
  END AS HEAD_OF_HSHLD_IND
,'' UNIVERSAL_OPT_OUT
,A.NAME_PREFX_TXT
,A.GVN_NAME
,A.MID_NAME
,A.FAMLY_NAME
,A.NAME_SUFFX_TXT
,A.FULL_NAME
,A.GENDR_IND
,A.BRTH_DATE
,'' NOTE_TXT
,A.LATST_ACTVY_DATE
,A.PRSNA_STATUS_CODE
,A.CNSMR_USER_NAME
,A.LANG_CODE
,A.REGIS_DATE
,A.SYS_SOURCE
,A.SYS_TARGET_ID
,A.SYS_AUTH_ID
,A.SYS_CREATED_BY
,A.SYS_CREATION_DATE
,A.SYS_LAST_MODIFIED_DATE
,A.SYS_ENT_STATE
,A.SYS_LAST_MODIFIED_BY
,A.SYS_NC_TYPE
,A.SYS_ERR_CODE                                                                  
,A.SYS_ERR_SVRTY
FROM MDM.TSS_PRSNA_IDS_USA B
INNER JOIN MDM.REGIS_PRSNA A
ON A.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
WHERE ( B.MATCHD_CNSMR_PRSNA_ID,
B.LEGAL_ENT_NBR) NOT IN
(SEL
 MATCHD_CNSMR_PRSNA_ID,
LEGAL_ENT_NBR
FROM MDM.MATCHD_CNSMR_PRSNA
)
QUALIFY RANK() OVER(PARTITION BY B.MATCHD_CNSMR_PRSNA_ID 
ORDER BY  A.LATST_ACTVY_DATE DESC, A.REGIS_DATE DESC, A.SYS_CREATION_DATE DESC, 
A.SYS_SOURCE DESC, A.SYS_NC_TYPE DESC, A.CNSMR_USER_NAME DESC,A.FULL_NAME DESC 
,A.GVN_NAME
,A.MID_NAME
,A.FAMLY_NAME
,A.SYS_TARGET_ID DESC,A.BRTH_DATE DESC) = 1;
 
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L36

--Inserting data in the MATCHD_CNSMR_POSTL_ADDR Table

INSERT INTO   MDM.MATCHD_CNSMR_POSTL_ADDR  
(MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
LEGAL_ENT_NBR,
VALID_CNTCT_POINT_IND,
PREF_CNTCT_POINT_IND,
ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT,
STRET_NUM,
STRET_NAME,
APT_NUM,
PO_BOX_NUM,
CITY_NAME,
POSTL_AREA_CODE,
LAT_MEAS,
LONG_MEAS,
CNTRY_CODE,
TERR_CODE,
SYS_SOURCE,
SYS_TARGET_ID,
SYS_AUTH_ID,
SYS_CREATED_BY,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
SYS_ENT_STATE,
SYS_LAST_MODIFIED_BY,
SYS_NC_TYPE,
SYS_ERR_CODE,
SYS_ERR_SVRTY
)

SEL DISTINCT
 B.MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
B.LEGAL_ENT_NBR,
VALID_CNTCT_POINT_IND,
PREF_CNTCT_POINT_IND,
ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT,
STRET_NUM,
STRET_NAME,
APT_NUM,
PO_BOX_NUM,
CITY_NAME,
POSTL_AREA_CODE,
LAT_MEAS,
LONG_MEAS,
B.CNTRY_CODE,
TERR_CODE,
B.SYS_SOURCE,
B.SYS_TARGET_ID,
B.SYS_AUTH_ID,
B.SYS_CREATED_BY,
B.SYS_CREATION_DATE,
B.SYS_LAST_MODIFIED_DATE,
B.SYS_ENT_STATE,
B.SYS_LAST_MODIFIED_BY,
B.SYS_NC_TYPE,
B.SYS_ERR_CODE,
B.SYS_ERR_SVRTY
FROM
   MDM.REGIS_PRSNA_POSTL_ADDR A
   INNER JOIN 
MDM.REGIS_PRSNA B
ON A.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
INNER JOIN MDM.MKTNG_PGM C
ON A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND C.LEGAL_ENT_NBR in(15,42)
WHERE ( B.MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
B.LEGAL_ENT_NBR) NOT IN
(SEL
 MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
LEGAL_ENT_NBR
FROM MDM.MATCHD_CNSMR_POSTL_ADDR
)
AND (A. MKTNG_PGM_NBR,B.REGIS_PRSNA_ID) IN (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID FROM TSS_PRSNA_IDS_USA)
QUALIFY RANK() OVER (PARTITION BY B.MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
B.LEGAL_ENT_NBR ORDER BY B.LATST_ACTVY_DATE DESC, A.REGIS_PRSNA_ID DESC) = 1
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L37
--Deduplication Process

CREATE VOLATILE MULTISET TABLE MATCHD_PRSNA AS
(
SEL MATCHD_CNSMR_PRSNA_ID FROM TSS_PRSNA_IDS_USA
UNION
SEL MATCHD_CNSMR_PRSNA_ID FROM TSS_PRSNA_IDS_USA_PREV
)
WITH DATA
PRIMARY INDEX (MATCHD_CNSMR_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L38

CREATE VOLATILE SET TABLE MP_PRSNA AS
( 
select MKTNG_PGM_NBR, REGIS_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,REGIS_CNSMR_ID_VAL,RNK_RP,STATUS_CODE_RP,SUBSCRPTN_OPT_NBR_EA,RNK_EA,STATUS_CODE_EA,SUBSCRPTN_OPT_NBR_PH,RNK_PH,STATUS_CODE_PH,SUBSCRPTN_OPT_NBR_PO,RNK_PO,STATUS_CODE_PO,SUBSCRPTN_OPT_NBR_SN,RNK_SN,STATUS_CODE_SN,STATUS_CODE_FINAL_RP
,rank() over (partition by MKTNG_PGM_NBR, REGIS_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,REGIS_CNSMR_ID_VAL 
order by case when STATUS_CODE_FINAL_RP='AC' then 1 when STATUS_CODE_FINAL_RP='DP' then 2 else 9 end) rnk
FROM (
SELECT RP.MKTNG_PGM_NBR, RP.REGIS_PRSNA_ID, RP.MATCHD_CNSMR_PRSNA_ID,REGIS_CNSMR_ID_VAL
,RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID
ORDER BY  RP.LATST_ACTVY_DATE DESC,RP.REGIS_DATE DESC,
  RP.REGIS_CNSMR_ID_VAL DESC,RP.SYS_CREATION_DATE DESC,RP.SYS_SOURCE DESC,
RP.SYS_NC_TYPE DESC,
  RP.REGIS_PRSNA_ID DESC) AS RNK_RP
,CASE WHEN RNK_RP=1
      THEN 'AC'
      WHEN RNK_RP<>1
      THEN 'DP'
  END AS STATUS_CODE_RP
,COALESCE(EA.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_EA,
RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(EA.SUBSCRPTN_OPT_NBR,0)
ORDER BY  RP.LATST_ACTVY_DATE DESC,RP.REGIS_DATE DESC,
  RP.REGIS_CNSMR_ID_VAL DESC,RP.SYS_CREATION_DATE DESC,RP.SYS_SOURCE DESC,
RP.SYS_NC_TYPE DESC,
  RP.REGIS_PRSNA_ID DESC) AS RNK_EA
,CASE WHEN RNK_EA=1
      THEN 'AC'
      WHEN RNK_EA<>1
      THEN 'DP'
  END AS STATUS_CODE_EA
,COALESCE(PO.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_PO,
RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(PO.SUBSCRPTN_OPT_NBR,0)
ORDER BY  RP.LATST_ACTVY_DATE DESC,RP.REGIS_DATE DESC,
  RP.REGIS_CNSMR_ID_VAL DESC,RP.SYS_CREATION_DATE DESC,RP.SYS_SOURCE DESC,
RP.SYS_NC_TYPE DESC,
  RP.REGIS_PRSNA_ID DESC) AS RNK_PO
,CASE WHEN RNK_PO=1
      THEN 'AC'
      WHEN RNK_PO<>1
      THEN 'DP'
  END AS STATUS_CODE_PO
,COALESCE(PH.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_PH,
RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(PH.SUBSCRPTN_OPT_NBR,0)
ORDER BY  RP.LATST_ACTVY_DATE DESC,RP.REGIS_DATE DESC,
  RP.REGIS_CNSMR_ID_VAL DESC,RP.SYS_CREATION_DATE DESC,RP.SYS_SOURCE DESC,
RP.SYS_NC_TYPE DESC,
  RP.REGIS_PRSNA_ID DESC) AS RNK_PH
,CASE WHEN RNK_PH=1
      THEN 'AC'
      WHEN RNK_PH<>1
      THEN 'DP'
  END AS STATUS_CODE_PH
,COALESCE(SN.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_SN,
RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(SN.SUBSCRPTN_OPT_NBR,0)
ORDER BY  RP.LATST_ACTVY_DATE DESC,RP.REGIS_DATE DESC,
  RP.REGIS_CNSMR_ID_VAL DESC,RP.SYS_CREATION_DATE DESC,RP.SYS_SOURCE DESC,
RP.SYS_NC_TYPE DESC,
  RP.REGIS_PRSNA_ID DESC) AS RNK_SN
,CASE WHEN RNK_SN=1
      THEN 'AC'
      WHEN RNK_SN<>1
      THEN 'DP'
  END AS STATUS_CODE_SN
--,CASE WHEN (STATUS_CODE_EA = 'AC' OR STATUS_CODE_PO = 'AC'  OR STATUS_CODE_PH = 'AC'OR STATUS_CODE_SN = 'AC' )--Release 5.1.3
,CASE WHEN ((STATUS_CODE_EA = 'AC' AND EA.REGIS_PRSNA_ID IS NOT NULL)
        OR (STATUS_CODE_PO = 'AC' AND PO.REGIS_PRSNA_ID IS NOT NULL)
        OR (STATUS_CODE_PH = 'AC' AND PH.REGIS_PRSNA_ID IS NOT NULL)
        OR (STATUS_CODE_SN = 'AC' AND SN.REGIS_PRSNA_ID IS NOT NULL))
      THEN 'AC' 
      ELSE STATUS_CODE_RP 
  END STATUS_CODE_FINAL_RP 
  ,PRSNA_STATUS_CODE,EMAIL_STATUS_CODE,POSTL_STATUS_CODE,PHONE_STATUS_CODE,SOC_NET_STATUS_CODE
FROM REGIS_PRSNA RP
LEFT JOIN REGIS_PRSNA_EMAIL_ADDR EA 
ON RP.REGIS_PRSNA_ID = EA.REGIS_PRSNA_ID 
AND RP.MKTNG_PGM_NBR = EA.MKTNG_PGM_NBR 
AND EA.EMAIL_STATUS_CODE <> 'NV' --Rel 4.5.2 
LEFT JOIN REGIS_PRSNA_POSTL_ADDR PO 
ON RP.REGIS_PRSNA_ID = PO.REGIS_PRSNA_ID 
AND RP.MKTNG_PGM_NBR = PO.MKTNG_PGM_NBR 
AND PO.POSTL_STATUS_CODE <> 'NV' --Rel 4.5.2 
LEFT JOIN REGIS_PRSNA_PHONE PH 
ON RP.REGIS_PRSNA_ID = PH.REGIS_PRSNA_ID 
AND RP.MKTNG_PGM_NBR = PH.MKTNG_PGM_NBR 
AND PH.PHONE_STATUS_CODE <> 'NV' --Rel 4.5.2 
LEFT JOIN REGIS_PRSNA_SOC_NET_ACCT SN 
ON RP.REGIS_PRSNA_ID = SN.REGIS_PRSNA_ID 
AND RP.MKTNG_PGM_NBR = SN.MKTNG_PGM_NBR 
AND SN.SOC_NET_STATUS_CODE <> 'NV' --Rel 4.5.2 
WHERE RP.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TSS_PRSNA_IDS_USA)
AND RP.MATCHD_CNSMR_PRSNA_ID IN (SEL MATCHD_CNSMR_PRSNA_ID FROM MATCHD_PRSNA)
AND RP.MKTNG_PGM_NBR NOT IN (SEL CAST(AV_CODE AS INTEGER) FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Merge')
AND RP.PRSNA_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status')
AND COALESCE(EA.EMAIL_STATUS_CODE,'XX') NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status')
AND COALESCE(PO.POSTL_STATUS_CODE,'XX') NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status')
AND COALESCE(PH.PHONE_STATUS_CODE,'XX') NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status')
AND COALESCE(SN.SOC_NET_STATUS_CODE,'XX') NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status')
)tmp
QUALIFY 
rnk =1 and (
PRSNA_STATUS_CODE <> STATUS_CODE_FINAL_RP
OR EMAIL_STATUS_CODE <> STATUS_CODE_EA
OR POSTL_STATUS_CODE <> STATUS_CODE_PO
OR PHONE_STATUS_CODE <> STATUS_CODE_PH
OR SOC_NET_STATUS_CODE <> STATUS_CODE_SN
)
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L39


COLLECT STATS MP_PRSNA
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L40

COLLECT STATS MP_PRSNA
COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L41

COLLECT STATS MP_PRSNA
COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L42

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_PO,STATUS_CODE_PO
FROM MP_PRSNA
GROUP BY 1,2,3,4)B
SET POSTL_STATUS_CODE = B.STATUS_CODE_PO
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_PO
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP)
AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE <> B.STATUS_CODE_PO
AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE <> 'NV'  --Rel 4.5.2 
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L43

UPDATE REGIS_PRSNA_PHONE
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_PH,STATUS_CODE_PH
FROM MP_PRSNA
GROUP BY 1,2,3,4)B
SET PHONE_STATUS_CODE = B.STATUS_CODE_PH
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_PH
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP)
AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE <> B.STATUS_CODE_PH
AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE <> 'NV'  --Rel 4.5.2 
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L44

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_EA,STATUS_CODE_EA
FROM MP_PRSNA
GROUP BY 1,2,3,4)B
SET EMAIL_STATUS_CODE = B.STATUS_CODE_EA
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_EA
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP)
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE <> B.STATUS_CODE_EA
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE <> 'NV'  --Rel 4.5.2 
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L45

UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_SN,STATUS_CODE_SN
FROM MP_PRSNA
GROUP BY 1,2,3,4)B
SET SOC_NET_STATUS_CODE = B.STATUS_CODE_SN
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_SN
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP)
AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE <> B.STATUS_CODE_SN
AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE <> 'NV'  --Rel 4.5.2 
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L46

UPDATE REGIS_PRSNA
FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,STATUS_CODE_FINAL_RP
FROM MP_PRSNA
GROUP BY 1,2,3)B
SET PRSNA_STATUS_CODE = B.STATUS_CODE_FINAL_RP
WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_USA_TEMP)
AND REGIS_PRSNA.PRSNA_STATUS_CODE <> B.STATUS_CODE_FINAL_RP
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L47
