/***********************************************************************************************************
SCRIPT:               REG_OPT_OUT_MDM_TEMP.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts creates opt out list
                                                      after the respective REGIS_PRSNA tables have been populated
                                                      and loads MDM.REG_OPT_OUT_MDM_TEMP
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE $DATABASENAME;




/*****************************************************************************
REG_OPT_OUT_MDM_TEMP is a temporary table to consolidate the negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST to be checked for during wrapper processing
******************************************************************************/
DELETE FROM $DATABASENAME.REG_OPT_OUT_MDM_TEMP where cntry_code = '$CNTRY';
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Populate REG_OPT_OUT_MDM_TEMP with data having negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST and having a match to the channel tables 
REGIS_PRSNA_POSTL_ADDR, EMAIL_ADDR or PHONE and having a match on NAME to
REGIS_PRSNA.

Populate REGIS_PRSNA_ID either based on NAME. If not available, populate it from
REGIS_PRSNA using the REGIS_PRSNA_ID in the channel tables. Else populate it with
negative value from REGIS_PRSNA_OPT_OUT_HIST.

This is done for all marketing programs except for universal optout. Universal
Optout is marketing program 9999.
******************************************************************************/
INSERT	INTO $DATABASENAME.REG_OPT_OUT_MDM_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE)

SELECT	
STG_MKTNG_PGM_NBR
,EMAIL
,PHONE
,SUBSCRPTN_OPT_NBR
,REGIS_PRSNA_ID
,OPT_TIME
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,CITY_NAME
,TERR_NAME
,POSTL_AREA_CODE
,CNTRY_NAME
,COALESCE(LEGAL_ENT_NBR,-1)
,COALESCE(DATA_SRCE_NBR,-1)
,MATCHD_CNSMR_PRSNA_ID 
,FNAME
,LNAME
,LOG_SOURCE_ID
,EDW_MKTNG_PGM_NBR
,HIST_REGIS_PRSNA_ID
,'$CNTRY'
FROM	
( 
SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(
SELECT	
ADJ.CNTRY_CODE CNTRY_NAME, 
ADJ.ADDR_LINE_1_TXT, 
ADJ.ADDR_LINE_2_TXT,
ADJ.ADDR_LINE_3_TXT,
ADJ.CITY_NAME,
ADJ.TERR_NAME,
ADJ.POSTL_AREA_CODE,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM $DATABASENAME.REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
) AS CN

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
	ON	  coalesce(STG.ADDR_LINE_1_TXT,'')=  coalesce(CN.ADDR_LINE_1_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_2_TXT,'')= coalesce(CN.ADDR_LINE_2_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_3_TXT,'')= coalesce(CN.ADDR_LINE_3_TXT,'')
 	AND	  coalesce(STG.CITY_NAME,'')= coalesce(CN.CITY_NAME,'')
    	AND	 coalesce(STG.TERR_NAME,'')= coalesce(CN.TERR_NAME,'')
 	AND	  coalesce(STG.POSTL_AREA_CODE,'')= coalesce(CN.POSTL_AREA_CODE,'')
 	AND	 coalesce(STG.CNTRY_NAME,'')= coalesce(CN.CNTRY_NAME,'')
	AND	 STG.MKTNG_PGM_NBR= CN.MKTNG_PGM_NBR
	AND	STG.OPT_TIME>=CN.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND	RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)


WHERE	 STG.MKTNG_PGM_NBR <>9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(SELECT	
ADJ.FULL_PHONE_NUM,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_PHONE ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)) PH

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM
AND STG.MKTNG_PGM_NBR=PH.MKTNG_PGM_NBR
AND STG.OPT_TIME>=PH.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR <>9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	
(SELECT	
ADJ.EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 ) EA
INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT
AND STG.MKTNG_PGM_NBR=EA.MKTNG_PGM_NBR
AND STG.OPT_TIME>=EA.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR <>9999
AND STG.REGIS_PRSNA_ID < 0 ) OPTOUT
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Populate REG_OPT_OUT_MDM_TEMP with data having negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST and having a match to the channel tables 
REGIS_PRSNA_POSTL_ADDR, EMAIL_ADDR or PHONE and having a match on NAME to
REGIS_PRSNA.

Populate REGIS_PRSNA_ID either based on NAME. If not available, populate it from
REGIS_PRSNA using the REGIS_PRSNA_ID in the channel tables. Else populate it with
negative value from REGIS_PRSNA_OPT_OUT_HIST.

This is done for universal optout. Universal Optout is marketing program 9999.
******************************************************************************/

INSERT	INTO $DATABASENAME.REG_OPT_OUT_MDM_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE)

SELECT	
STG_MKTNG_PGM_NBR
,EMAIL
,PHONE
,SUBSCRPTN_OPT_NBR
,REGIS_PRSNA_ID
,OPT_TIME
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,CITY_NAME
,TERR_NAME
,POSTL_AREA_CODE
,CNTRY_NAME
,COALESCE(LEGAL_ENT_NBR,-1)
,COALESCE(DATA_SRCE_NBR,-1)
,MATCHD_CNSMR_PRSNA_ID 
,FNAME
,LNAME
,LOG_SOURCE_ID
,EDW_MKTNG_PGM_NBR
,HIST_REGIS_PRSNA_ID
,'$CNTRY'
FROM	
( 
SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(
SELECT	
ADJ.CNTRY_CODE CNTRY_NAME, 
ADJ.ADDR_LINE_1_TXT, 
ADJ.ADDR_LINE_2_TXT,
ADJ.ADDR_LINE_3_TXT,
ADJ.CITY_NAME,
ADJ.TERR_NAME,
ADJ.POSTL_AREA_CODE,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM $DATABASENAME.REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
) AS CN

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
	ON	  coalesce(STG.ADDR_LINE_1_TXT,'')=  coalesce(CN.ADDR_LINE_1_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_2_TXT,'')= coalesce(CN.ADDR_LINE_2_TXT,'')
 	AND	 coalesce(STG.ADDR_LINE_3_TXT,'')= coalesce(CN.ADDR_LINE_3_TXT,'')
 	AND	  coalesce(STG.CITY_NAME,'')= coalesce(CN.CITY_NAME,'')
    	AND	 coalesce(STG.TERR_NAME,'')= coalesce(CN.TERR_NAME,'')
 	AND	  coalesce(STG.POSTL_AREA_CODE,'')= coalesce(CN.POSTL_AREA_CODE,'')
 	AND	 coalesce(STG.CNTRY_NAME,'')= coalesce(CN.CNTRY_NAME,'')
	AND	STG.OPT_TIME>=CN.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND	RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE	 STG.MKTNG_PGM_NBR=9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	 

(SELECT	
ADJ.FULL_PHONE_NUM,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_PHONE ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)) PH

INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM
AND STG.OPT_TIME>=PH.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR =9999 
AND STG.REGIS_PRSNA_ID < 0

UNION

SELECT	
STG.MKTNG_PGM_NBR STG_MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP1.REGIS_PRSNA_ID,RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
COALESCE(RP1.LEGAL_ENT_NBR,RP.LEGAL_ENT_NBR) LEGAL_ENT_NBR,
COALESCE(RP1.DATA_SRCE_NBR,RP.DATA_SRCE_NBR) DATA_SRCE_NBR,
COALESCE(RP1.MATCHD_CNSMR_PRSNA_ID,RP.MATCHD_CNSMR_PRSNA_ID) MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
COALESCE(RP1.MKTNG_PGM_NBR,RP.MKTNG_PGM_NBR) AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID
FROM	
(SELECT	
ADJ.EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.DATA_SRCE_NBR,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM
FROM 
$DATABASENAME.REGIS_PRSNA_EMAIL_ADDR ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 ) EA
INNER JOIN $DATABASENAME.REGIS_PRSNA_OPT_OUT_HIST STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT
AND STG.OPT_TIME>=EA.CNSMR_CHCE_DATETM

INNER JOIN $DATABASENAME.REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
AND RP.CNTRY_CODE = '$CNTRY'

LEFT JOIN $DATABASENAME.REGIS_PRSNA RP1
ON (EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	RP.GVN_NAME = STG.FIRST_NAME 
AND	RP.FAMLY_NAME = STG.LAST_NAME 
AND RP.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR)

WHERE STG.MKTNG_PGM_NBR =9999
AND STG.REGIS_PRSNA_ID < 0 ) OPTOUT
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
