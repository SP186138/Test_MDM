/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_POSTAL_ADDR.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts takes data friom trillium output tables 
                                                      and loads USER_WORK.REGIS_PRSNA_POSTAL_ADDR
DESCRIPTION:          THIS SCRIPT ALSO LOADS INTERMIDIATE OPT TABLES -- This scripts creates opt out list
                                                      after the respective MDM STG tables have been populated
                                                      and loads MDM.REG_OPT_OUT_MDM_TEMP                                                      
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
4.2.1                01/14/2013           TERADATA                        INC0011026
4.4.1                06/10/2013           TERADATA                        PERFORMANCE TUNING
EUROPE               07/20/2013           TERADATA                        TERR CODE, CITY CODE INCLUSION
4.4.2                08/14/2013           TERADATA                        INCLUDE CNTCT_POINT_CATEG_CODE IN
                                                                          I2 OPTOUT
4.5                  09/26/2013           TERADATA                        POSTAL CLT OPTOUT       
4.5.1                11/26/2013           TERADATA                        TERRITORY UPDATE FOR BRA
PRB0040947           01/14/2013           TERADATA                        VALID_IND FOR ASIA UPDATE
4.5.3                02/03/2013           TERADATA                        PRB0040960         
5.0                  02/06/2013           TERADATA                        RELEASE 5.0
                                                                          1. ADDITION OF LAT/LONG
                                                                          2. ARABIAN PENINSULA TERR CODE
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;      
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE $DATABASENAME;

INS ADDR_TEMP
(MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
DR_ALIAS_CONTACT              ,
DR_FIRST_NAME                 ,
DR_MIDDLE_NAME                ,
DR_LAST_NAME                  ,
DR_MRMRS                      ,
DR_NAME_GENER                 ,
DR_NAME_SUFFIX                ,
DR_NAME_GENDER                ,
DR_COUNTRY_NAME               ,
DR_REGION_NAME                ,
DR_CITY_NAME                  ,
DR_POSTAL_CODE                ,
DR_STREET_NAME                ,
DR_HOUSE_NUMBER1              ,
DR_HOUSE_NUMBER2              ,
DR_POBOX_NUMBER               ,
DR_ADDRESS                    ,
DR_ADDRESS2                   ,
DR_ADDRESS3                   ,
CLEANSED_PHONE_1              ,
CLEANSED_EMAIL_1              ,
PR_REV_GROUP                  ,
GOUT_MATCH_LEVEL              ,
WINDOW_KEY_01                 ,
REFERENCE_HOUSEHOLD_ID        ,
REFERENCE_LEGALENTITYKEY      ,
REFERENCE_REGISTRATIONKEY     ,
LEGAL_ENT_NBR                 ,
BRTH_DATE                     ,
LANG_CODE                     ,
CNSMR_USER_NAME               ,
STATUS                        ,
FULL_NAME                     ,
DPEND_NAME                    ,
PET_NAME                      ,
PR_NAME_FORM_01               ,
DR_ALIAS_ACCOUNT              ,
REFERENCE_MATCHED_LEV1_PATTERN,
REFERENCE_MATCHED_LEV2_PATTERN,
DR_BUSINESS_NAME              ,
EMAIL_IND                     ,
REGIS_DATE                    ,
RECORD_IND                    ,
RECENT_IND                    ,
REGIS_PRSNA_ID                ,
HH_FLAG                       ,
LE_FLAG                       ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_SOURCE                    ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_LAST_MODIFIED_DATE        ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
NATIONAL_ID_NBR               ,
GL_ACCURACY                   ,
GL_MATCH_FLAG                 ,
GL_LATITUDE                   ,
GL_LONGITUDE                  ,
DR_CLEANSE_LEVEL              ,
HOUSEHOLD_ID                  ,
LEGALENTITYKEY                ,
REGISTRATIONKEY               )
SEL MKTNG_PGM_NBR                 ,
REGIS_CNSMR_ID_VAL            ,
DR_ALIAS_CONTACT              ,
DR_FIRST_NAME                 ,
DR_MIDDLE_NAME                ,
DR_LAST_NAME                  ,
DR_MRMRS                      ,
DR_NAME_GENER                 ,
DR_NAME_SUFFIX                ,
DR_NAME_GENDER                ,
DR_COUNTRY_NAME               ,
DR_REGION_NAME                ,
DR_CITY_NAME                  ,
DR_POSTAL_CODE                ,
DR_STREET_NAME                ,
DR_HOUSE_NUMBER1              ,
DR_HOUSE_NUMBER2              ,
DR_POBOX_NUMBER               ,
DR_ADDRESS                    ,
DR_ADDRESS2                   ,
DR_ADDRESS3                   ,
CLEANSED_PHONE_1              ,
CLEANSED_EMAIL_1              ,
PR_REV_GROUP                  ,
GOUT_MATCH_LEVEL              ,
WINDOW_KEY_01                 ,
REFERENCE_HOUSEHOLD_ID        ,
REFERENCE_LEGALENTITYKEY      ,
REFERENCE_REGISTRATIONKEY     ,
LEGAL_ENT_NBR                 ,
BRTH_DATE                     ,
LANG_CODE                     ,
CNSMR_USER_NAME               ,
STATUS                        ,
FULL_NAME                     ,
DPEND_NAME                    ,
PET_NAME                      ,
PR_NAME_FORM_01               ,
DR_ALIAS_ACCOUNT              ,
REFERENCE_MATCHED_LEV1_PATTERN,
REFERENCE_MATCHED_LEV2_PATTERN,
DR_BUSINESS_NAME              ,
EMAIL_IND                     ,
REGIS_DATE                    ,
RECORD_IND                    ,
RECENT_IND                    ,
REGIS_PRSNA_ID                ,
HH_FLAG                       ,
LE_FLAG                       ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_SOURCE                    ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_LAST_MODIFIED_DATE        ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY                 ,
ADDRESS_CONTACT               ,
ADDRESS_SUBSCRPTN             ,
PHONE_CONTACT                 ,
PHONE_SUBSCRPTN               ,
EMAIL_CONTACT                 ,
EMAIL_SUBSCRPTN               ,
NATIONAL_ID_NBR               ,
GL_ACCURACY                   ,
GL_MATCH_FLAG                 ,
GL_LATITUDE                   ,
GL_LONGITUDE                  ,
DR_CLEANSE_LEVEL              ,
HOUSEHOLD_ID                  ,
LEGALENTITYKEY                ,
REGISTRATIONKEY              
FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO ADDR_INPUT
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE
,GL_ACCURACY
,GL_MATCH_FLAG
,GL_LATITUDE
,GL_LONGITUDE
,DR_CLEANSE_LEVEL)
SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,TOUT.DR_ADDRESS
,TOUT.DR_ADDRESS2
,TOUT.DR_ADDRESS3
,TOUT.DR_HOUSE_NUMBER1
,TOUT.DR_STREET_NAME
,TOUT.DR_HOUSE_NUMBER2
,TOUT.DR_POBOX_NUMBER
,TOUT.DR_CITY_NAME
,TOUT.DR_POSTAL_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,CASE 
WHEN (GOUT_MATCH_LEVEL IN ('0','9')
      AND DR_COUNTRY_NAME IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','IDN','THA','VNM'))
      OR (GOUT_MATCH_LEVEL IN ('0','3')
      AND DR_COUNTRY_NAME IN ('NZL'))      
      OR DR_COUNTRY_NAME IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  DR_COUNTRY_NAME NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM'))
      OR (GOUT_MATCH_LEVEL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018')
      AND DR_COUNTRY_NAME IN ('FRA'))
      OR (GOUT_MATCH_LEVEL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND DR_COUNTRY_NAME IN ('IRL','AUT','ITA'))      
      OR (GOUT_MATCH_LEVEL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND DR_COUNTRY_NAME IN ('GRC'))    
      OR (GOUT_MATCH_LEVEL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND DR_COUNTRY_NAME IN ('CHE','DEU','ESP','BEL','NLD'))
      OR (GOUT_MATCH_LEVEL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND DR_COUNTRY_NAME IN ('DNK','FIN','NOR'))   
      OR (GOUT_MATCH_LEVEL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND DR_COUNTRY_NAME IN ('SWE'))       
      OR (GOUT_MATCH_LEVEL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND DR_COUNTRY_NAME IN ('GBR','PRT'))
THEN 'Y'
WHEN ((GOUT_MATCH_LEVEL IS NULL OR TRIM(GOUT_MATCH_LEVEL) = '') 
 AND (PR_REV_GROUP IS NULL OR TRIM(PR_REV_GROUP) = ''))
 OR  DR_COUNTRY_NAME='HKG'
 OR  (GOUT_MATCH_LEVEL NOT IN ('0','9')
      AND DR_COUNTRY_NAME IN ('JPN','TWN','KOR','NZL','AUS','MYS','SGP','IDN','THA','VNM'))
THEN STG.VALID_IND
ELSE 'N'
END VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
,GL_ACCURACY
,GL_MATCH_FLAG
,GL_LATITUDE
,GL_LONGITUDE
,DR_CLEANSE_LEVEL
FROM
ADDR_TEMP TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE TOUT.DR_COUNTRY_NAME NOT IN ('IND','CHN')
AND TOUT.RECENT_IND = 'Y'
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO ADDR_INPUT
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,CNTRY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE
,GL_ACCURACY
,GL_MATCH_FLAG
,GL_LATITUDE
,GL_LONGITUDE
,DR_CLEANSE_LEVEL)
SELECT
STG.CNTCT_POINT_CATEG_CODE
,COALESCE(TOUT.REGIS_PRSNA_ID,CAST(TOUT.REFERENCE_REGISTRATIONKEY AS INTEGER)) REFERENCE_REGISTRATIONKEY1
,TOUT.MKTNG_PGM_NBR
,TOUT.LEGAL_ENT_NBR
,TOUT.WINDOW_KEY_01
,STG.CNTCT_OPTN_NBR
,STG.CNTCT_OPTN_IND
,STG.CNSMR_CHCE_DATETM
,STG.PREFR_IND
,STG.ADDR_LINE_1_TXT
,STG.ADDR_LINE_2_TXT
,STG.ADDR_LINE_3_TXT
,STG.STRET_NUM
,STG.STRET_NAME
,STG.APT_NUM
,STG.PO_BOX_NUM
,STG.CITY_NAME
,STG.POSTL_AREA_CODE
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE TOUT.DR_REGION_NAME
  END AS DR_REGION_NAME
,CASE WHEN CR.CNTRY_RECODE IS NOT NULL
      THEN CR.CNTRY_RECODE 
      ELSE TOUT.DR_COUNTRY_NAME
  END AS DR_COUNTRY_NAME
,'' LAT_MEAS
,'' LONG_MEAS
,'Y'  VALID_CNTCT_POINT_IND
,STG.GUARDN_NAME
,STG.GUARDN_EMAIL_ADDR_TXT
,STG.GUARDN_CNSNT_IND
,STG.ACNLGMT_DATE
,TRIM(TOUT.PR_REV_GROUP) PR_REV_GROUP
,TOUT.GOUT_MATCH_LEVEL
,STG.SYS_SOURCE
,STG.SYS_TARGET_ID
,STG.SYS_AUTH_ID
,STG.SYS_CREATED_BY
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE
,CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE
,STG.SYS_ENT_STATE
,STG.SYS_LAST_MODIFIED_BY
,STG.SYS_NC_TYPE
,STG.SYS_ERR_CODE 
,STG.SYS_ERR_SVRTY
,STG.SYS_TARGET_ID SYS_TARGET_ID1
,'AC' POSTL_STATUS_CODE
,GL_ACCURACY
,GL_MATCH_FLAG
,GL_LATITUDE
,GL_LONGITUDE
,DR_CLEANSE_LEVEL
FROM
ADDR_TEMP TOUT
JOIN
PRSNA_POSTL_ADDR_STG STG
ON
TOUT.MKTNG_PGM_NBR = STG.MKTNG_PGM_NBR
AND
TOUT.REGIS_CNSMR_ID_VAL = STG.REGIS_CNSMR_ID_VAL
AND
TOUT.SYS_SOURCE = STG.SYS_SOURCE
AND TOUT.ADDRESS_CONTACT = STG.CNTCT_POINT_CATEG_CODE
AND COALESCE(TOUT.ADDRESS_SUBSCRPTN,'0') = COALESCE(STG.CNTCT_OPTN_NBR,0)
LEFT OUTER JOIN TERR_RECODE TR
ON TOUT.DR_REGION_NAME = TR.TERR
AND TOUT.DR_COUNTRY_NAME = TR.CNTRY
LEFT OUTER JOIN CNTRY_RECODE CR
ON TOUT.DR_COUNTRY_NAME = CR.CNTRY
WHERE TOUT.DR_COUNTRY_NAME IN ('IND','CHN')
AND TOUT.RECENT_IND = 'Y'
QUALIFY RANK() OVER (PARTITION BY REFERENCE_REGISTRATIONKEY1,STG.CNTCT_POINT_CATEG_CODE,COALESCE(STG.CNTCT_OPTN_NBR,0)
ORDER BY STG.SYS_CREATION_DATE DESC
,STG.SYS_SOURCE DESC
,STG.SYS_NC_TYPE DESC
,STG.CNSMR_CHCE_DATETM DESC
,TOUT.DR_ADDRESS DESC
,TOUT.WINDOW_KEY_01 DESC
) = 1;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* **************************************************
ADDRESS UPDATES
************************************************** */
/**********************************************************************************************
TERR CODE UPDATES
**********************************************************************************************/

/*********************************************************************************************
This update is to populate the PO_BOX_NUM attribute in case the address is a PO Box Num for USA
**********************************************************************************************/
UPDATE ADDR_INPUT
SET PO_BOX_NUM = CASE WHEN ADDR_LINE_1_TXT LIKE 'PO BOX%' 
                      THEN ADDR_LINE_1_TXT
                      ELSE NULL
                  END
WHERE 
--CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL)
 CNTRY_CODE IN ('USA','CAN');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE with the TERR_NAME. TERR_NAME is populated with the 
output from Trillium
**********************************************************************************************/
UPDATE ADDR_INPUT
SET TERR_CODE = TERR_NAME;
--WHERE CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;



CREATE VOLATILE TABLE CNTRY_CODE AS
 (SEL '$CNTRY' AS CNTRY_CODE) 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE NOT IN ('AUS','CHN','TUR','IND','JPN','BRA','ARB');
.IF ACTIVITYCOUNT > 0 THEN .GOTO OTHERS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CHN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHINA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AUS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUSTRALIA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('TUR','BRA','ARB');
.IF ACTIVITYCOUNT > 0 THEN .GOTO TURKEY
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('IND');
.IF ACTIVITYCOUNT > 0 THEN .GOTO INDIA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('JPN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO JAPAN

/*********************************************************************************************
This update is to populate the TERR_CODE with the BR-/IN-/JP- prefix from the reference table as 
trillium does not provide the IN-/JP- prefix.
**********************************************************************************************/
.LABEL INDIA

UPDATE ADDR_INPUT FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE ADDR_INPUT.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'IND' and ADDR_INPUT.CNTRY_CODE = 'IND';
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table.
**********************************************************************************************/
UPDATE PA
FROM ADDR_INPUT PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME
AND PA.CNTRY_CODE = 'IND';
----AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR IND
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('IND');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

/*********************************************************************************************
This update is to populate the TERR_CODE with the BR-/IN-/JP- prefix from the reference table as 
trillium does not provide the IN-/JP- prefix.
**********************************************************************************************/

.LABEL JAPAN

UPDATE ADDR_INPUT FROM TERR a
SET TERR_CODE = a.TERR_CODE
WHERE ADDR_INPUT.TERR_CODE = a.TERR_CODE_NTV
AND a.CNTRY_CODE = 'JPN' and ADDR_INPUT.CNTRY_CODE = 'JPN';
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table.
**********************************************************************************************/
UPDATE PA
FROM ADDR_INPUT PA, CITY XR
SET CITY_CODE = XR.CITY_CODE
WHERE PA.TERR_CODE = XR.TERR_CODE
AND PA.CITY_NAME = XR.CITY_NAME_NTV
AND PA.CNTRY_CODE = 'JPN';
--AND CAST(PA.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR JPN
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('JPN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

.LABEL AUSTRALIA

/* UPDATE TERR_CODE & CITY_CODE FOR AUS */
/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table and POSTL_AREA if there
is no match in the CITY table.
**********************************************************************************************/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.CITY_NAME IS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME IS NOT NULL
     --THEN C.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1))PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME IS NULL
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS WHERE EDW.POSTAL_AREA_CODE IS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME IS NOT NULL
     THEN C.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME,CITY_CODE,C.TERR_CODE,CNTRY_CODE FROM
CITY C
INNER JOIN TERR T
ON C.TERR_CODE=T.TERR_CODE 
WHERE CITY_NAME NOT IN(SEL COALESCE(A.CITY_NAME,'') FROM(SEL CITY_NAME,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A))C
ON EDW.CITY_NAME = C.CITY_NAME
AND EDW.CNTRY_CODE = C.CNTRY_CODE
WHERE EDW.CNTRY_CODE = 'AUS'
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.POSTL_AREA_CODE IS NULL
AND ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME
AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.LEGAL_ENT_NBR IN(6);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE from the TERR_RECODE_VAL reference table as the TERR
table does not have few native values. Customization requested from P&G.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR_RECODE_VAL T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME
--AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('AUS');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT
SET TERR_CODE = TERR_NAME
WHERE ADDR_INPUT.CNTRY_CODE IN('AUS')
AND ADDR_INPUT.TERR_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR AUS
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('AUS');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

.LABEL CHINA

/* UPDATE TERR_CODE & CITY_CODE FOR CHINA*/
/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table and POSTL_AREA if there
is no match in the CITY table.

Trillium provides the city name without the district value. Hence the TRIM on city name in the 
CITY table.
**********************************************************************************************/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR_CODE & CITY_CODE FOR RECORDS HAVING EDW.CITY AS NULL */
UPDATE ADDR_INPUT
FROM(SEL DISTINCT 
--EDW.CITY_NAME,
EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.CITY_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.CITY_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE --WHEN C.CITY_NAME_NTV IS NOT NULL
     --THEN C.TERR_CODE
     --WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     --THEN C1.TERR_CODE
     WHEN PA.POSTL_AREA_CODE IS NOT NULL
     THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
/* LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1 */
LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.CITY_NAME IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.CITY_NAME IS NULL
AND ADDR_INPUT.POSTL_AREA_CODE = A.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* UPDATE TERR CODE & CITY CODE FOR RECORDS HAVING POSTAL_AREA_CODE AS NULL*/
UPDATE ADDR_INPUT
FROM(SEL DISTINCT EDW.CITY_NAME,
--EDW.POSTL_AREA_CODE,
EDW.CNTRY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.CITY_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.CITY_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.CITY_CODE
     ELSE NULL END AS CITY_CODE,
CASE WHEN C.CITY_NAME_NTV IS NOT NULL
     THEN C.TERR_CODE
     WHEN C1.CITY_NAME_NTV1 IS NOT NULL
     THEN C1.TERR_CODE
     --WHEN PA.POSTL_AREA_CODE IS NOT NULL
     --THEN PA.TERR_CODE
     ELSE NULL END AS TERR_CODE
FROM ADDR_INPUT EDW
LEFT OUTER JOIN
(SEL CITY_NAME_NTV,CITY_CODE,TERR_CODE FROM
CITY 
WHERE CITY_NAME_NTV NOT IN(SEL COALESCE(A.CITY_NAME_NTV,'') FROM(SEL CITY_NAME_NTV,COUNT(*) AS CNT FROM CITY
GROUP BY 1 
HAVING CNT>1)A)
)C
ON EDW.CITY_NAME = C.CITY_NAME_NTV
LEFT OUTER JOIN
(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) CITY_NAME_NTV1,CITY_CODE,TERR_CODE FROM
CITY
WHERE TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY.CITY_NAME_NTV) NOT IN(SEL COALESCE(B.CITY_NAME_NTV2,'') 
FROM(SEL TRIM(TRAILING _UNICODE '5E02'XCV FROM CITY_NAME_NTV) AS CITY_NAME_NTV2,COUNT(*) AS CNT FROM CITY
GROUP BY 1
HAVING CNT>1)B)
)C1
ON EDW.CITY_NAME = C1.CITY_NAME_NTV1
/* LEFT OUTER JOIN
(SEL POSTL_AREA_CODE,CNTRY_CODE,CITY_CODE,TERR_CODE
FROM POSTL_AREA WHERE (POSTL_AREA_CODE,CNTRY_CODE) NOT IN(SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)) PA
ON EDW.POSTL_AREA_CODE = PA.POSTL_AREA_CODE
AND
EDW.CNTRY_CODE = PA.CNTRY_CODE */
WHERE EDW.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56)
AND EDW.POSTL_AREA_CODE IS NULL
)A
SET CITY_CODE = A.CITY_CODE
, TERR_CODE = A.TERR_CODE
WHERE 
ADDR_INPUT.POSTL_AREA_CODE IS NULL
AND ADDR_INPUT.CITY_NAME = A.CITY_NAME
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_CODE from the TERR reference table based on the native 
value.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_CODE = T.TERR_CODE
WHERE ADDR_INPUT.TERR_NAME = T.TERR_NAME_NTV
AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.MKTNG_PGM_NBR IN(53,91,55,37,54,88,97,67,66,33,36,35,38,34,49,56);
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY_RECODE_VAL reference table as the CITY
table does not have few native values. Customization requested from P&G.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM CITY_RECODE_VAL C
SET CITY_CODE = C.CITY_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
--AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('CHN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT FROM CITY_RECODE_VAL C
SET TERR_CODE = C.TERR_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
--AND ADDR_INPUT.TERR_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('CHN');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT
SET TERR_CODE = TERR_NAME
WHERE ADDR_INPUT.CNTRY_CODE IN('CHN')
AND ADDR_INPUT.TERR_CODE IS NULL;
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

.LABEL OTHERS

SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE NOT IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT');
.IF ACTIVITYCOUNT > 0 THEN .GOTO USA

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE ADDR_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
T.TERR_CODE,T.CITY_CODE,C.CITY_NAME
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(ADDR_INPUT.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE ADDR_INPUT.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(ADDR_INPUT.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE ADDR_INPUT.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(ADDR_INPUT.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE ADDR_INPUT.CITY_NAME
                 END                 
WHERE ADDR_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = T.CNTRY_CODE
AND ADDR_INPUT.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE ADDR_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
T.TERR_CODE,T.CITY_CODE,C.CITY_NAME
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE ADDR_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = T.CNTRY_CODE
AND ADDR_INPUT.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT')) 
AND ADDR_INPUT.CNTRY_CODE IN ('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL USA
/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE ADDR_INPUT FROM CITY C
SET CITY_CODE = C.CITY_CODE
WHERE ADDR_INPUT.CITY_NAME = C.CITY_NAME
AND ADDR_INPUT.TERR_CODE = C.TERR_CODE 
AND ADDR_INPUT.CITY_CODE IS NULL
AND ADDR_INPUT.CNTRY_CODE IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO L1

.LABEL TURKEY
/*********************************************************************************************
Update TERR_CODE from TERR for TUR/BRA if incoming terr name matches reference data
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR A
SET TERR_CODE = A.TERR_CODE
WHERE (ADDR_INPUT.TERR_NAME = A.TERR_NAME
OR ADDR_INPUT.TERR_NAME = A.TERR_NAME_NTV)
AND ADDR_INPUT.CNTRY_CODE = A.CNTRY_CODE
AND ADDR_INPUT.CNTRY_CODE IN ('TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update CITY_CODE from CITY for TUR/BRA if incoming city name matches reference data
**********************************************************************************************/

UPDATE ADDR_INPUT FROM CITY A
SET CITY_CODE = A.CITY_CODE
WHERE (ADDR_INPUT.CITY_NAME = A.CITY_NAME
OR ADDR_INPUT.CITY_NAME = A.CITY_NAME_NTV)
AND ADDR_INPUT.TERR_CODE = A.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN ('TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update CITY_CODE,TERR_CODE from POSTL_AREA/CITY for TUR/BRA if incoming city name and terr name
does not match reference data but postal area code matches reference data and incoming city name
is blank.
**********************************************************************************************/

UPDATE ADDR_INPUT FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
T.TERR_CODE,T.CITY_CODE,C.CITY_NAME
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN TRIM(COALESCE(ADDR_INPUT.TERR_CODE,''))=''
                     THEN T.TERR_CODE
                     ELSE ADDR_INPUT.TERR_CODE
                 END 
,CITY_CODE = CASE WHEN TRIM(COALESCE(ADDR_INPUT.CITY_NAME,''))=''
                     THEN T.CITY_CODE
                     ELSE ADDR_INPUT.CITY_CODE
                 END
,CITY_NAME = CASE WHEN TRIM(COALESCE(ADDR_INPUT.CITY_NAME,''))=''
                     THEN T.CITY_NAME
                     ELSE ADDR_INPUT.CITY_NAME
                 END           
WHERE ADDR_INPUT.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE = T.CNTRY_CODE
AND ADDR_INPUT.CNTRY_CODE IN ('TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR TUR/BRA
**********************************************************************************************/

UPDATE ADDR_INPUT FROM TERR T
SET TERR_NAME = T.TERR_NAME
WHERE ADDR_INPUT.TERR_CODE = T.TERR_CODE
AND ADDR_INPUT.CNTRY_CODE IN('TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM');
--AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM MDM_LOAD_CONTROL);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL L1

/*****************************************************************************
OPT_OUT_$CNTRY_LIST_TEMP is a temporary table to consolidate the negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST to be checked for during wrapper processing
******************************************************************************/
DELETE FROM OPT_OUT_$CNTRY_LIST_TEMP ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM OPT_OUT_$CNTRY_LIST_DCS ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM OPT_OUT_$CNTRY_LIST_DMA ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM OPT_OUT_$CNTRY_LIST_SIDS ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE REG_OPT_OUT_TIME
AS 
(

SEL MIN(CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM
(SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_EMAIL_ADDR_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
UNION
SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_POSTL_ADDR_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
UNION
SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_PHONE_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
) A
)
WITH DATA
PRIMARY INDEX ( CNSMR_CHCE_DATETM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE POSTL AS (
SELECT	
COALESCE(TRIM(ADJ.CNTRY_CODE),'') CNTRY_NAME, 
COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT, 
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT,
COALESCE(TRIM(ADJ.CITY_NAME),'') CITY_NAME,
COALESCE(TRIM(ADJ.TERR_NAME),'') TERR_NAME,
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') POSTL_AREA_CODE,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR AS SUBSCRPTN_OPT_NBR,
ADJ.LEGAL_ENT_NBR,
ADJ.SYS_TARGET_ID,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM,
CAST(ADJ.SYS_SOURCE AS INTEGER) LOAD_ID
FROM ADDR_INPUT ADJ
WHERE COALESCE(TRIM(ADDR_LINE_1_TXT),TRIM(ADDR_LINE_2_TXT),TRIM(ADDR_LINE_3_TXT),'') <> ''
)
WITH DATA
PRIMARY INDEX (CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,
CITY_NAME,TERR_NAME,POSTL_AREA_CODE,MKTNG_PGM_NBR,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE PHONE AS (
SELECT	
COALESCE(TRIM(ADJ.FULL_PHONE_NUM),'') FULL_PHONE_NUM,
ADJ.MKTNG_PGM_NBR, 
ADJ.CNTCT_OPTN_NBR AS SUBSCRPTN_OPT_NBR, 
B.LEGAL_ENT_NBR,
ADJ.SYS_TARGET_ID,
B.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM,
ADJ.LOAD_ID
FROM 
PRSNA_PHONE_STG ADJ
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
	ON	ADJ.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	ADJ.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	ADJ.SYS_SOURCE=B.SYS_SOURCE
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
AND COALESCE(TRIM(FULL_PHONE_NUM),'') <> ''
)
WITH DATA
PRIMARY INDEX (FULL_PHONE_NUM,MKTNG_PGM_NBR,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE EMAIL AS (
SELECT	
COALESCE(TRIM(ADJ.EMAIL_ADDR_TXT),'') EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.CNTCT_OPTN_NBR AS SUBSCRPTN_OPT_NBR, 
B.LEGAL_ENT_NBR,
ADJ.SYS_TARGET_ID,
B.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM,
ADJ.LOAD_ID
FROM 
PRSNA_EMAIL_ADDR_STG ADJ
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
ON	ADJ.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	ADJ.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	ADJ.SYS_SOURCE=B.SYS_SOURCE
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
AND COALESCE(TRIM(EMAIL_ADDR_TXT),'') <> ''
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TXT,MKTNG_PGM_NBR,CNSMR_CHCE_DATETM,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE OPT_OUT_HIST AS (
SELECT
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
DATA_SRCE_NBR                 ,
SUBSCRIPTION_NBR              ,
FIRST_NAME                    ,
LAST_NAME                     ,
EMAIL_ADDR_TEXT              ,
CONTACT_PHONE_NBR             ,
SRC_ADDR_LINE_1_TXT           ,
SRC_ADDR_LINE_2_TXT           ,
SRC_ADDR_LINE_3_TXT           ,
SRC_CITY_NAME                 ,
SRC_STATE                     ,
SRC_ZIP                       ,
SRC_CNTRY_NAME                ,
COALESCE(TRIM(ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT              ,
COALESCE(TRIM(ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT              ,
COALESCE(TRIM(ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT              ,
COALESCE(TRIM(CITY_NAME      ),'') CITY_NAME              ,
COALESCE(TRIM(TERR_NAME      ),'') TERR_NAME              ,
COALESCE(TRIM(POSTL_AREA_CODE),'') POSTL_AREA_CODE              ,
COALESCE(TRIM(CNTRY_NAME     ),'') CNTRY_NAME              ,
OPT_IND                       ,
OPT_TIME                  ,
OPT_REASN_TXT             ,
OPT_TYPE_CODE,
LAST_ACTIVITY_TM              ,
LOG_SOURCE_ID                 ,
LOG_UPDATE_USER               ,
LOG_LOAD_ID             
FROM REGIS_PRSNA_OPT_OUT_HIST  
WHERE OPT_IND='O' 
AND OPT_TIME>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME)
AND COALESCE(TRIM(ADDR_LINE_1_TXT),TRIM(ADDR_LINE_2_TXT),TRIM(ADDR_LINE_3_TXT),'') <> ''
)
WITH DATA
PRIMARY INDEX (CNTRY_NAME,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,MKTNG_PGM_NBR,OPT_TIME,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE OPT_OUT_HIST_PHONE AS (
SELECT
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
DATA_SRCE_NBR                 ,
SUBSCRIPTION_NBR              ,
FIRST_NAME                    ,
LAST_NAME                     ,
EMAIL_ADDR_TEXT              ,
COALESCE(TRIM(CONTACT_PHONE_NBR),'') CONTACT_PHONE_NBR             ,
SRC_ADDR_LINE_1_TXT           ,
SRC_ADDR_LINE_2_TXT           ,
SRC_ADDR_LINE_3_TXT           ,
SRC_CITY_NAME                 ,
SRC_STATE                     ,
SRC_ZIP                       ,
SRC_CNTRY_NAME                ,
ADDR_LINE_1_TXT              ,
ADDR_LINE_2_TXT              ,
ADDR_LINE_3_TXT              ,
CITY_NAME              ,
TERR_NAME              ,
POSTL_AREA_CODE              ,
CNTRY_NAME              ,
OPT_IND                       ,
OPT_TIME                  ,
OPT_REASN_TXT             ,
OPT_TYPE_CODE,
LAST_ACTIVITY_TM              ,
LOG_SOURCE_ID                 ,
LOG_UPDATE_USER               ,
LOG_LOAD_ID             
FROM REGIS_PRSNA_OPT_OUT_HIST  
WHERE OPT_IND='O' 
AND OPT_TIME>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME)
AND COALESCE(TRIM(CONTACT_PHONE_NBR),'') <> ''
)
WITH DATA
PRIMARY INDEX (CONTACT_PHONE_NBR,MKTNG_PGM_NBR,OPT_TIME,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE OPT_OUT_HIST_EMAIL AS (
SELECT
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
DATA_SRCE_NBR                 ,
SUBSCRIPTION_NBR              ,
FIRST_NAME                    ,
LAST_NAME                     ,
COALESCE(TRIM(EMAIL_ADDR_TEXT),'') EMAIL_ADDR_TEXT              ,
CONTACT_PHONE_NBR             ,
SRC_ADDR_LINE_1_TXT           ,
SRC_ADDR_LINE_2_TXT           ,
SRC_ADDR_LINE_3_TXT           ,
SRC_CITY_NAME                 ,
SRC_STATE                     ,
SRC_ZIP                       ,
SRC_CNTRY_NAME                ,
ADDR_LINE_1_TXT              ,
ADDR_LINE_2_TXT              ,
ADDR_LINE_3_TXT              ,
CITY_NAME              ,
TERR_NAME              ,
POSTL_AREA_CODE              ,
CNTRY_NAME              ,
OPT_IND                       ,
OPT_TIME                  ,
OPT_REASN_TXT             ,
OPT_TYPE_CODE,
LAST_ACTIVITY_TM              ,
LOG_SOURCE_ID                 ,
LOG_UPDATE_USER               ,
LOG_LOAD_ID             
FROM REGIS_PRSNA_OPT_OUT_HIST  
WHERE OPT_IND='O' 
AND OPT_TIME>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME)
AND COALESCE(TRIM(EMAIL_ADDR_TEXT),'') <> ''
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TEXT,MKTNG_PGM_NBR,OPT_TIME,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


/*****************************************************************************
Populate OPT_OUT_$CNTRY_LIST_TEMP with data having negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST and having a match to the channel tables 
REGIS_PRSNA_POSTL_ADDR, EMAIL_ADDR or PHONE and having a match on NAME to
REGIS_PRSNA.

Populate REGIS_PRSNA_ID either based on NAME. If not available, populate it from
REGIS_PRSNA using the REGIS_PRSNA_ID in the channel tables. Else populate it with
negative value from REGIS_PRSNA_OPT_OUT_HIST.

This is done for all marketing programs except for universal optout. Universal
Optout is marketing program 9999.
******************************************************************************/
INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)
 
SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
NULLIF(STG.ADDR_LINE_1_TXT,''),
NULLIF(STG.ADDR_LINE_2_TXT,''),
NULLIF(STG.ADDR_LINE_3_TXT,''),
NULLIF(STG.CITY_NAME,''),
NULLIF(STG.TERR_NAME,''),
NULLIF(STG.POSTL_AREA_CODE,''),
NULLIF(STG.CNTRY_NAME,''),
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'AR',
STG.REGIS_PRSNA_ID				    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR				    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR				    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR				    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR			    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME				    STG_FIRST_NAME,
STG.LAST_NAME				    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT				    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR			    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT			    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT			    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT			    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME				    STG_SRC_CITY_NAME,
STG.SRC_STATE				    STG_SRC_STATE,
STG.SRC_ZIP					    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME				    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT				    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT				    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT				    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME				    STG_CITY_NAME,
STG.TERR_NAME				    STG_TERR_NAME,
STG.POSTL_AREA_CODE				    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME				    STG_CNTRY_NAME,
STG.OPT_IND					    STG_OPT_IND,
STG.OPT_TIME				    STG_OPT_TIME,
STG.OPT_REASN_TXT				    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE				    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM			    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID				    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER				    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID				    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
CN.LOAD_ID
FROM	 

POSTL AS CN

INNER JOIN OPT_OUT_HIST STG 
	ON	  STG.ADDR_LINE_1_TXT=  CN.ADDR_LINE_1_TXT
 	AND	 STG.ADDR_LINE_2_TXT= CN.ADDR_LINE_2_TXT
 	AND	 STG.ADDR_LINE_3_TXT= CN.ADDR_LINE_3_TXT
 	AND	  STG.CITY_NAME= CN.CITY_NAME
    	AND	 STG.TERR_NAME= CN.TERR_NAME
 	AND	  STG.POSTL_AREA_CODE= CN.POSTL_AREA_CODE
 	AND	 STG.CNTRY_NAME= CN.CNTRY_NAME
	AND	 STG.MKTNG_PGM_NBR= CN.MKTNG_PGM_NBR
	AND	STG.OPT_TIME>=CN.CNSMR_CHCE_DATETM
	AND     STG.OPT_TYPE_CODE='R'

INNER JOIN REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)

SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
NULLIF(STG.CONTACT_PHONE_NBR,'') PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'PH',
STG.REGIS_PRSNA_ID			    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR			    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR			    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR			    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR			    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME				    STG_FIRST_NAME,
STG.LAST_NAME				    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT			    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR			    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT			    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT			    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT			    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME			    STG_SRC_CITY_NAME,
STG.SRC_STATE				    STG_SRC_STATE,
STG.SRC_ZIP				    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME			    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT			    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT			    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT			    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME				    STG_CITY_NAME,
STG.TERR_NAME				    STG_TERR_NAME,
STG.POSTL_AREA_CODE			    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME				    STG_CNTRY_NAME,
STG.OPT_IND				    STG_OPT_IND,
STG.OPT_TIME				    STG_OPT_TIME,
STG.OPT_REASN_TXT			    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE			    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM			    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID			    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER			    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID				    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
PH.LOAD_ID
FROM	 

PHONE PH
INNER JOIN OPT_OUT_HIST_PHONE STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM
AND STG.MKTNG_PGM_NBR=PH.MKTNG_PGM_NBR
AND STG.OPT_TIME>=PH.CNSMR_CHCE_DATETM
AND     STG.OPT_TYPE_CODE='R'

INNER JOIN REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)

SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
NULLIF(STG.EMAIL_ADDR_TEXT ,'') EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'EM',
STG.REGIS_PRSNA_ID			    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR			    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR			    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR			    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR			    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME				    STG_FIRST_NAME,
STG.LAST_NAME				    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT			    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR			    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT			    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT			    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT			    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME			    STG_SRC_CITY_NAME,
STG.SRC_STATE				    STG_SRC_STATE,
STG.SRC_ZIP				    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME			    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT			    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT			    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT			    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME				    STG_CITY_NAME,
STG.TERR_NAME				    STG_TERR_NAME,
STG.POSTL_AREA_CODE			    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME				    STG_CNTRY_NAME,
STG.OPT_IND				    STG_OPT_IND,
STG.OPT_TIME				    STG_OPT_TIME,
STG.OPT_REASN_TXT			    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE			    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM			    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID			    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER			    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID				    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
EA.LOAD_ID
FROM	
EMAIL EA
INNER JOIN OPT_OUT_HIST_EMAIL STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT
AND STG.MKTNG_PGM_NBR=EA.MKTNG_PGM_NBR
AND STG.OPT_TIME>=EA.CNSMR_CHCE_DATETM
AND     STG.OPT_TYPE_CODE='R'

INNER JOIN REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Populate REG_OPT_OUT_MDM_TEMP with data having negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST and having a match to the channel tables 
REGIS_PRSNA_POSTL_ADDR, EMAIL_ADDR or PHONE and having a match on NAME to
REGIS_PRSNA.

Populate REGIS_PRSNA_ID either based on NAME. If not available, populate it from
REGIS_PRSNA using the REGIS_PRSNA_ID in the channel tables. Else populate it with
negative value from REGIS_PRSNA_OPT_OUT_HIST.

This is done for universal optout. Universal Optout is marketing program 9999.
******************************************************************************/

INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)

SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(CN.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
NULLIF(STG.ADDR_LINE_1_TXT,''),
NULLIF(STG.ADDR_LINE_2_TXT,''),
NULLIF(STG.ADDR_LINE_3_TXT,''),
NULLIF(STG.CITY_NAME,''),
NULLIF(STG.TERR_NAME,''),
NULLIF(STG.POSTL_AREA_CODE,''),
NULLIF(STG.CNTRY_NAME,''),
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'99',
STG.REGIS_PRSNA_ID		    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR		    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR		    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR		    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR		    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME			    STG_FIRST_NAME,
STG.LAST_NAME			    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT		    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR		    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT		    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT		    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT		    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME		    STG_SRC_CITY_NAME,
STG.SRC_STATE			    STG_SRC_STATE,
STG.SRC_ZIP			    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME		    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT		    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT		    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT		    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME			    STG_CITY_NAME,
STG.TERR_NAME			    STG_TERR_NAME,
STG.POSTL_AREA_CODE		    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME			    STG_CNTRY_NAME,
STG.OPT_IND			    STG_OPT_IND,
STG.OPT_TIME			    STG_OPT_TIME,
STG.OPT_REASN_TXT		    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE		    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM		    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID		    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER		    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID			    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
CN.LOAD_ID
FROM	 

POSTL AS CN

INNER JOIN OPT_OUT_HIST STG 
	ON	  STG.ADDR_LINE_1_TXT=  CN.ADDR_LINE_1_TXT
 	AND	 STG.ADDR_LINE_2_TXT= CN.ADDR_LINE_2_TXT
 	AND	 STG.ADDR_LINE_3_TXT= CN.ADDR_LINE_3_TXT
 	AND	  STG.CITY_NAME= CN.CITY_NAME
    	AND	 STG.TERR_NAME= CN.TERR_NAME
 	AND	  STG.POSTL_AREA_CODE= CN.POSTL_AREA_CODE
 	AND	 STG.CNTRY_NAME= CN.CNTRY_NAME
	AND     STG.OPT_TYPE_CODE='U'
	AND (STG.ADDR_LINE_1_TXT IS NOT NULL 
	 OR STG.ADDR_LINE_2_TXT IS NOT NULL
	 OR STG.ADDR_LINE_3_TXT IS NOT NULL
	 OR STG.CITY_NAME IS NOT NULL
	 OR STG.TERR_NAME IS NOT NULL
	 OR STG.POSTL_AREA_CODE IS NOT NULL
	 OR STG.CNTRY_NAME IS NOT NULL) 
	 
INNER JOIN REGIS_PRSNA RP
	ON	
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND CN.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)

SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
STG.EMAIL_ADDR_TEXT EMAIL,
NULLIF(STG.CONTACT_PHONE_NBR ,'') PHONE,
COALESCE(PH.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'99',
STG.REGIS_PRSNA_ID		    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR		    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR		    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR		    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR		    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME			    STG_FIRST_NAME,
STG.LAST_NAME			    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT		    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR		    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT		    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT		    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT		    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME		    STG_SRC_CITY_NAME,
STG.SRC_STATE			    STG_SRC_STATE,
STG.SRC_ZIP			    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME		    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT		    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT		    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT		    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME			    STG_CITY_NAME,
STG.TERR_NAME			    STG_TERR_NAME,
STG.POSTL_AREA_CODE		    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME			    STG_CNTRY_NAME,
STG.OPT_IND			    STG_OPT_IND,
STG.OPT_TIME			    STG_OPT_TIME,
STG.OPT_REASN_TXT		    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE		    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM		    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID		    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER		    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID			    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
PH.LOAD_ID
FROM	 

PHONE PH

INNER JOIN OPT_OUT_HIST_PHONE STG 
ON STG.CONTACT_PHONE_NBR=PH.FULL_PHONE_NUM	
AND STG.OPT_TYPE_CODE='U' 

INNER JOIN REGIS_PRSNA RP
	ON	
PH.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	PH.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO OPT_OUT_$CNTRY_LIST_TEMP
 (MKTNG_PGM_NBR
 ,EMAIL
 ,PHONE
 ,SUBSCRIPTION_NBR
 ,REGIS_PRSNA_ID
 ,OPT_OUT_DTTIME
 ,ADDR_LINE_1_TXT
 ,ADDR_LINE_2_TXT
 ,ADDR_LINE_3_TXT
 ,CITY_NAME
 ,TERR_NAME
 ,POSTL_AREA_CODE
 ,CNTRY_NAME
 ,LEGAL_ENT_NBR
 ,DATA_SRCE_NBR
 ,MATCHD_CNSMR_PRSNA_ID
 ,FNAME
 ,LNAME
 ,LOAD_ID
 ,EDW_MKTNG_PGM_NBR
 ,HIST_REGIS_PRSNA_ID
 ,CNTRY_CODE
 ,MDM_LOAD_IND
 ,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID)
SELECT	
STG.MKTNG_PGM_NBR MKTNG_PGM_NBR,
NULLIF(STG.EMAIL_ADDR_TEXT ,'') EMAIL,
STG.CONTACT_PHONE_NBR PHONE,
COALESCE(EA.SUBSCRPTN_OPT_NBR,STG.SUBSCRIPTION_NBR) SUBSCRPTN_OPT_NBR,
COALESCE(RP.REGIS_PRSNA_ID,STG.REGIS_PRSNA_ID) AS REGIS_PRSNA_ID ,
STG.OPT_TIME,
STG.ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT,
STG.CITY_NAME,STG.TERR_NAME,
STG.POSTL_AREA_CODE,
STG.CNTRY_NAME,
RP.LEGAL_ENT_NBR,
RP.DATA_SRCE_NBR,
RP.MATCHD_CNSMR_PRSNA_ID,
STG.FIRST_NAME FNAME,
STG.LAST_NAME LNAME,
LOG_SOURCE_ID,
RP.MKTNG_PGM_NBR AS EDW_MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID AS HIST_REGIS_PRSNA_ID,
'$CNTRY',
'99',
STG.REGIS_PRSNA_ID		    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR		    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR		    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR		    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR		    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME			    STG_FIRST_NAME,
STG.LAST_NAME			    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT		    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR		    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT		    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT		    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT		    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME		    STG_SRC_CITY_NAME,
STG.SRC_STATE			    STG_SRC_STATE,
STG.SRC_ZIP			    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME		    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT		    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT		    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT		    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME			    STG_CITY_NAME,
STG.TERR_NAME			    STG_TERR_NAME,
STG.POSTL_AREA_CODE		    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME			    STG_CNTRY_NAME,
STG.OPT_IND			    STG_OPT_IND,
STG.OPT_TIME			    STG_OPT_TIME,
STG.OPT_REASN_TXT		    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE		    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM		    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID		    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER		    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID			    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
EA.LOAD_ID
FROM	
EMAIL EA
INNER JOIN OPT_OUT_HIST_EMAIL STG 
ON STG.EMAIL_ADDR_TEXT=EA.EMAIL_ADDR_TXT	
AND STG.OPT_TYPE_CODE='U'

INNER JOIN REGIS_PRSNA RP
	ON	
EA.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND	EA.MKTNG_PGM_NBR = RP.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS OPT_OUT_$CNTRY_LIST_TEMP;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
OPT_OUT_$CNTRY_LIST_DCS is a temporary table to consolidate the negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST to be checked for during wrapper processing for the deceased list.
******************************************************************************/

INSERT INTO OPT_OUT_$CNTRY_LIST_DCS
(
REGIS_PRSNA_ID
,MATCHD_REGIS_PRSNA_ID
,LEGAL_ENT_NBR
,DATA_SRCE_NBR
,E_OPT_OUT
,P_OPT_OUT
,A_OPT_OUT
,LOAD_ID
,OPT_OUT_DTTIME	      
,HIST_REGIS_PRSNA_ID
,CNTRY_CODE
,MKTNG_PGM_NBR
,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID
)
SELECT
RP.REGIS_PRSNA_ID
,RP.MATCHD_CNSMR_PRSNA_ID
,RP.LEGAL_ENT_NBR
,RP.DATA_SRCE_NBR
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,STG.LOG_SOURCE_ID
,STG.OPT_TIME
,stg.regis_prsna_id
,'$CNTRY',
RP.MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID		    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR		    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR		    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR		    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR		    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME			    STG_FIRST_NAME,
STG.LAST_NAME			    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT		    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR		    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT		    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT		    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT		    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME		    STG_SRC_CITY_NAME,
STG.SRC_STATE			    STG_SRC_STATE,
STG.SRC_ZIP			    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME		    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT		    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT		    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT		    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME			    STG_CITY_NAME,
STG.TERR_NAME			    STG_TERR_NAME,
STG.POSTL_AREA_CODE		    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME			    STG_CNTRY_NAME,
STG.OPT_IND			    STG_OPT_IND,
STG.OPT_TIME			    STG_OPT_TIME,
STG.OPT_REASN_TXT		    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE		    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM		    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID		    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER		    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID			    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
CN.LOAD_ID
FROM  OPT_OUT_HIST STG
INNER JOIN
POSTL CN

ON  STG.ADDR_LINE_1_TXT=  CN.ADDR_LINE_1_TXT
AND  STG.ADDR_LINE_2_TXT= CN.ADDR_LINE_2_TXT
AND  STG.ADDR_LINE_3_TXT= CN.ADDR_LINE_3_TXT
AND  STG.CITY_NAME= CN.CITY_NAME
AND  STG.TERR_NAME= CN.TERR_NAME
AND  STG.POSTL_AREA_CODE= CN.POSTL_AREA_CODE
AND  STG.CNTRY_NAME= CN.CNTRY_NAME
AND OPT_TYPE_CODE='DU'

INNER JOIN REGIS_PRSNA RP
ON 
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID
AND CN.MKTNG_PGM_NBR=RP.MKTNG_PGM_NBR ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
OPT_OUT_$CNTRY_LIST_DMA is a temporary table to consolidate the negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST to be checked for during wrapper processing for the DMA list.
******************************************************************************/

INSERT INTO OPT_OUT_$CNTRY_LIST_DMA
(
REGIS_PRSNA_ID
,MATCHD_REGIS_PRSNA_ID
,LEGAL_ENT_NBR
,DATA_SRCE_NBR
,E_OPT_OUT
,P_OPT_OUT
,A_OPT_OUT
,LOAD_ID
,OPT_OUT_DTTIME	      
,HIST_REGIS_PRSNA_ID
,CNTRY_CODE
,MKTNG_PGM_NBR
,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
)
SELECT
RP.REGIS_PRSNA_ID
,RP.MATCHD_CNSMR_PRSNA_ID
,RP.LEGAL_ENT_NBR
,RP.DATA_SRCE_NBR
,'N'
,'N'
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,STG.LOG_SOURCE_ID
,STG.OPT_TIME
,stg.regis_prsna_id
,'$CNTRY'
,RP.MKTNG_PGM_NBR,
STG.REGIS_PRSNA_ID			    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR			    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR			    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR			    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR			    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME				    STG_FIRST_NAME,
STG.LAST_NAME				    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT			    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR			    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT			    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT			    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT			    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME			    STG_SRC_CITY_NAME,
STG.SRC_STATE				    STG_SRC_STATE,
STG.SRC_ZIP				    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME			    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT			    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT			    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT			    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME				    STG_CITY_NAME,
STG.TERR_NAME				    STG_TERR_NAME,
STG.POSTL_AREA_CODE			    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME				    STG_CNTRY_NAME,
STG.OPT_IND				    STG_OPT_IND,
STG.OPT_TIME				    STG_OPT_TIME,
STG.OPT_REASN_TXT			    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE			    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM			    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID			    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER			    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID				    STG_LOG_LOAD_ID
FROM  OPT_OUT_HIST STG
INNER JOIN
POSTL CN

ON  STG.ADDR_LINE_1_TXT=  CN.ADDR_LINE_1_TXT
AND  STG.ADDR_LINE_2_TXT= CN.ADDR_LINE_2_TXT
AND  STG.ADDR_LINE_3_TXT= CN.ADDR_LINE_3_TXT
AND  STG.CITY_NAME= CN.CITY_NAME
AND  STG.TERR_NAME= CN.TERR_NAME
AND  STG.POSTL_AREA_CODE= CN.POSTL_AREA_CODE
AND  STG.CNTRY_NAME= CN.CNTRY_NAME
AND OPT_TYPE_CODE='DM'
AND CN.MKTNG_PGM_NBR IN (select MKTNG_PGM_NBR FROM SUPP_FORMAT_MPN_CONTROL 
WHERE FORMAT_ID =(select format_id from Format_Control where format_name='DoNotPostMail'))

INNER JOIN REGIS_PRSNA RP
ON 
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID
AND CN.MKTNG_PGM_NBR=RP.MKTNG_PGM_NBR  ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
OPT_OUT_$CNTRY_LIST_SIDS is a temporary table to consolidate the negative REGIS_PRSNA_IDs from 
REGIS_PRSNA_OPT_OUT_HIST to be checked for during wrapper processing for the SIDS list.
******************************************************************************/

INSERT INTO OPT_OUT_$CNTRY_LIST_SIDS
(
REGIS_PRSNA_ID
,MATCHD_REGIS_PRSNA_ID
,LEGAL_ENT_NBR
,DATA_SRCE_NBR
,E_OPT_OUT
,P_OPT_OUT
,A_OPT_OUT
,LOAD_ID
,OPT_OUT_DTTIME	      
,HIST_REGIS_PRSNA_ID
,CNTRY_CODE
,MKTNG_PGM_NBR
,HSHLD_PRSNA_ID
,STG_REGIS_PRSNA_ID
,STG_MKTNG_PGM_NBR
,STG_LEGAL_ENT_NBR
,STG_DATA_SRCE_NBR
,STG_SUBSCRIPTION_NBR
,STG_FIRST_NAME
,STG_LAST_NAME
,STG_EMAIL_ADDR_TEXT
,STG_CONTACT_PHONE_NBR
,STG_SRC_ADDR_LINE_1_TXT
,STG_SRC_ADDR_LINE_2_TXT
,STG_SRC_ADDR_LINE_3_TXT
,STG_SRC_CITY_NAME
,STG_SRC_STATE
,STG_SRC_ZIP
,STG_SRC_CNTRY_NAME
,STG_ADDR_LINE_1_TXT
,STG_ADDR_LINE_2_TXT
,STG_ADDR_LINE_3_TXT
,STG_CITY_NAME
,STG_TERR_NAME
,STG_POSTL_AREA_CODE
,STG_CNTRY_NAME
,STG_OPT_IND
,STG_OPT_TIME
,STG_OPT_REASN_TXT
,STG_OPT_TYPE_CODE
,STG_LAST_ACTIVITY_TM
,STG_LOG_SOURCE_ID
,STG_LOG_UPDATE_USER
,STG_LOG_LOAD_ID
,REGIS_CNSMR_ID_VAL
,ICRM_STG_LOAD_ID
)
SELECT
RP.REGIS_PRSNA_ID
,RP.MATCHD_CNSMR_PRSNA_ID
,RP.LEGAL_ENT_NBR
,RP.DATA_SRCE_NBR
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,CASE WHEN CN.REGIS_PRSNA_ID IS NOT NULL THEN 'Y' END
,STG.LOG_SOURCE_ID
,STG.OPT_TIME
,stg.regis_prsna_id
,'$CNTRY'
,RP.MKTNG_PGM_NBR
,MCP.HSHLD_PRSNA_ID,
STG.REGIS_PRSNA_ID			    STG_REGIS_PRSNA_ID,
STG.MKTNG_PGM_NBR			    STG_MKTNG_PGM_NBR,
STG.LEGAL_ENT_NBR			    STG_LEGAL_ENT_NBR,
STG.DATA_SRCE_NBR			    STG_DATA_SRCE_NBR,
STG.SUBSCRIPTION_NBR			    STG_SUBSCRIPTION_NBR,
STG.FIRST_NAME				    STG_FIRST_NAME,
STG.LAST_NAME				    STG_LAST_NAME,
STG.EMAIL_ADDR_TEXT			    STG_EMAIL_ADDR_TEXT,
STG.CONTACT_PHONE_NBR			    STG_CONTACT_PHONE_NBR,
STG.SRC_ADDR_LINE_1_TXT			    STG_SRC_ADDR_LINE_1_TXT,
STG.SRC_ADDR_LINE_2_TXT			    STG_SRC_ADDR_LINE_2_TXT,
STG.SRC_ADDR_LINE_3_TXT			    STG_SRC_ADDR_LINE_3_TXT,
STG.SRC_CITY_NAME			    STG_SRC_CITY_NAME,
STG.SRC_STATE				    STG_SRC_STATE,
STG.SRC_ZIP				    STG_SRC_ZIP,
STG.SRC_CNTRY_NAME			    STG_SRC_CNTRY_NAME,
STG.ADDR_LINE_1_TXT			    STG_ADDR_LINE_1_TXT,
STG.ADDR_LINE_2_TXT			    STG_ADDR_LINE_2_TXT,
STG.ADDR_LINE_3_TXT			    STG_ADDR_LINE_3_TXT,
STG.CITY_NAME				    STG_CITY_NAME,
STG.TERR_NAME				    STG_TERR_NAME,
STG.POSTL_AREA_CODE			    STG_POSTL_AREA_CODE,
STG.CNTRY_NAME				    STG_CNTRY_NAME,
STG.OPT_IND				    STG_OPT_IND,
STG.OPT_TIME				    STG_OPT_TIME,
STG.OPT_REASN_TXT			    STG_OPT_REASN_TXT,
STG.OPT_TYPE_CODE			    STG_OPT_TYPE_CODE,
STG.LAST_ACTIVITY_TM			    STG_LAST_ACTIVITY_TM,
STG.LOG_SOURCE_ID			    STG_LOG_SOURCE_ID,
STG.LOG_UPDATE_USER			    STG_LOG_UPDATE_USER,
STG.LOG_LOAD_ID				    STG_LOG_LOAD_ID,
RP.REGIS_CNSMR_ID_VAL,
CN.LOAD_ID
FROM  OPT_OUT_HIST STG
INNER JOIN
POSTL  CN

ON  STG.ADDR_LINE_1_TXT=  CN.ADDR_LINE_1_TXT
AND  STG.ADDR_LINE_2_TXT= CN.ADDR_LINE_2_TXT
AND  STG.ADDR_LINE_3_TXT= CN.ADDR_LINE_3_TXT
AND  STG.CITY_NAME= CN.CITY_NAME
AND  STG.TERR_NAME= CN.TERR_NAME
AND  STG.POSTL_AREA_CODE= CN.POSTL_AREA_CODE
AND  STG.CNTRY_NAME= CN.CNTRY_NAME
AND OPT_TYPE_CODE='SU'
AND CN.MKTNG_PGM_NBR IN (select MKTNG_PGM_NBR FROM SUPP_FORMAT_MPN_CONTROL
WHERE FORMAT_ID =(select format_id from Format_Control where format_name='SIDS'))

INNER JOIN REGIS_PRSNA RP
ON 
CN.REGIS_PRSNA_ID=RP.REGIS_PRSNA_ID 
AND CN.MKTNG_PGM_NBR=RP.MKTNG_PGM_NBR 

INNER JOIN MATCHD_CNSMR_PRSNA MCP
ON RP.MATCHD_CNSMR_PRSNA_ID=MCP.MATCHD_CNSMR_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS OPT_OUT_$CNTRY_LIST_DCS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS OPT_OUT_$CNTRY_LIST_DMA;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS OPT_OUT_$CNTRY_LIST_SIDS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SEL CNT FROM (
SEL SUM(CNT) AS CNT
FROM
(
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_TEMP
UNION ALL
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_DCS
UNION ALL
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_DMA
UNION ALL
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_SIDS
) A ) B
WHERE CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO i10

.LABEL OPTOUT
/*****************************************************************************
Opt out the consumer from REGIS_PRSNA_POSTL_ADDR based on the match available 
in OPT_OUT_$CNTRY_LIST_TEMP table populated above.

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_POSTL_ADDR.
******************************************************************************/

UPDATE	ADDR_INPUT
FROM	(
SELECT	REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	OPT_OUT_$CNTRY_LIST_TEMP TEMP1  
WHERE (TEMP1.ADDR_LINE_1_TXT IS  NOT NULL
OR 	TEMP1.ADDR_LINE_2_TXT IS  NOT NULL
 OR	TEMP1.ADDR_LINE_3_TXT IS  NOT NULL
 OR	TEMP1.CITY_NAME   IS  NOT NULL
 OR	TEMP1.TERR_NAME IS  NOT NULL
 OR	 TEMP1.POSTL_AREA_CODE IS  NOT NULL
 OR	TEMP1.CNTRY_NAME IS  NOT NULL
)  
AND CNTRY_CODE = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND ADDR_INPUT.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	ADDR_INPUT
FROM	(
SELECT	REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,
OPT_OUT_DTTIME,
LOAD_ID 
FROM	OPT_OUT_$CNTRY_LIST_TEMP TEMP1  
WHERE TEMP1.MDM_LOAD_IND = '99'
AND CNTRY_CODE = '$CNTRY'
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY OPT_OUT_DTTIME DESC,LOAD_ID DESC) = 1
GROUP	BY 1,2,3,4) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND ADDR_INPUT.CNSMR_CHCE_DATETM<=TEMP.OPT_OUT_DTTIME
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	ADDR_INPUT 
FROM	(
SELECT	CP.REGIS_PRSNA_ID,CP.MKTNG_PGM_NBR,
MAX(OPT_OUT_DTTIME) OPT_OUT_DTTIME,
MAX(LOAD_ID) LOAD_ID 
FROM	OPT_OUT_$CNTRY_LIST_DCS TEMP1 
INNER JOIN REGIS_PRSNA CP
ON TEMP1.MATCHD_REGIS_PRSNA_ID= CP.MATCHD_CNSMR_PRSNA_ID
WHERE A_OPT_OUT='Y'
AND TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.CNTRY_CODE = '$CNTRY'
GROUP BY 1,2)  TEMP
SET SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE	
ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND TEMP.OPT_OUT_DTTIME>=ADDR_INPUT.CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	ADDR_INPUT
FROM	(
SELECT	CP.REGIS_PRSNA_ID,CP.MKTNG_PGM_NBR,
MAX(OPT_OUT_DTTIME) OPT_OUT_DTTIME,
MAX(LOAD_ID) LOAD_ID 
FROM	OPT_OUT_$CNTRY_LIST_DMA TEMP1 
INNER JOIN REGIS_PRSNA CP
ON TEMP1.MATCHD_REGIS_PRSNA_ID= CP.MATCHD_CNSMR_PRSNA_ID
WHERE A_OPT_OUT='Y'
AND TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.CNTRY_CODE = '$CNTRY'
GROUP BY 1,2)  TEMP
SET SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE	
ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND TEMP.OPT_OUT_DTTIME>=ADDR_INPUT.CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	ADDR_INPUT
FROM	(
SELECT	CP.REGIS_PRSNA_ID,CP.MKTNG_PGM_NBR,
MAX(OPT_OUT_DTTIME) OPT_OUT_DTTIME,
MAX(LOAD_ID) LOAD_ID 
FROM	OPT_OUT_$CNTRY_LIST_SIDS TEMP1 
inner join MATCHD_CNSMR_PRSNA MCP
ON TEMP1.HSHLD_PRSNA_ID=MCP.HSHLD_PRSNA_ID
inner join REGIS_PRSNA CP
ON MCP.MATCHD_CNSMR_PRSNA_ID=CP.MATCHD_CNSMR_PRSNA_ID
WHERE A_OPT_OUT='Y'
AND TEMP1.REGIS_PRSNA_ID > 0 
AND TEMP1.CNTRY_CODE = '$CNTRY'
GROUP BY 1,2)  TEMP
SET SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.OPT_OUT_DTTIME
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER)) 
WHERE	
ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND TEMP.OPT_OUT_DTTIME>=ADDR_INPUT.CNSMR_CHCE_DATETM;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL i10

/******************************************************************************************
i10 Opt Out 

Opt out the consumer from REGIS_PRSNA_POSTL_ADDR based on the match available 
in ICRM_STAGE_TBL.MAIL_CAMP_RSP_STG_R2 and ICRM_STAGE_TBL. MAIL_CAMP_RSP_STG_R2_HIST.     

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
*******************************************************************************************/
DROP TABLE REG_OPT_OUT_TIME;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DROP TABLE POSTL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE REG_OPT_OUT_TIME
AS 
(

SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
ADDR_INPUT ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
)
WITH DATA
PRIMARY INDEX ( CNSMR_CHCE_DATETM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE POSTL AS (
SELECT	
COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') ADDR_LINE1_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') ADDR_LINE2_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') ADDR_LINE3_TXT,
COALESCE(TRIM(ADJ.CITY_NAME),'') CITY_NAME,
COALESCE(TRIM(ADJ.TERR_NAME),'') TERR_NAME,
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') POSTL_AREA_CODE,
COALESCE(TRIM(ADJ.CNTRY_CODE),'') CNTRY_NAME,
ADJ.MKTNG_PGM_NBR, 
ADJ.SUBSCRPTN_OPT_NBR AS SUBSCRPTN_OPT_NBR, 
ADJ.LEGAL_ENT_NBR,
ADJ.SYS_TARGET_ID,
ADJ.REGIS_PRSNA_ID,
ADJ.CNSMR_CHCE_DATETM,
ADJ.SYS_SOURCE
FROM 
ADDR_INPUT ADJ
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
AND (COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.CITY_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.TERR_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') <> '')
)
WITH DATA
PRIMARY INDEX (ADDR_LINE1_TXT,ADDR_LINE2_TXT,ADDR_LINE3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,
MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR,CNSMR_CHCE_DATETM)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE OPT_OUT_i10_POSTL AS (
SELECT
TRM_LEAD_KEY                  ,
REGIS_PRSNA_ID                ,
SUBSCRPTN_OPT_NBR             ,
CNTCT_POINT_CATEG_CODE        ,
POSTL_DPLOYMT_DATE            ,
LINK_WEB_URL                  ,
COMM_ID                       ,
RUN_ID                        ,
RESP_REC_TYPE_CODE            ,
RESP_DATETM   ,
MAILING_ID                    ,
WAVE_ID                       ,
MKTNG_PGM_NBR                 ,
S_ADD1                        ,
S_ADD2                        ,
S_ADD3                        ,
S_STRET_NUM                   ,
S_STRET_NAME                  ,
S_APT_NUM                     ,
S_PO_BOX_NUM                  ,
S_CITY_NAME                   ,
S_POSTL_AREA_CODE             ,
S_TERR_NAME                   ,
S_CNTRY_NAME                  ,
COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT,
COALESCE(TRIM(ADJ.CITY_NAME),'') CITY_NAME,
COALESCE(TRIM(ADJ.TERR_NAME),'') TERR_NAME,
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') POSTL_AREA_CODE,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CNTRY_NAME                    ,
POSTL_STATUS_CODE             ,
LOAD_ID                       ,
LOAD_TS                       ,
MDM_LOAD_IND                  
FROM POSTLCLT_STG ADJ   
WHERE RESP_REC_TYPE_CODE IN ('04','07')
AND RESP_DATETM>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME)
AND (COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.CITY_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.TERR_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') <> '')
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
UNION ALL
SELECT
TRM_LEAD_KEY                  ,
REGIS_PRSNA_ID                ,
SUBSCRPTN_OPT_NBR             ,
CNTCT_POINT_CATEG_CODE        ,
POSTL_DPLOYMT_DATE            ,
LINK_WEB_URL                  ,
COMM_ID                       ,
RUN_ID                        ,
RESP_REC_TYPE_CODE            ,
RESP_DATETM           ,
MAILING_ID                    ,
WAVE_ID                       ,
MKTNG_PGM_NBR                 ,
S_ADD1                        ,
S_ADD2                        ,
S_ADD3                        ,
S_STRET_NUM                   ,
S_STRET_NAME                  ,
S_APT_NUM                     ,
S_PO_BOX_NUM                  ,
S_CITY_NAME                   ,
S_POSTL_AREA_CODE             ,
S_TERR_NAME                   ,
S_CNTRY_NAME                  ,
COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT,
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT,
COALESCE(TRIM(ADJ.CITY_NAME),'') CITY_NAME,
COALESCE(TRIM(ADJ.TERR_NAME),'') TERR_NAME,
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') POSTL_AREA_CODE,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CNTRY_NAME                    ,
POSTL_STATUS_CODE             ,
LOAD_ID                       ,
LOAD_TS                       ,
MDM_LOAD_IND                         
FROM POSTLCLT_STG_HIST ADJ   
WHERE RESP_REC_TYPE_CODE IN ('04','07')
AND RESP_DATETM>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME)
AND (COALESCE(TRIM(ADJ.ADDR_LINE_1_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_2_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.ADDR_LINE_3_TXT),'') <> '' OR 
COALESCE(TRIM(ADJ.CITY_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.TERR_NAME),'') <> '' OR 
COALESCE(TRIM(ADJ.POSTL_AREA_CODE),'') <> '')
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
)
WITH DATA
PRIMARY INDEX (ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,CITY_NAME,TERR_NAME,POSTL_AREA_CODE,
MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR,RESP_DATETM)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DEL FROM $DATABASENAME.POSTL_OPT_OUT_I10_$CNTRY_TEMP ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT	INTO $DATABASENAME.POSTL_OPT_OUT_I10_$CNTRY_TEMP
 (TRM_LEAD_KEY                  ,
REGIS_PRSNA_ID                ,
SUBSCRPTN_OPT_NBR             ,
CNTCT_POINT_CATEG_CODE        ,
POSTL_DPLOYMT_DATE            ,
LINK_WEB_URL                  ,
COMM_ID                       ,
RUN_ID                        ,
RESP_REC_TYPE_CODE            ,
RESP_DATETM                   ,
MAILING_ID                    ,
WAVE_ID                       ,
MKTNG_PGM_NBR                 ,
S_ADD1                        ,
S_ADD2                        ,
S_ADD3                        ,
S_STRET_NUM                   ,
S_STRET_NAME                  ,
S_APT_NUM                     ,
S_PO_BOX_NUM                  ,
S_CITY_NAME                   ,
S_POSTL_AREA_CODE             ,
S_TERR_NAME                   ,
S_CNTRY_NAME                  ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_NAME                    ,
POSTL_STATUS_CODE             ,
LOAD_ID                       ,
LOAD_TS                       ,
MDM_LOAD_IND             ,          
REGIS_CNSMR_ID_VAL            ,
ICRM_STG_LOAD_ID
)

SELECT	
STG.TRM_LEAD_KEY                  ,
STG.REGIS_PRSNA_ID                ,
STG.SUBSCRPTN_OPT_NBR             ,
STG.CNTCT_POINT_CATEG_CODE        ,
STG.POSTL_DPLOYMT_DATE            ,
STG.LINK_WEB_URL                  ,
STG.COMM_ID                       ,
STG.RUN_ID                        ,
STG.RESP_REC_TYPE_CODE            ,
STG.RESP_DATETM                   ,
STG.MAILING_ID                    ,
STG.WAVE_ID                       ,
STG.MKTNG_PGM_NBR                 ,
STG.S_ADD1                        ,
STG.S_ADD2                        ,
STG.S_ADD3                        ,
STG.S_STRET_NUM                   ,
STG.S_STRET_NAME                  ,
STG.S_APT_NUM                     ,
STG.S_PO_BOX_NUM                  ,
STG.S_CITY_NAME                   ,
STG.S_POSTL_AREA_CODE             ,
STG.S_TERR_NAME                   ,
STG.S_CNTRY_NAME                  ,
STG.ADDR_LINE_1_TXT               ,
STG.ADDR_LINE_2_TXT               ,
STG.ADDR_LINE_3_TXT               ,
STG.STRET_NUM                     ,
STG.STRET_NAME                    ,
STG.APT_NUM                       ,
STG.PO_BOX_NUM                    ,
STG.CITY_NAME                     ,
STG.POSTL_AREA_CODE               ,
STG.TERR_NAME                     ,
C.CNTRY_CODE                      ,
STG.POSTL_STATUS_CODE             ,
STG.LOAD_ID                       ,
STG.LOAD_TS                       ,
STG.MDM_LOAD_IND             ,
EA.REGIS_PRSNA_ID            ,
EA.SYS_SOURCE AS ICRM_STG_LOAD_ID
FROM	
OPT_OUT_i10_POSTL STG 
INNER JOIN CNTRY C
ON STG.CNTRY_NAME=C.CNTRY_NAME
INNER JOIN POSTL EA
ON STG.ADDR_LINE_1_TXT=  EA.ADDR_LINE1_TXT
AND STG.ADDR_LINE_2_TXT= EA.ADDR_LINE2_TXT
AND STG.ADDR_LINE_3_TXT= EA.ADDR_LINE3_TXT
AND STG.CITY_NAME= EA.CITY_NAME
AND STG.TERR_NAME= EA.TERR_NAME
AND STG.POSTL_AREA_CODE= EA.POSTL_AREA_CODE
AND C.CNTRY_CODE= EA.CNTRY_NAME
AND STG.MKTNG_PGM_NBR=EA.MKTNG_PGM_NBR
AND STG.REGIS_PRSNA_ID=EA.REGIS_PRSNA_ID
AND STG.SUBSCRPTN_OPT_NBR=EA.SUBSCRPTN_OPT_NBR
AND STG.RESP_DATETM>=EA.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SELECT
COUNT(*) AS CNT 
FROM POSTL_OPT_OUT_I10_$CNTRY_TEMP
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO i10OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO EDW

.LABEL i10OPTOUT

UPDATE ADDR_INPUT
FROM	(
SEL * FROM
(SELECT	REGIS_PRSNA_ID,
MKTNG_PGM_NBR,
RESP_DATETM,
SUBSCRPTN_OPT_NBR,
ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT,
CITY_NAME,
TERR_NAME,
POSTL_AREA_CODE,
CNTRY_NAME,
LOAD_ID,
ICRM_STG_LOAD_ID
FROM	$DATABASENAME.POSTL_OPT_OUT_I10_$CNTRY_TEMP TEMP1 
QUALIFY RANK() OVER (PARTITION BY REGIS_PRSNA_ID,MKTNG_PGM_NBR,ICRM_STG_LOAD_ID
ORDER BY RESP_DATETM DESC,LOAD_ID DESC) = 1) A
GROUP	BY 1,2,3,4,5,6,7,8,9,10,11,12,13) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'I10ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.RESP_DATETM
,SYS_SOURCE=TRIM(CAST(TEMP.LOAD_ID AS INTEGER))
WHERE ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND ADDR_INPUT.SUBSCRPTN_OPT_NBR=TEMP.SUBSCRPTN_OPT_NBR
AND ADDR_INPUT.ADDR_LINE_1_TXT=TEMP.ADDR_LINE_1_TXT
AND ADDR_INPUT.ADDR_LINE_2_TXT=TEMP.ADDR_LINE_2_TXT
AND ADDR_INPUT.ADDR_LINE_3_TXT=TEMP.ADDR_LINE_3_TXT
AND ADDR_INPUT.CITY_NAME=TEMP.CITY_NAME
AND ADDR_INPUT.TERR_NAME=TEMP.TERR_NAME
AND ADDR_INPUT.POSTL_AREA_CODE=TEMP.POSTL_AREA_CODE
AND ADDR_INPUT.CNTRY_CODE=TEMP.CNTRY_NAME
AND ADDR_INPUT.CNSMR_CHCE_DATETM<=TEMP.RESP_DATETM
AND CAST(ADDR_INPUT.SYS_SOURCE AS INTEGER)=TEMP.ICRM_STG_LOAD_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/* POPULATE EDW TABLE */
.LABEL EDW


/******************************************************************************************
i2 Opt Out 
4.5.3                03/02/2013           TERADATA                        PRB0040960                                                                          

Opt out the consumer from REGIS_PRSNA_EMAIL_ADDR based on the match available 
in ICRM_STAGE_TBL.CNTCT_OPTN_CHCE_STG and ICRM_STAGE_TBL. CNTCT_OPTN_CHCE_STG_HIST.     

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
*******************************************************************************************/

--PRB0040960 Start--

CREATE VOLATILE TABLE REG_OPT_OUT_TIME_i2
AS 
(

SEL MIN(CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM
(SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_EMAIL_ADDR_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
UNION
SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_POSTL_ADDR_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
UNION
SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_PHONE_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
UNION
SELECT	
MIN(ADJ.CNSMR_CHCE_DATETM) CNSMR_CHCE_DATETM
FROM 
PRSNA_SOC_NETWK_ACCT_STG ADJ 
WHERE CAST(ADJ.SYS_SOURCE AS INTEGER) IN (SEL LOAD_ID FROM  LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' and cntry_name='$CNTRY' and status='In Progress')
) A
)
WITH DATA
PRIMARY INDEX ( CNSMR_CHCE_DATETM )
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

drop table $DATABASENAME. I2_Channels_$CNTRY;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE  TABLE $DATABASENAME. I2_Channels_$CNTRY AS (
SELECT	
MKTNG_PGM_NBR, 
CNTCT_OPTN_NBR, 
CNTCT_POINT_CATEG_CODE, 
LC.SOURCE_ID AS SYS_TARGET_ID,
CNSMR_CHCE_DATETM,
TRIM(CAST(CO.LOAD_ID AS INTEGER)) SYS_SOURCE,
REGIS_CNSMR_ID_VAL
FROM $ETL_DB.CNTCT_OPTN_CHCE_STG  CO  
JOIN LOAD_CONTROL LC
ON LC.LOAD_TYPE='ETL' AND CO.LOAD_ID=LC.LOAD_ID
WHERE CNTCT_OPTN_IND='O' 
AND CNSMR_CHCE_DATETM>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME_i2)
and (REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,LC.SOURCE_ID) IN(SELECT REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,sys_target_id FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP )
union all
SELECT	
MKTNG_PGM_NBR, 
CNTCT_OPTN_NBR, 
CNTCT_POINT_CATEG_CODE, 
LC.SOURCE_ID AS SYS_TARGET_ID,
CNSMR_CHCE_DATETM,
TRIM(CAST(CO.LOAD_ID AS INTEGER)) SYS_SOURCE,
REGIS_CNSMR_ID_VAL
FROM $ETL_DB.CNTCT_OPTN_CHCE_STG_HIST  CO  
JOIN LOAD_CONTROL LC
ON LC.LOAD_TYPE='ETL' AND CO.LOAD_ID=LC.LOAD_ID
WHERE CNTCT_OPTN_IND='O' 
AND CNSMR_CHCE_DATETM>=(SEL CNSMR_CHCE_DATETM FROM REG_OPT_OUT_TIME_i2)
and (REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,LC.SOURCE_ID) IN(SELECT REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,sys_target_id FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP )
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID,CNTCT_OPTN_NBR,CNTCT_POINT_CATEG_CODE,CNSMR_CHCE_DATETM)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SELECT
COUNT(*) AS CNT 
FROM I2_Channels_$CNTRY
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO i2OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO EDW2

.LABEL i2OPTOUT


UPDATE ADDR_INPUT
FROM	(
SELECT	temp1.REGIS_CNSMR_ID_VAL,
temp1.MKTNG_PGM_NBR,
COALESCE(TEMP2.REGIS_PRSNA_ID,CAST(TEMP2.REFERENCE_REGISTRATIONKEY AS INTEGER)) REGIS_PRSNA_ID,
temp1.CNTCT_POINT_CATEG_CODE,
temp1.CNTCT_OPTN_NBR,
temp1.SYS_TARGET_ID,
temp1.CNSMR_CHCE_DATETM,
temp1.SYS_SOURCE 
FROM	$DATABASENAME. I2_Channels_$CNTRY  TEMP1  
JOIN TRILLIUM_OUTPUT1_$CNTRY_TEMP TEMP2 
ON TEMP1.REGIS_CNSMR_ID_VAL=TEMP2.REGIS_CNSMR_ID_VAL AND TEMP1.MKTNG_PGM_NBR=TEMP2.MKTNG_PGM_NBR AND TEMP1.SYS_TARGET_ID=TEMP2.SYS_TARGET_ID 
QUALIFY RANK() OVER (PARTITION BY temp1.REGIS_CNSMR_ID_VAL,temp1.MKTNG_PGM_NBR,temp1.SYS_TARGET_ID, temp1.CNTCT_OPTN_NBR, temp1.CNTCT_POINT_CATEG_CODE,COALESCE(TEMP2.REGIS_PRSNA_ID,CAST(TEMP2.REFERENCE_REGISTRATIONKEY AS INTEGER))
ORDER BY temp1.CNSMR_CHCE_DATETM DESC, temp1.SYS_SOURCE DESC) = 1
GROUP	BY 1,2,3,4,5,6,7,8) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'I2USER'
,CNSMR_CHCE_DATETM=CAST(CAST(temp.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0))
,SYS_SOURCE=TRIM(CAST(TEMP. SYS_SOURCE AS INTEGER))
WHERE ADDR_INPUT.REGIS_PRSNA_ID=TEMP.REGIS_PRSNA_ID
AND ADDR_INPUT.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND ADDR_INPUT. SYS_TARGET_ID =TEMP. SYS_TARGET_ID
AND ADDR_INPUT.SUBSCRPTN_OPT_NBR=TEMP.CNTCT_OPTN_NBR
AND ADDR_INPUT. CNTCT_POINT_CATEG_CODE =TEMP.CNTCT_POINT_CATEG_CODE
AND ADDR_INPUT.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EDW2

--PRB0040960 End  --


DELETE FROM REGIS_PRSNA_POSTL_ADDR WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS_$CNTRY TOUT
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE ADDR_INPUT
SET VALID_CNTCT_POINT_IND = 'N'
WHERE ADDR_LINE_1_TXT IS NULL
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


INSERT INTO REGIS_PRSNA_POSTL_ADDR
(
 CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,ADDR_LINE_1_TXT
,ADDR_LINE_2_TXT
,ADDR_LINE_3_TXT
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,TERR_CODE
,CNTRY_CODE
,CITY_CODE
,LAT_MEAS
,LONG_MEAS
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,POSTL_STATUS_CODE
,GL_ACCURACY
,GL_MATCH_FLG
,DR_CLEANSE_LVL)
SELECT 
CNTCT_POINT_CATEG_CODE
,REGIS_PRSNA_ID
,MKTNG_PGM_NBR
,LEGAL_ENT_NBR
,WIN_KEY
,SUBSCRPTN_OPT_NBR
,SUBSCRPTN_OPT_IND
,CNSMR_CHCE_DATETM
,PREF_CNTCT_POINT_IND
,CASE WHEN COALESCE(TRIM(ADDR_LINE_1_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_1_TXT
  END
,CASE WHEN COALESCE(TRIM(ADDR_LINE_2_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_2_TXT
  END
,CASE WHEN COALESCE(TRIM(ADDR_LINE_3_TXT),'') = ''
      THEN NULL
      ELSE ADDR_LINE_3_TXT
  END
,STRET_NUM
,STRET_NAME
,APT_NUM
,PO_BOX_NUM
,CITY_NAME
,POSTL_AREA_CODE
,TERR_NAME
,TERR_CODE
,CNTRY_CODE
,CITY_CODE
,NULLIF(CAST(GL_LATITUDE AS DECIMAL(8,6) FORMAT '-99.999999')/1000000,0.000000)
,NULLIF(CAST(GL_LONGITUDE AS   DECIMAL(9,6) FORMAT '-999.999999')/1000000,0.000000)
,VALID_CNTCT_POINT_IND
,GUARDN_NAME
,GUARDN_EMAIL_ADDR_TXT
,GUARDN_CNSNT_IND
,ACNLGMT_DATE
,PR_REV_GROUP
,PR_GEOCODE_FAIL
,SYS_SOURCE
,SYS_TARGET_ID
,SYS_AUTH_ID
,SYS_CREATED_BY
,SYS_CREATION_DATE
,SYS_LAST_MODIFIED_DATE
,SYS_ENT_STATE
,SYS_LAST_MODIFIED_BY
,SYS_NC_TYPE
,SYS_ERR_CODE 
,SYS_ERR_SVRTY
,DATA_SRCE_NBR
,CASE WHEN TRIM(COALESCE(ADDR_LINE_1_TXT,''))=''
AND TRIM(COALESCE(ADDR_LINE_2_TXT,''))=''
AND TRIM(COALESCE(ADDR_LINE_3_TXT,''))=''
AND TRIM(COALESCE(STRET_NUM,''))=''
AND TRIM(COALESCE(STRET_NAME,''))=''
AND SUBSCRPTN_OPT_IND = 'I'
THEN 'NV'
ELSE 'AC'
END AS POSTL_STATUS_CODE
,NULLIF(TRIM(GL_ACCURACY),0)
,GL_MATCH_FLAG
,DR_CLEANSE_LEVEL
FROM ADDR_INPUT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE POSTL_OPTOUT AS (
SEL MKTNG_PGM_NBR,COALESCE(TRIM(ADDR_LINE_1_TXT),'') ADDR_LINE_1_TXT1,
COALESCE(TRIM(ADDR_LINE_2_TXT),'') ADDR_LINE_2_TXT1,
COALESCE(TRIM(ADDR_LINE_3_TXT),'') ADDR_LINE_3_TXT1,
COALESCE(TRIM(CITY_NAME),'') CITY_NAME1,
COALESCE(TRIM(TERR_NAME),'') TERR_NAME1,
COALESCE(TRIM(POSTL_AREA_CODE),'') POSTL_AREA_CODE1,
CNTRY_CODE,CNSMR_CHCE_DATETM,SYS_SOURCE
,COALESCE(SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR1
,REGIS_PRSNA_ID
,CNTCT_POINT_CATEG_CODE
FROM REGIS_PRSNA_POSTL_ADDR  ADJ
WHERE COALESCE(TRIM(ADDR_LINE_1_TXT),TRIM(ADDR_LINE_2_TXT),TRIM(ADDR_LINE_3_TXT),'') <> ''
AND SUBSCRPTN_OPT_IND = 'O'
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
GROUP BY ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT1,
CITY_NAME1,
TERR_NAME1,
POSTL_AREA_CODE1,
CNTRY_CODE,
CNSMR_CHCE_DATETM,
SYS_SOURCE,
SUBSCRPTN_OPT_NBR1,
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE POSTL_OPTOUT_T2 AS (
SEL 
ADJ.ADDR_LINE_1_TXT1,
ADJ.ADDR_LINE_2_TXT1,
ADJ.ADDR_LINE_3_TXT1,
ADJ.CITY_NAME1,
ADJ.TERR_NAME1,
ADJ.POSTL_AREA_CODE1,
ADJ.CNTRY_CODE,
ADJ.CNSMR_CHCE_DATETM,
ADJ.SYS_SOURCE,
ADJ.SUBSCRPTN_OPT_NBR1,
ADJ.MKTNG_PGM_NBR,
ADJ.CNTCT_POINT_CATEG_CODE,
ADJ.REGIS_PRSNA_ID
FROM POSTL_OPTOUT  ADJ
WHERE EXISTS (SEL 1 FROM REGIS_PRSNA_POSTL_ADDR PA
WHERE COALESCE(TRIM(PA.ADDR_LINE_1_TXT),'')=  ADJ.ADDR_LINE_1_TXT1
AND COALESCE(TRIM(PA.ADDR_LINE_2_TXT),'')= ADJ.ADDR_LINE_2_TXT1
AND COALESCE(TRIM(PA.ADDR_LINE_3_TXT),'')= ADJ.ADDR_LINE_3_TXT1
AND COALESCE(TRIM(PA.CITY_NAME),'')= ADJ.CITY_NAME1
AND COALESCE(TRIM(PA.TERR_NAME),'')= ADJ.TERR_NAME1
AND COALESCE(TRIM(PA.POSTL_AREA_CODE),'')= ADJ.POSTL_AREA_CODE1
AND PA.CNTRY_CODE= ADJ.CNTRY_CODE
AND PA.MKTNG_PGM_NBR=ADJ.MKTNG_PGM_NBR
AND PA.CNSMR_CHCE_DATETM<=ADJ.CNSMR_CHCE_DATETM
AND COALESCE(PA.SUBSCRPTN_OPT_NBR,0) = ADJ.SUBSCRPTN_OPT_NBR1
AND PA.CNTCT_POINT_CATEG_CODE=ADJ.CNTCT_POINT_CATEG_CODE
AND PA.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
AND PA.SUBSCRPTN_OPT_IND = 'I'
)
QUALIFY RANK() OVER (PARTITION BY ADJ.MKTNG_PGM_NBR,ADJ.ADDR_LINE_1_TXT1,
ADJ.ADDR_LINE_2_TXT1,ADJ.ADDR_LINE_3_TXT1,ADJ.CITY_NAME1,ADJ.TERR_NAME1,
ADJ.POSTL_AREA_CODE1,ADJ.CNTRY_CODE,ADJ.SUBSCRPTN_OPT_NBR1,
ADJ.CNTCT_POINT_CATEG_CODE
ORDER BY ADJ.CNSMR_CHCE_DATETM DESC,ADJ.SYS_SOURCE DESC,ADJ.REGIS_PRSNA_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SEL 1 FROM POSTL_OPTOUT_T2 GROUP BY 1;
.IF ACTIVITYCOUNT = 0 THEN .EXIT

CREATE VOLATILE MULTISET TABLE POSTL_OPTOUT_T1 AS (
SEL 
ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT1,
CITY_NAME1,
TERR_NAME1,
POSTL_AREA_CODE1,
CNTRY_CODE,
CNSMR_CHCE_DATETM,
SYS_SOURCE,
SUBSCRPTN_OPT_NBR1,
MKTNG_PGM_NBR,
CNTCT_POINT_CATEG_CODE
FROM POSTL_OPTOUT_T2
GROUP BY ADDR_LINE_1_TXT1,
ADDR_LINE_2_TXT1,
ADDR_LINE_3_TXT1,
CITY_NAME1,
TERR_NAME1,
POSTL_AREA_CODE1,
CNTRY_CODE,
CNSMR_CHCE_DATETM,
SYS_SOURCE,
SUBSCRPTN_OPT_NBR1,
MKTNG_PGM_NBR,
CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,ADDR_LINE_1_TXT1,ADDR_LINE_2_TXT1,ADDR_LINE_3_TXT1,
CITY_NAME1,TERR_NAME1,POSTL_AREA_CODE1,CNTRY_CODE,SUBSCRPTN_OPT_NBR1,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_POSTL_ADDR
FROM POSTL_OPTOUT_T1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
AND REGIS_PRSNA_POSTL_ADDR.CNTRY_CODE= TEMP.CNTRY_CODE
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR1
AND REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_POSTL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_1_TXT),'')=  TEMP.ADDR_LINE_1_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_2_TXT),'')= TEMP.ADDR_LINE_2_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.ADDR_LINE_3_TXT),'')= TEMP.ADDR_LINE_3_TXT1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.CITY_NAME),'')= TEMP.CITY_NAME1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.TERR_NAME),'')= TEMP.TERR_NAME1
AND COALESCE(TRIM(REGIS_PRSNA_POSTL_ADDR.POSTL_AREA_CODE),'')= TEMP.POSTL_AREA_CODE1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit