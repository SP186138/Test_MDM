.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';

DATABASE MDM;

.GOTO $Step


 .LABEL L0

--drop table MDM.MATCH_DATA_LOADID;

Drop table MDM.MATCH_DATA;
drop table USER_WORK.MATCH_IMPACT ;
Drop table MDM.PRSNA_STG_MATCH;
Drop table MDM.PRSNA_POSTL_ADDR_STG_MATCH;
Drop table MDM.PRSNA_EMAIL_ADDR_STG_MATCH;
Drop table MDM.PRSNA_PHONE_STG_MATCH;
Drop table USER_WORK.MATCHD_CNSMR_PRSNA_TRT_MATCH;
Drop table MDM.MATCH_DATA_TEMP1;
 CREATE TABLE REGIS_PRSNA_TEMP_FRA AS (SEL * FROM REGIS_PRSNA_TEMP)WITH NO DATA
 PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,SYS_TARGET_ID ,LEGAL_ENT_NBR );
 
 CREATE TABLE ADDR_TEMP_FRA AS (SEL * FROM ADDR_TEMP) WITH NO DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL ,SYS_SOURCE ,ADDRESS_CONTACT ,ADDRESS_SUBSCRPTN );

CREATE TABLE ADDR_INPUT_FRA AS (SEL * FROM ADDR_INPUT)WITH NO DATA
 PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID );
 

COLLECT STATS ICRM_STAGE_TBL.PRSNA_PHONE_STG_hist
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L1
COLLECT STATS ICRM_STAGE_TBL.PRSNA_PHONE_STG_hist
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L2
COLLECT STATS ICRM_STAGE_TBL.PRSNA_PHONE_STG_hist
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L3
COLLECT STATS ICRM_STAGE_TBL.PRSNA_PHONE_STG_hist
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L4
COLLECT STATS ICRM_STAGE_TBL.PRSNA_EMAIL_ADDR_STG_hist
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L5
COLLECT STATS ICRM_STAGE_TBL.PRSNA_EMAIL_ADDR_STG_hist
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L6
COLLECT STATS ICRM_STAGE_TBL.PRSNA_EMAIL_ADDR_STG_hist
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L7
COLLECT STATS ICRM_STAGE_TBL.PRSNA_EMAIL_ADDR_STG_hist
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L8
COLLECT STATS ICRM_STAGE_TBL.PRSNA_POSTL_ADDR_STG_hist
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L9
COLLECT STATS ICRM_STAGE_TBL.PRSNA_POSTL_ADDR_STG_hist
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L10
COLLECT STATS ICRM_STAGE_TBL.PRSNA_POSTL_ADDR_STG_hist
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L11
COLLECT STATS ICRM_STAGE_TBL.PRSNA_POSTL_ADDR_STG_hist
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L12
COLLECT STATS ICRM_STAGE_TBL.PRSNA_STG_hist
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L13
COLLECT STATS ICRM_STAGE_TBL.PRSNA_STG_hist
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L14
COLLECT STATS ICRM_STAGE_TBL.PRSNA_STG_hist
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L15
COLLECT STATS ICRM_STAGE_TBL.PRSNA_STG_hist
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L16

/*
CREATE MULTISET TABLE MDM.MATCH_DATA_LOADID ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
     LOAD_ID INTEGER
     )
     PRIMARY INDEX ( LOAD_ID );
	 
INSERT INTO MATCH_DATA_LOADID
SEL UNIQUE load_id FROM load_info WHERE cntry_name in ('FRA','PRT');	 
*/	 
CREATE TABLE MDM.MATCH_DATA AS
(SEL DISTINCT SOURCE_ID,PRSNA_STG_1.MKTNG_PGM_NBR,PRSNA_STG_1.REGIS_CNSMR_ID_VAL,
PRSNA_STG_1.LOAD_ID
FROM
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,PRSNA_REG_DT FROM
ICRM_STAGE.PRSNA_STG
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MDM.MKTNG_PGM WHERE LEGAL_ENT_NBR IN (23))
AND (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID) NOT IN
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID FROM ERR_PRSNA_STG)
UNION ALL
SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,PRSNA_REG_DT FROM
ICRM_STAGE.PRSNA_STG_hist
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MDM.MKTNG_PGM WHERE LEGAL_ENT_NBR IN (23))
AND (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID) NOT IN
(SEL MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID FROM ERR_PRSNA_STG)) PRSNA_STG_1
INNER JOIN MDM.LOAD_CONTROL LC
ON LC.LOAD_ID= PRSNA_STG_1.LOAD_ID
AND LC.LOAD_TYPE='ETL'
--AND LC.LOAD_ID IN (SEL LOAD_ID FROM MDM.MATCH_DATA_LOADID)
QUALIFY RANK() OVER (PARTITION BY SOURCE_ID,PRSNA_STG_1.MKTNG_PGM_NBR,PRSNA_STG_1.REGIS_CNSMR_ID_VAL ORDER BY PRSNA_STG_1.PRSNA_REG_DT DESC,LC.loadendts DESC,PRSNA_STG_1.LOAD_ID DESC)=1
) 
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL)
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L17


COLLECT STATS MDM.MATCH_DATA
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L18
COLLECT STATS MDM.MATCH_DATA
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L19
COLLECT STATS MDM.MATCH_DATA
COLUMN SOURCE_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L20
COLLECT STATS MDM.MATCH_DATA
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L21

--Start Finding the impacted rows

CREATE  TABLE  USER_WORK.MATCH_IMPACT as
(
SEL REGIS_PRSNA_ID,data_srce_nbr,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL 
FROM MDM.REGIS_PRSNA RP
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MDM.MKTNG_PGM WHERE LEGAL_ENT_NBR IN (23))
) WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR,REGIS_PRSNA_ID )
PARTITION BY MKTNG_PGM_NBR
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L22

--Deleting the non impacted records from the table


DEL FROM MATCH_DATA WHERE (SOURCE_ID,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL) NOT IN (
SEL data_srce_nbr,MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL 
FROM USER_WORK.MATCH_IMPACT);

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L23

 /*
CREATE TABLE USER_WORK.MATCHD_CNSMR_PRSNA_TRT_MATCH
AS ICRM_TBL.MATCHD_CNSMR_PRSNA_TRT WITH NO DATA;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L24

ALTER TABLE USER_WORK.MATCHD_CNSMR_PRSNA_TRT_MATCH
ADD REGIS_PRSNA_ID INTEGER NOT NULL,
ADD MKTNG_PGM_NBR INTEGER NOT NULL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L25
*/

CREATE MULTISET TABLE USER_WORK.MATCHD_CNSMR_PRSNA_TRT_MATCH ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
      MATCHD_CNSMR_PRSNA_ID INTEGER NOT NULL,
      LEGAL_ENT_NBR SMALLINT NOT NULL,
      TRT_NBR SMALLINT,
      MATCHD_PRSNA_TRT_DATE DATE FORMAT 'YYYY-MM-DD' COMPRESS ,
      MATCHD_PRSNA_TRT_TXT VARCHAR(1000) CHARACTER SET UNICODE NOT CASESPECIFIC COMPRESS ('MEDIUM','HIGH','Low','          1','Yes','          2','A = County in one of the 21st largest MSAs','          3','Western European','At least 1 married','          4','E1=English','Unknown gender present','# of household credit cards recently Increased','Health & Beauty Products','Definite Owner','At least 1 single','Home Improvements/DIY','Contests/Sweepstakes','Travel in the USA','High school','Two adults','Magazines','# of household credit cards recently Decreased','Cruise Ship Vacation','35-44 years old','Home Furnishinig','Some college','Leisure Travel','Children no longer present within household','Vitamins & Supplements','SFDU','Any','Magazine never received','Cooking','Gardening','Walking for Health','Probable Owner','Automotive Work','Sewing/Needlework/Knitting','Wildlife/Environmental Causes','Married','D = Any other counties','Bible/Devotional','45-54 years old','Self Improvement Courses','One adult','25-34 years old','Best Selling Fiction','Hunting/Shooting','D1 = Below Average Profit','Probable Renter','Apparel','No','          7','          8','Magazine BLC 4-5 No','Childrens Products','Magazine BLC HD No','Cooking/Culinary','Camping/Hiking','International Travel','Life Insurance','55-64 years old','C2 = Average Profit Margin','C1 = Average Profit Margin','Magazine BLC 2 No','A1 = Best Profit Margin','Casino Gambling','Gourmet Foods','Investments','1','Videos/DVD','          5','B2 = Above Average Profit','Crafts','6-10 yrs','          6','Households Donating $100 and over_M','25+ months','Professional/Technical','Cultural/Arts Events','B1 = Above Average Profit','Childrens Books','Fishing','81-100%','E1 = Poor Profit Margin','Insurance','Switched','Three adults','41-60%','D2 = Below Average Profit','Top 20%','Single','Baking','21-40%','A2 = Best Profit Margin','Medical or Health','61-80%','Stocks or Bonds','Female present','          9','E2 = Poor Profit Margin','D3 = Below Average Profit','Books','Less than $14,999','Photography','Interior Decorating','Competitor Medium','Entertainment','3-5 yrs','College','E3 = Poor Profit Margin','11-15 yrs','Natural Foods','Country','         12','03','         10','         18','Male present','Provincial capital','         19','Running/Jogging','         13','Some high school or less','65-74 years old','Magazine EDP 37 received','Political Conservative','Boating/Sailing','RV Vacations','Career Advancement Courses','University Below Bachelors Degree_M','         11','         14','Competitor Low','Dog','         15','         16','         38','         24','$30,000 - $34,999','         46','Female and Unknown gender present','A = Assimilated - English Speaking','Motocycle Riding','African American','2','         26','         33','         62','Gifts','         22','         27','         17','         48','         31','SIEBAS','INTERMARCHE SUPER','Male and Unknown gender present','Hispanic','         34','         35','         23','         25','         44','K4=Kiddie Kastles','Country lifestyle','Medical Coverage','Woodworking','$20,000 - $24,999','         28','         32','         65','Mutual Funds','20+ yrs','$40,000 - $44,999','         75','         30','         21','         42','Scrapbooking','         36','         39','         68','         57','Tradesman/Machine Oper / Laborer','Food','         72','White Collar_M','Skiing/Snowboarding','         59','         29','         58','$15,000 - $19,999','         40','CENTRE E.LECLERC','         69','         41','Apprenticeship or Trades_M','         54','         50','$45,000 - $49,999','         99','         78','         49','         45','3','         52','         20','         55','Tampax Competitor Medium','         56','Both married and single','         89','Magazine EDP 36 received','         81','         92','University Bachelors Degree_M','         87','         51','         53','$25,000 - $29,999','         37','High School Diploma_M','         97','Cat','B1=Big Spender Parents','         86','Y','         73','         82','$35,000 - $39,999','$55,000 - $59,999','         77','         95','Facebook','         67','01','         83','16-20 yrs','         84','Pampers - Low','02','1-2 yrs','         93','         96','C = Bilingual - Native Language Primary','         47','         60','         61','         91'),
      MATCHD_PRSNA_TRT_SEQ_NBR SMALLINT DEFAULT 1  COMPRESS (1 ,2 ,3 ),
      DATA_SRCE_NBR INTEGER COMPRESS (7798 ,1480 ,1277 ),
      SYS_SOURCE VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ('              62969.','              63269.','              62569.','              63669.','              47569.','              64669.','              63869.','              64869.','              64569.','              64169.','              64269.','              65269.','              63769.','              62769.','              63969.','              63569.','              63069.','              64369.','              63469.','              62269.','              47469.','              63369.','              62669.','              62869.','              62369.','              63169.','              47369.','              64069.','              64469.','              65169.','              64769.','              64969.','              47269.','              65069.','              65369.','              47169.','              65469.','              47069.','              54669.','              46969.','              46869.','              46769.','              46669.','              54569.','              46369.','              46569.','              46469.','              46069.','              54269.','              45969.','              54169.','              46169.','              45869.','              45769.','              61969.','              61869.','              45669.','              45569.','              45469.','              46269.','              45369.','              49769.','              45269.','              45169.','              45069.','              44969.','              50269.','              50069.','              62069.','              44869.','              65669.','              44769.','              65769.','              44669.','              44569.','              44469.','              44369.','              44269.','              57569.','              56369.','              49069.','              65569.','              56169.','              61269.','              48969.','              49169.','              43569.','              62169.','              48869.','              62469.','              48769.','              61569.','              44169.','              61469.','              50169.','              48669.','              43469.','              48169.','              47769.','              65969.','              47669.','              49569.','              61169.','100391','100791','357191','358291','348491','343891','348191','92591','99991','356891','316291','318791','319391','319691','319991','322891','              65869.','348991','323191','324091','306891','307291','101191','102491','101591','332091','340791','349391','332791','333091','              56469.','339891','336191','339591','311591','335891','307091','102991','              57469.','85991','323691','306691','315491','343391','              43969.','46791','315991','324491','319091','91791','61391','82891','312291','61091','46091','46591','59491','311991','46991','311891','58791','61691','47191','60391','49691','56491','54591','86791','54291','              57169.','47591','55091','55791','52491','58491','49491','62891','47891','53391','60191','55491','282991','69091','71191','50591','63791','69391','64891','63191','71791','72391','298891','50091','50891','114591','45691','              61669.','48991','53691','343291','64091','288691','284191','70991','287791','52191','288091','72591','288391','283891','60691','48691','288991','283391','              57669.','64691','111891','              44069.','86191','32991','312191','64391','298591','289291','297791','362191','297491','72891','70691','315791','298291','48291','324391','298091','361191','349291','37491','30891','32191','358591','408291','407491','34991','68591','70291','66691','289591','44691','72091','              66069.','38391','92191'),
      SYS_TARGET_ID INTEGER COMPRESS ,
      SYS_AUTH_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      SYS_CREATED_BY VARCHAR(70) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      SYS_CREATION_DATE TIMESTAMP(0) COMPRESS ,
      SYS_LAST_MODIFIED_DATE TIMESTAMP(0),
      SYS_ENT_STATE VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      SYS_LAST_MODIFIED_BY VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS 'EtlUser',
      SYS_NC_TYPE VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      SYS_ERR_CODE VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      SYS_ERR_SVRTY VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC COMPRESS ,
      REGIS_PRSNA_ID INTEGER NOT NULL,
      MKTNG_PGM_NBR INTEGER NOT NULL
      )
PRIMARY INDEX MATCHD_CNSMR_PRSNA_NUPI ( REGIS_PRSNA_ID,MKTNG_PGM_NBR )
PARTITION BY MKTNG_PGM_NBR ;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L25

INSERT INTO USER_WORK.MATCHD_CNSMR_PRSNA_TRT_MATCH
SEL A.*,B.REGIS_PRSNA_ID,B.MKTNG_PGM_NBR FROM ICRM_TBL.MATCHD_CNSMR_PRSNA_TRT A 
INNER JOIN MDM.REGIS_PRSNA B
ON A.MATCHD_CNSMR_PRSNA_ID=B.MATCHD_CNSMR_PRSNA_ID
AND A.LEGAL_ENT_NBR=B.LEGAL_ENT_NBR
WHERE A.LEGAL_ENT_NBR in(23)
AND (B.MKTNG_PGM_NBR,B.REGIS_PRSNA_ID) IN (
SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID FROM USER_WORK.MATCH_IMPACT);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L26

CREATE TABLE MDM.PRSNA_STG_MATCH AS
(SEL A.* FROM 
   ICRM_STAGE.PRSNA_STG A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
   UNION ALL
   SEL A.* FROM
   ICRM_STAGE.PRSNA_STG_hist A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
) 
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,RECORD_IND)
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L27

COLLECT STATS MDM.PRSNA_STG_MATCH
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L28
COLLECT STATS MDM.PRSNA_STG_MATCH
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L29
COLLECT STATS MDM.PRSNA_STG_MATCH
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L30
COLLECT STATS MDM.PRSNA_STG_MATCH
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L31

CREATE TABLE MDM.PRSNA_POSTL_ADDR_STG_MATCH AS
(SEL A.* FROM 
   ICRM_STAGE.PRSNA_POSTL_ADDR_STG A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
   UNION ALL
   SEL A.* FROM
   ICRM_STAGE.PRSNA_POSTL_ADDR_STG_hist A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
) 
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,RECORD_IND)
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L32

COLLECT STATS MDM.PRSNA_POSTL_ADDR_STG_MATCH
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L33
COLLECT STATS MDM.PRSNA_POSTL_ADDR_STG_MATCH
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L34
COLLECT STATS MDM.PRSNA_POSTL_ADDR_STG_MATCH
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L35
COLLECT STATS MDM.PRSNA_POSTL_ADDR_STG_MATCH
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L36

CREATE TABLE MDM.PRSNA_EMAIL_ADDR_STG_MATCH AS
(SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,RECORD_IND,EMAIL_ADDR_TXT FROM 
   ICRM_STAGE.PRSNA_EMAIL_ADDR_STG A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
   UNION  ALL
   SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,RECORD_IND,EMAIL_ADDR_TXT FROM
   ICRM_STAGE.PRSNA_EMAIL_ADDR_STG_hist A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
) 
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,RECORD_IND)
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L37

COLLECT STATS MDM.PRSNA_EMAIL_ADDR_STG_MATCH
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L38
COLLECT STATS MDM.PRSNA_EMAIL_ADDR_STG_MATCH
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L39
COLLECT STATS MDM.PRSNA_EMAIL_ADDR_STG_MATCH
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L40
COLLECT STATS MDM.PRSNA_EMAIL_ADDR_STG_MATCH
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L41

CREATE TABLE MDM.PRSNA_PHONE_STG_MATCH AS
(SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,RECORD_IND  
   ,PHONE_EXTSN_NUM,FULL_PHONE_NUM,PHONE_LINE_NBR  
  ,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR  FROM 
   ICRM_STAGE.PRSNA_PHONE_STG A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
   UNION ALL
   SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,RECORD_IND  
   ,PHONE_EXTSN_NUM,FULL_PHONE_NUM,PHONE_LINE_NBR  
  ,PHONE_AREA_NBR,PHONE_EXCHG_NBR,PHONE_CNTRY_NBR FROM
   ICRM_STAGE.PRSNA_PHONE_STG_hist A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
) 
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID,RECORD_IND)
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L42

COLLECT STATS MDM.PRSNA_PHONE_STG_MATCH
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L43
COLLECT STATS MDM.PRSNA_PHONE_STG_MATCH
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L44
COLLECT STATS MDM.PRSNA_PHONE_STG_MATCH
COLUMN RECORD_IND;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L45
COLLECT STATS MDM.PRSNA_PHONE_STG_MATCH
COLUMN LOAD_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L46

DELETE FROM MDM.TSS_CLEANSE_INPUT1_FRA;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L47

INSERT INTO MDM.TSS_CLEANSE_INPUT1_FRA
(LEGAL_ENT_NBR                 
,MKTNG_PGM_NBR                 
,REGIS_CNSMR_ID_VAL            
,NAME_PREFX_TXT                
,GVN_NAME                      
,MID_NAME                      
,FAMLY_NAME                    
,NAME_SUFFX_TXT                
,FULL_NAME                     
,GENDR_IND                     
,BRTH_DATE                     
,ADDR_LINE_1_TXT               
,ADDR_LINE_2_TXT               
,ADDR_LINE_3_TXT               
,STRET_NUM                     
,STRET_NAME                    
,APT_NUM                       
,PO_BOX_NUM                    
,CITY_NAME                     
,POSTL_AREA_CODE               
,TERR_NAME                     
,CNTRY_NAME                    
,DPEND_NAME                    
,PET_NAME                      
,WIN_KEY                       
,SYNC_STATUS                   
,USER_NAME                     
,LANG_CODE                     
,SYS_SOURCE                    
,SYS_NC_TYPE                   
,SYS_CREATION_DATE     
,SYS_TARGET_ID
,EMAIL_ADDR_TXT                
,PHONE_EXTSN_NUM               
,FULL_PHONE_NUM                
,PHONE_LINE_NBR                
,PHONE_AREA_NBR                
,PHONE_EXCHG_NBR               
,PHONE_CNTRY_NBR               
,PRSNA_REG_DT       
,ADDRESS_CONTACT
,ADDRESS_SUBSCRPTN
,EMAIL_CONTACT
,EMAIL_SUBSCRPTN
,PHONE_CONTACT
,PHONE_SUBSCRPTN
)
SELECT DISTINCT
   MKTNG_PGM_1.LEGAL_ENT_NBR
  ,PRSNA_STG_1.MKTNG_PGM_NBR
  ,PRSNA_STG_1.REGIS_CNSMR_ID_VAL
  ,PRSNA_STG_1.NAME_PREFX_TXT
  ,PRSNA_STG_1.GVN_NAME
  ,PRSNA_STG_1.MID_NAME
  ,PRSNA_STG_1.FAMLY_NAME
  ,PRSNA_STG_1.NAME_SUFFX_TXT
  ,PRSNA_STG_1.FULL_NAME
  ,CASE WHEN  (PRSNA_STG_1.GENDR_IND NOT IN ('F','U','M') OR PRSNA_STG_1.GENDR_IND IS NULL ) 
THEN 'U' ELSE PRSNA_STG_1.GENDR_IND END AS GENDR_IND
  ,PRSNA_STG_1.BRTH_DATE
  ,PRSNA_POSTL_ADDR_STG_1.ADDR_LINE_1_TXT
  ,PRSNA_POSTL_ADDR_STG_1.ADDR_LINE_2_TXT
  ,PRSNA_POSTL_ADDR_STG_1.ADDR_LINE_3_TXT
  ,PRSNA_POSTL_ADDR_STG_1.STRET_NUM
  ,PRSNA_POSTL_ADDR_STG_1.STRET_NAME
  ,PRSNA_POSTL_ADDR_STG_1.APT_NUM
  ,PRSNA_POSTL_ADDR_STG_1.PO_BOX_NUM
  ,PRSNA_POSTL_ADDR_STG_1.CITY_NAME
  ,PRSNA_POSTL_ADDR_STG_1.POSTL_AREA_CODE
  ,PRSNA_POSTL_ADDR_STG_1.TERR_NAME
  ,COALESCE(TRIM(PRSNA_POSTL_ADDR_STG_1.CNTRY_NAME),TRIM(PRSNA_STG_1.CNTRY_NAME),'') AS CNTRY_NAME
  ,'' DPEND_NAME
  ,'' PET_NAME
  ,''  WIN_KEY
  ,'' SYNC_STATUS
  ,PRSNA_STG_1.USER_NAME
  ,PRSNA_STG_1.LANG_CODE
  ,COALESCE(TRIM(CAST(CAST(PRSNA_STG_1.LOAD_ID AS INTEGER) AS VARCHAR(20))),'') AS SYS_SOURCE
 ,CASE WHEN (PRSNA_STG_1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END AS SYS_NC_TYPE    
 ,PRSNA_STG_1.load_ts AS SYS_CREATION_DATE
 , LC.SOURCE_ID AS SYS_TARGET_ID
  ,PRSNA_EMAIL_ADDR_STG_1.EMAIL_ADDR_TXT AS EMAIL_ADDR_TXT_1
  ,PRSNA_PHONE_STG_1.PHONE_EXTSN_NUM AS PHONE_EXTSN_NUM_1
  ,PRSNA_PHONE_STG_1.FULL_PHONE_NUM AS FULL_PHONE_NUM_1
  ,PRSNA_PHONE_STG_1.PHONE_LINE_NBR  AS PHONE_LINE_NBR_1
  ,PRSNA_PHONE_STG_1.PHONE_AREA_NBR  AS PHONE_AREA_NBR_1
  ,PRSNA_PHONE_STG_1.PHONE_EXCHG_NBR AS PHONE_EXCHG_NBR_1
  ,PRSNA_PHONE_STG_1.PHONE_CNTRY_NBR AS PHONE_CNTRY_NBR_1
  , CAST(CAST(PRSNA_STG_1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0))
,PRSNA_POSTL_ADDR_STG_1.CNTCT_POINT_CATEG_CODE AS ADDRESS_CONTACT
  ,'' ADDRESS_SUBSCRPTN
,'' EMAIL_CONTACT
 ,'' EMAIL_SUBSCRPTN
 ,'' PHONE_CONTACT
,'' PHONE_SUBSCRPTN  
 
   FROM MDM.PRSNA_STG_MATCH PRSNA_STG_1
   
  INNER JOIN MDM.MKTNG_PGM MKTNG_PGM_1
     ON PRSNA_STG_1.MKTNG_PGM_NBR = MKTNG_PGM_1.MKTNG_PGM_NBR
    AND MKTNG_PGM_1.LEGAL_ENT_NBR IN (23)

   INNER JOIN MDM.LOAD_CONTROL LC  
   ON LC.LOAD_ID= PRSNA_STG_1.LOAD_ID 
   AND LC.LOAD_TYPE='ETL'
 
   LEFT OUTER JOIN 
   MDM.PRSNA_POSTL_ADDR_STG_MATCH PRSNA_POSTL_ADDR_STG_1
     ON PRSNA_STG_1.MKTNG_PGM_NBR = PRSNA_POSTL_ADDR_STG_1.MKTNG_PGM_NBR
    AND PRSNA_STG_1.REGIS_CNSMR_ID_VAL = PRSNA_POSTL_ADDR_STG_1.REGIS_CNSMR_ID_VAL
    AND PRSNA_STG_1.LOAD_ID = PRSNA_POSTL_ADDR_STG_1.LOAD_ID
    AND PRSNA_STG_1.RECORD_IND = PRSNA_POSTL_ADDR_STG_1.RECORD_IND
    
LEFT OUTER JOIN
   MDM.PRSNA_EMAIL_ADDR_STG_MATCH PRSNA_EMAIL_ADDR_STG_1
     ON PRSNA_STG_1.MKTNG_PGM_NBR = PRSNA_EMAIL_ADDR_STG_1.MKTNG_PGM_NBR
    AND PRSNA_STG_1.REGIS_CNSMR_ID_VAL = PRSNA_EMAIL_ADDR_STG_1.REGIS_CNSMR_ID_VAL
    AND PRSNA_STG_1.LOAD_ID = PRSNA_EMAIL_ADDR_STG_1.LOAD_ID
    AND PRSNA_STG_1.RECORD_IND = PRSNA_EMAIL_ADDR_STG_1.RECORD_IND

	LEFT OUTER JOIN
   MDM.PRSNA_PHONE_STG_MATCH PRSNA_PHONE_STG_1
     ON PRSNA_STG_1.MKTNG_PGM_NBR = PRSNA_PHONE_STG_1.MKTNG_PGM_NBR
    AND PRSNA_STG_1.REGIS_CNSMR_ID_VAL = PRSNA_PHONE_STG_1.REGIS_CNSMR_ID_VAL
    AND PRSNA_STG_1.LOAD_ID = PRSNA_PHONE_STG_1.LOAD_ID
    AND PRSNA_STG_1.RECORD_IND = PRSNA_PHONE_STG_1.RECORD_IND
 ;
 
  .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L48

 
COLLECT STATS ON MDM.TSS_CLEANSE_INPUT1_FRA
COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L49

COLLECT STATS ON MDM.TSS_CLEANSE_INPUT1_FRA
COLUMN REGIS_CNSMR_ID_VAL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L50

COLLECT STATS ON MDM.TSS_CLEANSE_INPUT1_FRA
COLUMN (MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L51

COLLECT STATS ON MDM.TSS_CLEANSE_INPUT1_FRA
COLUMN LEGAL_ENT_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L52


CREATE VOLATILE TABLE EMAIL AS (
SEL B.EMAIL_ADDR_TXT 
FROM 
(SEL EMAIL_ADDR_TXT 
FROM TSS_CLEANSE_INPUT1_FRA 
GROUP BY LEGAL_ENT_NBR, MKTNG_PGM_NBR, REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, EMAIL_ADDR_TXT
UNION ALL
SEL EMAIL_ADDR_TXT
FROM REGIS_PRSNA_EMAIL_ADDR
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM 
MKTNG_PGM WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM 
TSS_CLEANSE_INPUT1_FRA))
GROUP BY REGIS_PRSNA_ID, EMAIL_ADDR_TXT
) B
GROUP BY 1
HAVING COUNT(*) >= 50
) WITH DATA
ON COMMIT PRESERVE ROWS
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L53

DELETE FROM REF_EMAIL_DATA_IGNORE_FRA ALL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L54

INSERT INTO REF_EMAIL_DATA_IGNORE_FRA
SEL B.EMAIL_ADDR_TXT 
FROM 
EMAIL B
;

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L55

CREATE VOLATILE TABLE PHONE AS (
SEL B.FULL_PHONE_NUM 
FROM 
(SEL FULL_PHONE_NUM
FROM TSS_CLEANSE_INPUT1_FRA
GROUP BY LEGAL_ENT_NBR, MKTNG_PGM_NBR, REGIS_CNSMR_ID_VAL, SYS_TARGET_ID, FULL_PHONE_NUM
UNION ALL
SEL FULL_PHONE_NUM
FROM REGIS_PRSNA_PHONE
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM 
MKTNG_PGM WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM 
TSS_CLEANSE_INPUT1_FRA))
GROUP BY REGIS_PRSNA_ID, FULL_PHONE_NUM
) B
GROUP BY 1
HAVING COUNT(*) >= 50
) WITH DATA
ON COMMIT PRESERVE ROWS
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L56

DELETE FROM REF_PHONE_DATA_IGNORE_FRA ALL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L57

INSERT INTO REF_PHONE_DATA_IGNORE_FRA
SEL B.FULL_PHONE_NUM 
FROM 
PHONE B
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L58

COLLECT STATS REF_EMAIL_DATA_IGNORE_FRA
COLUMN EMAIL_ADDR_TXT;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L59

COLLECT STATS REF_PHONE_DATA_IGNORE_FRA
COLUMN FULL_PHONE_NUM;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L60

UPDATE TSS_CLEANSE_INPUT1_FRA
SET FULL_PHONE_NUM = ''
WHERE FULL_PHONE_NUM IN (SEL FULL_PHONE_NUM
FROM REF_PHONE_DATA_IGNORE_FRA);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L61


UPDATE TSS_CLEANSE_INPUT1_FRA
SET EMAIL_ADDR_TXT = ''
WHERE EMAIL_ADDR_TXT IN (SEL EMAIL_ADDR_TXT
FROM REF_EMAIL_DATA_IGNORE_FRA);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L62

UPDATE TSS_CLEANSE_INPUT1_FRA
FROM
(SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,A.PRSNA_TRT_TXT
FROM ICRM_STAGE.PRSNA_TRT_STG A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
WHERE TRT_NBR IN (SEL TRT_NBR FROM TRT 
WHERE TRT_NAME='ID - Spanish National')
UNION
SEL A.MKTNG_PGM_NBR,A.REGIS_CNSMR_ID_VAL,A.LOAD_ID,A.PRSNA_TRT_TXT FROM
ICRM_STAGE.PRSNA_TRT_STG_hist A
   INNER JOIN MDM.MATCH_DATA B
   ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
   AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
   AND A.LOAD_ID=B.LOAD_ID
WHERE TRT_NBR IN (SEL TRT_NBR FROM TRT 
WHERE TRT_NAME='ID - Spanish National')) B
SET NATIONAL_ID_NBR=B.PRSNA_TRT_TXT
WHERE TSS_CLEANSE_INPUT1_FRA.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND TSS_CLEANSE_INPUT1_FRA.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND TSS_CLEANSE_INPUT1_FRA.SYS_SOURCE=TRIM(CAST(B.LOAD_ID AS INTEGER));
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L63

CREATE VOLATILE TABLE NATIONAL_ID_NBR AS (
SEL B.NATIONAL_ID_NBR 
FROM 
(SEL NATIONAL_ID_NBR 
FROM TSS_CLEANSE_INPUT1_FRA 
UNION ALL
SEL NATIONAL_ID_NBR
FROM REGIS_PRSNA
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM 
MKTNG_PGM WHERE LEGAL_ENT_NBR IN (SEL LEGAL_ENT_NBR FROM 
TSS_CLEANSE_INPUT1_FRA))
) B
GROUP BY 1
HAVING COUNT(*) >= 50
) WITH DATA
ON COMMIT PRESERVE ROWS
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L64

INSERT INTO REF_NATNL_ID_DATA_IGNORE_FRA
SEL B.NATIONAL_ID_NBR 
FROM 
NATIONAL_ID_NBR B
;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L65

UPDATE TSS_CLEANSE_INPUT1_FRA
SET NATIONAL_ID_NBR = ''
WHERE NATIONAL_ID_NBR IN (SEL NATIONAL_ID_NBR
FROM REF_NATNL_ID_DATA_IGNORE_FRA);

 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L66

DELETE FROM MDM.TSS_MATCH_INPUT_FRA ALL;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L67


--****
DROP TABLE EMAIL;
DROP TABLE PHONE;
DROP TABLE NATIONAL_ID_NBR;
