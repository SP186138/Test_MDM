/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_EMAIL_ADDR.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts takes data from trillium output tables 
                                                      and loads REGIS_PRSNA_EMAIL_ADDR
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
4.4.2                08/14/2013           TERADATA                        INCLUDE CNTCT_POINT_CATEG_CODE IN
                                                                          I2 OPTOUT
4.5                  09/26/2013           TERADATA                        PERFORMANCE IMPROVEMENT                                                                          
4.5.3                03/02/2013           TERADATA                        PRB0040960  
5.1                  04/08/2014           TERADATA                        RELEASE 5.1
                                                                          1. i60 PROCESSING CHANGES                                                                        
INC0022978           02/05/2015          TERADATA                         Modified EMAIL_OPTOUT  for performance tuning
5.5                  07/13/2015          TERADATA                         BR#252 Retain VALID_IND of N from source/i10
5.6                  11/16/2015           TERADATA                        RELEASE 5.6 BR362 
                     03/08/2016           TERADATA                        eCR - Fix gap in processing i10 optouts
5.7                  02/29/2015           TERADATA                        RELEASE 5.7 BR392 SET PRSNA_STATUS_CODE='WR'
                                                                          For Website Registrations
eCR                  08/31/2016           TERADATA                        PRB0041750 - Fix gap in processing opt outs 
5.8                  09/08/2016           TERADATA                        Release 5.8 Hash Email 
6.1                  09/29/2017           TERADATA                        Release 6.1 Opt out Redesign
6.2		     		 12/27/2017		  	  TERADATA			  			  Release 6.2 Russia Non PII data  
6.3					 02/13/2018			  TERADATA						  Release 6.3 Addition of HASHED columns for MD5 and SHA1
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Country=$CNTRY;Stage=Wrapper;Step=Step07;' FOR SESSION; 
DATABASE $DATABASENAME;

SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_LIST_$CNTRY
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO EDW

.LABEL OPTOUT

/*****************************************************************************
i60 Opt Out
Opt out the consumer from REGIS_PRSNA_EMAIL_ADDR based on the match available 
in OPT_OUT_$CNTRY_LIST_TEMP table populated above.

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
******************************************************************************/

UPDATE	PRSNA_EMAIL_ADDR_STG
FROM	(
SELECT DISTINCT REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1  
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
ON TEMP1.EDW_REGIS_PRSNA_ID=B.REGIS_PRSNA_ID   
AND TEMP1.EDW_MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
WHERE EDW_CHANNEL_IND IN ('E','ALL')
AND EDW_SUBSCRIPTION_NBR = 9999
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,LOAD_ID=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE PRSNA_EMAIL_ADDR_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_EMAIL_ADDR_STG.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND PRSNA_EMAIL_ADDR_STG.LOAD_ID=TRIM(CAST(TEMP.SYS_SOURCE AS INTEGER))
AND PRSNA_EMAIL_ADDR_STG.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND PRSNA_EMAIL_ADDR_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	PRSNA_EMAIL_ADDR_STG
FROM	(
SELECT	DISTINCT REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE,EDW_SUBSCRIPTION_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1    
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
ON TEMP1.EDW_REGIS_PRSNA_ID=B.REGIS_PRSNA_ID   
AND TEMP1.EDW_MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
WHERE EDW_CHANNEL_IND IN ('E','ALL')
AND EDW_SUBSCRIPTION_NBR <> 9999
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,EDW_MKTNG_PGM_NBR,SYS_SOURCE,EDW_SUBSCRIPTION_NBR
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,LOAD_ID=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE PRSNA_EMAIL_ADDR_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_EMAIL_ADDR_STG.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND PRSNA_EMAIL_ADDR_STG.LOAD_ID=TRIM(CAST(TEMP.SYS_SOURCE AS INTEGER))
AND PRSNA_EMAIL_ADDR_STG.CNTCT_OPTN_NBR=TEMP.EDW_SUBSCRIPTION_NBR
AND PRSNA_EMAIL_ADDR_STG.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND PRSNA_EMAIL_ADDR_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	REGIS_PRSNA_EMAIL_ADDR
FROM	(
SELECT	DISTINCT EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1  
WHERE EDW_CHANNEL_IND IN ('E','ALL')
AND EDW_SUBSCRIPTION_NBR = 9999
QUALIFY RANK() OVER (PARTITION BY EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.EDW_REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE	REGIS_PRSNA_EMAIL_ADDR
FROM	(
SELECT	DISTINCT EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,EDW_SUBSCRIPTION_NBR,
STG_OPT_TIME,
STG_LOG_SOURCE_ID 
FROM	OPT_OUT_LIST_$CNTRY TEMP1  
WHERE EDW_CHANNEL_IND IN ('E','ALL')
AND EDW_SUBSCRIPTION_NBR <> 9999
QUALIFY RANK() OVER (PARTITION BY EDW_REGIS_PRSNA_ID,EDW_MKTNG_PGM_NBR,EDW_SUBSCRIPTION_NBR
ORDER BY STG_OPT_TIME DESC,STG_LOG_SOURCE_ID DESC) = 1
) TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'ETLUSER'
,CNSMR_CHCE_DATETM=TEMP.STG_OPT_TIME
,SYS_SOURCE=TRIM(CAST(TEMP.STG_LOG_SOURCE_ID AS INTEGER))
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID=TEMP.EDW_REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.EDW_MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR=TEMP.EDW_SUBSCRIPTION_NBR
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.STG_OPT_TIME
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EDW

UPDATE PRSNA_EMAIL_ADDR_STG
FROM
(
SELECT
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
SYS_SOURCE,
EMAIL_IND,
CLEANSED_EMAIL_1
FROM TRILLIUM_OUTPUT1_$CNTRY_temp
GROUP BY 1,2,3,4,5
) B
SET VALID_IND = B.EMAIL_IND
WHERE PRSNA_EMAIL_ADDR_STG.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
AND	PRSNA_EMAIL_ADDR_STG.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND     PRSNA_EMAIL_ADDR_STG.SYS_SOURCE = B.SYS_SOURCE
AND PRSNA_EMAIL_ADDR_STG.EMAIL_ADDR_TXT = B.CLEANSED_EMAIL_1
/*********************BR252 Add condition to retain VALID_IND of N from source*********/
AND PRSNA_EMAIL_ADDR_STG.VALID_IND='Y'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/******************* RELEASE 5.6 BR362 - INVALIDATE EMAIL IF IT IS A BAD KEY ************/
COLLECT STATS REF_EMAIL_DATA_IGNORE_$CNTRY
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE PRSNA_EMAIL_ADDR_STG
FROM REF_EMAIL_DATA_IGNORE_$CNTRY B
SET VALID_IND = 'N'
WHERE PRSNA_EMAIL_ADDR_STG.EMAIL_ADDR_TXT = B.EMAIL_ADDR_TXT
AND PRSNA_EMAIL_ADDR_STG.VALID_IND='Y'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*
CREATE VOLATILE MULTISET TABLE INVALID_i10_EMAIL AS (
SELECT
EMAIL_ADDR_TXT                
FROM $DATABASENAME.MAIL_CAMP_RSP_STG_R2   
WHERE RECORD_TYPE='IN'
AND COALESCE(TRIM(EMAIL_ADDR_TXT),'') <> ''
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TSS_PRSNA_IDS_$CNTRY)
UNION
SELECT
EMAIL_ADDR_TXT    
FROM $DATABASENAME.MAIL_CAMP_RSP_STG_R2_HIST   
WHERE RECORD_TYPE='IN'
AND COALESCE(TRIM(EMAIL_ADDR_TXT),'') <> ''
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TSS_PRSNA_IDS_$CNTRY)
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TXT)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE PRSNA_EMAIL_ADDR_STG
FROM INVALID_i10_EMAIL B
SET VALID_IND = 'N'
WHERE PRSNA_EMAIL_ADDR_STG.EMAIL_ADDR_TXT = B.EMAIL_ADDR_TXT
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
*/

/******************************************************************************************
i2 Opt Out 
4.5.3                03/02/2013           TERADATA                        PRB0040960                                                                          

Opt out the consumer from REGIS_PRSNA_EMAIL_ADDR based on the match available 
in ICRM_STAGE_TBL.CNTCT_OPTN_CHCE_STG and ICRM_STAGE_TBL. CNTCT_OPTN_CHCE_STG_HIST.     

The update would need to be done only when the opt out date is the most recent
date compared to the consumer choice date in REGIS_PRSNA_EMAIL_ADDR.
*******************************************************************************************/

--PRB0040960 Start--

SELECT
COUNT(*) AS CNT 
FROM I2_Channels_$CNTRY
HAVING CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO i2OPTOUT
.IF ACTIVITYCOUNT = 0 THEN .GOTO EDW2

.LABEL i2OPTOUT

UPDATE PRSNA_EMAIL_ADDR_STG
FROM	(
SELECT	REGIS_CNSMR_ID_VAL,
MKTNG_PGM_NBR,
CNTCT_POINT_CATEG_CODE,
CNTCT_OPTN_NBR,
SYS_TARGET_ID,
CNSMR_CHCE_DATETM,
SYS_SOURCE 
FROM	$DATABASENAME. I2_Channels_$CNTRY  TEMP1  
QUALIFY RANK() OVER (PARTITION BY REGIS_CNSMR_ID_VAL,MKTNG_PGM_NBR,SYS_TARGET_ID, CNTCT_OPTN_NBR, CNTCT_POINT_CATEG_CODE
ORDER BY CNSMR_CHCE_DATETM DESC, SYS_SOURCE DESC) = 1
GROUP	BY 1,2,3,4,5,6,7) TEMP
SET	CNTCT_OPTN_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'I2USER'
,CNSMR_CHCE_DATETM=CAST(CAST(temp.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0))
,LOAD_ID=TRIM(CAST(TEMP. SYS_SOURCE AS INTEGER))
WHERE PRSNA_EMAIL_ADDR_STG.REGIS_CNSMR_ID_VAL=TEMP.REGIS_CNSMR_ID_VAL
AND PRSNA_EMAIL_ADDR_STG.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND PRSNA_EMAIL_ADDR_STG. SYS_TARGET_ID =TEMP. SYS_TARGET_ID
AND PRSNA_EMAIL_ADDR_STG.CNTCT_OPTN_NBR=TEMP.CNTCT_OPTN_NBR
AND PRSNA_EMAIL_ADDR_STG. CNTCT_POINT_CATEG_CODE =TEMP.CNTCT_POINT_CATEG_CODE
AND PRSNA_EMAIL_ADDR_STG.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND PRSNA_EMAIL_ADDR_STG.CNTCT_OPTN_IND = 'I'
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.LABEL EDW2

--PRB0040960 End  --
/**************** BR252 - Retain VALID_CNTCT_POINT_IND of N in EDW *******************/
CREATE VOLATILE SET TABLE EMAIL_VALID AS (
SELECT	
ADJ.EMAIL_ADDR_TXT,
ADJ.MKTNG_PGM_NBR, 
ADJ.REGIS_PRSNA_ID,
ADJ.VALID_CNTCT_POINT_IND
FROM 
REGIS_PRSNA_EMAIL_ADDR ADJ WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS_$CNTRY TOUT)
AND COALESCE(TRIM(ADJ.EMAIL_ADDR_TXT),'') <> ''
AND ADJ.VALID_CNTCT_POINT_IND='N'
)
WITH DATA
PRIMARY INDEX (EMAIL_ADDR_TXT,MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS EMAIL_VALID
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS EMAIL_VALID
COLUMN EMAIL_ADDR_TXT;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS EMAIL_VALID
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE RP1 AS (
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
TSS_PRSNA_IDS_$CNTRY TOUT
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

COLLECT STATS RP1
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
COLLECT STATS RP1
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

 CREATE VOLATILE MULTISET TABLE MP
AS
(
SEL MKTNG_PGM_NBR FROM MKTNG_PGM
WHERE MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
AND LEGAL_ENT_NBR IN (
SELECT
       CAST(TRIM(AV_CODE) AS INTEGER) AS LEGAL_ENT_NBR
  FROM ATTRIBUTE_VALUES
 WHERE ATTRIBUTE_TYPE_ID IN
 (SEL ATTRIBUTE_TYPE_ID 
 FROM ATTRIBUTE_TYPES
 WHERE ATTRIBUTE_TYPE='Channel Hash')
 AND SYS_ENT_STATE='Active'
 AND ACTIVE_FLAG='Y')
GROUP BY 1
)  WITH DATA
 PRIMARY INDEX (MKTNG_PGM_NBR)
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
   COLLECT STATS MP
   COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
--Below added for Release 6.1: Ankita
 /* This  is commented out as OPT_OUT_DIRECTIVE does not support CNTCT_POINT_CATEG_CODE based opt out.
INSERT INTO $ETL_DB.OPT_OUT_STG_MDM_INTRM
(
LEGAL_ENT_NBR,
MKTNG_PGM_NBR,
OPT_TYPE_CODE,
SUBSCRIPTION_NBR,
FIRST_NAME,
LAST_NAME,
EMAIL_ADDR_TEXT,
CONTACT_PHONE_NBR,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
CITY_NAME                     ,
TERR_NAME                     ,
POSTL_AREA_CODE               ,
CNTRY_NAME                    ,
OPT_TIME,
CHANNEL_IND,
OPT_LEVEL_IND,
LOAD_ID,
NATIONAL_ID_NBR,
DATA_SRCE_NBR,
OPT_IND
)
SELECT DISTINCT
E.LEGAL_ENT_NBR,
A.MKTNG_PGM_NBR,
'6',
A.CNTCT_OPTN_NBR,
NullIf(Trim(C.GVN_NAME),''),
NullIf(Trim(C.FAMLY_NAME),''),
NullIf(Trim(A.EMAIL_ADDR_TXT),'') EMAIL_ADDR_TXT,
NullIf(Trim(D.FULL_PHONE_NUM),'') FULL_PHONE_NUM,
NullIf(Trim(B.ADDR_LINE_1_TXT),''),
NullIf(Trim(B.ADDR_LINE_2_TXT),''),
NullIf(Trim(B.ADDR_LINE_3_TXT),''),
NullIf(Trim(B.CITY_NAME),''),
NullIf(Trim(B.TERR_NAME),''),
NullIf(Trim(B.POSTL_AREA_CODE),''),
NullIf(Trim(B.CNTRY_NAME),''),
A.CNSMR_CHCE_DATETM,
'E',
'R',
A.LOAD_ID,
NullIf(Trim(TRT.PRSNA_TRT_TXT),''),
A.SYS_TARGET_ID AS DATA_SRCE_NBR,
A.CNTCT_OPTN_IND
FROM PRSNA_EMAIL_ADDR_STG A
LEFT JOIN PRSNA_POSTL_ADDR_STG B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
AND B.SYS_SOURCE = A.SYS_SOURCE
AND B.SYS_TARGET_ID = A.SYS_TARGET_ID
LEFT JOIN PRSNA_STG C
ON A.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=C.REGIS_CNSMR_ID_VAL
AND C.SYS_SOURCE = A.SYS_SOURCE
AND C.SYS_TARGET_ID = A.SYS_TARGET_ID
LEFT JOIN PRSNA_PHONE_STG D
ON A.MKTNG_PGM_NBR=D.MKTNG_PGM_NBR
AND A.REGIS_CNSMR_ID_VAL=D.REGIS_CNSMR_ID_VAL
AND D.SYS_SOURCE = A.SYS_SOURCE
AND D.SYS_TARGET_ID = A.SYS_TARGET_ID
LEFT JOIN MKTNG_PGM E
ON A.MKTNG_PGM_NBR=E.MKTNG_PGM_NBR
LEFT OUTER JOIN PRSNA_TRT_STG TRT
ON  TRT.MKTNG_PGM_NBR = A.MKTNG_PGM_NBR
AND TRT.REGIS_CNSMR_ID_VAL = A.REGIS_CNSMR_ID_VAL
AND TRT.SYS_SOURCE = A.SYS_SOURCE
AND TRT.SYS_TARGET_ID = A.SYS_TARGET_ID
AND TRT.TRT_NBR IN (SEL TRT_NBR FROM TRT 
WHERE TRT_NAME='ID - Spanish National'
OR TRT_NAME='ID - Latin America National')
WHERE A.CNTCT_OPTN_IND = 'O'
AND A.LOAD_ID IN (SEL LOAD_ID FROM LOAD_INFO 
WHERE PROCESS_NAME = 'Wrapper' AND CNTRY_NAME='$CNTRY' AND STATUS='In Progress')
 ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
*/
DELETE FROM REGIS_PRSNA_EMAIL_ADDR WHERE
(REGIS_PRSNA_ID,MKTNG_PGM_NBR)
IN
(
SELECT 
TOUT.REGIS_PRSNA_ID,MKTNG_PGM_NBR
FROM
RP1 TOUT);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INS REGIS_PRSNA_EMAIL_ADDR 
(
CNTCT_POINT_CATEG_CODE        ,
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR                 ,
LEGAL_ENT_NBR                 ,
SUBSCRPTN_OPT_NBR             ,
SUBSCRPTN_OPT_IND             ,
CNSMR_CHCE_DATETM             ,
PREF_CNTCT_POINT_IND          ,
EMAIL_ADDR_TXT                ,
EMAIL_ADDR_TXT_HASH           ,
EMAIL_FORMT_CODE              ,
VALID_CNTCT_POINT_IND         ,
GUARDN_NAME                   ,
GUARDN_EMAIL_ADDR_TXT         ,
GUARDN_CNSNT_IND              ,
ACNLGMT_DATE                  ,
SYS_SOURCE                    ,
SYS_TARGET_ID                 ,
SYS_AUTH_ID                   ,
SYS_CREATED_BY                ,
SYS_CREATION_DATE             ,
SYS_LAST_MODIFIED_DATE        ,
SYS_ENT_STATE                 ,
SYS_LAST_MODIFIED_BY          ,
SYS_NC_TYPE                   ,
SYS_ERR_CODE                  ,
SYS_ERR_SVRTY  				  ,
DATA_SRCE_NBR				  ,
EMAIL_STATUS_CODE			  ,
EMAIL_ADDR_TXT_MD5_HASH		  ,
EMAIL_ADDR_TXT_SHA1_HASH	  
)
/*Begin Change R6.2*/
sel 
src.CNTCT_POINT_CATEG_CODE        
,src.REGIS_PRSNA_ID                
,src.MKTNG_PGM_NBR                 
,src.LEGAL_ENT_NBR                 
,src.CNTCT_OPTN_NBR                
,src.CNTCT_OPTN_IND                
,src.CNSMR_CHCE_DATETM             
,src.PREFR_IND                     
,src.EMAIL_ADDR_TXT                
,src.HASHVAL
,src.EMAIL_FORMT_CODE              
,src.VALID_IND                     
,src.GUARDN_NAME                   
,src.GUARDN_EMAIL_ADDR_TXT         
,src.GUARDN_CNSNT_IND              
,src.ACNLGMT_DATE                  
,src.SYS_SOURCE                    
,src.SYS_TARGET_ID                 
,src.SYS_AUTH_ID                   
,src.SYS_CREATED_BY                
,src.SYS_CREATION_DATE             
,src.SYS_LAST_MODIFIED_DATE        
,src.SYS_ENT_STATE                 
,src.SYS_LAST_MODIFIED_BY          
,src.SYS_NC_TYPE                   
,src.SYS_ERR_CODE                  
,src.SYS_ERR_SVRTY                 
,src.SYS_TARGET_ID1               
,src.EMAIL_STATUS_CODE 
,src.EMAIL_ADDR_TXT_MD5_HASH
,src.EMAIL_ADDR_TXT_SHA1_HASH            
/*End Change R6.2*/
from 
(
SELECT *
FROM
(SELECT 
A.CNTCT_POINT_CATEG_CODE        ,
--B.REFERENCE_REGISTRATIONKEY                ,
B.REGIS_PRSNA_ID,
B.MKTNG_PGM_NBR                 ,
B.LEGAL_ENT_NBR                 ,
A.CNTCT_OPTN_NBR             ,
A.CNTCT_OPTN_IND             ,
CAST(A.CNSMR_CHCE_DATETM   AS TIMESTAMP(6))  CNSMR_CHCE_DATETM       ,
A.PREFR_IND          ,
TRIM(A.EMAIL_ADDR_TXT) EMAIL_ADDR_TXT,
CASE WHEN D.MKTNG_PGM_NBR IS NOT NULL
THEN SHA256(TRIM(A.EMAIL_ADDR_TXT))
ELSE NULL
END AS HASHVAL,
A.EMAIL_FORMT_CODE              ,
CASE WHEN C.VALID_CNTCT_POINT_IND='N'
THEN C.VALID_CNTCT_POINT_IND 
ELSE A.VALID_IND END AS  VALID_IND,
A.GUARDN_NAME                   ,
A.GUARDN_EMAIL_ADDR_TXT         ,
A.GUARDN_CNSNT_IND              ,
A.ACNLGMT_DATE                  ,
--A.SYS_SOURCE                  ,
COALESCE(TRIM(CAST(A.LOAD_ID AS INTEGER)),A.SYS_SOURCE) SYS_SOURCE,
A.SYS_TARGET_ID                 ,
A.SYS_AUTH_ID                   ,
A.SYS_CREATED_BY                ,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_CREATION_DATE,
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)) SYS_LAST_MODIFIED_DATE,
A.SYS_ENT_STATE                 ,
A.SYS_LAST_MODIFIED_BY          ,
A.SYS_NC_TYPE                   ,
A.SYS_ERR_CODE                  ,
A.SYS_ERR_SVRTY ,
A.SYS_TARGET_ID SYS_TARGET_ID1,
/*CASE WHEN A.EMAIL_ADDR_TXT IS NULL
     THEN 'IN'
     WHEN A.EMAIL_ADDR_TXT =''
     THEN 'IN'
     ELSE 'AC' END AS EMAIL_STATUS_CODE*/
/*Begin Change R6.2*/
	 (SELECT CAST(TRIM(AV_CODE) AS INTEGER) AS LEGAL_ENT_NBR
                          FROM ATTRIBUTE_VALUES
                        WHERE ATTRIBUTE_TYPE_ID IN  (SEL ATTRIBUTE_TYPE_ID 
                               FROM ATTRIBUTE_TYPES
                               WHERE ATTRIBUTE_TYPE='Russia PII data'
                               AND SYS_ENT_STATE='Active')
                        AND SYS_ENT_STATE='Active'
                        AND ACTIVE_FLAG='Y') as russia_val,
CASE WHEN B.LEGAL_ENT_NBR  <> russia_val AND (COALESCE(TRIM(A.EMAIL_ADDR_TXT),'') = '' AND A.CNTCT_OPTN_IND='I')
     THEN 'NV'
     ELSE 'AC' END AS EMAIL_STATUS_CODE,
/*End Change R6.2*/
CASE WHEN D.MKTNG_PGM_NBR IS NOT NULL
THEN CONVERTHASH(TRIM(A.EMAIL_ADDR_TXT),'MD5','UTF-8')
ELSE NULL
END AS EMAIL_ADDR_TXT_MD5_HASH,
CASE WHEN D.MKTNG_PGM_NBR IS NOT NULL
THEN CONVERTHASH(TRIM(A.EMAIL_ADDR_TXT),'SHA-1','UTF-8')
ELSE NULL
END AS EMAIL_ADDR_TXT_SHA1_HASH
FROM PRSNA_EMAIL_ADDR_STG A
INNER JOIN TSS_PRSNA_IDS_$CNTRY B
	ON	A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR   
	AND	A.REGIS_CNSMR_ID_VAL=B.REGIS_CNSMR_ID_VAL
	AND	A.SYS_SOURCE=B.SYS_SOURCE
	AND	A.SYS_TARGET_ID=B.SYS_TARGET_ID
LEFT OUTER JOIN EMAIL_VALID C
ON B.MKTNG_PGM_NBR=C.MKTNG_PGM_NBR 
AND B.REGIS_PRSNA_ID=C.REGIS_PRSNA_ID
AND A.EMAIL_ADDR_TXT=C.EMAIL_ADDR_TXT
LEFT OUTER JOIN MP D
ON B.MKTNG_PGM_NBR=D.MKTNG_PGM_NBR

QUALIFY RANK() OVER (PARTITION BY B.REGIS_PRSNA_ID,A.CNTCT_POINT_CATEG_CODE,COALESCE(A.CNTCT_OPTN_NBR,0)  
ORDER BY A.SYS_CREATION_DATE DESC
,A.SYS_SOURCE DESC
,A.SYS_NC_TYPE DESC
,A.CNSMR_CHCE_DATETM DESC
) = 1
) A
GROUP BY 1,2,3,4,5,6,7,8,9,10
,11,12,13,14,15,16,17,18,19,20
,21,22,23,24,25,26,27,28,29,30,31,32)src;		
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************************************
i2 Optout Proess
******************************************************************************************************/

CREATE VOLATILE MULTISET TABLE EMAIL_OPTOUT AS (
SEL MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNSMR_CHCE_DATETM,SYS_SOURCE
,COALESCE(SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR1
,REGIS_PRSNA_ID
,CNTCT_POINT_CATEG_CODE
FROM REGIS_PRSNA_EMAIL_ADDR  ADJ
WHERE COALESCE(TRIM(EMAIL_ADDR_TXT),'') <> ''
AND SUBSCRPTN_OPT_IND = 'O'
AND MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
--GROUP BY MKTNG_PGM_NBR,EMAIL_ADDR_TXT,CNSMR_CHCE_DATETM,SYS_SOURCE  --Commented INC0022978:
--,SUBSCRPTN_OPT_NBR1 --Commented INC0022978:
--,REGIS_PRSNA_ID --Commented INC0022978:
--,CNTCT_POINT_CATEG_CODE --Commented INC0022978:
--Added INC0022978: Added below qualify clause
QUALIFY RANK() OVER (PARTITION BY ADJ.MKTNG_PGM_NBR,ADJ.EMAIL_ADDR_TXT, 
SUBSCRPTN_OPT_NBR1,ADJ.CNTCT_POINT_CATEG_CODE
ORDER BY ADJ.CNSMR_CHCE_DATETM DESC,ADJ.SYS_SOURCE DESC,ADJ.REGIS_PRSNA_ID DESC) = 1
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE MULTISET TABLE EMAIL_OPTOUT_T2 AS (
SEL ADJ.MKTNG_PGM_NBR,ADJ.EMAIL_ADDR_TXT,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
,ADJ.REGIS_PRSNA_ID
FROM EMAIL_OPTOUT  ADJ
WHERE EXISTS (SEL 1 FROM REGIS_PRSNA_EMAIL_ADDR PA
WHERE PA.EMAIL_ADDR_TXT=ADJ.EMAIL_ADDR_TXT
AND PA.MKTNG_PGM_NBR=ADJ.MKTNG_PGM_NBR
AND PA.CNSMR_CHCE_DATETM<=ADJ.CNSMR_CHCE_DATETM
AND COALESCE(PA.SUBSCRPTN_OPT_NBR,0) = ADJ.SUBSCRPTN_OPT_NBR1
AND PA.CNTCT_POINT_CATEG_CODE=ADJ.CNTCT_POINT_CATEG_CODE
AND PA.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM TRILLIUM_OUTPUT1_$CNTRY_TEMP)
AND PA.SUBSCRPTN_OPT_IND = 'I'
)
--QUALIFY RANK() OVER (PARTITION BY ADJ.MKTNG_PGM_NBR,ADJ.EMAIL_ADDR_TXT, --Commented INC0022978:
--ADJ.SUBSCRPTN_OPT_NBR1,ADJ.CNTCT_POINT_CATEG_CODE --Commented INC0022978:
--ORDER BY ADJ.CNSMR_CHCE_DATETM DESC,ADJ.SYS_SOURCE DESC,ADJ.REGIS_PRSNA_ID DESC) = 1 --Commented INC0022978:
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

SEL 1 FROM EMAIL_OPTOUT_T2 GROUP BY 1;
.IF ACTIVITYCOUNT = 0 THEN .EXIT

CREATE VOLATILE MULTISET TABLE EMAIL_OPTOUT_T1 AS (
SEL ADJ.MKTNG_PGM_NBR,ADJ.EMAIL_ADDR_TXT,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
FROM EMAIL_OPTOUT_T2 ADJ
GROUP BY ADJ.MKTNG_PGM_NBR,ADJ.EMAIL_ADDR_TXT,ADJ.CNSMR_CHCE_DATETM,ADJ.SYS_SOURCE
,ADJ.SUBSCRPTN_OPT_NBR1
,ADJ.CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX (MKTNG_PGM_NBR,EMAIL_ADDR_TXT,SUBSCRPTN_OPT_NBR1,CNTCT_POINT_CATEG_CODE)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM EMAIL_OPTOUT_T1 TEMP
SET	SUBSCRPTN_OPT_IND = 'O'
,SYS_LAST_MODIFIED_DATE= CURRENT_DATE
,SYS_LAST_MODIFIED_BY = 'i2 Optout'
,CNSMR_CHCE_DATETM=TEMP.CNSMR_CHCE_DATETM
,SYS_SOURCE=TEMP.SYS_SOURCE
WHERE REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR=TEMP.MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_ADDR_TXT=  TEMP.EMAIL_ADDR_TXT
AND REGIS_PRSNA_EMAIL_ADDR.CNTCT_POINT_CATEG_CODE=TEMP.CNTCT_POINT_CATEG_CODE
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_IND = 'I'
AND REGIS_PRSNA_EMAIL_ADDR.CNSMR_CHCE_DATETM<=TEMP.CNSMR_CHCE_DATETM
AND REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR = TEMP.SUBSCRPTN_OPT_NBR1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit