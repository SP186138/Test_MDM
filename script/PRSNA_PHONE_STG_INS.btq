/***********************************************************************************************************
SCRIPT:               PRSNA_PHONE_STG_INS.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        Change OF Failure-BadFile
3.00                 10/31/2011           TERADATA                        Removal of Deletes as  part of ||elism
4.00                 03/26/2012		  TERADATA                        Made change in insert to LOAD_INFO to
                                                                          manipulate LA data
6.2					28/12/2017			 TERADATA						RELEASE 6.2 change in V_CNTCT_OPTN_CHCE table 																		  
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD
 
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

CREATE VOLATILE TABLE V_PRSNA_PHONE
AS
(
SELECT A.* FROM 
$ETL_DB.PRSNA_PHONE_STG  A 
JOIN
 VALIDATION_$BTCH B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

/*Changed definition below for I2txt R6.2
CREATE VOLATILE TABLE V_CNTCT_OPTN_CHCE AS
(
SELECT A.* FROM $ETL_DB.CNTCT_OPTN_CHCE_STG  A 
JOIN
 VALIDATION_$BTCH B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
*/

CREATE VOLATILE TABLE V_CNTCT_OPTN_CHCE AS
(
SELECT 

A.MKTNG_PGM_NBR,
A.REGIS_CNSMR_ID_VAL,
A.CNTCT_POINT_CATEG_CODE,
A.LOAD_ID,
A.RECORD_IND,
COALESCE(C. CNTCT_POINT_TYPE_CODE ,A.CNTCT_POINT_TYPE_CODE) AS CNTCT_POINT_TYPE_CODE,
A.CNTCT_OPTN_NBR,
A.CNTCT_OPTN_IND, 
A.CNSMR_CHCE_DATETM,   
A.GUARDN_NAME, 
A.GUARDN_EMAIL_ADDR_TXT, 
A.GUARDN_CNSNT_IND, 
A.ACNLGMT_DATE
FROM $ETL_DB.CNTCT_OPTN_CHCE_STG  A 
JOIN
VALIDATION_$BTCH B
ON A.LOAD_ID = B.LOAD_ID
LEFT JOIN MDM.CNTCT_POINT_CATEG C
ON A.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE


INSERT INTO PRSNA_PHONE_STG
(MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
CNTCT_POINT_CATEG_CODE,
PHONE_CNTRY_NBR,
PHONE_AREA_NBR,
PHONE_EXCHG_NBR,
PHONE_LINE_NBR,
PHONE_EXTSN_NUM,
FULL_PHONE_NUM,
SMS_PREFR_IND,
SMS_AVAIL_START_TIME,
SMS_AVAIL_END_TIME,
PREFR_IND,
VALID_IND,
RECORD_IND,
LOAD_ID,
LOAD_TS,
MDM_LOAD_IND,
SYNC_STATUS,
CNTCT_OPTN_IND,
CNTCT_OPTN_NBR,
CNSMR_CHCE_DATETM,
GUARDN_NAME,
GUARDN_EMAIL_ADDR_TXT,
GUARDN_CNSNT_IND,
ACNLGMT_DATE,
SYS_TARGET_ID,
SYS_SOURCE,
SYS_NC_TYPE,
SYS_CREATION_DATE )
SELECT
STG.MKTNG_PGM_NBR,
STG.REGIS_CNSMR_ID_VAL,
STG.CNTCT_POINT_CATEG_CODE,
STG.PHONE_CNTRY_NBR,
STG.PHONE_AREA_NBR,
STG.PHONE_EXCHG_NBR,
STG.PHONE_LINE_NBR,
STG.PHONE_EXTSN_NUM,
STG.FULL_PHONE_NUM,
STG.SMS_PREFR_IND,
STG.SMS_AVAIL_START_TIME,
STG.SMS_AVAIL_END_TIME,
CASE WHEN (stg.PREFR_IND NOT IN ('N','Y') OR stg.PREFR_IND IS NULL) THEN 'Y' ELSE stg.PREFR_IND END, 
CASE WHEN (stg.VALID_IND NOT IN ('N','Y') OR stg.VALID_IND IS NULL) THEN 'Y' ELSE stg.VALID_IND END, 

STG.RECORD_IND,
STG.LOAD_ID,
STG.LOAD_TS,
STG.MDM_LOAD_IND,
'VALIDATED',
CASE WHEN C.CNTCT_OPTN_IND = 'Y' THEN 'I'
     WHEN C.CNTCT_OPTN_IND = 'N' THEN 'O'
     ELSE C.CNTCT_OPTN_IND  END,
C.CNTCT_OPTN_NBR,
CAST(CAST(C.CNSMR_CHCE_DATETM AS VARCHAR(19)) AS TIMESTAMP(0)),
C.GUARDN_NAME,
C.GUARDN_EMAIL_ADDR_TXT,
C.GUARDN_CNSNT_IND,
C.ACNLGMT_DATE,
B.SOURCE_ID,
TRIM(CAST(STG.LOAD_ID AS INTEGER)),
CASE WHEN (STG.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
STG.LOAD_TS
FROM
V_PRSNA_PHONE STG
LEFT OUTER  JOIN
V_CNTCT_OPTN_CHCE C
ON
STG.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND
STG.REGIS_CNSMR_ID_VAL = C.REGIS_CNSMR_ID_VAL
AND
STG.CNTCT_POINT_CATEG_CODE=C.CNTCT_POINT_CATEG_CODE
AND
STG.LOAD_ID = C.LOAD_ID
AND
STG.RECORD_IND = C.RECORD_IND

 
JOIN
LOAD_CONTROL B
ON
STG.LOAD_ID = B.LOAD_ID
where
(STG.MKTNG_PGM_NBR, STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID) not in
(select MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID from VALIDATION_ERR_$BTCH group by 1,2,3)
AND (C.CNTCT_POINT_TYPE_CODE IN (SEL AV_CODE  FROM ATTRIBUTE_VALUES B
WHERE B.AV_DESCRIPTION='Telephone Number')
OR (C.MKTNG_PGM_NBR IS NULL AND C.REGIS_CNSMR_ID_VAL
 IS NULL))
QUALIFY RANK() OVER(PARTITION BY STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,b.SOURCE_ID
ORDER BY STG.LOAD_ID DESC) = 1;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

.EXIT
