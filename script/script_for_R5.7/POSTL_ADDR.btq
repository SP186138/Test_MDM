/***********************************************************************************************************
SCRIPT:               POSTAL_ADDR.BTEQ  
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES -- This scripts takes data friom ICRM_STAGE.EXTRN_POSTL_ADDR_STG 
                                                      and loads POSTL_ADDR and the following tables 
                                                      a.	REGIS_PRSNA_POSTL_ADDR
						      b.	MATCHD_CNSMR_POSTL_ADDR
						      c.	REGIS_PRSNA_OPT_HIST
						      d.	STORE

DEPENDENCY:           
INPUT:                ICRM_STAGE.EXTRN_POSTL_ADDR_STG
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
5.7                  03/24/2016           TERADATA                        Release 5.7 - Update standardized address
                                                                          in case of external standardization
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;      
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=i20bMDM;Country=$CNTRY;Stage=ExtrnStdrdPostlUpdate;Step=Step01;' FOR SESSION; 
DATABASE $DATABASENAME;

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
BATCH_ID) 
SELECT
LOAD.LOAD_ID,
'ExtrnStdrd Postl Update',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'In Progress',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
LI.BATCH_ID
FROM $DATABASENAME.MDM_LOAD_CONTROL LOAD
LEFT OUTER JOIN LOAD_INFO LI
ON LOAD.LOAD_ID = LI.LOAD_ID

WHERE LI.LOAD_ID IS NULL
AND LOAD.LOAD_ID=$LOADID
GROUP BY
LOAD.LOAD_ID,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR
AS
(
SELECT DISTINCT
A.POSTL_ADDR_ID                 ,
A.EXTRACT_ID                    ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL               ,
A.DR_CLEANSE_LVL                ,
A.LAT_MEAS                      ,
A.LONG_MEAS                     ,
A.GL_ACCURACY                   ,
A.GL_MATCH_FLG                  ,
A.Filler1                       ,
A.Filler2                       ,
A.Filler3                       ,
A.Filler4                       ,
A.Filler5                       ,
A.Filler6                       ,
A.Filler7                       ,
A.Filler8                       ,
A.Filler9                       ,
A.Filler10                      ,
A.VALID_ADDR_IND                ,
A.SOURCE_ID                     ,
A.LOAD_ID                       ,
A.LOAD_TS                       ,
A.MDM_LOAD_IND                  
,CASE WHEN TR.TERR_RECODE IS NOT NULL
            THEN TR.TERR_RECODE
            ELSE A.TERR_NAME
  END AS TERR_NAME_INITIAL
,TERR_NAME_INITIAL AS TERR_CODE
,TERR_NAME_INITIAL AS TERR_NAME
,CAST('' AS VARCHAR(50)) AS CITY_CODE 
,CAST('' AS VARCHAR(1)) AS TQ_GOUT_MATCH_LEVEL 
,CAST('' AS VARCHAR(1)) AS PR_REV_GROUP 
FROM 
$ETL_DB.EXTRN_POSTL_ADDR_STG  A 
  INNER JOIN LOAD_INFO B
  ON A.LOAD_ID=B.LOAD_ID
  AND B.PROCESS_NAME='ExtrnStdrd Postl Update'
  AND B.STATUS = 'In Progress'
LEFT OUTER JOIN TERR_RECODE TR
ON A.TERR_NAME = TR.TERR
AND A.CNTRY_CODE = TR.CNTRY  )
WITH DATA
PRIMARY INDEX ( POSTL_ADDR_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

COLLECT STATS V_PRSNA_POSTL_ADDR
COLUMN POSTL_ADDR_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
COLLECT STATS V_PRSNA_POSTL_ADDR
COLUMN POSTL_AREA_CODE;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
COLLECT STATS V_PRSNA_POSTL_ADDR
COLUMN CNTRY_CODE;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
COLLECT STATS V_PRSNA_POSTL_ADDR
COLUMN CITY_NAME;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
COLLECT STATS V_PRSNA_POSTL_ADDR
COLUMN TERR_CODE;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for Europe - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT if TERR_CODE not sent by Trillium
**********************************************************************************************/
UPDATE V_PRSNA_POSTL_ADDR FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = CASE WHEN COALESCE(TRIM(V_PRSNA_POSTL_ADDR.TERR_CODE),'')=''
                     THEN T.TERR_CODE
                     ELSE V_PRSNA_POSTL_ADDR.TERR_CODE
                 END
,CITY_CODE = CASE WHEN COALESCE(TRIM(V_PRSNA_POSTL_ADDR.CITY_CODE),'')=''
                     THEN T.CITY_CODE
                     ELSE V_PRSNA_POSTL_ADDR.CITY_CODE
                 END
,CITY_NAME = CASE WHEN COALESCE(TRIM(V_PRSNA_POSTL_ADDR.CITY_NAME),'')=''
                     THEN T.CITY_NAME
                     ELSE V_PRSNA_POSTL_ADDR.CITY_NAME
                 END                 
WHERE V_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE = T.CNTRY_CODE
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
Update TERR_CODE from POSTL_AREA for GBR - if TERR_CODE sent by Trillium does not exist
in TERR.
**********************************************************************************************/
UPDATE V_PRSNA_POSTL_ADDR FROM 
(SEL T.POSTL_AREA_CODE,T.CNTRY_CODE,
--T.TERR_CODE,T.CITY_CODE,C.CITY_NAME --PRB0041004
T.TERR_CODE,T.CITY_CODE,COALESCE( NULLIF(C.CITY_NAME_NTV,''),C.CITY_NAME) AS CITY_NAME --PRB0041004
FROM
POSTL_AREA T
INNER JOIN CITY C
ON T.CITY_CODE=C.CITY_CODE
AND T.TERR_CODE=C.TERR_CODE
WHERE T.CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF')
AND (T.POSTL_AREA_CODE,T.CNTRY_CODE) NOT IN (SEL POSTL_AREA_CODE,CNTRY_CODE FROM
(SEL CNTRY_CODE,TERR_CODE,POSTL_AREA_CODE,CITY_CODE
FROM POSTL_AREA
WHERE CNTRY_CODE IN(
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF')
GROUP BY 1,2,3,4) B
GROUP BY 1,2
HAVING COUNT(*) >1)
GROUP BY 1,2,3,4,5
) T
SET TERR_CODE = T.TERR_CODE
,CITY_CODE = T.CITY_CODE
,CITY_NAME = T.CITY_NAME           
WHERE V_PRSNA_POSTL_ADDR.POSTL_AREA_CODE = T.POSTL_AREA_CODE
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE = T.CNTRY_CODE
AND V_PRSNA_POSTL_ADDR.TERR_CODE NOT IN 
(SEL TERR_CODE FROM TERR WHERE CNTRY_CODE IN 
('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF')) 
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE IN ('RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the CITY_CODE from the CITY reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/
UPDATE V_PRSNA_POSTL_ADDR FROM CITY C
SET CITY_CODE = C.CITY_CODE
--WHERE V_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME --PRB0041004
WHERE (V_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME--PRB0041004
OR V_PRSNA_POSTL_ADDR.CITY_NAME = C.CITY_NAME_NTV)--PRB0041004
AND V_PRSNA_POSTL_ADDR.TERR_CODE = C.TERR_CODE 
AND NULLIF(TRIM(V_PRSNA_POSTL_ADDR.CITY_CODE),'') IS NULL
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*********************************************************************************************
This update is to populate the TERR_NAME from the TERR reference table FOR USA and CAN
Europe Included - RUS,POL,HUN,LUX,FRA,BEL,NLD,ITA,GRC,
AUT,CHE,DEU,ESP,IRL,DNK,FIN,NOR,SWE,GBR,PRT
**********************************************************************************************/

UPDATE V_PRSNA_POSTL_ADDR FROM TERR T
--SET TERR_NAME = T.TERR_NAME --PRB0041004
SET TERR_NAME = COALESCE( NULLIF(T.TERR_NAME_NTV,''),T.TERR_NAME) --PRB0041004
WHERE V_PRSNA_POSTL_ADDR.TERR_CODE = T.TERR_CODE
AND V_PRSNA_POSTL_ADDR.CNTRY_CODE IN('USA','CAN',
'RUS','POL','HUN','LUX','FRA',
'BEL','NLD','ITA','GRC','AUT',
'CHE','DEU','ESP','IRL','DNK',
'FIN','NOR','SWE','GBR','PRT','TUR','BRA','ARE','BHR','KWT','OMN','QAT','SAU','YEM'
,'EGY','ISR','KEN','MAR','NGA','ROU','ZAF');

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

MERGE INTO POSTL_ADDR A
USING
(SELECT DISTINCT POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_CODE                    ,
PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
VALID_ADDR_IND,
TERR_CODE,
CITY_CODE,
TRIM(CAST(LOAD_ID AS INTEGER)) SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR)
AS SRC
(
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_CODE                    ,
V_PR_GEOCODE_FAIL,
V_TQ_GOUT_MATCH_LEVEL,
V_PR_REV_GROUP,
V_LAT_MEAS,
V_LONG_MEAS,
V_GL_ACCURACY,
V_GL_MATCH_FLG,
V_DR_CLEANSE_LVL,
V_VALID_ADDR_IND,
V_TERR_CODE,
V_CITY_CODE,
V_SYS_SOURCE                    
)

ON POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN MATCHED THEN 
UPDATE
SET
ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
STRET_NUM=V_STRET_NUM, 
STRET_NAME=V_STRET_NAME,
APT_NUM=V_APT_NUM,
PO_BOX_NUM=V_PO_BOX_NUM,
CITY_NAME=V_CITY_NAME,
TERR_NAME=V_TERR_NAME,
POSTL_AREA_CODE=V_POSTL_AREA_CODE,
CNTRY_CODE=V_CNTRY_CODE,
PR_GEOCODE_FAIL=V_PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL=V_TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP=V_PR_REV_GROUP,
LAT_MEAS=V_LAT_MEAS,
LONG_MEAS=V_LONG_MEAS,
GL_ACCURACY=V_GL_ACCURACY,
GL_MATCH_FLG=V_GL_MATCH_FLG,
DR_CLEANSE_LVL=V_DR_CLEANSE_LVL,
VALID_ADDR_IND=V_VALID_ADDR_IND,
TERR_CODE=V_TERR_CODE,
CITY_CODE=V_CITY_CODE,
LOG_SOURCE_ID=CAST(V_SYS_SOURCE AS INTEGER),
LOG_UPDATE_USER='I20B',
POSTL_STRD_STATUS_CD='SD'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR1
AS
(
SELECT  
B.MKTNG_PGM_NBR,
B.REGIS_PRSNA_ID,
B.CNTCT_POINT_CATEG_CODE,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)) SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR A
INNER JOIN REGIS_PRSNA_POSTL_ADDR B
ON A.POSTL_ADDR_ID=B.POSTL_ADDR_ID
GROUP BY 
B.MKTNG_PGM_NBR,
B.REGIS_PRSNA_ID,
B.CNTCT_POINT_CATEG_CODE,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)))
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR, REGIS_PRSNA_ID )
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

COLLECT STATS V_PRSNA_POSTL_ADDR1
COLUMN MKTNG_PGM_NBR;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE
COLLECT STATS V_PRSNA_POSTL_ADDR1
COLUMN REGIS_PRSNA_ID;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

MERGE INTO REGIS_PRSNA_POSTL_ADDR A
USING
(SELECT  
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_CODE                    ,
PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
VALID_ADDR_IND,
TERR_CODE,
CITY_CODE,
SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR1)
AS SRC
(
V_MKTNG_PGM_NBR,
V_REGIS_PRSNA_ID,
V_CNTCT_POINT_CATEG_CODE,
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_CODE                    ,
V_PR_GEOCODE_FAIL,
V_TQ_GOUT_MATCH_LEVEL,
V_PR_REV_GROUP,
V_LAT_MEAS,
V_LONG_MEAS,
V_GL_ACCURACY,
V_GL_MATCH_FLG,
V_DR_CLEANSE_LVL,
V_VALID_ADDR_IND,
V_TERR_CODE,
V_CITY_CODE,
V_SYS_SOURCE                    
)

ON MKTNG_PGM_NBR=V_MKTNG_PGM_NBR
AND REGIS_PRSNA_ID=V_REGIS_PRSNA_ID
AND CNTCT_POINT_CATEG_CODE=V_CNTCT_POINT_CATEG_CODE
AND POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN MATCHED THEN 
UPDATE
SET
ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
STRET_NUM=V_STRET_NUM, 
STRET_NAME=V_STRET_NAME,
APT_NUM=V_APT_NUM,
PO_BOX_NUM=V_PO_BOX_NUM,
CITY_NAME=V_CITY_NAME,
TERR_NAME=V_TERR_NAME,
POSTL_AREA_CODE=V_POSTL_AREA_CODE,
CNTRY_CODE=V_CNTRY_CODE,
PR_GEOCODE_FAIL=V_PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL=V_TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP=V_PR_REV_GROUP,
LAT_MEAS=V_LAT_MEAS,
LONG_MEAS=V_LONG_MEAS,
GL_ACCURACY=V_GL_ACCURACY,
GL_MATCH_FLG=V_GL_MATCH_FLG,
DR_CLEANSE_LVL=V_DR_CLEANSE_LVL,
VALID_CNTCT_POINT_IND=V_VALID_ADDR_IND,
TERR_CODE=V_TERR_CODE,
CITY_CODE=V_CITY_CODE,
SYS_SOURCE=V_SYS_SOURCE,
SYS_LAST_MODIFIED_BY='I20B',
SYS_LAST_MODIFIED_DATE=CURRENT_TIMESTAMP(0)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT EXTRN_PRSNA_IDS 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE)
SELECT DISTINCT 
MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE                  
FROM V_PRSNA_POSTL_ADDR1
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR2
AS
(
SELECT  
B.LEGAL_ENT_NBR,
B.MATCHD_CNSMR_PRSNA_ID,
B.CNTCT_POINT_CATEG_CODE,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)) SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR A
INNER JOIN MATCHD_CNSMR_POSTL_ADDR B
ON A.POSTL_ADDR_ID=B.POSTL_ADDR_ID
GROUP BY
B.LEGAL_ENT_NBR,
B.MATCHD_CNSMR_PRSNA_ID,
B.CNTCT_POINT_CATEG_CODE,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)))
WITH DATA
PRIMARY INDEX ( LEGAL_ENT_NBR, MATCHD_CNSMR_PRSNA_ID )
PARTITION BY LEGAL_ENT_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

MERGE INTO MATCHD_CNSMR_POSTL_ADDR A
USING
(SELECT  
LEGAL_ENT_NBR,
MATCHD_CNSMR_PRSNA_ID,
CNTCT_POINT_CATEG_CODE,
POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_CODE                    ,
PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
VALID_ADDR_IND,
TERR_CODE,
CITY_CODE,
SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR2)
AS SRC
(
 V_LEGAL_ENT_NBR,
 V_MATCHD_CNSMR_PRSNA_ID,
 V_CNTCT_POINT_CATEG_CODE,
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_CODE                    ,
V_PR_GEOCODE_FAIL,
V_TQ_GOUT_MATCH_LEVEL,
V_PR_REV_GROUP,
V_LAT_MEAS,
V_LONG_MEAS,
V_GL_ACCURACY,
V_GL_MATCH_FLG,
V_DR_CLEANSE_LVL,
V_VALID_ADDR_IND,
V_TERR_CODE,
V_CITY_CODE,
V_SYS_SOURCE                    
)

ON  LEGAL_ENT_NBR=V_LEGAL_ENT_NBR
AND MATCHD_CNSMR_PRSNA_ID=V_MATCHD_CNSMR_PRSNA_ID
AND CNTCT_POINT_CATEG_CODE=V_CNTCT_POINT_CATEG_CODE
AND POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN MATCHED THEN 
UPDATE
SET
ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
STRET_NUM=V_STRET_NUM, 
STRET_NAME=V_STRET_NAME,
APT_NUM=V_APT_NUM,
PO_BOX_NUM=V_PO_BOX_NUM,
CITY_NAME=V_CITY_NAME,
TERR_NAME=V_TERR_NAME,
POSTL_AREA_CODE=V_POSTL_AREA_CODE,
CNTRY_CODE=V_CNTRY_CODE,
LAT_MEAS=V_LAT_MEAS,
LONG_MEAS=V_LONG_MEAS,
VALID_CNTCT_POINT_IND=V_VALID_ADDR_IND,
TERR_CODE=V_TERR_CODE,
CITY_CODE=V_CITY_CODE,
SYS_SOURCE=V_SYS_SOURCE,
SYS_LAST_MODIFIED_BY='I20B',
SYS_LAST_MODIFIED_DATE=CURRENT_TIMESTAMP(0)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR3
AS
(
SELECT DISTINCT 
B.MKTNG_PGM_NBR,
B.REGIS_PRSNA_ID,
B.LEGAL_ENT_NBR,
B.SUBSCRIPTION_NBR,
B.CHANNEL_IND,
B.OPT_LEVEL_IND, 
B.OPT_TIME ,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)) SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR A
INNER JOIN REGIS_PRSNA_OPT_HIST B
ON A.POSTL_ADDR_ID=B.POSTL_ADDR_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR, REGIS_PRSNA_ID )
PARTITION BY MKTNG_PGM_NBR
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

MERGE INTO REGIS_PRSNA_OPT_HIST A
USING
(SELECT 
REGIS_PRSNA_ID,
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
SUBSCRIPTION_NBR,
CHANNEL_IND,
OPT_LEVEL_IND, 
OPT_TIME ,
POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_CODE                    ,
PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
VALID_ADDR_IND,
TERR_CODE,
CITY_CODE,
SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR3)
AS SRC
(
 V_REGIS_PRSNA_ID,
 V_MKTNG_PGM_NBR,
 V_LEGAL_ENT_NBR,
 V_SUBSCRIPTION_NBR,
 V_CHANNEL_IND,
 V_OPT_LEVEL_IND, 
 V_OPT_TIME ,
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_CODE                    ,
V_PR_GEOCODE_FAIL,
V_TQ_GOUT_MATCH_LEVEL,
V_PR_REV_GROUP,
V_LAT_MEAS,
V_LONG_MEAS,
V_GL_ACCURACY,
V_GL_MATCH_FLG,
V_DR_CLEANSE_LVL,
V_VALID_ADDR_IND,
V_TERR_CODE,
V_CITY_CODE,
V_SYS_SOURCE                    
)

ON POSTL_ADDR_ID=V_POSTL_ADDR_ID
AND REGIS_PRSNA_ID=V_REGIS_PRSNA_ID
AND MKTNG_PGM_NBR=V_MKTNG_PGM_NBR
AND LEGAL_ENT_NBR=V_LEGAL_ENT_NBR
AND SUBSCRIPTION_NBR=V_SUBSCRIPTION_NBR
AND CHANNEL_IND=V_CHANNEL_IND
AND OPT_LEVEL_IND=V_OPT_LEVEL_IND
AND OPT_TIME=V_OPT_TIME 

WHEN MATCHED THEN 
UPDATE
SET
ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
CITY_NAME=V_CITY_NAME,
TERR_NAME=V_TERR_NAME,
POSTL_AREA_CODE=V_POSTL_AREA_CODE,
CNTRY_NAME=V_CNTRY_CODE,
LOG_SOURCE_ID=CAST(V_SYS_SOURCE AS INTEGER),
LOG_UPDATE_USER='I20B'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE V_PRSNA_POSTL_ADDR4
AS
(
SELECT  
B.STORE_NBR,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)) SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR A
INNER JOIN STORE B
ON A.POSTL_ADDR_ID=B.POSTL_ADDR_ID
GROUP BY
B.STORE_NBR,
A.POSTL_ADDR_ID                 ,
A.ADDR_LINE_1_TXT               ,
A.ADDR_LINE_2_TXT               ,
A.ADDR_LINE_3_TXT               ,
A.STRET_NUM                     ,
A.STRET_NAME                    ,
A.APT_NUM                       ,
A.PO_BOX_NUM                    ,
A.CITY_NAME                     ,
A.POSTL_AREA_CODE               ,
A.TERR_NAME                     ,
A.CNTRY_CODE                    ,
A.PR_GEOCODE_FAIL,
A.TQ_GOUT_MATCH_LEVEL,
A.PR_REV_GROUP,
A.LAT_MEAS,
A.LONG_MEAS,
A.GL_ACCURACY,
A.GL_MATCH_FLG,
A.DR_CLEANSE_LVL,
A.VALID_ADDR_IND,
A.TERR_CODE,
A.CITY_CODE,
TRIM(CAST(A.LOAD_ID AS INTEGER)))
WITH DATA
PRIMARY INDEX ( STORE_NBR )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

MERGE INTO STORE A
USING
(SELECT  
STORE_NBR,
POSTL_ADDR_ID                 ,
ADDR_LINE_1_TXT               ,
ADDR_LINE_2_TXT               ,
ADDR_LINE_3_TXT               ,
STRET_NUM                     ,
STRET_NAME                    ,
APT_NUM                       ,
PO_BOX_NUM                    ,
CITY_NAME                     ,
POSTL_AREA_CODE               ,
TERR_NAME                     ,
CNTRY_CODE                    ,
PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP,
LAT_MEAS,
LONG_MEAS,
GL_ACCURACY,
GL_MATCH_FLG,
DR_CLEANSE_LVL,
VALID_ADDR_IND,
TERR_CODE,
CITY_CODE,
SYS_SOURCE                    
FROM V_PRSNA_POSTL_ADDR4)
AS SRC
(
V_STORE_NBR,
 V_POSTL_ADDR_ID                 ,
 V_ADDR_LINE_1_TXT               ,
 V_ADDR_LINE_2_TXT               ,
 V_ADDR_LINE_3_TXT               ,
 V_STRET_NUM                     ,
 V_STRET_NAME                    ,
 V_APT_NUM                       ,
 V_PO_BOX_NUM                    ,
 V_CITY_NAME                     ,
 V_POSTL_AREA_CODE               ,
 V_TERR_NAME                     ,
 V_CNTRY_CODE                    ,
V_PR_GEOCODE_FAIL,
V_TQ_GOUT_MATCH_LEVEL,
V_PR_REV_GROUP,
V_LAT_MEAS,
V_LONG_MEAS,
V_GL_ACCURACY,
V_GL_MATCH_FLG,
V_DR_CLEANSE_LVL,
V_VALID_ADDR_IND,
V_TERR_CODE,
V_CITY_CODE,
V_SYS_SOURCE                    
)

ON STORE_NBR=V_STORE_NBR
AND POSTL_ADDR_ID=V_POSTL_ADDR_ID

WHEN MATCHED THEN 
UPDATE
SET
ADDR_LINE_1_TXT=V_ADDR_LINE_1_TXT,
ADDR_LINE_2_TXT=V_ADDR_LINE_2_TXT,
ADDR_LINE_3_TXT=V_ADDR_LINE_3_TXT,
STRET_NUM=V_STRET_NUM, 
STRET_NAME=V_STRET_NAME,
APT_NUM=V_APT_NUM,
PO_BOX_NUM=V_PO_BOX_NUM,
CITY_NAME=V_CITY_NAME,
TERR_NAME=V_TERR_NAME,
POSTL_AREA_CODE=V_POSTL_AREA_CODE,
CNTRY_CODE=V_CNTRY_CODE,
PR_GEOCODE_FAIL=V_PR_GEOCODE_FAIL,
TQ_GOUT_MATCH_LEVEL=V_TQ_GOUT_MATCH_LEVEL,
PR_REV_GROUP=V_PR_REV_GROUP,
LAT_MEAS=V_LAT_MEAS,
LONG_MEAS=V_LONG_MEAS,
GL_ACCURACY=V_GL_ACCURACY,
GL_MATCH_FLG=V_GL_MATCH_FLG,
DR_CLEANSE_LVL=V_DR_CLEANSE_LVL,
VALID_CNTCT_POINT_IND=V_VALID_ADDR_IND,
TERR_CODE=V_TERR_CODE,
CITY_CODE=V_CITY_CODE,
LOG_SOURCE_ID=CAST(V_SYS_SOURCE AS INTEGER),
LOG_UPDATE_USER='I20B'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO $DATABASENAME.LOAD_INFO
(
LOAD_ID,
PROCESS_NAME,
PROCESS_START_TIME,
PROCESS_END_TIME,
STATUS,
SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE,
CNTRY_NAME,
BATCH_ID) 
SELECT
CAST(TRIM(ERR1.SYS_SOURCE) AS INTEGER),
'Trillium',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
'Ready to Process',
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19)),
CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END AS CNTRY,
LI.BATCH_ID
FROM EXTRN_PRSNA_IDS ERR1
INNER JOIN MKTNG_PGM MP
ON ERR1.MKTNG_PGM_NBR = MP.MKTNG_PGM_NBR
INNER JOIN LOAD_INFO LI
ON CAST(TRIM(ERR1.SYS_SOURCE) AS INTEGER) = LI.LOAD_ID
AND LI.PROCESS_NAME='ExtrnStdrd Postl Update'
AND LI.STATUS = 'In Progress'
LEFT OUTER JOIN LOAD_INFO LII
ON CAST(TRIM(ERR1.SYS_SOURCE) AS INTEGER) = LII.LOAD_ID
AND LII.PROCESS_NAME='Trillium'

WHERE LII.LOAD_ID IS NULL
GROUP BY
CAST(TRIM(ERR1.SYS_SOURCE) AS INTEGER),
CNTRY,
LI.BATCH_ID
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Success'
,PROCESS_END_TIME=CURRENT_TIMESTAMP(0)
where 
PROCESS_NAME = 'ExtrnStdrd Postl Update' 
AND STATUS = 'In Progress';
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


.exit