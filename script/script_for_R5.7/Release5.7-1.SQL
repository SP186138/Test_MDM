.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
.SET SESSION CHARSET 'UTF8' ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.GOTO $Step

.LABEL L0
DEL FROM MDM.ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active'
					 AND AV_CODE='YY';
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;					 
.LABEL L1					 
 CREATE VOLATILE MULTISET TABLE RP_DP_SUB_AC1
AS
(
SELECT
    T1.REGIS_PRSNA_ID,T1.MATCHD_CNSMR_PRSNA_ID,T1.MKTNG_PGM_NBR,T1.PRSNA_STATUS_CODE,'EMAIL' AS CHANNEL
FROM
    REGIS_PRSNA T1
WHERE
    (REGIS_PRSNA_ID,MKTNG_PGM_NBR) IN
    (SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR
    FROM
        REGIS_PRSNA_EMAIL_ADDR
    WHERE
        SUBSCRPTN_OPT_IND='I'
        AND EMAIL_STATUS_CODE='AC'
    )
    AND PRSNA_STATUS_CODE<>'AC'
	UNION
	SELECT
    T1.REGIS_PRSNA_ID,T1.MATCHD_CNSMR_PRSNA_ID,T1.MKTNG_PGM_NBR,T1.PRSNA_STATUS_CODE,'POSTL'
FROM
    REGIS_PRSNA T1
WHERE
    (REGIS_PRSNA_ID,MKTNG_PGM_NBR) IN
    (SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR
    FROM
        REGIS_PRSNA_POSTL_ADDR
    WHERE
        SUBSCRPTN_OPT_IND='I'
        AND POSTL_STATUS_CODE='AC'
    )
    AND PRSNA_STATUS_CODE<>'AC'
	UNION
	SELECT
    T1.REGIS_PRSNA_ID,T1.MATCHD_CNSMR_PRSNA_ID,T1.MKTNG_PGM_NBR,T1.PRSNA_STATUS_CODE,'PHONE'
FROM
    REGIS_PRSNA T1
WHERE
    (REGIS_PRSNA_ID,MKTNG_PGM_NBR) IN
    (SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR
    FROM
        REGIS_PRSNA_PHONE
    WHERE
        SUBSCRPTN_OPT_IND='I'
        AND PHONE_STATUS_CODE='AC'
    )
    AND PRSNA_STATUS_CODE<>'AC'
	UNION
	SELECT
    T1.REGIS_PRSNA_ID,T1.MATCHD_CNSMR_PRSNA_ID,T1.MKTNG_PGM_NBR,T1.PRSNA_STATUS_CODE,'SOCAL'
FROM
    REGIS_PRSNA T1
WHERE
    (REGIS_PRSNA_ID,MKTNG_PGM_NBR) IN
    (SELECT REGIS_PRSNA_ID,MKTNG_PGM_NBR
    FROM
        REGIS_PRSNA_SOC_NET_ACCT
    WHERE
        SUBSCRPTN_OPT_IND='I'
        AND SOC_NET_STATUS_CODE='AC'
    )
    AND PRSNA_STATUS_CODE<>'AC'
)  WITH DATA
 PRIMARY INDEX (REGIS_PRSNA_ID)
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L2
  COLLECT STATS RP_DP_SUB_AC1
  COLUMN MATCHD_CNSMR_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
   COLLECT STATS RP_DP_SUB_AC1
   COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
   COLLECT STATS RP_DP_SUB_AC1
   COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 
 .LABEL L3
 CREATE VOLATILE MULTISET TABLE MATCHD_PRSNA AS
 (
 SEL MATCHD_CNSMR_PRSNA_ID FROM RP_DP_SUB_AC1
 )
 WITH DATA
 PRIMARY INDEX (MATCHD_CNSMR_PRSNA_ID)
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L4
 COLLECT STATS MATCHD_PRSNA
 COLUMN MATCHD_CNSMR_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L5
  CREATE VOLATILE MULTISET TABLE MP AS
  (
  SEL MKTNG_PGM_NBR FROM RP_DP_SUB_AC1
  )
  WITH DATA
  PRIMARY INDEX (MKTNG_PGM_NBR)
  ON COMMIT PRESERVE ROWS;
  .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
  .LABEL L6
  COLLECT STATS MP
  COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L7
 
 CREATE VOLATILE SET TABLE MP_PRSNA2 AS
 (
         SELECT RP.*
             FROM REGIS_PRSNA RP
             
             WHERE RP.MKTNG_PGM_NBR IN (
             SEL MKTNG_PGM_NBR
                 FROM MP)
                 AND  RP.MATCHD_CNSMR_PRSNA_ID IN (
             SEL MATCHD_CNSMR_PRSNA_ID
                 FROM MATCHD_PRSNA)
                 AND  RP.MKTNG_PGM_NBR NOT IN (
             SEL CAST(AV_CODE AS INTEGER)
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Merge')
                 AND  RP.PRSNA_STATUS_CODE NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active')
       )
 WITH DATA
 PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
 PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L8
 COLLECT STATS MP_PRSNA2
 COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA2
 COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L9
 CREATE VOLATILE SET TABLE MP_PRSNA1 AS
 (
         SELECT RP.MKTNG_PGM_NBR,
             RP.REGIS_PRSNA_ID,
             RP.MATCHD_CNSMR_PRSNA_ID,
             REGIS_CNSMR_ID_VAL,
             RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID
             ORDER BY RP.LATST_ACTVY_DATE DESC,
                 RP.REGIS_DATE DESC,
                 RP.REGIS_CNSMR_ID_VAL DESC,
                 RP.SYS_CREATION_DATE DESC,
                 RP.SYS_SOURCE DESC,
                 RP.SYS_NC_TYPE DESC,
                 RP.REGIS_PRSNA_ID DESC) AS RNK_RP,
                 
             CASE
                 WHEN RNK_RP=1
       THEN 'AC'
                 WHEN RNK_RP<>1
       THEN 'DP'
             END AS STATUS_CODE_RP,
                 COALESCE(EA.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_EA,
                 RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(EA.SUBSCRPTN_OPT_NBR,0)
             ORDER BY RP.LATST_ACTVY_DATE DESC,
                 RP.REGIS_DATE DESC,
                 RP.REGIS_CNSMR_ID_VAL DESC,
                 RP.SYS_CREATION_DATE DESC,
                 RP.SYS_SOURCE DESC,
                 RP.SYS_NC_TYPE DESC,
                 RP.REGIS_PRSNA_ID DESC) AS RNK_EA,
                 
             CASE
                 WHEN RNK_EA=1
       THEN 'AC'
                 WHEN RNK_EA<>1
       THEN 'DP'
             END AS STATUS_CODE_EA,
                 COALESCE(PO.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_PO,
                 RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(PO.SUBSCRPTN_OPT_NBR,0)
             ORDER BY RP.LATST_ACTVY_DATE DESC,
                 RP.REGIS_DATE DESC,
                 RP.REGIS_CNSMR_ID_VAL DESC,
                 RP.SYS_CREATION_DATE DESC,
                 RP.SYS_SOURCE DESC,
                 RP.SYS_NC_TYPE DESC,
                 RP.REGIS_PRSNA_ID DESC) AS RNK_PO,
                 
             CASE
                 WHEN RNK_PO=1
       THEN 'AC'
                 WHEN RNK_PO<>1
       THEN 'DP'
             END AS STATUS_CODE_PO,
                 COALESCE(PH.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_PH,
                 RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(PH.SUBSCRPTN_OPT_NBR,0)
             ORDER BY RP.LATST_ACTVY_DATE DESC,
                 RP.REGIS_DATE DESC,
                 RP.REGIS_CNSMR_ID_VAL DESC,
                 RP.SYS_CREATION_DATE DESC,
                 RP.SYS_SOURCE DESC,
                 RP.SYS_NC_TYPE DESC,
                 RP.REGIS_PRSNA_ID DESC) AS RNK_PH,
                 
             CASE
                 WHEN RNK_PH=1
       THEN 'AC'
                 WHEN RNK_PH<>1
       THEN 'DP'
             END AS STATUS_CODE_PH,
                 COALESCE(SN.SUBSCRPTN_OPT_NBR,0) SUBSCRPTN_OPT_NBR_SN,
                 RANK() OVER (PARTITION BY RP.MKTNG_PGM_NBR,RP.MATCHD_CNSMR_PRSNA_ID,COALESCE(SN.SUBSCRPTN_OPT_NBR,0)
             ORDER BY RP.LATST_ACTVY_DATE DESC,
                 RP.REGIS_DATE DESC,
                 RP.REGIS_CNSMR_ID_VAL DESC,
                 RP.SYS_CREATION_DATE DESC,
                 RP.SYS_SOURCE DESC,
                 RP.SYS_NC_TYPE DESC,
                 RP.REGIS_PRSNA_ID DESC) AS RNK_SN,
                 
             CASE
                 WHEN RNK_SN=1
       THEN 'AC'
                 WHEN RNK_SN<>1
       THEN 'DP'
             END AS STATUS_CODE_SN --,CASE WHEN (STATUS_CODE_EA = 'AC' OR STATUS_CODE_PO = 'AC'  OR STATUS_CODE_PH = 'AC'OR STATUS_CODE_SN = 'AC' )--Release 5.1.3
                 ,
                 
             CASE
                 WHEN ((STATUS_CODE_EA = 'AC' AND EA.REGIS_PRSNA_ID IS NOT NULL)
         OR (STATUS_CODE_PO = 'AC' AND PO.REGIS_PRSNA_ID IS NOT NULL)
         OR (STATUS_CODE_PH = 'AC' AND PH.REGIS_PRSNA_ID IS NOT NULL)
         OR (STATUS_CODE_SN = 'AC' AND SN.REGIS_PRSNA_ID IS NOT NULL))
       THEN 'AC' 
       ELSE STATUS_CODE_RP
             END STATUS_CODE_FINAL_RP,
                 PRSNA_STATUS_CODE,
                 EMAIL_STATUS_CODE,
                 POSTL_STATUS_CODE,
                 PHONE_STATUS_CODE,
                 SOC_NET_STATUS_CODE
             FROM MP_PRSNA2 RP
 LEFT JOIN REGIS_PRSNA_EMAIL_ADDR EA 
 ON RP.REGIS_PRSNA_ID = EA.REGIS_PRSNA_ID 
 AND RP.MKTNG_PGM_NBR = EA.MKTNG_PGM_NBR 
 --AND EA.EMAIL_STATUS_CODE <> 'NV' --Rel 4.5.2
 AND COALESCE(EA.EMAIL_STATUS_CODE,'XX') NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active')--Rel 5.6.1 
 LEFT JOIN REGIS_PRSNA_POSTL_ADDR PO 
 ON RP.REGIS_PRSNA_ID = PO.REGIS_PRSNA_ID 
 AND RP.MKTNG_PGM_NBR = PO.MKTNG_PGM_NBR 
 --AND PO.POSTL_STATUS_CODE <> 'NV' --Rel 4.5.2
 AND COALESCE(PO.POSTL_STATUS_CODE,'XX') NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active')--Rel 5.6.1
 LEFT JOIN REGIS_PRSNA_PHONE PH 
 ON RP.REGIS_PRSNA_ID = PH.REGIS_PRSNA_ID 
 AND RP.MKTNG_PGM_NBR = PH.MKTNG_PGM_NBR 
 --AND PH.PHONE_STATUS_CODE <> 'NV' --Rel 4.5.2 
 AND COALESCE(PH.PHONE_STATUS_CODE,'XX') NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active')--Rel 5.6.1
 LEFT JOIN REGIS_PRSNA_SOC_NET_ACCT SN 
 ON RP.REGIS_PRSNA_ID = SN.REGIS_PRSNA_ID 
 AND RP.MKTNG_PGM_NBR = SN.MKTNG_PGM_NBR 
 --AND SN.SOC_NET_STATUS_CODE <> 'NV' --Rel 4.5.2
 AND COALESCE(SN.SOC_NET_STATUS_CODE,'XX') NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active') --Rel 5.6.1
             
             WHERE RP.MKTNG_PGM_NBR IN (
             SEL MKTNG_PGM_NBR
                 FROM MP)
                 AND  RP.MATCHD_CNSMR_PRSNA_ID IN (
             SEL MATCHD_CNSMR_PRSNA_ID
                 FROM MATCHD_PRSNA)
                 AND  RP.MKTNG_PGM_NBR NOT IN (
             SEL CAST(AV_CODE AS INTEGER)
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Merge')
                 AND  RP.PRSNA_STATUS_CODE NOT IN (
             SEL AV_CODE
                 FROM ATTRIBUTE_VALUES
                 WHERE AV_DESCRIPTION='Status'
                     AND  SYS_ENT_STATE='Active')
 )
 WITH DATA
 PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
 PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L10
 COLLECT STATS MP_PRSNA1
 COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA1
 COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L11
 CREATE VOLATILE SET TABLE MP_PRSNA AS
 (
     SELECT MKTNG_PGM_NBR,
         REGIS_PRSNA_ID,
         MATCHD_CNSMR_PRSNA_ID,
         REGIS_CNSMR_ID_VAL,
         RNK_RP,
         STATUS_CODE_RP,
         SUBSCRPTN_OPT_NBR_EA,
         RNK_EA,
         STATUS_CODE_EA,
         SUBSCRPTN_OPT_NBR_PH,
         RNK_PH,
         STATUS_CODE_PH,
         SUBSCRPTN_OPT_NBR_PO,
         RNK_PO,
         STATUS_CODE_PO,
         SUBSCRPTN_OPT_NBR_SN,
         RNK_SN,
         STATUS_CODE_SN,
         STATUS_CODE_FINAL_RP,
         RANK() OVER (PARTITION BY MKTNG_PGM_NBR, REGIS_PRSNA_ID, MATCHD_CNSMR_PRSNA_ID,REGIS_CNSMR_ID_VAL
         ORDER BY
         CASE
             WHEN STATUS_CODE_FINAL_RP='AC' THEN 1
             WHEN STATUS_CODE_FINAL_RP='DP' THEN 2 ELSE 9
         END) rnk
         FROM MP_PRSNA1 tmp
 QUALIFY 
 rnk =1 AND (
 PRSNA_STATUS_CODE <> STATUS_CODE_FINAL_RP
 OR EMAIL_STATUS_CODE <> STATUS_CODE_EA
 OR POSTL_STATUS_CODE <> STATUS_CODE_PO
 OR PHONE_STATUS_CODE <> STATUS_CODE_PH
 OR SOC_NET_STATUS_CODE <> STATUS_CODE_SN
 )
 )
 WITH DATA
 PRIMARY INDEX (MKTNG_PGM_NBR,REGIS_PRSNA_ID)
 PARTITION BY MKTNG_PGM_NBR
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L12
 COLLECT STATS MP_PRSNA
 COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA
 COLUMN REGIS_PRSNA_ID;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA
 COLUMN (REGIS_PRSNA_ID,MKTNG_PGM_NBR);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA 
 COLUMN(PARTITION); 
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 COLLECT STATS MP_PRSNA 
 COLUMN(PARTITION,MKTNG_PGM_NBR);
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L13
 UPDATE REGIS_PRSNA_POSTL_ADDR
 FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_PO,STATUS_CODE_PO
 FROM MP_PRSNA
 GROUP BY 1,2,3,4)B
 SET POSTL_STATUS_CODE = B.STATUS_CODE_PO
 WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
 AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
 AND COALESCE(REGIS_PRSNA_POSTL_ADDR.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_PO
 AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
 AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE <> B.STATUS_CODE_PO
 AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE <> 'NV'
 AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status'
  AND SYS_ENT_STATE='Active')  
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L14
 UPDATE REGIS_PRSNA_PHONE
 FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_PH,STATUS_CODE_PH
 FROM MP_PRSNA
 GROUP BY 1,2,3,4)B
 SET PHONE_STATUS_CODE = B.STATUS_CODE_PH
 WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
 AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
 AND COALESCE(REGIS_PRSNA_PHONE.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_PH
 AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
 AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE <> B.STATUS_CODE_PH
 AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE <> 'NV'
 AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status'
  AND SYS_ENT_STATE='Active')    
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L15
 UPDATE REGIS_PRSNA_EMAIL_ADDR
 FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_EA,STATUS_CODE_EA
 FROM MP_PRSNA
 GROUP BY 1,2,3,4)B
 SET EMAIL_STATUS_CODE = B.STATUS_CODE_EA
 WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
 AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
 AND COALESCE(REGIS_PRSNA_EMAIL_ADDR.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_EA
 AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
 AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE <> B.STATUS_CODE_EA
 AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE NOT IN ('NV','DE')
 AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status'
  AND SYS_ENT_STATE='Active')     
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L16
 UPDATE REGIS_PRSNA_SOC_NET_ACCT
 FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,SUBSCRPTN_OPT_NBR_SN,STATUS_CODE_SN
 FROM MP_PRSNA
 GROUP BY 1,2,3,4)B
 SET SOC_NET_STATUS_CODE = B.STATUS_CODE_SN
 WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
 AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
 AND COALESCE(REGIS_PRSNA_SOC_NET_ACCT.SUBSCRPTN_OPT_NBR,0) = B.SUBSCRPTN_OPT_NBR_SN
 AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
 AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE <> B.STATUS_CODE_SN
 AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE <> 'NV'
 AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE NOT IN (SEL AV_CODE FROM ATTRIBUTE_VALUES WHERE AV_DESCRIPTION='Status'
  AND SYS_ENT_STATE='Active')    
 ;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L17
 UPDATE REGIS_PRSNA
 FROM (SEL MKTNG_PGM_NBR,REGIS_PRSNA_ID,STATUS_CODE_FINAL_RP
 FROM MP_PRSNA
 GROUP BY 1,2,3)B
 SET PRSNA_STATUS_CODE = B.STATUS_CODE_FINAL_RP
 WHERE REGIS_PRSNA.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
 AND REGIS_PRSNA.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
 AND REGIS_PRSNA.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
 AND REGIS_PRSNA.PRSNA_STATUS_CODE <> B.STATUS_CODE_FINAL_RP
 ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L18
DROP TABLE MP;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L19
 CREATE VOLATILE MULTISET TABLE MP
AS
(
SELECT
       CAST(AV_CODE AS INTEGER) MKTNG_PGM_NBR
  FROM ATTRIBUTE_VALUES
 WHERE AV_DESCRIPTION='Merge'
)  WITH DATA
 PRIMARY INDEX (MKTNG_PGM_NBR)
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
   COLLECT STATS MP
   COLUMN MKTNG_PGM_NBR;
 .IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L20 
UPDATE REGIS_PRSNA_EMAIL_ADDR
FROM REGIS_PRSNA B
SET EMAIL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_EMAIL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_EMAIL_ADDR.EMAIL_STATUS_CODE = 'AC'
AND B.PRSNA_STATUS_CODE='DP'
AND REGIS_PRSNA_EMAIL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L21
UPDATE REGIS_PRSNA_PHONE
FROM REGIS_PRSNA B
SET PHONE_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_PHONE.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_PHONE.PHONE_STATUS_CODE = 'AC'
AND B.PRSNA_STATUS_CODE='DP'
AND REGIS_PRSNA_PHONE.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L22
UPDATE REGIS_PRSNA_POSTL_ADDR
FROM REGIS_PRSNA B
SET POSTL_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_POSTL_ADDR.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_POSTL_ADDR.POSTL_STATUS_CODE = 'AC'
AND B.PRSNA_STATUS_CODE='DP'
AND REGIS_PRSNA_POSTL_ADDR.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
 .LABEL L23
UPDATE REGIS_PRSNA_SOC_NET_ACCT
FROM REGIS_PRSNA B
SET SOC_NET_STATUS_CODE = 'DP'
WHERE REGIS_PRSNA_SOC_NET_ACCT.REGIS_PRSNA_ID = B.REGIS_PRSNA_ID
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND REGIS_PRSNA_SOC_NET_ACCT.SOC_NET_STATUS_CODE = 'AC'
AND B.PRSNA_STATUS_CODE='DP'
AND REGIS_PRSNA_SOC_NET_ACCT.MKTNG_PGM_NBR IN (SEL MKTNG_PGM_NBR FROM MP)
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;