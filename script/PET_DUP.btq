/***********************************************************************************************************
SCRIPT:               PET_DUP.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
4.2                  09/06/2012           TERADATA                        TUNING
5.6                  11/13/2015           TERADATA                        Release 5.6 BR348
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

SET QUERY_BAND = 'WorkFlow=MDM;Interface=i2MDM;Country=$CNTRY;Stage=Wrapper;Step=Step27;' FOR SESSION; 
DATABASE $DATABASENAME;

SEL 1 FROM PRSNA_DPLCT_MERGE_$CNTRY
GROUP BY 1;

.IF ACTIVITYCOUNT > 0 THEN .GOTO SKII

.QUIT 0

.LABEL SKII

CREATE VOLATILE TABLE V_PET_INPUT AS
(
SELECT DISTINCT 
B.REFERENCE_REGISTRATIONKEY ,
A.PET_NAME ,
A.PET_GENDR_IND ,
A.PET_BRTH_DATE ,
A.MKTNG_PGM_NBR ,
A.LEGAL_ENT_NBR ,
A.PET_SEQ_NBR,
A.PET_AGE_NBR,
A.PET_TYPE_CODE,
A.PET_BREED_CODE,
A.SYS_SOURCE ,
A.SYS_TARGET_ID ,
A.SYS_AUTH_ID ,
A.SYS_CREATED_BY ,
A.SYS_CREATION_DATE ,
A.SYS_LAST_MODIFIED_DATE ,
A.SYS_ENT_STATE ,
A.SYS_LAST_MODIFIED_BY ,
A.SYS_NC_TYPE ,
A.SYS_ERR_CODE ,
A.SYS_ERR_SVRTY 
FROM PRSNA_DPLCT_MERGE_$CNTRY B
INNER JOIN PET A
ON A.REGIS_PRSNA_ID = B.DUP_REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = B.LEGAL_ENT_NBR
LEFT OUTER JOIN PET C
ON B.REFERENCE_REGISTRATIONKEY = C.REGIS_PRSNA_ID
AND A.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR
AND A.LEGAL_ENT_NBR = C.LEGAL_ENT_NBR
AND A.PET_NAME = C.PET_NAME
)
WITH DATA
PRIMARY INDEX (REFERENCE_REGISTRATIONKEY,MKTNG_PGM_NBR,LEGAL_ENT_NBR,PET_NAME)
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

MERGE INTO PET A
USING
(SELECT DISTINCT * FROM V_PET_INPUT)
AS SRC
(
V_REFERENCE_REGISTRATIONKEY,
V_PET_NAME,
V_PET_GENDR_IND,
V_PET_BRTH_DATE,
V_MKTNG_PGM_NBR,
V_LEGAL_ENT_NBR,
V_PET_SEQ_NBR,
V_PET_AGE_NBR,
V_PET_TYPE_CODE,
V_PET_BREED_CODE,
V_SYS_SOURCE,
V_SYS_TARGET_ID,
V_SYS_AUTH_ID,
V_SYS_CREATED_BY,
V_SYS_CREATION_DATE,
V_SYS_LAST_MODIFIED_DATE,
V_SYS_ENT_STATE,
V_SYS_LAST_MODIFIED_BY,
V_SYS_NC_TYPE,
V_SYS_ERR_CODE,
V_SYS_ERR_SVRTY
)
 ON REGIS_PRSNA_ID = V_REFERENCE_REGISTRATIONKEY
AND MKTNG_PGM_NBR = V_MKTNG_PGM_NBR
AND LEGAL_ENT_NBR = V_LEGAL_ENT_NBR
AND PET_NAME = V_PET_NAME

WHEN MATCHED THEN
UPDATE
SET PET_GENDR_IND=V_PET_GENDR_IND,
PET_BRTH_DATE=V_PET_BRTH_DATE,
PET_SEQ_NBR=V_PET_SEQ_NBR,
PET_AGE_NBR=V_PET_AGE_NBR,
PET_TYPE_CODE=V_PET_TYPE_CODE,
PET_BREED_CODE=V_PET_BREED_CODE,
SYS_SOURCE=V_SYS_SOURCE,
SYS_TARGET_ID=V_SYS_TARGET_ID,
SYS_AUTH_ID=V_SYS_AUTH_ID,
SYS_CREATED_BY=V_SYS_CREATED_BY,
SYS_LAST_MODIFIED_DATE=V_SYS_LAST_MODIFIED_DATE,
SYS_ENT_STATE=V_SYS_ENT_STATE,
SYS_LAST_MODIFIED_BY=V_SYS_LAST_MODIFIED_BY,
SYS_NC_TYPE=V_SYS_NC_TYPE,
SYS_ERR_CODE=V_SYS_ERR_CODE,
SYS_ERR_SVRTY=V_SYS_ERR_SVRTY

WHEN NOT MATCHED THEN 
INSERT
(REGIS_PRSNA_ID=V_REFERENCE_REGISTRATIONKEY,
MKTNG_PGM_NBR=V_MKTNG_PGM_NBR,
LEGAL_ENT_NBR=V_LEGAL_ENT_NBR,
PET_NAME=V_PET_NAME,
PET_GENDR_IND=V_PET_GENDR_IND,
PET_BRTH_DATE=V_PET_BRTH_DATE,
PET_SEQ_NBR=V_PET_SEQ_NBR,
PET_AGE_NBR=V_PET_AGE_NBR,
PET_TYPE_CODE=V_PET_TYPE_CODE,
PET_BREED_CODE=V_PET_BREED_CODE,
SYS_SOURCE=V_SYS_SOURCE,
SYS_TARGET_ID=V_SYS_TARGET_ID,
SYS_AUTH_ID=V_SYS_AUTH_ID,
SYS_CREATED_BY=V_SYS_CREATED_BY,
SYS_CREATION_DATE=V_SYS_CREATION_DATE,
SYS_LAST_MODIFIED_DATE=V_SYS_LAST_MODIFIED_DATE,
SYS_ENT_STATE=V_SYS_ENT_STATE,
SYS_LAST_MODIFIED_BY=V_SYS_LAST_MODIFIED_BY,
SYS_NC_TYPE=V_SYS_NC_TYPE,
SYS_ERR_CODE=V_SYS_ERR_CODE,
SYS_ERR_SVRTY=V_SYS_ERR_SVRTY
);

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.exit