/***********************************************************************************************************
SCRIPT:               DATA_RTNTN_RULE1.BTQ 
DESCRIPTION:          THIS SCRIPT POPULATES CNSMR_DATA_RTNTN WITH CONSUMER ACTIONS, 
LOYALTY TRANSACTIONS, SALES TRANSACTIONS, CONSUMER RESPONSES, CAMPAIGN HISTORY RECORDS OLDER THAN 25 MONTHS
FOR RULE1
DEPENDENCY:           
INPUT:                GOLDEN TABLES
OUTPUT:               
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 05/17/2011           TERADATA                        INITIAL VERSION
2.00                 10/09/2012           TERADATA                        RELEASE 4.2
4.5                  10/09/2013           TERADATA                        RELEASE 4.5
4.5                  11/18/2013           TERADATA                        4.5 HYPERCARE POPULATE CONSUMER 
                                                                          RESPONSES USING CNSMR_ACTN_ID
                                                                          PICK ORPHAN RECORDS ALSO.
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

DATABASE $DATABASENAME;

DEL FROM CNSMR_DATA_RTNTN ALL;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/**********************************************************************************************************
POPULATE CONSUMER ACTIONS AND SALES TRANSACTIONS
**********************************************************************************************************/

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
SALES_TRANX_NBR,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
D.MKTNG_PGM_NBR,
D.LEGAL_ENT_NBR,
D.REGIS_PRSNA_ID,
D.REGIS_CNSMR_ID_VAL,
'Consumer Active',
D.CNSMR_ACTN_ID,
E.SALES_TRANX_NBR,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM CNSMR_ACTN D

INNER JOIN DATA_RTNTN_REF B
ON D.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN SALES_TRANX E
ON D.CNSMR_ACTN_ID = E.CNSMR_ACTN_ID

WHERE CAST(CAST(D.CNSMR_ACTN_START_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/**********************************************************************************************************
POPULATE LOYALTY TRANSACTIONS
**********************************************************************************************************/

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_TRANX_NUM,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
LYLTY_SALES_TRANX_NBR,
LYLTY_CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
E1.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.LYLTY_TRANX_NUM,
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
E1.SALES_TRANX_NBR,
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM LYLTY_TRANX E1

INNER JOIN DATA_RTNTN_REF B
ON E1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN REGIS_PRSNA A
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
AND A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR

WHERE CAST(CAST(E1.LYLTY_TRANX_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
LYLTY_PGM_NBR,
LYLTY_ACCT_NUM,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
E1.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
A.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.LYLTY_PGM_NBR,
E1.LYLTY_ACCT_NUM,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
E1.LYLTY_ACCT_STMT_DATE

FROM LYLTY_ACCT_STMT E1

INNER JOIN DATA_RTNTN_REF B
ON E1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN REGIS_PRSNA A
ON A.LYLTY_PGM_NBR = E1.LYLTY_PGM_NBR 
AND A.LYLTY_ACCT_NUM = E1.LYLTY_ACCT_NUM
AND A.MKTNG_PGM_NBR = E1.MKTNG_PGM_NBR

WHERE CAST(CAST(E1.LYLTY_ACCT_STMT_DATE AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/**********************************************************************************************************
POPULATE CAMPAIGN HISTORY
**********************************************************************************************************/

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
COMMUNICATION_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
COALESCE(A.MKTNG_PGM_NBR,0),
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.COMMUNICATION_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(E1.SELECTION_DTTM AS DATE FORMAT 'YYYY-MM-DD')

FROM LH_REALIZED_LEAD E1

LEFT OUTER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

WHERE CAST(CAST(E1.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
COMMUNICATION_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
COALESCE(A.MKTNG_PGM_NBR,0),
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.COMMUNICATION_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(E1.SELECTION_DTTM AS DATE FORMAT 'YYYY-MM-DD')

FROM LH_REALIZED_LEAD_HIST E1

LEFT OUTER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

WHERE CAST(CAST(E1.SELECTION_DTTM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
COMMUNICATION_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
COALESCE(A.MKTNG_PGM_NBR,0),
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.COMMUNICATION_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(E1.Response_Dttm AS DATE FORMAT 'YYYY-MM-DD')

FROM LH_CHANNEL_RESPONSE E1

LEFT OUTER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

WHERE CAST(CAST(E1.Response_Dttm AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
COMMUNICATION_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE,
RLTN_END_DATE
)
SELECT 
COALESCE(A.MKTNG_PGM_NBR,0),
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.COMMUNICATION_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0)),
CAST(E1.Response_Dttm AS DATE FORMAT 'YYYY-MM-DD')

FROM LH_CHANNEL_RESPONSE_HIST E1

LEFT OUTER JOIN REGIS_PRSNA A
ON A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

INNER JOIN DATA_RTNTN_REF B
ON A.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

WHERE CAST(CAST(E1.Response_Dttm AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/**********************************************************************************************************
POPULATE CONSUMER RESPONSES
**********************************************************************************************************/

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
E1.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM EMAIL_CMPGN_RESP E1

INNER JOIN DATA_RTNTN_REF B
ON E1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN REGIS_PRSNA A
ON A.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

WHERE CAST(CAST(E1.RESP_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
E1.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM SMS_CMPGN_RESP E1

INNER JOIN DATA_RTNTN_REF B
ON E1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN REGIS_PRSNA A
ON A.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

WHERE CAST(CAST(E1.LAST_ACTVY_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT CNSMR_DATA_RTNTN
(
MKTNG_PGM_NBR,
LEGAL_ENT_NBR,
REGIS_PRSNA_ID,
REGIS_CNSMR_ID_VAL,
STATUS,
CNSMR_ACTN_ID,
TRANS_DATA,
SYS_LAST_MODIFIED_DATE
)
SELECT 
E1.MKTNG_PGM_NBR,
A.LEGAL_ENT_NBR,
E1.REGIS_PRSNA_ID,
A.REGIS_CNSMR_ID_VAL,
'Consumer Active',
E1.CNSMR_ACTN_ID,
'Y',
CAST(CAST(CURRENT_TIMESTAMP AS VARCHAR(19)) AS TIMESTAMP(0))

FROM POSTL_CMPGN_RESP E1

INNER JOIN DATA_RTNTN_REF B
ON E1.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR 
AND B.USE_CASE = 'CNSMR ACTIVE'

LEFT OUTER JOIN REGIS_PRSNA A
ON A.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=E1.REGIS_PRSNA_ID

WHERE CAST(CAST(E1.RESP_DATETM AS VARCHAR(10)) AS DATE FORMAT 'YYYY-MM-DD') <= ADD_MONTHS(CURRENT_DATE,-(TRANS_MNTH_NBR))
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.EXIT