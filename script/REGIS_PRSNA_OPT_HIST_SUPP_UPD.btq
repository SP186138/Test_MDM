/***********************************************************************************************************
SCRIPT:               REGIS_PRSNA_OPT_HIST_SUPP_UPD.BTEQ 
DESCRIPTION:          THIS SCRIPT LOADS EDW TABLES
DEPENDENCY:           
INPUT:                TRILLIUM OUTPUT CNTRY TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 10/31/2011           TERADATA                        INITIAL VERSION
4.00                 03/26/2012           TERADATA                        1. UPDATE NATIONAL ID INTO REGIS PRSNA 
                                                                          FROM PRSNA TRT.
                                                                          2. ADD STATE VALIDATION FOR US
									  3. ADD OPT OUT MODULE
R2O                  05/11/2012           TERADATA                        REMOVE ERROR PROCESSING
4.1                  06/13/2012           TERADATA                        MODULARIZE AND TUNING
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0


DATABASE $DATABASENAME;

SEL CNT FROM (
SEL SUM(CNT) AS CNT
FROM
(
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_DCS
UNION ALL
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_DMA
UNION ALL
SELECT
COUNT(*) AS CNT 
FROM OPT_OUT_$CNTRY_LIST_SIDS
) A ) B
WHERE CNT>0;

.IF ACTIVITYCOUNT > 0 THEN .GOTO OPTOUT

.QUIT 0

.LABEL OPTOUT

/*****************************************************************************
Insert into REGIS_PRSNA_OPT_HIST_SUPP for consumers who were just opted out
by the above process and delete the corresponding records that were loaded 
with negative REGIS_PRSNA_IDs during the i60 process for Deceased list
******************************************************************************/

INSERT $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
(
REGIS_PRSNA_ID ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE,
LOG_SOURCE_ID ,
LOG_UPDATE_USER ,
LOG_LOAD_ID ,
OPT_TYPE_CODE
)
SELECT
B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE,
A.LOG_SOURCE_ID ,
A.LOG_UPDATE_USER ,
A.LOG_LOAD_ID ,
A.OPT_TYPE_CODE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP A
INNER JOIN $DATABASENAME.OPT_OUT_$CNTRY_LIST_DCS B
ON A.REGIS_PRSNA_ID=B.HIST_REGIS_PRSNA_ID
AND B.REGIS_PRSNA_ID>0
AND B.CNTRY_CODE = '$CNTRY'
WHERE (B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE) NOT IN (SELECT 
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
WHERE REGIS_PRSNA_ID IN (
SELECT HIST_REGIS_PRSNA_ID
FROM $DATABASENAME.OPT_OUT_$CNTRY_LIST_DCS
WHERE REGIS_PRSNA_ID>0
AND HIST_REGIS_PRSNA_ID<0
AND CNTRY_CODE = '$CNTRY');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Insert into REGIS_PRSNA_OPT_HIST_SUPP for consumers who were just opted out
by the above process and delete the corresponding records that were loaded 
with negative REGIS_PRSNA_IDs during the i60 process for DMA list
******************************************************************************/

INSERT $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
(
REGIS_PRSNA_ID ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE,
LOG_SOURCE_ID ,
LOG_UPDATE_USER ,
LOG_LOAD_ID ,
OPT_TYPE_CODE
)
SELECT
B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE,
A.LOG_SOURCE_ID ,
A.LOG_UPDATE_USER ,
A.LOG_LOAD_ID ,
A.OPT_TYPE_CODE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP A
INNER JOIN $DATABASENAME.OPT_OUT_$CNTRY_LIST_DMA B
ON A.REGIS_PRSNA_ID=B.HIST_REGIS_PRSNA_ID
AND B.REGIS_PRSNA_ID>0
AND B.CNTRY_CODE = '$CNTRY'
WHERE (B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE) NOT IN (SELECT 
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
WHERE REGIS_PRSNA_ID IN (
SELECT HIST_REGIS_PRSNA_ID
FROM $DATABASENAME.OPT_OUT_$CNTRY_LIST_DMA
WHERE REGIS_PRSNA_ID>0
AND HIST_REGIS_PRSNA_ID<0
AND CNTRY_CODE = '$CNTRY');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

/*****************************************************************************
Insert into REGIS_PRSNA_OPT_HIST_SUPP for consumers who were just opted out
by the above process and delete the corresponding records that were loaded 
with negative REGIS_PRSNA_IDs during the i60 process for SIDS list
******************************************************************************/

INSERT $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
(
REGIS_PRSNA_ID ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE,
LOG_SOURCE_ID ,
LOG_UPDATE_USER ,
LOG_LOAD_ID ,
OPT_TYPE_CODE
)
SELECT
B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE,
A.LOG_SOURCE_ID ,
A.LOG_UPDATE_USER ,
A.LOG_LOAD_ID ,
A.OPT_TYPE_CODE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP A
INNER JOIN $DATABASENAME.OPT_OUT_$CNTRY_LIST_SIDS B
ON A.REGIS_PRSNA_ID=B.HIST_REGIS_PRSNA_ID
AND B.REGIS_PRSNA_ID>0
AND B.CNTRY_CODE = '$CNTRY'
WHERE (B.REGIS_PRSNA_ID                ,
B.MKTNG_PGM_NBR ,
A.SUPP_TYPE_CODE ,
A.SUPP_EFFECTIVE_DATE) NOT IN (SELECT 
REGIS_PRSNA_ID                ,
MKTNG_PGM_NBR ,
SUPP_TYPE_CODE ,
SUPP_EFFECTIVE_DATE
FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM $DATABASENAME.REGIS_PRSNA_OPT_HIST_SUPP
WHERE REGIS_PRSNA_ID IN (
SELECT HIST_REGIS_PRSNA_ID
FROM $DATABASENAME.OPT_OUT_$CNTRY_LIST_SIDS
WHERE REGIS_PRSNA_ID>0
AND HIST_REGIS_PRSNA_ID<0
AND CNTRY_CODE = '$CNTRY');
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;


.QUIT 