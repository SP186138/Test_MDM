/***********************************************************************************************************
SCRIPT:               Rematch_ESP.BTEQ 
DESCRIPTION:          THIS SCRIPT picks registrations to be rematched.
DEPENDENCY:           
INPUT:                EDW TABLES
OUTPUT:               EDW
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.0                  06/05/2017           TERADATA                        INITIAL VERSION
1.8                  11/06/2017           TERADATA                        TRILLIUM UPGRADE WAVE 1         
1.9                  11/21/2017           TERADATA                        Trillium Upgrade Phase 2 - Enable standardization for CHN
2.0                  12/04/2017           TERADATA                        Trillium Upgrade Phase 3 - Changing valid contact logic for 
                                                                          IDN, VNM & THA
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD


.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0
SET QUERY_BAND = 'WorkFlow=MDM;Interface=Rematch;Country=$CNTRY;Stage=RematchImpact;Step=Step03;' FOR SESSION; 
DATABASE $DATABASENAME;


CREATE VOLATILE TABLE CNTRY_CODE AS
 (SEL '$CNTRY' AS CNTRY_CODE) 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AFR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AFR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ARB');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ARB
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AUS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('AUT');
.IF ACTIVITYCOUNT > 0 THEN .GOTO AUT
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BEL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BEL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BGR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BGR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('BRA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO BRA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CAN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CAN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CHE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CHN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CHN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('CZE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO CZE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('DEU');
.IF ACTIVITYCOUNT > 0 THEN .GOTO DEU
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('DNK');
.IF ACTIVITYCOUNT > 0 THEN .GOTO DNK
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('EGY');
.IF ACTIVITYCOUNT > 0 THEN .GOTO EGY
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ESP');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ESP
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('FIN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO FIN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('FRA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO FRA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('GBR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO GBR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('GRC');
.IF ACTIVITYCOUNT > 0 THEN .GOTO GRC
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HKG');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HKG
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HRV');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HRV
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('HUN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO HUN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('IND');
.IF ACTIVITYCOUNT > 0 THEN .GOTO IND
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('IRL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO IRL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ISR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ISR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ITA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ITA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('JPN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO JPN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('KOR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO KOR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('LA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO LA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('MYS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO MYS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NLD');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NLD
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NOR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NOR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('OTH');
.IF ACTIVITYCOUNT > 0 THEN .GOTO OTH
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PAK');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PAK
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PHL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PHL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('POL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO POL
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('PRT');
.IF ACTIVITYCOUNT > 0 THEN .GOTO PRT
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('ROU');
.IF ACTIVITYCOUNT > 0 THEN .GOTO ROU
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('SGP');
.IF ACTIVITYCOUNT > 0 THEN .GOTO SGP
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('SWE');
.IF ACTIVITYCOUNT > 0 THEN .GOTO SWE
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('TUR');
.IF ACTIVITYCOUNT > 0 THEN .GOTO TUR
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('TWN');
.IF ACTIVITYCOUNT > 0 THEN .GOTO TWN
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('USA');
.IF ACTIVITYCOUNT > 0 THEN .GOTO USA
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('LUX');
.IF ACTIVITYCOUNT > 0 THEN .GOTO LUX
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('RUS');
.IF ACTIVITYCOUNT > 0 THEN .GOTO RUS
SEL 1 FROM CNTRY_CODE WHERE CNTRY_CODE IN ('NZL');
.IF ACTIVITYCOUNT > 0 THEN .GOTO NZL

.LABEL AFR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ARB 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL AUS 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL AUT 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BEL 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BGR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL BRA 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CAN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CHE 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND='N'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
LEFT JOIN (SEL CITY_NAME,CITY_CODE FROM CITY c3
WHERE 
 c3.TERR_CODE LIKE 'DE%'
 QUALIFY Rank() Over (PARTITION BY CITY_NAME ORDER BY CITY_CODE )=1) C3
ON C2.city_name=c3.CITY_NAME
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
AND  C2.CNTRY_CODE IN ('CHE')
AND c3.CITY_CODE IS NULL 
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CHN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL CZE 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL DEU 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL DNK 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL EGY 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ESP 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL FIN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL FRA 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
AND A.MKTNG_PGM_NBR IN (396,358,357,356,291)
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL GBR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL GRC 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HKG 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HRV 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL HUN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL IND 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL IRL 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND='N'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
LEFT JOIN (SEL CITY_NAME,CITY_CODE FROM CITY c3
WHERE 
 c3.TERR_CODE LIKE 'GB%'
 QUALIFY Rank() Over (PARTITION BY CITY_NAME ORDER BY CITY_CODE )=1) C3
ON C2.city_name=c3.CITY_NAME
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
AND  C2.CNTRY_CODE IN ('IRL')
AND c3.CITY_CODE IS NULL 
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ISR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ITA 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL JPN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL KOR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL LA 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL LUX 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL MYS 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NLD 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NOR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL NZL 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL OTH 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PAK 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PHL 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL POL 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL PRT 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 
INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL ROU 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL RUS 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL SGP 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL SWE 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL TUR 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
TRIM(CAST(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL TWN 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND CASE 
WHEN (C2.PR_GEOCODE_FAIL IN ('0','9')
      AND C2.cntry_code IN ('JPN','TWN','KOR','AUS','MYS','SGP','USA','CAN','HKG','CHN'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1','2','6','7')
      AND C2.cntry_code IN ('THA'))
      OR (C2.PR_GEOCODE_FAIL NOT IN ('1')
      AND C2.cntry_code IN ('IDN','VNM'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3')
      AND C2.cntry_code IN ('NZL'))      
      OR C2.cntry_code IN ('ARG','CHL','MEX','BRA')
      OR (PR_REV_GROUP IN ('000','009','010')
      AND C2.cntry_code IN ('PHL'))
      OR (PR_REV_GROUP IN ('0','000','001','002','003','005','008','009','010','012','019')
      AND  C2.cntry_code NOT IN ('JPN','TWN','KOR','NZL','AUS','MYS',
      'SGP','USA','CAN','BRA','MEX','FRA','BEL','NLD','ITA','GRC','AUT','CHE','DEU','ESP','IRL'
      ,'DNK','FIN','NOR','SWE','GBR','PRT','IDN','THA','VNM','PHL'))
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','014','018','020')
      AND C2.cntry_code IN ('FRA'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('IRL','AUT','ITA'))      
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010')
      AND C2.cntry_code IN ('GRC'))  
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('CHE','DEU','BEL','NLD'))
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('DNK','FIN','NOR'))   
      OR (C2.PR_GEOCODE_FAIL IN ('0','3','8') AND PR_REV_GROUP IN ('000','002','005','007','008','009','010','018')
      AND C2.cntry_code IN ('SWE'))       
      OR (C2.PR_GEOCODE_FAIL = '0' AND PR_REV_GROUP IN ('000','002','005','008','009','010','014','018')
      AND C2.cntry_code IN ('GBR','PRT'))     
      OR (C2.PR_GEOCODE_FAIL IN ('0') AND PR_REV_GROUP IN ('000','002','005','008','009','010','018')
      AND C2.cntry_code IN ('ESP'))
THEN 'Y'
WHEN C2.cntry_code='MYS' AND Trim(Coalesce(C2.postl_area_code,''))<>'' 
     AND (CHAR(Trim(Coalesce(C2.postl_area_code,'')))=5 
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,2)<>'01'
           AND Substr(Trim(Coalesce(C2.postl_area_code,'')),1,1)='0')
THEN 'N'
WHEN ((C2.PR_GEOCODE_FAIL IS NULL OR Trim(C2.PR_GEOCODE_FAIL) = '') 
 AND (PR_REV_GROUP IS NULL OR Trim(PR_REV_GROUP) = ''))
THEN 'y'
/*WHEN C2.cntry_code IN ('ESP','PRT')
THEN COALESCE(STG.VALID_ADDR_IND,STG.VALID_IND)*/
ELSE 'N'
END<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;

.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0

.LABEL USA 
CREATE VOLATILE TABLE MPN_$CNTRY AS
 (SEL MKTNG_PGM_NBR FROM MKTNG_PGM MP
 WHERE CASE WHEN SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3) IN ('IDN','THA','VNM')
THEN 'OTH'
WHEN MP.LEGAL_ENT_NBR=17
THEN 'LA'
WHEN MP.LEGAL_ENT_NBR=60
THEN 'ARB'
WHEN MP.LEGAL_ENT_NBR=46
THEN 'AFR'
ELSE SUBSTR(MP.MKTNG_PGM_NAME,INDEX(MP.MKTNG_PGM_NAME,'-')+1,3)
END='$CNTRY') 
 WITH DATA 
 ON COMMIT PRESERVE ROWS;
 .IF ERRORLEVEL > 0 THEN .GOTO EXIT;

INSERT REMATCH_STG 
(MKTNG_PGM_NBR,
REGIS_PRSNA_ID,
SYS_SOURCE,
CNTRY_CODE,
REGIS_CNSMR_ID_VAL,
SYS_TARGET_ID,
LEGAL_ENT_NBR)
 SELECT  
A.MKTNG_PGM_NBR,
A.REGIS_PRSNA_ID,
Trim(Cast(C.LOAD_ID AS INTEGER)) AS SYS_SOURCE,
A.CNTRY_CODE,
A.REGIS_CNSMR_ID_VAL,
A.SYS_TARGET_ID,
A.LEGAL_ENT_NBR
FROM REGIS_PRSNA A
INNER JOIN MPN_$CNTRY B
ON A.MKTNG_PGM_NBR=B.MKTNG_PGM_NBR
JOIN (SEL LOAD_ID FROM LOAD_INFO LI
WHERE PROCESS_NAME='Rematch_$CNTRY'
AND LI.STATUS = 'In Progress') C
ON 1=1
JOIN REGIS_PRSNA_POSTL_ADDR C2
ON A.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND A.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C2.MKTNG_PGM_NBR IN (126,193,173,109,129,229,131,133,403,130,128,127,401,119,121)
AND C2.VALID_CNTCT_POINT_IND<>'Y'
JOIN PRSNA_POSTL_ADDR_ORIG C1
ON C1.MKTNG_PGM_NBR=C2.MKTNG_PGM_NBR
AND C1.REGIS_PRSNA_ID=C2.REGIS_PRSNA_ID
AND C1.CNTCT_POINT_CATEG_CODE=C2.CNTCT_POINT_CATEG_CODE
WHERE Coalesce(Trim(C1.ADDR_LINE_1_TXT),Trim(C1.ADDR_LINE_2_TXT),Trim(C1.ADDR_LINE_3_TXT),'') <> ''
;
.IF ERRORLEVEL > 0 THEN .GOTO EXIT;
 .QUIT 0


.LABEL EXIT

.IF ERRORLEVEL > 4 THEN .GOTO ERR ;
.IF ERRORLEVEL <= 4 THEN .GOTO WARN;

.LABEL ERR

UPDATE $DATABASENAME.LOAD_CONTROL
SET LOADSTATUS = 'Failure'
,LOADENDTS = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_CONTROL.MDM_PROCESS_DESC='Rematch_$CNTRY'
AND $DATABASENAME.LOAD_CONTROL.LOADSTATUS = 'In Progress'
;

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Failure'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Rematch_$CNTRY'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
; 

.QUIT 1

.LABEL WARN
.QUIT 0
