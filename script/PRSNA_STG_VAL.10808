/***********************************************************************************************************
SCRIPT:               PRSNA_STG_VAL.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        Change OF Failure-BadFile
3.00                 10/31/2011           TERADATA                        Removal of Deletes as  part of ||elism
4.00                 03/26/2012		  TERADATA                        Made change in insert to LOAD_INFO to
                                                                          manipulate LA data
**********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD
 
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0




CREATE VOLATILE TABLE V_PRSNA_STG AS
(
SELECT A.* FROM $ETL_DB.PRSNA_STG_  A 
JOIN
 VALIDATION_10808 B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

CREATE VOLATILE TABLE V_CNTCT_OPTN_CHCE AS
(
SELECT A.* FROM $ETL_DB.CNTCT_OPTN_CHCE_STG  A 
JOIN
 VALIDATION_10808 B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

/* RECORDS WITH INVALID MKTNG_PGM_NBR */

INSERT INTO VALIDATION_ERR_10808
(
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
SYS_ERR_CODE,
RECORD_SOURCE
)
SELECT
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
'Missing Legal Entity Number in Marketing Program Entity' ,
'PRSNA_STG'
FROM
V_PRSNA_STG
WHERE 

(MKTNG_PGM_NBR) NOT IN
(SEL MKTNG_PGM_NBR FROM MKTNG_PGM)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

/* RECORDS WITH INVALID CONTACT INDICATOR */

INSERT INTO VALIDATION_ERR_10808 
(
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
SYS_ERR_CODE,
RECORD_SOURCE
)
SELECT 
  MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL  
 ,LOAD_ID
 ,'CNTCT_OPTN_IND NOT VALID' 
 ,'PRSNA_STG'
FROM V_PRSNA_STG 
where
(MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL ,LOAD_ID) 
 NOT IN
 
 (SELECT 
 MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL ,LOAD_ID
 FROM 
 V_CNTCT_OPTN_CHCE A
 JOIN
 ATTRIBUTE_VALUES B
 ON
 A.CNTCT_POINT_TYPE_CODE = B.AV_CODE
 AND 
 (       B.AV_DESCRIPTION ='Email Address'
 OR B.AV_DESCRIPTION='Telephone Number'
 OR B.AV_DESCRIPTION='Postal Address'
 OR B.AV_DESCRIPTION='Social Network Account')
 GROUP BY 1,2,3
);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE


/* FAILED RECORDS FOR AGE */

INSERT INTO VALIDATION_ERR_10808 
(
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
SYS_ERR_CODE,
RECORD_SOURCE
)
SELECT
MKTNG_PGM_NBR,
REGIS_CNSMR_ID_VAL,
LOAD_ID,
'Failed because of Age Validation' SYS_ERR_CODE,
'PRSNA_STG'
FROM

V_PRSNA_STG stg
LEFT OUTER JOIN 
(SEL COUNTRY,
ADD_MONTHS(CURRENT_DATE,-(CAST(MAX_AGE*12 AS INTEGER))) MIN_DATE,
ADD_MONTHS(MIN_DATE,(CAST((MAX_AGE-MIN_AGE)*12 AS INTEGER))) MAX_DATE
FROM AGE_MIN_MAX) M 
ON STG.CNTRY_NAME = M.COUNTRY
WHERE ((BRTH_DATE >=  MIN_DATE 
AND BRTH_DATE<MAX_DATE
AND
(MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID)
IN
(SELECT MKTNG_PGM_NBR,REGIS_CNSMR_ID_VAL,LOAD_ID 
FROM  V_CNTCT_OPTN_CHCE
WHERE COALESCE(GUARDN_CNSNT_IND,'')<>'Y' 
OR COALESCE(GUARDN_NAME,'')='' 
))
OR BRTH_DATE >= MAX_DATE)
; 

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

INSERT INTO VALIDATION_ERR_10808 
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.LOAD_ID,
'No valid contact point' SYS_ERR_CODE,
'PRSNA_STG'
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID
FROM V_PRSNA_STG STG
 
 LEFT OUTER  JOIN $ETL_DB.PRSNA_EMAIL_ADDR_STG B1    
 ON STG.MKTNG_PGM_NBR=B1.MKTNG_PGM_NBR   
 AND STG.REGIS_CNSMR_ID_VAL=B1.REGIS_CNSMR_ID_VAL
 AND     STG.LOAD_ID=B1.LOAD_ID
 AND     STG.RECORD_IND=B1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_PHONE_STG C1    
 ON STG.MKTNG_PGM_NBR=C1.MKTNG_PGM_NBR   
 AND STG.REGIS_CNSMR_ID_VAL=C1.REGIS_CNSMR_ID_VAL
 AND     STG.LOAD_ID=C1.LOAD_ID
 AND     STG.RECORD_IND=C1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_POSTL_ADDR_STG D1    
 ON STG.MKTNG_PGM_NBR=D1.MKTNG_PGM_NBR   
 AND STG.REGIS_CNSMR_ID_VAL=D1.REGIS_CNSMR_ID_VAL  
 AND     STG.LOAD_ID=D1.LOAD_ID
 AND     STG.RECORD_IND=D1.RECORD_IND
 LEFT OUTER JOIN $ETL_DB.PRSNA_SOCIAL_NETWK_ACCT_STG E1    
 ON STG.MKTNG_PGM_NBR=E1.MKTNG_PGM_NBR   
 AND STG.REGIS_CNSMR_ID_VAL=E1.REGIS_CNSMR_ID_VAL  
 AND     STG.LOAD_ID=E1.LOAD_ID
 AND     STG.RECORD_IND=E1.RECORD_IND
WHERE B1.MKTNG_PGM_NBR IS NULL
AND C1.MKTNG_PGM_NBR IS NULL
AND D1.MKTNG_PGM_NBR IS NULL
AND E1.MKTNG_PGM_NBR IS NULL
) DER5
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

INSERT INTO VALIDATION_ERR_10808 
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.LOAD_ID,
'Vulgar Name found in registration data' SYS_ERR_CODE,
'PRSNA_STG'
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID
FROM V_PRSNA_STG STG
 
WHERE (FULL_NAME IN (SEL VULGAR_NAME FROM VULGAR_NAME_LIST)
OR GVN_NAME IN (SEL VULGAR_NAME FROM VULGAR_NAME_LIST) 
OR FAMLY_NAME IN (SEL VULGAR_NAME FROM VULGAR_NAME_LIST) 
OR USER_NAME IN (SEL VULGAR_NAME FROM VULGAR_NAME_LIST))
) DER5
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

INSERT INTO VALIDATION_ERR_10808 
SELECT
DER5.MKTNG_PGM_NBR,
DER5.REGIS_CNSMR_ID_VAL,
DER5.LOAD_ID,
'Vulgar Name found in registration data' SYS_ERR_CODE,
'PRSNA_STG'
FROM
(
SEL STG.MKTNG_PGM_NBR,STG.REGIS_CNSMR_ID_VAL,STG.LOAD_ID
FROM V_CNTCT_OPTN_CHCE STG 
WHERE GUARDN_NAME IN (SEL VULGAR_NAME FROM VULGAR_NAME_LIST)
) DER5
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

.EXIT



