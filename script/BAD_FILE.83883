/***********************************************************************************************************
SCRIPT:               BAD_FILE.BTEQ 
DESCRIPTION:          This script validates the records received from ETL Staging.
DEPENDENCY:           
INPUT:                ETL Staging
OUTPUT:               MST Staging
ERRORS:
SPECIAL INSTRUCTIONS:

CHANGE LOG:
VERSION              DATE                 AUTHOR                          CHANGES
1.00                 01/21/2011           TERADATA                        INITIAL VERSION
2.00                 08/22/2011           TERADATA                        Change OF Failure-BadFile
3.00                 10/31/2011           TERADATA                        Removal of Deletes as  part of ||elism
4.00                 03/26/2012		  TERADATA                        Made change in insert to LOAD_INFO to
                                                                          manipulate LA data
5.3                  02/09/2015           TERADATA	                  Release 5.3
                                                                          Database size improvement
***********************************************************************************************************/

.logon $TDPID/$TDUSER,$TDPWD
 
.SET ERROROUT STDOUT;
.SET SESSION CHARSET 'UTF8';
.SET ERRORLEVEL 3624 SEVERITY 0

CREATE VOLATILE TABLE V_PRSNA_STG AS
(
SELECT A.* FROM $ETL_DB.PRSNA_STG  A 
JOIN
 VALIDATION_83883 B
ON A.LOAD_ID = B.LOAD_ID)
WITH DATA
PRIMARY INDEX ( MKTNG_PGM_NBR ,REGIS_CNSMR_ID_VAL, LOAD_ID )
ON COMMIT PRESERVE ROWS;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

INSERT INTO ERR_PRSNA_STG_CURR_LOAD
(MKTNG_PGM_NBR
,REGIS_CNSMR_ID_VAL
,USER_NAME
,PRSNA_REG_DT 
,NAME_PREFX_TXT
,GVN_NAME
,MID_NAME
,FAMLY_NAME 
,NAME_SUFFX_TXT
,FULL_NAME
,GENDR_IND
,BRTH_DATE
,LANG_CODE
,PRSNA_STTUS_CODE
,RECORD_IND 
,LYLTY_ACCT_NUM
,LYLTY_PGM_NBR
,LOAD_ID 
,LOAD_TS 
,MDM_LOAD_IND
,SYS_TARGET_ID
,SYS_SOURCE
,SYS_NC_TYPE
,SYS_ERROR_TIME
,SYS_ERR_CODE
,CNTRY_CODE
)
SELECT DISTINCT
ERR1.MKTNG_PGM_NBR,
ERR1.REGIS_CNSMR_ID_VAL,
ERR1.USER_NAME,
CAST(CAST(ERR1.PRSNA_REG_DT AS VARCHAR(19)) AS TIMESTAMP(0)),
ERR1.NAME_PREFX_TXT,
ERR1.GVN_NAME,
ERR1.MID_NAME,
ERR1.FAMLY_NAME,
ERR1.NAME_SUFFX_TXT,
ERR1.FULL_NAME,
ERR1.GENDR_IND,
ERR1.BRTH_DATE,
ERR1.LANG_CODE,
ERR1.PRSNA_STTUS_CODE,
ERR1.RECORD_IND,
ERR1.LYLTY_ACCT_NUM,
ERR1.LYLTY_PGM_NBR,
ERR1.LOAD_ID,
ERR1.LOAD_TS,
ERR1.MDM_LOAD_IND,
B.SOURCE_ID,
TRIM(CAST(ERR1.LOAD_ID AS INTEGER)),
CASE WHEN (ERR1.RECORD_IND='I')
THEN 'INSERT'
ELSE 'UPDATE'
END,
ERR1.LOAD_TS,
ERR.SYS_ERR_CODE,
ERR1.CNTRY_NAME
FROM $ETL_DB.PRSNA_STG ERR1
INNER JOIN VALIDATION_ERR_83883 ERR
ON ERR.MKTNG_PGM_NBR = ERR1.MKTNG_PGM_NBR
AND ERR.REGIS_CNSMR_ID_VAL = ERR1.REGIS_CNSMR_ID_VAL
AND ERR.LOAD_ID = ERR1.LOAD_ID
JOIN
LOAD_CONTROL B
ON
ERR1.LOAD_ID = B.LOAD_ID
AND B.LOAD_TYPE='ETL'
;

.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE

SEL 1
FROM VALIDATION_83883 A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM V_PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM VALIDATION_ERR_83883
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100
;
.IF ACTIVITYCOUNT > 0 THEN .GOTO ERR1

.QUIT

.LABEL ERR1

UPDATE $DATABASENAME.LOAD_INFO
SET STATUS = 'Failure-BadFile'
,PROCESS_END_TIME = CAST(CURRENT_TIMESTAMP(0) AS VARCHAR(19))
,PROCESS_NAME='Validations-BadFile'
WHERE $DATABASENAME.LOAD_INFO.PROCESS_NAME='Validations'
AND $DATABASENAME.LOAD_INFO.STATUS = 'In Progress'
AND $DATABASENAME.LOAD_INFO.LOAD_ID IN (
SELECT
A.LOAD_ID

FROM VALIDATION_83883 A

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS STG_CNT
FROM V_PRSNA_STG
GROUP BY 1,2
) B
ON A.LOAD_ID = B.LOAD_ID

LEFT OUTER JOIN (SEL LOAD_ID,MKTNG_PGM_NBR,COUNT(DISTINCT REGIS_CNSMR_ID_VAL) AS ERR_CNT
FROM VALIDATION_ERR_83883
GROUP BY 1,2
) C
ON C.LOAD_ID = B.LOAD_ID
AND C.MKTNG_PGM_NBR = B.MKTNG_PGM_NBR

WHERE C.LOAD_ID IS NOT NULL
AND CAST((COALESCE(CAST(ERR_CNT AS DECIMAL(16,4)),0)/COALESCE(CAST(STG_CNT AS DECIMAL(16,4)),0)) AS DECIMAL(16,4))*100 >= 100

GROUP BY
A.LOAD_ID
)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

CREATE VOLATILE TABLE VT_RPT_LOAD_NBR
AS 
(
SELECT 
CAST (A.LOAD_ID AS INTEGER) AS LOAD_ID
,COALESCE(B.MKTNG_PGM_NBR,0) AS MKTNG_PGM_NBR
,COUNT(DISTINCT B.REGIS_CNSMR_ID_VAL) STAGING_NBR
FROM 
(

SELECT A.LOAD_ID 
FROM VALIDATION_83883 A

INNER JOIN LOAD_INFO LI
ON A.LOAD_ID = LI.LOAD_ID
AND LI.PROCESS_NAME='Validations-BadFile'
AND LI.STATUS = 'Failure-BadFile'
GROUP BY 1
)A

LEFT OUTER JOIN V_PRSNA_STG B
ON A.LOAD_ID = B.LOAD_ID	
GROUP BY 1,2 
)
WITH DATA
PRIMARY INDEX ( LOAD_ID, MKTNG_PGM_NBR)
ON COMMIT PRESERVE ROWS
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

INSERT INTO RPT_LOAD_NBR
(
LOAD_ID
, MKTNG_PGM_NBR
, LEGAL_ENT_NBR
, STAGING_NBR
, ERROR_NBR
)
SELECT 
B.LOAD_ID
,	B.MKTNG_PGM_NBR
,	COALESCE(C.LEGAL_ENT_NBR,0)
,	B.STAGING_NBR
,	COALESCE(N.ERROR_NBR,0)
FROM
VT_RPT_LOAD_NBR B

LEFT OUTER JOIN
MKTNG_PGM C
ON B.MKTNG_PGM_NBR = C.MKTNG_PGM_NBR

LEFT OUTER JOIN 
(
SELECT E.LOAD_ID, E.MKTNG_PGM_NBR, COUNT(DISTINCT REGIS_CNSMR_ID_VAL) ERROR_NBR
FROM ERR_PRSNA_STG_CURR_LOAD E, VT_RPT_LOAD_NBR V
WHERE E.LOAD_ID		= V.LOAD_ID
AND E.MKTNG_PGM_NBR	= V.MKTNG_PGM_NBR
GROUP BY 1,2
) N
ON B.LOAD_ID = N.LOAD_ID
AND B.MKTNG_PGM_NBR = N.MKTNG_PGM_NBR
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

 INSERT INTO ERR_PRSNA_STG
 (MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 )
SELECT DISTINCT
A.MKTNG_PGM_NBR
 ,REGIS_CNSMR_ID_VAL
 ,USER_NAME
 ,PRSNA_REG_DT 
 ,NAME_PREFX_TXT
 ,GVN_NAME
 ,MID_NAME
 ,FAMLY_NAME 
 ,NAME_SUFFX_TXT
 ,FULL_NAME
 ,GENDR_IND
 ,BRTH_DATE
 ,LANG_CODE
 ,PRSNA_STTUS_CODE
 ,RECORD_IND 
 ,LYLTY_ACCT_NUM
 ,LYLTY_PGM_NBR
 ,A.LOAD_ID 
 ,LOAD_TS 
 ,MDM_LOAD_IND
 ,SYS_TARGET_ID
 ,SYS_SOURCE
 ,SYS_NC_TYPE
 ,SYS_ERROR_TIME
 ,SYS_ERR_CODE
 ,SYS_DOCUMENT
 ,CNTRY_CODE
 FROM
 ERR_PRSNA_STG_CURR_LOAD A
 INNER JOIN VT_RPT_LOAD_NBR B
 ON A.LOAD_ID = B.LOAD_ID
 ;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM ERR_PRSNA_STG_CURR_LOAD
WHERE LOAD_ID IN (SELECT LOAD_ID FROM
LOAD_INFO 
WHERE PROCESS_NAME='Validations'
AND STATUS = 'In Progress'
)
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATION_83883);
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DELETE FROM LOAD_INFO 
WHERE PROCESS_NAME='Validations'
AND STATUS = 'In Progress'
AND LOAD_ID IN (SEL LOAD_ID FROM VALIDATION_83883)
;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

DROP TABLE VALIDATION_ERR_83883;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;
DROP TABLE VALIDATION_83883;
.IF ERRORLEVEL > 0 THEN .QUIT ERRORCODE;

.QUIT 2

.exit


